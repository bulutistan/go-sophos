// Package types contains the generated Sophos types
//
// This file was generated by bin/gen.go! DO NOT EDIT!
package types

import (
	"fmt"

	"github.com/esurdam/go-sophos"
)

// Stas is a generated struct representing the Sophos Stas Endpoint
// GET /api/nodes/stas
type Stas struct {
	StasCollector StasCollector `json:"stas_collector"`
	StasGroup     StasGroup     `json:"stas_group"`
}

var defsStas = map[string]sophos.RestObject{
	"StasCollector": &StasCollector{},
	"StasGroup":     &StasGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Stas's Objects
func (Stas) RestObjects() map[string]sophos.RestObject {
	return defsStas
}

// GetPath implements sophos.RestGetter
func (*Stas) GetPath() string { return "/api/nodes/stas" }

// RefRequired implements sophos.RestGetter
func (*Stas) RefRequired() (string, bool) { return "", false }

var defStas = &sophos.Definition{Description: "stas", Name: "stas", Link: "/api/definitions/stas", Swag: map[string]sophos.MethodMap{"/objects/stas/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/stas/collector/": {"get": sophos.MethodDescriptions{Description: "Returns all available stas/collector objects", Parameters: []sophos.Parameter(nil), Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new stas/collector object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/collector that will be created", Type: "", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/stas/collector/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object collector", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/collector that will be updated", Type: "", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object collector", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available collector types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object collector types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/collector that will be changes", Type: "", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/stas/collector/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/stas/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available stas/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new stas/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/group that will be created", Type: "", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/stas/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/group that will be changes", Type: "", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/group that will be updated", Type: "", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}}}

// Definition returns the /api/definitions struct of Stas
func (Stas) Definition() sophos.Definition { return *defStas }

// ApiRoutes returns all known Stas Paths
func (Stas) ApiRoutes() []string {
	return []string{
		"/api/objects/stas/collector/",
		"/api/objects/stas/collector/{ref}",
		"/api/objects/stas/collector/{ref}/usedby",
		"/api/objects/stas/group/",
		"/api/objects/stas/group/{ref}",
		"/api/objects/stas/group/{ref}/usedby",
	}
}

// References returns the Stas's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Stas) References() []string {
	return []string{
		"REF_StasCollector",
		"REF_StasGroup",
	}
}

// StasCollector is an Sophos Endpoint subType and implements sophos.RestObject
type StasCollector []interface{}

// GetPath implements sophos.RestObject and returns the StasCollector GET path
// Returns all available stas/collector objects
func (*StasCollector) GetPath() string { return "/api/objects/stas/collector/" }

// RefRequired implements sophos.RestObject
func (*StasCollector) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the StasCollector DELETE path
// Creates or updates the complete object collector
func (*StasCollector) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/collector/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the StasCollector PATCH path
// Changes to parts of the object collector types
func (*StasCollector) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/collector/%s", ref)
}

// PostPath implements sophos.RestObject and returns the StasCollector POST path
// Create a new stas/collector object
func (*StasCollector) PostPath() string {
	return "/api/objects/stas/collector/"
}

// PutPath implements sophos.RestObject and returns the StasCollector PUT path
// Creates or updates the complete object collector
func (*StasCollector) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/collector/%s", ref)
}

// StasGroup is an Sophos Endpoint subType and implements sophos.RestObject
type StasGroup []interface{}

// GetPath implements sophos.RestObject and returns the StasGroup GET path
// Returns all available stas/group objects
func (*StasGroup) GetPath() string { return "/api/objects/stas/group/" }

// RefRequired implements sophos.RestObject
func (*StasGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the StasGroup DELETE path
// Creates or updates the complete object group
func (*StasGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the StasGroup PATCH path
// Changes to parts of the object group types
func (*StasGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the StasGroup POST path
// Create a new stas/group object
func (*StasGroup) PostPath() string {
	return "/api/objects/stas/group/"
}

// PutPath implements sophos.RestObject and returns the StasGroup PUT path
// Creates or updates the complete object group
func (*StasGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/group/%s", ref)
}
