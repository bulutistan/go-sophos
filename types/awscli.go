// Package types contains the generated Sophos types
//
// This file was generated by bin/gen.go! DO NOT EDIT!
package types

import (
	"fmt"

	"github.com/esurdam/go-sophos"
)

// Awscli is a generated struct representing the Sophos Awscli Endpoint
// GET /api/nodes/awscli
type Awscli struct {
	Profiles []interface{} `json:"profiles"`
}

var defsAwscli = map[string]sophos.RestObject{
	"AwscliGroup":   &AwscliGroup{},
	"AwscliProfile": &AwscliProfile{},
}

// RestObjects implements the sophos.Node interface and returns a map of Awscli's Objects
func (Awscli) RestObjects() map[string]sophos.RestObject {
	return defsAwscli
}

// GetPath implements sophos.RestGetter
func (*Awscli) GetPath() string { return "/api/nodes/awscli" }

// RefRequired implements sophos.RestGetter
func (*Awscli) RefRequired() (string, bool) { return "", false }

var defAwscli = &sophos.Definition{Description: "awscli", Name: "awscli", Link: "/api/definitions/awscli", Swag: map[string]sophos.MethodMap{"/objects/awscli/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available awscli/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awscli/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/group that will be created", Type: "", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/awscli/group/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/group that will be changes", Type: "", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/group that will be updated", Type: "", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/awscli/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awscli/profile/": {"get": sophos.MethodDescriptions{Description: "Returns all available awscli/profile objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awscli/profile object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/profile that will be created", Type: "", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/awscli/profile/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/profile that will be changes", Type: "", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/profile that will be updated", Type: "", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/awscli/profile/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Awscli
func (Awscli) Definition() sophos.Definition { return *defAwscli }

// ApiRoutes returns all known Awscli Paths
func (Awscli) ApiRoutes() []string {
	return []string{
		"/api/objects/awscli/group/",
		"/api/objects/awscli/group/{ref}",
		"/api/objects/awscli/group/{ref}/usedby",
		"/api/objects/awscli/profile/",
		"/api/objects/awscli/profile/{ref}",
		"/api/objects/awscli/profile/{ref}/usedby",
	}
}

// References returns the Awscli's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Awscli) References() []string {
	return []string{
		"REF_AwscliGroup",
		"REF_AwscliProfile",
	}
}

// AwscliGroup is an Sophos Endpoint subType and implements sophos.RestObject
type AwscliGroup []interface{}

// GetPath implements sophos.RestObject and returns the AwscliGroup GET path
// Returns all available awscli/group objects
func (*AwscliGroup) GetPath() string { return "/api/objects/awscli/group/" }

// RefRequired implements sophos.RestObject
func (*AwscliGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AwscliGroup DELETE path
// Creates or updates the complete object group
func (*AwscliGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AwscliGroup PATCH path
// Changes to parts of the object group types
func (*AwscliGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AwscliGroup POST path
// Create a new awscli/group object
func (*AwscliGroup) PostPath() string {
	return "/api/objects/awscli/group/"
}

// PutPath implements sophos.RestObject and returns the AwscliGroup PUT path
// Creates or updates the complete object group
func (*AwscliGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/group/%s", ref)
}

// AwscliProfile is an Sophos Endpoint subType and implements sophos.RestObject
type AwscliProfile []interface{}

// GetPath implements sophos.RestObject and returns the AwscliProfile GET path
// Returns all available awscli/profile objects
func (*AwscliProfile) GetPath() string { return "/api/objects/awscli/profile/" }

// RefRequired implements sophos.RestObject
func (*AwscliProfile) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AwscliProfile DELETE path
// Creates or updates the complete object profile
func (*AwscliProfile) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/profile/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AwscliProfile PATCH path
// Changes to parts of the object profile types
func (*AwscliProfile) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/profile/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AwscliProfile POST path
// Create a new awscli/profile object
func (*AwscliProfile) PostPath() string {
	return "/api/objects/awscli/profile/"
}

// PutPath implements sophos.RestObject and returns the AwscliProfile PUT path
// Creates or updates the complete object profile
func (*AwscliProfile) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/profile/%s", ref)
}
