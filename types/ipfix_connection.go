// Package types contains the generated Sophos types
//
// This file was generated by bin/gen.go! DO NOT EDIT!
package types

import (
	"fmt"

	"github.com/esurdam/go-sophos"
)

// IpfixConnection is a generated struct representing the Sophos IpfixConnection Endpoint
// GET /api/nodes/ipfix_connection
type IpfixConnection struct {
	IpfixConnectionIpfixConnection IpfixConnectionIpfixConnection `json:"ipfix_connection_ipfix_connection"`
	IpfixConnectionGroup           IpfixConnectionGroup           `json:"ipfix_connection_group"`
}

var defsIpfixConnection = map[string]sophos.RestObject{
	"IpfixConnectionIpfixConnection": &IpfixConnectionIpfixConnection{},
	"IpfixConnectionGroup":           &IpfixConnectionGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of IpfixConnection's Objects
func (IpfixConnection) RestObjects() map[string]sophos.RestObject {
	return defsIpfixConnection
}

// GetPath implements sophos.RestGetter
func (*IpfixConnection) GetPath() string { return "/api/nodes/ipfix_connection" }

// RefRequired implements sophos.RestGetter
func (*IpfixConnection) RefRequired() (string, bool) { return "", false }

var defIpfixConnection = &sophos.Definition{Description: "ipfix_connection", Name: "ipfix_connection", Link: "/api/definitions/ipfix_connection", Swag: map[string]sophos.MethodMap{"/objects/ipfix_connection/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipfix_connection/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipfix_connection/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/group that will be created", Type: "", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipfix_connection/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/group that will be changes", Type: "", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/group that will be updated", Type: "", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/ipfix_connection/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipfix_connection/ipfix_connection/": {"post": sophos.MethodDescriptions{Description: "Create a new ipfix_connection/ipfix_connection object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/ipfix_connection that will be created", Type: "", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ipfix_connection/ipfix_connection objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipfix_connection/ipfix_connection/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ipfix_connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ipfix_connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ipfix_connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/ipfix_connection that will be changes", Type: "", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ipfix_connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/ipfix_connection that will be updated", Type: "", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/ipfix_connection/ipfix_connection/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of IpfixConnection
func (IpfixConnection) Definition() sophos.Definition { return *defIpfixConnection }

// ApiRoutes returns all known IpfixConnection Paths
func (IpfixConnection) ApiRoutes() []string {
	return []string{
		"/api/objects/ipfix_connection/group/",
		"/api/objects/ipfix_connection/group/{ref}",
		"/api/objects/ipfix_connection/group/{ref}/usedby",
		"/api/objects/ipfix_connection/ipfix_connection/",
		"/api/objects/ipfix_connection/ipfix_connection/{ref}",
		"/api/objects/ipfix_connection/ipfix_connection/{ref}/usedby",
	}
}

// References returns the IpfixConnection's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (IpfixConnection) References() []string {
	return []string{
		"REF_IpfixConnectionGroup",
		"REF_IpfixConnectionIpfixConnection",
	}
}

// IpfixConnectionIpfixConnection is an Sophos Endpoint subType and implements sophos.RestObject
type IpfixConnectionIpfixConnection []interface{}

// GetPath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection GET path
// Returns all available ipfix_connection/ipfix_connection objects
func (*IpfixConnectionIpfixConnection) GetPath() string {
	return "/api/objects/ipfix_connection/ipfix_connection/"
}

// RefRequired implements sophos.RestObject
func (*IpfixConnectionIpfixConnection) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection DELETE path
// Creates or updates the complete object ipfix_connection
func (*IpfixConnectionIpfixConnection) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/ipfix_connection/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection PATCH path
// Changes to parts of the object ipfix_connection types
func (*IpfixConnectionIpfixConnection) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/ipfix_connection/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection POST path
// Create a new ipfix_connection/ipfix_connection object
func (*IpfixConnectionIpfixConnection) PostPath() string {
	return "/api/objects/ipfix_connection/ipfix_connection/"
}

// PutPath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection PUT path
// Creates or updates the complete object ipfix_connection
func (*IpfixConnectionIpfixConnection) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/ipfix_connection/%s", ref)
}

// IpfixConnectionGroup is an Sophos Endpoint subType and implements sophos.RestObject
type IpfixConnectionGroup []interface{}

// GetPath implements sophos.RestObject and returns the IpfixConnectionGroup GET path
// Returns all available ipfix_connection/group objects
func (*IpfixConnectionGroup) GetPath() string { return "/api/objects/ipfix_connection/group/" }

// RefRequired implements sophos.RestObject
func (*IpfixConnectionGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpfixConnectionGroup DELETE path
// Creates or updates the complete object group
func (*IpfixConnectionGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpfixConnectionGroup PATCH path
// Changes to parts of the object group types
func (*IpfixConnectionGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpfixConnectionGroup POST path
// Create a new ipfix_connection/group object
func (*IpfixConnectionGroup) PostPath() string {
	return "/api/objects/ipfix_connection/group/"
}

// PutPath implements sophos.RestObject and returns the IpfixConnectionGroup PUT path
// Creates or updates the complete object group
func (*IpfixConnectionGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/group/%s", ref)
}
