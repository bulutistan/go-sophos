// Package types contains the generated Sophos types
//
// This file was generated by bin/gen.go! DO NOT EDIT!
package types

import (
	"fmt"

	"github.com/esurdam/go-sophos"
)

// MacList is a generated struct representing the Sophos MacList Endpoint
// GET /api/nodes/mac_list
type MacList struct {
	MacListMacList MacListMacList `json:"mac_list_mac_list"`
	MacListGroup   MacListGroup   `json:"mac_list_group"`
}

var defsMacList = map[string]sophos.RestObject{
	"MacListMacList": &MacListMacList{},
	"MacListGroup":   &MacListGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of MacList's Objects
func (MacList) RestObjects() map[string]sophos.RestObject {
	return defsMacList
}

// GetPath implements sophos.RestGetter
func (*MacList) GetPath() string { return "/api/nodes/mac_list" }

// RefRequired implements sophos.RestGetter
func (*MacList) RefRequired() (string, bool) { return "", false }

var defMacList = &sophos.Definition{Description: "mac_list", Name: "mac_list", Link: "/api/definitions/mac_list", Swag: map[string]sophos.MethodMap{"/objects/mac_list/group/": {"post": sophos.MethodDescriptions{Description: "Create a new mac_list/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/group that will be created", Type: "", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available mac_list/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/mac_list/group/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/group that will be updated", Type: "", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/group that will be changes", Type: "", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/mac_list/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/mac_list/mac_list/": {"get": sophos.MethodDescriptions{Description: "Returns all available mac_list/mac_list objects", Parameters: []sophos.Parameter(nil), Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new mac_list/mac_list object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/mac_list that will be created", Type: "", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/mac_list/mac_list/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available mac_list types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object mac_list types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/mac_list that will be changes", Type: "", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object mac_list", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/mac_list that will be updated", Type: "", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object mac_list", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/mac_list/mac_list/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of MacList
func (MacList) Definition() sophos.Definition { return *defMacList }

// ApiRoutes returns all known MacList Paths
func (MacList) ApiRoutes() []string {
	return []string{
		"/api/objects/mac_list/group/",
		"/api/objects/mac_list/group/{ref}",
		"/api/objects/mac_list/group/{ref}/usedby",
		"/api/objects/mac_list/mac_list/",
		"/api/objects/mac_list/mac_list/{ref}",
		"/api/objects/mac_list/mac_list/{ref}/usedby",
	}
}

// References returns the MacList's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (MacList) References() []string {
	return []string{
		"REF_MacListGroup",
		"REF_MacListMacList",
	}
}

// MacListMacList is an Sophos Endpoint subType and implements sophos.RestObject
type MacListMacList []interface{}

// GetPath implements sophos.RestObject and returns the MacListMacList GET path
// Returns all available mac_list/mac_list objects
func (*MacListMacList) GetPath() string { return "/api/objects/mac_list/mac_list/" }

// RefRequired implements sophos.RestObject
func (*MacListMacList) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the MacListMacList DELETE path
// Creates or updates the complete object mac_list
func (*MacListMacList) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/mac_list/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the MacListMacList PATCH path
// Changes to parts of the object mac_list types
func (*MacListMacList) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/mac_list/%s", ref)
}

// PostPath implements sophos.RestObject and returns the MacListMacList POST path
// Create a new mac_list/mac_list object
func (*MacListMacList) PostPath() string {
	return "/api/objects/mac_list/mac_list/"
}

// PutPath implements sophos.RestObject and returns the MacListMacList PUT path
// Creates or updates the complete object mac_list
func (*MacListMacList) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/mac_list/%s", ref)
}

// MacListGroup is an Sophos Endpoint subType and implements sophos.RestObject
type MacListGroup []interface{}

// GetPath implements sophos.RestObject and returns the MacListGroup GET path
// Returns all available mac_list/group objects
func (*MacListGroup) GetPath() string { return "/api/objects/mac_list/group/" }

// RefRequired implements sophos.RestObject
func (*MacListGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the MacListGroup DELETE path
// Creates or updates the complete object group
func (*MacListGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the MacListGroup PATCH path
// Changes to parts of the object group types
func (*MacListGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the MacListGroup POST path
// Create a new mac_list/group object
func (*MacListGroup) PostPath() string {
	return "/api/objects/mac_list/group/"
}

// PutPath implements sophos.RestObject and returns the MacListGroup PUT path
// Creates or updates the complete object group
func (*MacListGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/group/%s", ref)
}
