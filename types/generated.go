// Package types contains the generated Sophos types
//
// This file was generated by bin/gen.go! DO NOT EDIT!
package types

import (
	"fmt"

	"github.com/esurdam/go-sophos"
)

// Nodes is a generated struct representing the Sophos Nodes Endpoint
// GET /api/nodes
type Nodes struct {
	AccServer1AuthSecret                           string            `json:"acc.server1.auth.secret"`
	AccServer1AuthStatus                           bool              `json:"acc.server1.auth.status"`
	AccServer1Port                                 int64             `json:"acc.server1.port"`
	AccServer1Roles                                []string          `json:"acc.server1.roles"`
	AccServer1Server                               string            `json:"acc.server1.server"`
	AccServer2AuthSecret                           string            `json:"acc.server2.auth.secret"`
	AccServer2AuthStatus                           bool              `json:"acc.server2.auth.status"`
	AccServer2Port                                 int64             `json:"acc.server2.port"`
	AccServer2Roles                                []string          `json:"acc.server2.roles"`
	AccServer2Server                               string            `json:"acc.server2.server"`
	AccServer2Status                               bool              `json:"acc.server2.status"`
	AccSsoAdminGroup                               string            `json:"acc.sso_admin_group"`
	AccSsoAuditorGroup                             string            `json:"acc.sso_auditor_group"`
	AccStatus                                      bool              `json:"acc.status"`
	AccdAccessAllowedAdmins                        []interface{}     `json:"accd.access.allowed_admins"`
	AccdAccessAllowedNetworks                      []interface{}     `json:"accd.access.allowed_networks"`
	AccdAccessAllowedUsers                         []interface{}     `json:"accd.access.allowed_users"`
	AccdAccessCert                                 string            `json:"accd.access.cert"`
	AccdAccessPort                                 int64             `json:"accd.access.port"`
	AccdDevicesAllowedNetworks                     []interface{}     `json:"accd.devices.allowed_networks"`
	AccdDevicesAuthAuto                            bool              `json:"accd.devices.auth.auto"`
	AccdDevicesAuthSecret                          string            `json:"accd.devices.auth.secret"`
	AccdDevicesAuthStatus                          bool              `json:"accd.devices.auth.status"`
	AccdDevicesCert                                string            `json:"accd.devices.cert"`
	AccdDevicesPort                                int64             `json:"accd.devices.port"`
	AccdGeneralAllowedNetworks                     []interface{}     `json:"accd.general.allowed_networks"`
	AccdGeneralCert                                string            `json:"accd.general.cert"`
	AccdGeneralLanguage                            string            `json:"accd.general.language"`
	AccdGeneralPort                                int64             `json:"accd.general.port"`
	AccdGeneralTimeout                             int64             `json:"accd.general.timeout"`
	AccountingIpfixConnections                     []interface{}     `json:"accounting.ipfix.connections"`
	AccountingIpfixStatus                          bool              `json:"accounting.ipfix.status"`
	AfcControlledNetworks                          []string          `json:"afc.controlled_networks"`
	AfcHiddenSkip                                  []string          `json:"afc.hidden_skip"`
	AfcHttpRedirectURL                             string            `json:"afc.http_redirect_url"`
	AfcLog                                         string            `json:"afc.log"`
	AfcNfqueueLength                               int64             `json:"afc.nfqueue_length"`
	AfcNumQueues                                   struct{}          `json:"afc.num_queues"`
	AfcRules                                       []string          `json:"afc.rules"`
	AfcStatus                                      bool              `json:"afc.status"`
	AfcSubmitUnknownTrafficData                    bool              `json:"afc.submit_unknown_traffic_data"`
	AfcTransparentSkip                             []interface{}     `json:"afc.transparent_skip"`
	AmazonVpcAutoPfrule                            bool              `json:"amazon_vpc.auto_pfrule"`
	AmazonVpcConnections                           []string          `json:"amazon_vpc.connections"`
	AmazonVpcNetworks                              []string          `json:"amazon_vpc.networks"`
	AmazonVpcStatus                                bool              `json:"amazon_vpc.status"`
	AptpPolicy                                     string            `json:"aptp.policy"`
	AptpRuleModifiers                              []interface{}     `json:"aptp.rule_modifiers"`
	AptpStatus                                     bool              `json:"aptp.status"`
	AptpTransparentSkip                            []interface{}     `json:"aptp.transparent_skip"`
	ArmLicensedIP                                  string            `json:"arm.licensed_ip"`
	ArmRemoteHost                                  string            `json:"arm.remote.host"`
	ArmRemoteMethod                                string            `json:"arm.remote.method"`
	ArmRemoteSmbPassword                           string            `json:"arm.remote.smb_password"`
	ArmRemoteSmbShare                              string            `json:"arm.remote.smb_share"`
	ArmRemoteSmbUser                               string            `json:"arm.remote.smb_user"`
	ArmRemoteStatus                                bool              `json:"arm.remote.status"`
	ArmRemoteSyslogService                         string            `json:"arm.remote.syslog_service"`
	ArmStatus                                      bool              `json:"arm.status"`
	AuthAdSsoForceUtf8Sync                         bool              `json:"auth.ad_sso.force_utf8_sync"`
	AuthAdSsoJoinresult                            string            `json:"auth.ad_sso.joinresult"`
	AuthAdSsoLoadbalancerFqdn                      string            `json:"auth.ad_sso.loadbalancer_fqdn"`
	AuthAdSsoNtlmv2Auth                            bool              `json:"auth.ad_sso.ntlmv2_auth"`
	AuthAdSsoSecrets                               string            `json:"auth.ad_sso.secrets"`
	AuthAdSsoSmbconf                               string            `json:"auth.ad_sso.smbconf"`
	AuthAdSsoSsoDomain                             string            `json:"auth.ad_sso.sso_domain"`
	AuthAdSsoSsoNetbiosDomain                      string            `json:"auth.ad_sso.sso_netbios_domain"`
	AuthAdSsoSsoNetbiosHost                        string            `json:"auth.ad_sso.sso_netbios_host"`
	AuthAdSsoSsoPassword                           string            `json:"auth.ad_sso.sso_password"`
	AuthAdSsoSsoServer                             string            `json:"auth.ad_sso.sso_server"`
	AuthAdSsoSsoStatus                             bool              `json:"auth.ad_sso.sso_status"`
	AuthAdSsoSsoSync                               bool              `json:"auth.ad_sso.sso_sync"`
	AuthAdSsoSsoUsername                           string            `json:"auth.ad_sso.sso_username"`
	AuthApiTokens                                  map[string]string `json:"auth.api_tokens"`
	AuthAutoAddToFacility                          []string          `json:"auth.auto_add_to_facility"`
	AuthAutoAddUsers                               bool              `json:"auth.auto_add_users"`
	AuthBlockAttempts                              int64             `json:"auth.block.attempts"`
	AuthBlockFacilities                            []string          `json:"auth.block.facilities"`
	AuthBlockLockout                               bool              `json:"auth.block.lockout"`
	AuthBlockNever                                 []interface{}     `json:"auth.block.never"`
	AuthBlockSeconds                               int64             `json:"auth.block.seconds"`
	AuthCacheLifetime                              int64             `json:"auth.cache_lifetime"`
	AuthEdirSsoEmConflict                          string            `json:"auth.edir_sso.em_conflict"`
	AuthEdirSsoEmSocketTimeout                     int64             `json:"auth.edir_sso.em_socket_timeout"`
	AuthEdirSsoEmVerifyLogout                      bool              `json:"auth.edir_sso.em_verify_logout"`
	AuthEdirSsoSsoAuaSearchIP                      bool              `json:"auth.edir_sso.sso_aua_search_ip"`
	AuthEdirSsoSsoMode                             string            `json:"auth.edir_sso.sso_mode"`
	AuthEdirSsoSsoServer                           string            `json:"auth.edir_sso.sso_server"`
	AuthEdirSsoSyncInterval                        int64             `json:"auth.edir_sso.sync_interval"`
	AuthOtpAutoCreateToken                         bool              `json:"auth.otp.auto_create_token"`
	AuthOtpAutoTokenDigest                         string            `json:"auth.otp.auto_token_digest"`
	AuthOtpDefaultTimestep                         int64             `json:"auth.otp.default_timestep"`
	AuthOtpFacilities                              []string          `json:"auth.otp.facilities"`
	AuthOtpMaxInitTimestepDiff                     int64             `json:"auth.otp.max_init_timestep_diff"`
	AuthOtpMaxTimestepDiff                         int64             `json:"auth.otp.max_timestep_diff"`
	AuthOtpRequireAllUsers                         bool              `json:"auth.otp.require_all_users"`
	AuthOtpRequiredUsers                           []interface{}     `json:"auth.otp.required_users"`
	AuthOtpStatus                                  bool              `json:"auth.otp.status"`
	AuthServers                                    []interface{}     `json:"auth.servers"`
	AuthUpdateBackendGroupMembersDebug             bool              `json:"auth.update_backend_group_members.debug"`
	AuthUpdateBackendGroupMembersStatus            bool              `json:"auth.update_backend_group_members.status"`
	AweAllowedInterfaces                           []interface{}     `json:"awe.allowed_interfaces"`
	AweClients                                     []interface{}     `json:"awe.clients"`
	AweDevices                                     []interface{}     `json:"awe.devices"`
	AweGlobalApAutoaccept                          bool              `json:"awe.global.ap_autoaccept"`
	AweGlobalApDebuglevel                          struct{}          `json:"awe.global.ap_debuglevel"`
	AweGlobalApSoftlimit                           int64             `json:"awe.global.ap_softlimit"`
	AweGlobalApVlantag                             int64             `json:"awe.global.ap_vlantag"`
	AweGlobalAweStatus                             struct{}          `json:"awe.global.awe_status"`
	AweGlobalBridgeUpdateKickout                   bool              `json:"awe.global.bridge_update_kickout"`
	AweGlobalInitialSetup                          bool              `json:"awe.global.initial_setup"`
	AweGlobalLogLevel                              int64             `json:"awe.global.log_level"`
	AweGlobalMagicIP                               string            `json:"awe.global.magic_ip"`
	AweGlobalNotificationTimeout                   int64             `json:"awe.global.notification_timeout"`
	AweGlobalRadiusConf                            string            `json:"awe.global.radius_conf"`
	AweGlobalRootpw                                string            `json:"awe.global.rootpw"`
	AweGlobalStayOnline                            bool              `json:"awe.global.stay_online"`
	AweGlobalStoreBssStats                         bool              `json:"awe.global.store_bss_stats"`
	AweGlobalTunnelIDOffset                        int64             `json:"awe.global.tunnel_id_offset"`
	AweGlobalVlantagging                           bool              `json:"awe.global.vlantagging"`
	AweNetworks                                    []string          `json:"awe.networks"`
	AwscliProfiles                                 []interface{}     `json:"awscli.profiles"`
	BackupEncryption                               bool              `json:"backup.encryption"`
	BackupInterval                                 string            `json:"backup.interval"`
	BackupMaxBackups                               int64             `json:"backup.max_backups"`
	BackupPassword                                 string            `json:"backup.password"`
	BackupRecipients                               []string          `json:"backup.recipients"`
	BackupStatus                                   bool              `json:"backup.status"`
	CaCaGost                                       string            `json:"ca.ca_gost"`
	CaCaIpsec                                      string            `json:"ca.ca_ipsec"`
	CaCaProxies                                    string            `json:"ca.ca_proxies"`
	CaCaRed                                        string            `json:"ca.ca_red"`
	CaDefKeysize                                   int64             `json:"ca.def_keysize"`
	CaGlobalCasEmailEncryptionTrustNewCas          bool              `json:"ca.global_cas.email_encryption.trust_new_cas"`
	CaGlobalCasEmailEncryptionTrusted              []interface{}     `json:"ca.global_cas.email_encryption.trusted"`
	CaGlobalCasEmailEncryptionUntrusted            []interface{}     `json:"ca.global_cas.email_encryption.untrusted"`
	CaGlobalCasHttpProxyTrustNewCas                bool              `json:"ca.global_cas.http_proxy.trust_new_cas"`
	CaGlobalCasHttpProxyTrusted                    []interface{}     `json:"ca.global_cas.http_proxy.trusted"`
	CaGlobalCasHttpProxyUntrusted                  []interface{}     `json:"ca.global_cas.http_proxy.untrusted"`
	CrlsCrls                                       []interface{}     `json:"crls.crls"`
	CSSAvPrimaryEngine                             string            `json:"css.av_primary_engine"`
	CSSSxlLiveprotection                           bool              `json:"css.sxl_liveprotection"`
	CSSSxlSampleSubmit                             bool              `json:"css.sxl_sample_submit"`
	CustomizationEppLastUpdated                    int64             `json:"customization.epp.last_updated"`
	CustomizationEppResourcesRoot                  string            `json:"customization.epp.resources_root"`
	CustomizationHttpCustomAssets                  struct{}          `json:"customization.http.custom_assets"`
	CustomizationHttpCustomTemplates               struct{}          `json:"customization.http.custom_templates"`
	CustomizationHttpLastUpdated                   int64             `json:"customization.http.last_updated"`
	DebugmodeCrashReport                           bool              `json:"debugmode.crash_report"`
	DebugmodeEnabled                               bool              `json:"debugmode.enabled"`
	DhcpRelayDhcpServer                            string            `json:"dhcp.relay.dhcp_server"`
	DhcpRelayInterfaces                            []interface{}     `json:"dhcp.relay.interfaces"`
	DhcpRelayStatus                                bool              `json:"dhcp.relay.status"`
	DhcpRelay6ItfsFacingClients                    []interface{}     `json:"dhcp.relay6.itfs_facing_clients"`
	DhcpRelay6ItfsFacingServer6                    []interface{}     `json:"dhcp.relay6.itfs_facing_server6"`
	DhcpRelay6Status                               bool              `json:"dhcp.relay6.status"`
	DhcpServerCustom4                              string            `json:"dhcp.server.custom4"`
	DhcpServerCustom6                              string            `json:"dhcp.server.custom6"`
	DhcpServerServers                              []string          `json:"dhcp.server.servers"`
	DigestAllowedNetworks                          []interface{}     `json:"digest.allowed_networks"`
	DigestCustomText                               string            `json:"digest.custom_text"`
	DigestDomains                                  []string          `json:"digest.domains"`
	DigestHostname                                 string            `json:"digest.hostname"`
	DigestMailinglists                             []interface{}     `json:"digest.mailinglists"`
	DigestPort                                     int64             `json:"digest.port"`
	DigestSendTimeOne                              string            `json:"digest.send_time_one"`
	DigestSendTimeTwo                              string            `json:"digest.send_time_two"`
	DigestSkiplist                                 []interface{}     `json:"digest.skiplist"`
	DigestStatus                                   bool              `json:"digest.status"`
	DigestUserRelease                              []string          `json:"digest.user_release"`
	DNSAllowedNetworks                             []string          `json:"dns.allowed_networks"`
	DNSAxfr                                        []interface{}     `json:"dns.axfr"`
	DNSDnssec                                      bool              `json:"dns.dnssec"`
	DNSEmail                                       string            `json:"dns.email"`
	DNSEmptyZones                                  string            `json:"dns.empty_zones"`
	DNSFwdDynamic                                  bool              `json:"dns.fwd_dynamic"`
	DNSFwdStatic                                   []string          `json:"dns.fwd_static"`
	DNSRecheckInterval                             int64             `json:"dns.recheck_interval"`
	DNSRoutes                                      []string          `json:"dns.routes"`
	DyndnsRules                                    []interface{}     `json:"dyndns.rules"`
	EmailpkiAuthorityCert                          string            `json:"emailpki.authority.cert"`
	EmailpkiAuthorityFingerprint                   string            `json:"emailpki.authority.fingerprint"`
	EmailpkiAuthorityKey                           string            `json:"emailpki.authority.key"`
	EmailpkiAuthorityPostmasterFingerprint         string            `json:"emailpki.authority.postmaster_fingerprint"`
	EmailpkiAuthorityPostmasterPrivkey             string            `json:"emailpki.authority.postmaster_privkey"`
	EmailpkiAuthorityPostmasterPubkey              string            `json:"emailpki.authority.postmaster_pubkey"`
	EmailpkiGlobalCity                             string            `json:"emailpki.global.city"`
	EmailpkiGlobalCountry                          string            `json:"emailpki.global.country"`
	EmailpkiGlobalOrganization                     string            `json:"emailpki.global.organization"`
	EmailpkiGlobalPostmaster                       string            `json:"emailpki.global.postmaster"`
	EmailpkiGlobalStatus                           bool              `json:"emailpki.global.status"`
	EmailpkiObjectsCas                             []string          `json:"emailpki.objects.cas"`
	EmailpkiObjectsOpenpgp                         []interface{}     `json:"emailpki.objects.openpgp"`
	EmailpkiObjectsSmime                           []interface{}     `json:"emailpki.objects.smime"`
	EmailpkiObjectsUsers                           []interface{}     `json:"emailpki.objects.users"`
	EmailpkiOpenpgpMainKeysize                     int64             `json:"emailpki.openpgp.main_keysize"`
	EmailpkiOpenpgpSubKeysize                      int64             `json:"emailpki.openpgp.sub_keysize"`
	EmailpkiOptionsExternalAuto                    bool              `json:"emailpki.options.external_auto"`
	EmailpkiOptionsKeyserver                       string            `json:"emailpki.options.keyserver"`
	EmailpkiOptionsPolicyDecryption                bool              `json:"emailpki.options.policy_decryption"`
	EmailpkiOptionsPolicyEncryption                bool              `json:"emailpki.options.policy_encryption"`
	EmailpkiOptionsPolicySign                      bool              `json:"emailpki.options.policy_sign"`
	EmailpkiOptionsPolicyVerify                    bool              `json:"emailpki.options.policy_verify"`
	EndpointAacAllowedNetworks                     []string          `json:"endpoint.aac.allowed_networks"`
	EndpointAacAllowedUsers                        []string          `json:"endpoint.aac.allowed_users"`
	EndpointAacCa                                  string            `json:"endpoint.aac.ca"`
	EndpointAacCert                                string            `json:"endpoint.aac.cert"`
	EndpointAacMagicIP                             string            `json:"endpoint.aac.magic_ip"`
	EndpointAacMaxUserLogins                       int64             `json:"endpoint.aac.max_user_logins"`
	EndpointAacStatus                              bool              `json:"endpoint.aac.status"`
	EndpointStasCollectors                         []interface{}     `json:"endpoint.stas.collectors"`
	EndpointStasStatus                             bool              `json:"endpoint.stas.status"`
	EnduserMessagesCompanyLogo                     string            `json:"enduser_messages.company_logo"`
	EnduserMessagesCompanyText                     string            `json:"enduser_messages.company_text"`
	EnduserMessagesDlpBlackholePart                string            `json:"enduser_messages.dlp.blackhole_part"`
	EnduserMessagesDlpFooterPart                   string            `json:"enduser_messages.dlp.footer_part"`
	EnduserMessagesDlpHeaderPart                   string            `json:"enduser_messages.dlp.header_part"`
	EnduserMessagesDlpOriginalPart                 string            `json:"enduser_messages.dlp.original_part"`
	EnduserMessagesDlpSpxPart                      string            `json:"enduser_messages.dlp.spx_part"`
	EnduserMessagesDlpSubject                      string            `json:"enduser_messages.dlp.subject"`
	EnduserMessagesHttpAppDesc                     string            `json:"enduser_messages.http.app_desc"`
	EnduserMessagesHttpAppSubject                  string            `json:"enduser_messages.http.app_subject"`
	EnduserMessagesHttpBlacklistDesc               string            `json:"enduser_messages.http.blacklist_desc"`
	EnduserMessagesHttpBlacklistSubject            string            `json:"enduser_messages.http.blacklist_subject"`
	EnduserMessagesHttpCertfailSubject             string            `json:"enduser_messages.http.certfail_subject"`
	EnduserMessagesHttpCffOverrideDesc             string            `json:"enduser_messages.http.cff_override_desc"`
	EnduserMessagesHttpCffOverrideSubject          string            `json:"enduser_messages.http.cff_override_subject"`
	EnduserMessagesHttpCffOverrideTerms            string            `json:"enduser_messages.http.cff_override_terms"`
	EnduserMessagesHttpDownloadCompleteDesc        string            `json:"enduser_messages.http.download_complete_desc"`
	EnduserMessagesHttpDownloadCompleteSubject     string            `json:"enduser_messages.http.download_complete_subject"`
	EnduserMessagesHttpDownloadDesc                string            `json:"enduser_messages.http.download_desc"`
	EnduserMessagesHttpDownloadSubject             string            `json:"enduser_messages.http.download_subject"`
	EnduserMessagesHttpErrorDesc                   string            `json:"enduser_messages.http.error_desc"`
	EnduserMessagesHttpErrorSubject                string            `json:"enduser_messages.http.error_subject"`
	EnduserMessagesHttpFileextensionDesc           string            `json:"enduser_messages.http.fileextension_desc"`
	EnduserMessagesHttpFileextensionSubject        string            `json:"enduser_messages.http.fileextension_subject"`
	EnduserMessagesHttpFileextensionWarnDesc       string            `json:"enduser_messages.http.fileextension_warn_desc"`
	EnduserMessagesHttpFileextensionWarnSubject    string            `json:"enduser_messages.http.fileextension_warn_subject"`
	EnduserMessagesHttpFilesizeDesc                string            `json:"enduser_messages.http.filesize_desc"`
	EnduserMessagesHttpFilesizeSubject             string            `json:"enduser_messages.http.filesize_subject"`
	EnduserMessagesHttpGeoipDesc                   string            `json:"enduser_messages.http.geoip_desc"`
	EnduserMessagesHttpGeoipSubject                string            `json:"enduser_messages.http.geoip_subject"`
	EnduserMessagesHttpMimetypeDesc                string            `json:"enduser_messages.http.mimetype_desc"`
	EnduserMessagesHttpMimetypeSubject             string            `json:"enduser_messages.http.mimetype_subject"`
	EnduserMessagesHttpMimetypeWarnDesc            string            `json:"enduser_messages.http.mimetype_warn_desc"`
	EnduserMessagesHttpMimetypeWarnSubject         string            `json:"enduser_messages.http.mimetype_warn_subject"`
	EnduserMessagesHttpPuaDesc                     string            `json:"enduser_messages.http.pua_desc"`
	EnduserMessagesHttpPuaSubject                  string            `json:"enduser_messages.http.pua_subject"`
	EnduserMessagesHttpQuotaBlockDesc              string            `json:"enduser_messages.http.quota_block_desc"`
	EnduserMessagesHttpQuotaBlockSubject           string            `json:"enduser_messages.http.quota_block_subject"`
	EnduserMessagesHttpQuotaWarnDesc               string            `json:"enduser_messages.http.quota_warn_desc"`
	EnduserMessagesHttpQuotaWarnSubject            string            `json:"enduser_messages.http.quota_warn_subject"`
	EnduserMessagesHttpSpDesc                      string            `json:"enduser_messages.http.sp_desc"`
	EnduserMessagesHttpSpFrameSubject              string            `json:"enduser_messages.http.sp_frame_subject"`
	EnduserMessagesHttpSpSubject                   string            `json:"enduser_messages.http.sp_subject"`
	EnduserMessagesHttpSpWarnDesc                  string            `json:"enduser_messages.http.sp_warn_desc"`
	EnduserMessagesHttpSpWarnSubject               string            `json:"enduser_messages.http.sp_warn_subject"`
	EnduserMessagesHttpSslCertraw                  string            `json:"enduser_messages.http.ssl_certraw"`
	EnduserMessagesHttpSslCertstatus               string            `json:"enduser_messages.http.ssl_certstatus"`
	EnduserMessagesHttpSslIssuer                   string            `json:"enduser_messages.http.ssl_issuer"`
	EnduserMessagesHttpSslMd5Fp                    string            `json:"enduser_messages.http.ssl_md5fp"`
	EnduserMessagesHttpSslSha1Fp                   string            `json:"enduser_messages.http.ssl_sha1fp"`
	EnduserMessagesHttpSslSubject                  string            `json:"enduser_messages.http.ssl_subject"`
	EnduserMessagesHttpSslValidfrom                string            `json:"enduser_messages.http.ssl_validfrom"`
	EnduserMessagesHttpSslValiduntil               string            `json:"enduser_messages.http.ssl_validuntil"`
	EnduserMessagesHttpThreatDesc                  string            `json:"enduser_messages.http.threat_desc"`
	EnduserMessagesHttpThreatSubject               string            `json:"enduser_messages.http.threat_subject"`
	EnduserMessagesHttpTransparentAuthDesc         string            `json:"enduser_messages.http.transparent_auth_desc"`
	EnduserMessagesHttpTransparentAuthSubject      string            `json:"enduser_messages.http.transparent_auth_subject"`
	EnduserMessagesHttpTransparentAuthTerms        string            `json:"enduser_messages.http.transparent_auth_terms"`
	EnduserMessagesHttpVirusDesc                   string            `json:"enduser_messages.http.virus_desc"`
	EnduserMessagesHttpVirusSubject                string            `json:"enduser_messages.http.virus_subject"`
	EnduserMessagesHttpVirusscanDesc               string            `json:"enduser_messages.http.virusscan_desc"`
	EnduserMessagesHttpVirusscanSubject            string            `json:"enduser_messages.http.virusscan_subject"`
	EnduserMessagesMailReleaseErrDesc              string            `json:"enduser_messages.mail.release_err_desc"`
	EnduserMessagesMailReleaseErrSubject           string            `json:"enduser_messages.mail.release_err_subject"`
	EnduserMessagesMailReleasedDesc                string            `json:"enduser_messages.mail.released_desc"`
	EnduserMessagesMailReleasedSubject             string            `json:"enduser_messages.mail.released_subject"`
	EnduserMessagesPop3BlockedDesc                 string            `json:"enduser_messages.pop3.blocked_desc"`
	EnduserMessagesPop3BlockedSubject              string            `json:"enduser_messages.pop3.blocked_subject"`
	EnduserMessagesSpxInternalErrorBody            string            `json:"enduser_messages.spx.internal_error.body"`
	EnduserMessagesSpxInternalErrorSubject         string            `json:"enduser_messages.spx.internal_error.subject"`
	EnduserMessagesSpxInternalErrorSenderBody      string            `json:"enduser_messages.spx.internal_error_sender.body"`
	EnduserMessagesSpxInternalErrorSenderSubject   string            `json:"enduser_messages.spx.internal_error_sender.subject"`
	EnduserMessagesSpxPasswordNoSpecCharsBody      string            `json:"enduser_messages.spx.password_no_spec_chars.body"`
	EnduserMessagesSpxPasswordNoSpecCharsSubject   string            `json:"enduser_messages.spx.password_no_spec_chars.subject"`
	EnduserMessagesSpxPasswordNotLongEnoughBody    string            `json:"enduser_messages.spx.password_not_long_enough.body"`
	EnduserMessagesSpxPasswordNotLongEnoughSubject string            `json:"enduser_messages.spx.password_not_long_enough.subject"`
	EnduserMessagesSpxPasswordNotPresentedBody     string            `json:"enduser_messages.spx.password_not_presented.body"`
	EnduserMessagesSpxPasswordNotPresentedSubject  string            `json:"enduser_messages.spx.password_not_presented.subject"`
	EnduserMessagesSpxUrlNotFoundMessage           string            `json:"enduser_messages.spx.url_not_found.message"`
	EnduserMessagesSquidCacheAdmin                 string            `json:"enduser_messages.squid.cache_admin"`
	EnduserMessagesSquidCacheAdminMessage          string            `json:"enduser_messages.squid.cache_admin_message"`
	EppAllowedNetworks                             []string          `json:"epp.allowed_networks"`
	EppCertificate                                 string            `json:"epp.certificate"`
	EppCity                                        string            `json:"epp.city"`
	EppCountry                                     string            `json:"epp.country"`
	EppDefaultEndpointsGroup                       string            `json:"epp.default_endpoints_group"`
	EppDevices                                     []interface{}     `json:"epp.devices"`
	EppEmail                                       string            `json:"epp.email"`
	EppEndpoints                                   []interface{}     `json:"epp.endpoints"`
	EppEndpointsGroups                             []string          `json:"epp.endpoints_groups"`
	EppExceptionsAv                                []interface{}     `json:"epp.exceptions.av"`
	EppExceptionsDc                                []interface{}     `json:"epp.exceptions.dc"`
	EppFallbackURL                                 string            `json:"epp.fallback_url"`
	EppMagnetPassword                              string            `json:"epp.magnet_password"`
	EppMagnetUsername                              string            `json:"epp.magnet_username"`
	EppOrganization                                string            `json:"epp.organization"`
	EppParentProxyHost                             string            `json:"epp.parent_proxy_host"`
	EppParentProxyPort                             int64             `json:"epp.parent_proxy_port"`
	EppParentProxyStatus                           bool              `json:"epp.parent_proxy_status"`
	EppPoliciesAv                                  []string          `json:"epp.policies.av"`
	EppPoliciesDc                                  []string          `json:"epp.policies.dc"`
	EppPort                                        int64             `json:"epp.port"`
	EppPrivateKey                                  string            `json:"epp.private_key"`
	EppRegistrationToken                           string            `json:"epp.registration_token"`
	EppStatusAv                                    bool              `json:"epp.status.av"`
	EppStatusBroker                                bool              `json:"epp.status.broker"`
	EppStatusDc                                    bool              `json:"epp.status.dc"`
	EppStatusEpp                                   bool              `json:"epp.status.epp"`
	EppStatusWc                                    bool              `json:"epp.status.wc"`
	EppTamperPassword                              string            `json:"epp.tamper_password"`
	EppVersion                                     string            `json:"epp.version"`
	EppWdxToken                                    string            `json:"epp.wdx_token"`
	ExecutiveReportDailyArchive                    bool              `json:"executive_report.daily.archive"`
	ExecutiveReportDailyKeep                       int64             `json:"executive_report.daily.keep"`
	ExecutiveReportDailyPdfrecipients              []interface{}     `json:"executive_report.daily.pdfrecipients"`
	ExecutiveReportDailyRecipients                 []string          `json:"executive_report.daily.recipients"`
	ExecutiveReportDailyStatus                     bool              `json:"executive_report.daily.status"`
	ExecutiveReportMonthlyArchive                  bool              `json:"executive_report.monthly.archive"`
	ExecutiveReportMonthlyKeep                     int64             `json:"executive_report.monthly.keep"`
	ExecutiveReportMonthlyPdfrecipients            []interface{}     `json:"executive_report.monthly.pdfrecipients"`
	ExecutiveReportMonthlyRecipients               []interface{}     `json:"executive_report.monthly.recipients"`
	ExecutiveReportMonthlyStatus                   bool              `json:"executive_report.monthly.status"`
	ExecutiveReportWeeklyArchive                   bool              `json:"executive_report.weekly.archive"`
	ExecutiveReportWeeklyFirstDayOfWeek            struct{}          `json:"executive_report.weekly.first_day_of_week"`
	ExecutiveReportWeeklyKeep                      int64             `json:"executive_report.weekly.keep"`
	ExecutiveReportWeeklyPdfrecipients             []interface{}     `json:"executive_report.weekly.pdfrecipients"`
	ExecutiveReportWeeklyRecipients                []interface{}     `json:"executive_report.weekly.recipients"`
	ExecutiveReportWeeklyStatus                    bool              `json:"executive_report.weekly.status"`
	FloodProtectionIcmpDstBurst                    int64             `json:"flood_protection.icmp.dst_burst"`
	FloodProtectionIcmpDstExpire                   int64             `json:"flood_protection.icmp.dst_expire"`
	FloodProtectionIcmpDstGcInterval               int64             `json:"flood_protection.icmp.dst_gc_interval"`
	FloodProtectionIcmpDstRate                     int64             `json:"flood_protection.icmp.dst_rate"`
	FloodProtectionIcmpLog                         string            `json:"flood_protection.icmp.log"`
	FloodProtectionIcmpLogLimitBurst               int64             `json:"flood_protection.icmp.log_limit_burst"`
	FloodProtectionIcmpLogLimitRate                int64             `json:"flood_protection.icmp.log_limit_rate"`
	FloodProtectionIcmpMode                        string            `json:"flood_protection.icmp.mode"`
	FloodProtectionIcmpSrcBurst                    int64             `json:"flood_protection.icmp.src_burst"`
	FloodProtectionIcmpSrcExpire                   int64             `json:"flood_protection.icmp.src_expire"`
	FloodProtectionIcmpSrcGcInterval               int64             `json:"flood_protection.icmp.src_gc_interval"`
	FloodProtectionIcmpSrcRate                     int64             `json:"flood_protection.icmp.src_rate"`
	FloodProtectionIcmpStatus                      bool              `json:"flood_protection.icmp.status"`
	FloodProtectionSynDstBurst                     int64             `json:"flood_protection.syn.dst_burst"`
	FloodProtectionSynDstExpire                    int64             `json:"flood_protection.syn.dst_expire"`
	FloodProtectionSynDstGcInterval                int64             `json:"flood_protection.syn.dst_gc_interval"`
	FloodProtectionSynDstRate                      int64             `json:"flood_protection.syn.dst_rate"`
	FloodProtectionSynLog                          string            `json:"flood_protection.syn.log"`
	FloodProtectionSynLogLimitBurst                int64             `json:"flood_protection.syn.log_limit_burst"`
	FloodProtectionSynLogLimitRate                 int64             `json:"flood_protection.syn.log_limit_rate"`
	FloodProtectionSynMode                         string            `json:"flood_protection.syn.mode"`
	FloodProtectionSynSrcBurst                     int64             `json:"flood_protection.syn.src_burst"`
	FloodProtectionSynSrcExpire                    int64             `json:"flood_protection.syn.src_expire"`
	FloodProtectionSynSrcGcInterval                int64             `json:"flood_protection.syn.src_gc_interval"`
	FloodProtectionSynSrcRate                      int64             `json:"flood_protection.syn.src_rate"`
	FloodProtectionSynStatus                       bool              `json:"flood_protection.syn.status"`
	FloodProtectionUdpDstBurst                     int64             `json:"flood_protection.udp.dst_burst"`
	FloodProtectionUdpDstExpire                    int64             `json:"flood_protection.udp.dst_expire"`
	FloodProtectionUdpDstGcInterval                int64             `json:"flood_protection.udp.dst_gc_interval"`
	FloodProtectionUdpDstRate                      int64             `json:"flood_protection.udp.dst_rate"`
	FloodProtectionUdpLog                          string            `json:"flood_protection.udp.log"`
	FloodProtectionUdpLogLimitBurst                int64             `json:"flood_protection.udp.log_limit_burst"`
	FloodProtectionUdpLogLimitRate                 int64             `json:"flood_protection.udp.log_limit_rate"`
	FloodProtectionUdpMode                         string            `json:"flood_protection.udp.mode"`
	FloodProtectionUdpSrcBurst                     int64             `json:"flood_protection.udp.src_burst"`
	FloodProtectionUdpSrcExpire                    int64             `json:"flood_protection.udp.src_expire"`
	FloodProtectionUdpSrcGcInterval                int64             `json:"flood_protection.udp.src_gc_interval"`
	FloodProtectionUdpSrcRate                      int64             `json:"flood_protection.udp.src_rate"`
	FloodProtectionUdpStatus                       bool              `json:"flood_protection.udp.status"`
	FtpAllowedClients                              []interface{}     `json:"ftp.allowed_clients"`
	FtpAllowedServers                              []string          `json:"ftp.allowed_servers"`
	FtpCffAv                                       bool              `json:"ftp.cff_av"`
	FtpCffAvEngines                                string            `json:"ftp.cff_av_engines"`
	FtpCffFileExtensions                           []interface{}     `json:"ftp.cff_file_extensions"`
	FtpExceptions                                  []interface{}     `json:"ftp.exceptions"`
	FtpMaxFileSize                                 int64             `json:"ftp.max_file_size"`
	FtpMsWinMode                                   bool              `json:"ftp.ms_win_mode"`
	FtpOperationMode                               string            `json:"ftp.operation_mode"`
	FtpRestrictedServers                           []string          `json:"ftp.restricted_servers"`
	FtpStatus                                      bool              `json:"ftp.status"`
	FtpTransparentSkip                             []interface{}     `json:"ftp.transparent_skip"`
	FtpTransparentSkipAutoPf                       bool              `json:"ftp.transparent_skip_auto_pf"`
	GenericProxyRules                              []interface{}     `json:"generic_proxy.rules"`
	GeoipCountriesDst                              []string          `json:"geoip.countries_dst"`
	GeoipCountriesSrc                              []string          `json:"geoip.countries_src"`
	GeoipExceptions                                []interface{}     `json:"geoip.exceptions"`
	GeoipLog                                       string            `json:"geoip.log"`
	GeoipStatus                                    bool              `json:"geoip.status"`
	H323AllowedNetworks                            []interface{}     `json:"h323.allowed_networks"`
	H323LogRelated                                 bool              `json:"h323.log_related"`
	H323Servers                                    []interface{}     `json:"h323.servers"`
	H323Status                                     bool              `json:"h323.status"`
	HaAdvancedAutojoin                             bool              `json:"ha.advanced.autojoin"`
	HaAdvancedColdRollback                         bool              `json:"ha.advanced.cold_rollback"`
	HaAdvancedHttpPersistenceTime                  struct{}          `json:"ha.advanced.http_persistence_time"`
	HaAdvancedLoadTakeover                         int64             `json:"ha.advanced.load_takeover"`
	HaAdvancedLoadWarn                             int64             `json:"ha.advanced.load_warn"`
	HaAdvancedMaxNodes                             int64             `json:"ha.advanced.max_nodes"`
	HaAdvancedMtu                                  string            `json:"ha.advanced.mtu"`
	HaAdvancedNetconsole                           bool              `json:"ha.advanced.netconsole"`
	HaAdvancedPreempt                              string            `json:"ha.advanced.preempt"`
	HaAdvancedUniqueID                             int64             `json:"ha.advanced.unique_id"`
	HaAdvancedVirtualMac                           bool              `json:"ha.advanced.virtual_mac"`
	HaAwsCloudwatchProfile                         string            `json:"ha.aws.cloudwatch.profile"`
	HaAwsCloudwatchStatus                          bool              `json:"ha.aws.cloudwatch.status"`
	HaAwsConfdBackup                               bool              `json:"ha.aws.confd.backup"`
	HaAwsConfdBackupInterval                       int64             `json:"ha.aws.confd.backup_interval"`
	HaAwsConfdRestore                              bool              `json:"ha.aws.confd.restore"`
	HaAwsConfdRestoreDone                          bool              `json:"ha.aws.confd.restore_done"`
	HaAwsElasticIP                                 string            `json:"ha.aws.elastic_ip"`
	HaAwsPostgresArchiveTimeout                    int64             `json:"ha.aws.postgres.archive_timeout"`
	HaAwsPostgresBackup                            bool              `json:"ha.aws.postgres.backup"`
	HaAwsPostgresBaseBackupInterval                int64             `json:"ha.aws.postgres.base_backup_interval"`
	HaAwsPostgresRestore                           bool              `json:"ha.aws.postgres.restore"`
	HaAwsS3Bucket                                  string            `json:"ha.aws.s3_bucket"`
	HaAwsStackName                                 string            `json:"ha.aws.stack_name"`
	HaAwsSyslogBackup                              bool              `json:"ha.aws.syslog.backup"`
	HaAwsSyslogRestore                             bool              `json:"ha.aws.syslog.restore"`
	HaAwsSyslogRestorePeriod                       int64             `json:"ha.aws.syslog.restore_period"`
	HaAwsTrustedNetwork                            string            `json:"ha.aws.trusted_network"`
	HaClusterFtp                                   []interface{}     `json:"ha.cluster.ftp"`
	HaClusterHttp                                  []interface{}     `json:"ha.cluster.http"`
	HaClusterIpsec                                 []interface{}     `json:"ha.cluster.ipsec"`
	HaClusterPop3                                  []interface{}     `json:"ha.cluster.pop3"`
	HaClusterSmtp                                  []interface{}     `json:"ha.cluster.smtp"`
	HaClusterSnort                                 []interface{}     `json:"ha.cluster.snort"`
	HaClusterWaf                                   []interface{}     `json:"ha.cluster.waf"`
	HaDeviceName                                   string            `json:"ha.device_name"`
	HaItfhw                                        string            `json:"ha.itfhw"`
	HaItfhwBackup                                  string            `json:"ha.itfhw_backup"`
	HaMasterIP                                     string            `json:"ha.master_ip"`
	HaMode                                         string            `json:"ha.mode"`
	HaNodeID                                       struct{}          `json:"ha.node_id"`
	HaPassword                                     string            `json:"ha.password"`
	HaPostgresSecret                               string            `json:"ha.postgres_secret"`
	HaSlaveIP                                      string            `json:"ha.slave_ip"`
	HaStatus                                       string            `json:"ha.status"`
	HaSyncConntrack                                bool              `json:"ha.sync.conntrack"`
	HaSyncDatabase                                 bool              `json:"ha.sync.database"`
	HaSyncFiles                                    bool              `json:"ha.sync.files"`
	HaSyncIpsec                                    bool              `json:"ha.sync.ipsec"`
	HaSyncSyslog                                   bool              `json:"ha.sync.syslog"`
	HaTimesDeadTime                                int64             `json:"ha.times.dead_time"`
	HaTimesLoadTime                                int64             `json:"ha.times.load_time"`
	HotspotCert                                    string            `json:"hotspot.cert"`
	HotspotDeleteDays                              int64             `json:"hotspot.delete_days"`
	HotspotSslPortal                               bool              `json:"hotspot.ssl_portal"`
	HotspotStatus                                  bool              `json:"hotspot.status"`
	HotspotTransparentSkip                         []interface{}     `json:"hotspot.transparent_skip"`
	HTTPAdSsoInterfaces                            []interface{}     `json:"http.ad_sso_interfaces"`
	HTTPAdssoRedirectUseHostname                   bool              `json:"http.adsso_redirect_use_hostname"`
	HTTPAllowSsl3                                  bool              `json:"http.allow_ssl3"`
	HTTPAllowTLS12                                 bool              `json:"http.allow_tls_1_2"`
	HTTPAllowedPuas                                []interface{}     `json:"http.allowed_puas"`
	HTTPAllowedTargetServices                      []string          `json:"http.allowed_target_services"`
	HTTPAuaMaxconns                                int64             `json:"http.aua_maxconns"`
	HTTPAuaTimeout                                 int64             `json:"http.aua_timeout"`
	HTTPAuthCacheSize                              int64             `json:"http.auth_cache_size"`
	HTTPAuthCacheTTL                               int64             `json:"http.auth_cache_ttl"`
	HTTPAuthRealm                                  string            `json:"http.auth_realm"`
	HTTPAuthUsercacheTTL                           int64             `json:"http.auth_usercache_ttl"`
	HTTPBlockUnscannable                           bool              `json:"http.block_unscannable"`
	HTTPBypassStreaming                            bool              `json:"http.bypass_streaming"`
	HTTPCaList                                     []interface{}     `json:"http.ca_list"`
	HTTPCacheIgnoresCookies                        bool              `json:"http.cache_ignores_cookies"`
	HTTPCachessl                                   bool              `json:"http.cachessl"`
	HTTPCaching                                    bool              `json:"http.caching"`
	HTTPCertcache                                  string            `json:"http.certcache"`
	HTTPCertstore                                  string            `json:"http.certstore"`
	HTTPCffOverrideUsers                           []interface{}     `json:"http.cff_override_users"`
	HTTPClientTimeout                              int64             `json:"http.client_timeout"`
	HTTPConfLockWorkaround                         bool              `json:"http.conf_lock_workaround"`
	HTTPConnectTimeout                             int64             `json:"http.connect_timeout"`
	HTTPConnectV6Timeout                           struct{}          `json:"http.connect_v6_timeout"`
	HTTPConnlimit                                  int64             `json:"http.connlimit"`
	HTTPCtypeInspectBody                           bool              `json:"http.ctype_inspect_body"`
	HTTPCtypeUnpackArchive                         bool              `json:"http.ctype_unpack_archive"`
	HTTPDebug                                      []interface{}     `json:"http.debug"`
	HTTPDefaultblockaction                         string            `json:"http.defaultblockaction"`
	HTTPDeferagents                                []string          `json:"http.deferagents"`
	HTTPDeferlength                                int64             `json:"http.deferlength"`
	HTTPDisplayHTTPBlockpageExplicitMode           bool              `json:"http.display_http_blockpage_explicit_mode"`
	HTTPDisplayIntro                               bool              `json:"http.display_intro"`
	HTTPDownloadManagerDefaultCharset              string            `json:"http.download_manager_default_charset"`
	HTTPEdirDelayBasicAuth                         bool              `json:"http.edir_delay_basic_auth"`
	HTTPEnableOutInterface                         bool              `json:"http.enable_out_interface"`
	HTTPEppQuotaAction                             string            `json:"http.epp_quota_action"`
	HTTPExceptions                                 []string          `json:"http.exceptions"`
	HTTPForcedCachingExtension                     []string          `json:"http.forced_caching_extension"`
	HTTPForcedCachingNeverCachePrefix              []string          `json:"http.forced_caching_never_cache_prefix"`
	HTTPForcedCachingStatus                        bool              `json:"http.forced_caching_status"`
	HTTPForcedCachingTTL                           int64             `json:"http.forced_caching_ttl"`
	HTTPForcedCachingUserAgentPrefix               []string          `json:"http.forced_caching_user_agent_prefix"`
	HTTPHttpLoopbackDetect                         bool              `json:"http.http_loopback_detect"`
	HTTPIeSslBlockpageWorkaround                   bool              `json:"http.ie_ssl_blockpage_workaround"`
	HTTPLimitAdSsoInterfaces                       bool              `json:"http.limit_ad_sso_interfaces"`
	HTTPLocalSiteList                              []interface{}     `json:"http.local_site_list"`
	HTTPMaxContentEncoding                         int64             `json:"http.max_content_encoding"`
	HTTPMaxTempfileSize                            int64             `json:"http.max_tempfile_size"`
	HTTPMaxthreads                                 int64             `json:"http.maxthreads"`
	HTTPMaxthreadsUnused                           int64             `json:"http.maxthreads_unused"`
	HTTPModulepath                                 string            `json:"http.modulepath"`
	HTTPModules                                    []string          `json:"http.modules"`
	HTTPNoscancontent                              []string          `json:"http.noscancontent"`
	HTTPOpendirectoryKeytab                        string            `json:"http.opendirectory_keytab"`
	HTTPPacFile                                    string            `json:"http.pac_file"`
	HTTPParentProxyHost                            string            `json:"http.parent_proxy_host"`
	HTTPParentProxyPort                            int64             `json:"http.parent_proxy_port"`
	HTTPParentProxyStatus                          bool              `json:"http.parent_proxy_status"`
	HTTPPassthroughID                              string            `json:"http.passthrough_id"`
	HTTPPharmingProtection                         bool              `json:"http.pharming_protection"`
	HTTPPort                                       int64             `json:"http.port"`
	HTTPPortalCert                                 string            `json:"http.portal_cert"`
	HTTPPortalCertChain                            []interface{}     `json:"http.portal_cert_chain"`
	HTTPPortalDomain                               string            `json:"http.portal_domain"`
	HTTPPortalHosts                                []interface{}     `json:"http.portal_hosts"`
	HTTPPortalUseCert                              bool              `json:"http.portal_use_cert"`
	HTTPProceedCacheTimeout                        int64             `json:"http.proceed_cache_timeout"`
	HTTPProfiles                                   []string          `json:"http.profiles"`
	HTTPQuotaSliceTime                             int64             `json:"http.quota_slice_time"`
	HTTPRemoveRequest                              []interface{}     `json:"http.remove_request"`
	HTTPRemoveResponse                             []string          `json:"http.remove_response"`
	HTTPResponseTimeout                            int64             `json:"http.response_timeout"`
	HTTPScLocalDB                                  string            `json:"http.sc_local_db"`
	HTTPScanEppTraffic                             bool              `json:"http.scan_epp_traffic"`
	HTTPSearchdomain                               string            `json:"http.searchdomain"`
	HTTPStrictHTTP                                 bool              `json:"http.strict_http"`
	HTTPTlsciphersClient                           string            `json:"http.tlsciphers_client"`
	HTTPTlsciphersServer                           string            `json:"http.tlsciphers_server"`
	HTTPTmpfsUsageMinMemsize                       int64             `json:"http.tmpfs_usage_min_memsize"`
	HTTPTransparentAuthTimeout                     int64             `json:"http.transparent_auth_timeout"`
	HTTPTransparentDstSkip                         []interface{}     `json:"http.transparent_dst_skip"`
	HTTPTransparentSkipAutoPf                      bool              `json:"http.transparent_skip_auto_pf"`
	HTTPTransparentSrcSkip                         []interface{}     `json:"http.transparent_src_skip"`
	HTTPTunnelTimeout                              int64             `json:"http.tunnel_timeout"`
	HTTPTunnelV6Timeout                            struct{}          `json:"http.tunnel_v6_timeout"`
	HTTPUndefercontent                             []string          `json:"http.undefercontent"`
	HTTPUndeferextension                           []string          `json:"http.undeferextension"`
	HTTPUrlFilteringRedirectURL                    string            `json:"http.url_filtering_redirect_url"`
	HTTPUseDstaddrForGeopiplookup                  bool              `json:"http.use_dstaddr_for_geopiplookup"`
	HTTPUseKrb5Adsso                               bool              `json:"http.use_krb5_adsso"`
	HTTPUseSni                                     bool              `json:"http.use_sni"`
	HTTPUseSxlUrid                                 bool              `json:"http.use_sxl_urid"`
	IcmpForward                                    bool              `json:"icmp.forward"`
	IcmpInput                                      bool              `json:"icmp.input"`
	IcmpLogRedirect                                bool              `json:"icmp.log_redirect"`
	IcmpPingForward                                bool              `json:"icmp.ping.forward"`
	IcmpPingInput                                  bool              `json:"icmp.ping.input"`
	IcmpPingOutput                                 bool              `json:"icmp.ping.output"`
	IcmpSecure                                     bool              `json:"icmp.secure"`
	IcmpTracerouteForward                          bool              `json:"icmp.traceroute.forward"`
	IcmpTracerouteInput                            bool              `json:"icmp.traceroute.input"`
	IdentForward                                   bool              `json:"ident.forward"`
	IdentResponse                                  string            `json:"ident.response"`
	IdentStatus                                    bool              `json:"ident.status"`
	InterfacesAdvancedArpAnnounce                  struct{}          `json:"interfaces.advanced.arp_announce"`
	InterfacesAdvancedArpIgnore                    struct{}          `json:"interfaces.advanced.arp_ignore"`
	InterfacesAdvancedDefaultMetric                int64             `json:"interfaces.advanced.default_metric"`
	InterfacesInterfaces                           []string          `json:"interfaces.interfaces"`
	IpsDnsServers                                  []interface{}     `json:"ips.dns_servers"`
	IpsEngine                                      string            `json:"ips.engine"`
	IpsExceptions                                  []string          `json:"ips.exceptions"`
	IpsFailopen                                    bool              `json:"ips.failopen"`
	IpsFileBasedRules                              bool              `json:"ips.file_based_rules"`
	IpsGroups                                      []string          `json:"ips.groups"`
	IpsHttpServers                                 []interface{}     `json:"ips.http_servers"`
	IpsIpsfbAlertInterval                          int64             `json:"ips.ipsfb.alert_interval"`
	IpsIpsfbConfigInterval                         int64             `json:"ips.ipsfb.config_interval"`
	IpsIpsfbDebug                                  bool              `json:"ips.ipsfb.debug"`
	IpsLocalNetworks                               []string          `json:"ips.local_networks"`
	IpsNumInstances                                struct{}          `json:"ips.num_instances"`
	IpsPatternChannel                              string            `json:"ips.pattern_channel"`
	IpsPolicy                                      string            `json:"ips.policy"`
	IpsQueueLength                                 int64             `json:"ips.queue_length"`
	IpsQueueThreshold                              struct{}          `json:"ips.queue_threshold"`
	IpsReloadMethod                                string            `json:"ips.reload_method"`
	IpsRestartPolicy                               string            `json:"ips.restart_policy"`
	IpsRuleModifiers                               []interface{}     `json:"ips.rule_modifiers"`
	IpsRules                                       []interface{}     `json:"ips.rules"`
	IpsSkipAcks                                    bool              `json:"ips.skip_acks"`
	IpsSmtpServers                                 []interface{}     `json:"ips.smtp_servers"`
	IpsSnortsettingsMaxQueuedBytes                 struct{}          `json:"ips.snortsettings.max_queued_bytes"`
	IpsSnortsettingsMaxQueuedSegs                  struct{}          `json:"ips.snortsettings.max_queued_segs"`
	IpsSnortsettingsMaxTcp                         struct{}          `json:"ips.snortsettings.max_tcp"`
	IpsSnortsettingsMaxUdp                         struct{}          `json:"ips.snortsettings.max_udp"`
	IpsSnortsettingsMemcap                         struct{}          `json:"ips.snortsettings.memcap"`
	IpsSnortsettingsSearchMethod                   string            `json:"ips.snortsettings.search_method"`
	IpsSqlServers                                  []interface{}     `json:"ips.sql_servers"`
	IpsStatus                                      bool              `json:"ips.status"`
	IpsecAdvancedCrlAutoFetching                   bool              `json:"ipsec.advanced.crl_auto_fetching"`
	IpsecAdvancedCrlStrictPolicy                   bool              `json:"ipsec.advanced.crl_strict_policy"`
	IpsecAdvancedDeadPeerDetection                 bool              `json:"ipsec.advanced.dead_peer_detection"`
	IpsecAdvancedIkeDebug                          []interface{}     `json:"ipsec.advanced.ike_debug"`
	IpsecAdvancedIkePort                           int64             `json:"ipsec.advanced.ike_port"`
	IpsecAdvancedMetric                            struct{}          `json:"ipsec.advanced.metric"`
	IpsecAdvancedNatTraversal                      bool              `json:"ipsec.advanced.nat_traversal"`
	IpsecAdvancedNatTraversalKeepalive             int64             `json:"ipsec.advanced.nat_traversal_keepalive"`
	IpsecAdvancedProbePsk                          bool              `json:"ipsec.advanced.probe_psk"`
	IpsecAdvancedPskVpnID                          string            `json:"ipsec.advanced.psk_vpn_id"`
	IpsecAdvancedPskVpnIDType                      string            `json:"ipsec.advanced.psk_vpn_id_type"`
	IpsecConnections                               []string          `json:"ipsec.connections"`
	IpsecLocalRsa                                  string            `json:"ipsec.local_rsa"`
	IpsecLocalX509                                 string            `json:"ipsec.local_x509"`
	IpsecStatus                                    bool              `json:"ipsec.status"`
	Ipv6AdvancedHopLimit                           int64             `json:"ipv6.advanced.hop_limit"`
	Ipv6AdvancedMaxInterval                        int64             `json:"ipv6.advanced.max_interval"`
	Ipv6AdvancedMinInterval                        int64             `json:"ipv6.advanced.min_interval"`
	Ipv6AdvancedPreference                         string            `json:"ipv6.advanced.preference"`
	Ipv6AdvancedReachableTime                      struct{}          `json:"ipv6.advanced.reachable_time"`
	Ipv6AdvancedRetransTime                        struct{}          `json:"ipv6.advanced.retrans_time"`
	Ipv6BrokerAuthentication                       string            `json:"ipv6.broker.authentication"`
	Ipv6BrokerInterface                            string            `json:"ipv6.broker.interface"`
	Ipv6BrokerPassword                             string            `json:"ipv6.broker.password"`
	Ipv6BrokerProtocol                             string            `json:"ipv6.broker.protocol"`
	Ipv6BrokerServer                               string            `json:"ipv6.broker.server"`
	Ipv6BrokerStatus                               bool              `json:"ipv6.broker.status"`
	Ipv6BrokerTunnelID                             string            `json:"ipv6.broker.tunnel_id"`
	Ipv6BrokerUsername                             string            `json:"ipv6.broker.username"`
	Ipv6Nat64Address                               string            `json:"ipv6.nat64.address"`
	Ipv6Nat64Dns64V6only                           bool              `json:"ipv6.nat64.dns64_v6only"`
	Ipv6Nat64Prefix                                string            `json:"ipv6.nat64.prefix"`
	Ipv6Nat64Status                                bool              `json:"ipv6.nat64.status"`
	Ipv6Prefer                                     bool              `json:"ipv6.prefer"`
	Ipv6Prefixes                                   []interface{}     `json:"ipv6.prefixes"`
	Ipv6Renumbering                                bool              `json:"ipv6.renumbering"`
	Ipv6Six2FourInterface                          string            `json:"ipv6.six2four.interface"`
	Ipv6Six2FourServer                             string            `json:"ipv6.six2four.server"`
	Ipv6Six2FourStatus                             bool              `json:"ipv6.six2four.status"`
	Ipv6Status                                     bool              `json:"ipv6.status"`
	LicensingActiveIps                             []string          `json:"licensing.active_ips"`
	LicensingLicense                               string            `json:"licensing.license"`
	LicensingUserLimitExceeded                     struct{}          `json:"licensing.user_limit_exceeded"`
	LinkAggregationGroups                          []string          `json:"link_aggregation.groups"`
	LoadbalanceHttpErrorCode                       int64             `json:"loadbalance.http_error_code"`
	LoadbalanceRules                               []interface{}     `json:"loadbalance.rules"`
	LogfilesLocalActionOne                         string            `json:"logfiles.local.action_one"`
	LogfilesLocalActionThree                       string            `json:"logfiles.local.action_three"`
	LogfilesLocalActionTwo                         string            `json:"logfiles.local.action_two"`
	LogfilesLocalDeleteAfterDays                   struct{}          `json:"logfiles.local.delete_after_days"`
	LogfilesLocalPercentageOne                     int64             `json:"logfiles.local.percentage_one"`
	LogfilesLocalPercentageThree                   int64             `json:"logfiles.local.percentage_three"`
	LogfilesLocalPercentageTwo                     int64             `json:"logfiles.local.percentage_two"`
	LogfilesLocalStatus                            bool              `json:"logfiles.local.status"`
	LogfilesRemoteFtpService                       string            `json:"logfiles.remote.ftp_service"`
	LogfilesRemoteHost                             string            `json:"logfiles.remote.host"`
	LogfilesRemotePass                             string            `json:"logfiles.remote.pass"`
	LogfilesRemotePath                             string            `json:"logfiles.remote.path"`
	LogfilesRemoteSmbWorkgroup                     string            `json:"logfiles.remote.smb_workgroup"`
	LogfilesRemoteSmtpAddress                      string            `json:"logfiles.remote.smtp_address"`
	LogfilesRemoteStatus                           bool              `json:"logfiles.remote.status"`
	LogfilesRemoteType                             string            `json:"logfiles.remote.type"`
	LogfilesRemoteUser                             string            `json:"logfiles.remote.user"`
	MasqRules                                      []string          `json:"masq.rules"`
	MigrationAccessToken                           string            `json:"migration.access_token"`
	MigrationLocalOverride                         bool              `json:"migration.local_override"`
	MigrationRefreshToken                          string            `json:"migration.refresh_token"`
	MigrationTabVisibility                         string            `json:"migration.tab_visibility"`
	MigrationToolsetVersion                        string            `json:"migration.toolset_version"`
	MigrationUtmVersion                            string            `json:"migration.utm_version"`
	MobileControlCa                                string            `json:"mobile_control.ca"`
	MobileControlConfigCisco                       bool              `json:"mobile_control.config.cisco"`
	MobileControlConfigEapMethod                   string            `json:"mobile_control.config.eap_method"`
	MobileControlConfigForcePush                   bool              `json:"mobile_control.config.force_push"`
	MobileControlConfigL2Tp                        bool              `json:"mobile_control.config.l2tp"`
	MobileControlConfigWifiNetworks                []interface{}     `json:"mobile_control.config.wifi_networks"`
	MobileControlCustomer                          string            `json:"mobile_control.customer"`
	MobileControlDebug                             bool              `json:"mobile_control.debug"`
	MobileControlNacCisco                          bool              `json:"mobile_control.nac.cisco"`
	MobileControlNacDenyAllVpn                     bool              `json:"mobile_control.nac.deny_all_vpn"`
	MobileControlNacL2Tp                           bool              `json:"mobile_control.nac.l2tp"`
	MobileControlNacMacsAllowed                    string            `json:"mobile_control.nac.macs_allowed"`
	MobileControlNacMacsDenied                     string            `json:"mobile_control.nac.macs_denied"`
	MobileControlNacPollInterval                   int64             `json:"mobile_control.nac.poll_interval"`
	MobileControlNacUsersDenied                    []interface{}     `json:"mobile_control.nac.users_denied"`
	MobileControlNacWifiNetworks                   []interface{}     `json:"mobile_control.nac.wifi_networks"`
	MobileControlPassword                          string            `json:"mobile_control.password"`
	MobileControlServer                            string            `json:"mobile_control.server"`
	MobileControlStatus                            bool              `json:"mobile_control.status"`
	MobileControlUsername                          string            `json:"mobile_control.username"`
	NatRules                                       []string          `json:"nat.rules"`
	NotificationsDeviceInfo                        string            `json:"notifications.device_info"`
	NotificationsLimiting                          bool              `json:"notifications.limiting"`
	NotificationsOverlay                           []interface{}     `json:"notifications.overlay"`
	NotificationsRebootReason                      struct {
		Zero string `json:"0"`
		One  string `json:"1"`
	} `json:"notifications.reboot_reason"`
	NotificationsRecipients                              []string      `json:"notifications.recipients"`
	NotificationsSender                                  string        `json:"notifications.sender"`
	NotificationsSmtpAuthentication                      bool          `json:"notifications.smtp.authentication"`
	NotificationsSmtpPassword                            string        `json:"notifications.smtp.password"`
	NotificationsSmtpPort                                int64         `json:"notifications.smtp.port"`
	NotificationsSmtpServer                              string        `json:"notifications.smtp.server"`
	NotificationsSmtpStatus                              bool          `json:"notifications.smtp.status"`
	NotificationsSmtpTls                                 bool          `json:"notifications.smtp.tls"`
	NotificationsSmtpUsername                            string        `json:"notifications.smtp.username"`
	NTPAllowedNetworks                                   []string      `json:"ntp.allowed_networks"`
	NTPServers                                           []string      `json:"ntp.servers"`
	NTPStatus                                            bool          `json:"ntp.status"`
	PacketfilterAdvancedBlockInvalidCtPackets            bool          `json:"packetfilter.advanced.block_invalid_ct_packets"`
	PacketfilterAdvancedCheckPacketLength                bool          `json:"packetfilter.advanced.check_packet_length"`
	PacketfilterAdvancedConntrackHelpers                 []string      `json:"packetfilter.advanced.conntrack_helpers"`
	PacketfilterAdvancedFtpPorts                         []int64       `json:"packetfilter.advanced.ftp_ports"`
	PacketfilterAdvancedLogBroadcasts                    bool          `json:"packetfilter.advanced.log_broadcasts"`
	PacketfilterAdvancedLogDNSRequests                   bool          `json:"packetfilter.advanced.log_dns_requests"`
	PacketfilterAdvancedLogFtpData                       bool          `json:"packetfilter.advanced.log_ftp_data"`
	PacketfilterAdvancedLogInvalid                       struct{}      `json:"packetfilter.advanced.log_invalid"`
	PacketfilterAdvancedLogMcast                         bool          `json:"packetfilter.advanced.log_mcast"`
	PacketfilterAdvancedLogStrictTcpState                string        `json:"packetfilter.advanced.log_strict_tcp_state"`
	PacketfilterAdvancedNoErrorReplay                    bool          `json:"packetfilter.advanced.no_error_replay"`
	PacketfilterAdvancedOptimizeIpset                    string        `json:"packetfilter.advanced.optimize.ipset"`
	PacketfilterAdvancedOptimizePorts                    bool          `json:"packetfilter.advanced.optimize.ports"`
	PacketfilterAdvancedSpoofProtection                  string        `json:"packetfilter.advanced.spoof_protection"`
	PacketfilterAdvancedStrictTcpState                   bool          `json:"packetfilter.advanced.strict_tcp_state"`
	PacketfilterAdvancedTcpMaxRetrans                    int64         `json:"packetfilter.advanced.tcp_max_retrans"`
	PacketfilterAdvancedTcpWindowScaling                 bool          `json:"packetfilter.advanced.tcp_window_scaling"`
	PacketfilterRules                                    []string      `json:"packetfilter.rules"`
	PacketfilterRulesAuto                                []string      `json:"packetfilter.rules_auto"`
	PacketfilterRulesBack                                string        `json:"packetfilter.rules_back"`
	PacketfilterRulesFront                               string        `json:"packetfilter.rules_front"`
	PacketfilterTimeoutsIpConntrackGenericTimeout        int64         `json:"packetfilter.timeouts.ip_conntrack_generic_timeout"`
	PacketfilterTimeoutsIpConntrackIcmpTimeout           int64         `json:"packetfilter.timeouts.ip_conntrack_icmp_timeout"`
	PacketfilterTimeoutsIpConntrackTcpTimeoutClose       int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_close"`
	PacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait   int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_close_wait"`
	PacketfilterTimeoutsIpConntrackTcpTimeoutEstablished int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_established"`
	PacketfilterTimeoutsIpConntrackTcpTimeoutFinWait     int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_fin_wait"`
	PacketfilterTimeoutsIpConntrackTcpTimeoutLastAck     int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_last_ack"`
	PacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans  int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_max_retrans"`
	PacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv     int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_recv"`
	PacketfilterTimeoutsIpConntrackTcpTimeoutSynSent     int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_sent"`
	PacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait    int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_time_wait"`
	PacketfilterTimeoutsIpConntrackUdpTimeout            int64         `json:"packetfilter.timeouts.ip_conntrack_udp_timeout"`
	PacketfilterTimeoutsIpConntrackUdpTimeoutStream      int64         `json:"packetfilter.timeouts.ip_conntrack_udp_timeout_stream"`
	PasswdLoginuserClearpass                             string        `json:"passwd.loginuser.clearpass"`
	PasswdLoginuserCryptpass                             string        `json:"passwd.loginuser.cryptpass"`
	PasswdRootClearpass                                  string        `json:"passwd.root.clearpass"`
	PasswdRootCryptpass                                  string        `json:"passwd.root.cryptpass"`
	PdfPaper                                             string        `json:"pdf.paper"`
	PimSmAutoPfOut                                       string        `json:"pim_sm.auto_pf_out"`
	PimSmAutoPfrule                                      bool          `json:"pim_sm.auto_pfrule"`
	PimSmDebug                                           bool          `json:"pim_sm.debug"`
	PimSmInterfaces                                      []interface{} `json:"pim_sm.interfaces"`
	PimSmRpRouters                                       []interface{} `json:"pim_sm.rp_routers"`
	PimSmSptSwitchBytes                                  int64         `json:"pim_sm.spt_switch_bytes"`
	PimSmSptSwitchStatus                                 bool          `json:"pim_sm.spt_switch_status"`
	PimSmStatus                                          bool          `json:"pim_sm.status"`
	Pop3AllowedClients                                   []interface{} `json:"pop3.allowed_clients"`
	Pop3AllowedServers                                   []string      `json:"pop3.allowed_servers"`
	Pop3CffAsMarker                                      string        `json:"pop3.cff_as_marker"`
	Pop3CffAv                                            bool          `json:"pop3.cff_av"`
	Pop3CffAvAction                                      string        `json:"pop3.cff_av_action"`
	Pop3CffAvEngines                                     string        `json:"pop3.cff_av_engines"`
	Pop3CffFileExtensions                                []string      `json:"pop3.cff_file_extensions"`
	Pop3DirectlyDeleteQuarantined                        bool          `json:"pop3.directly_delete_quarantined"`
	Pop3Exceptions                                       []interface{} `json:"pop3.exceptions"`
	Pop3KnownServers                                     []interface{} `json:"pop3.known_servers"`
	Pop3MaxMessageSize                                   int64         `json:"pop3.max_message_size"`
	Pop3PrefetchingInterval                              int64         `json:"pop3.prefetching.interval"`
	Pop3PrefetchingOptimizeStorage                       bool          `json:"pop3.prefetching.optimize_storage"`
	Pop3PrefetchingStatus                                bool          `json:"pop3.prefetching.status"`
	Pop3PrefetchingStorageMinHoldDays                    int64         `json:"pop3.prefetching.storage_min_hold_days"`
	Pop3QuarantineUnscannable                            bool          `json:"pop3.quarantine_unscannable"`
	Pop3SandboxMaxFilesizeMb                             int64         `json:"pop3.sandbox_max_filesize_mb"`
	Pop3SandboxScanStatus                                bool          `json:"pop3.sandbox_scan_status"`
	Pop3ScanTLS                                          bool          `json:"pop3.scan_tls"`
	Pop3SenderBlacklist                                  []interface{} `json:"pop3.sender_blacklist"`
	Pop3Spam                                             string        `json:"pop3.spam"`
	Pop3SpamExpressions                                  []interface{} `json:"pop3.spam_expressions"`
	Pop3Spamplus                                         string        `json:"pop3.spamplus"`
	Pop3Spamstatus                                       bool          `json:"pop3.spamstatus"`
	Pop3Status                                           bool          `json:"pop3.status"`
	Pop3TlsCert                                          string        `json:"pop3.tls_cert"`
	Pop3TransparentSkip                                  []interface{} `json:"pop3.transparent_skip"`
	Pop3TransparentSkipAutoPf                            bool          `json:"pop3.transparent_skip_auto_pf"`
	Pop3UserCharset                                      string        `json:"pop3.user_charset"`
	PortalAllowAnyUser                                   bool          `json:"portal.allow_any_user"`
	PortalAllowedNetworks                                []string      `json:"portal.allowed_networks"`
	PortalAllowedUsers                                   []interface{} `json:"portal.allowed_users"`
	PortalHideItems                                      []interface{} `json:"portal.hide_items"`
	PortalHostname                                       string        `json:"portal.hostname"`
	PortalInterfaceAddress                               string        `json:"portal.interface_address"`
	PortalLanguage                                       string        `json:"portal.language"`
	PortalPersistentCookies                              bool          `json:"portal.persistent_cookies"`
	PortalPort                                           int64         `json:"portal.port"`
	PortalStatus                                         bool          `json:"portal.status"`
	PortalWelcomeMsg                                     string        `json:"portal.welcome_msg"`
	PsdAction                                            string        `json:"psd.action"`
	PsdDelayThreshold                                    int64         `json:"psd.delay_threshold"`
	PsdHiPortsWeight                                     int64         `json:"psd.hi_ports_weight"`
	PsdLoPortsWeight                                     int64         `json:"psd.lo_ports_weight"`
	PsdLogLimiterBurst                                   int64         `json:"psd.log_limiter.burst"`
	PsdLogLimiterRate                                    int64         `json:"psd.log_limiter.rate"`
	PsdLogLimiterStatus                                  bool          `json:"psd.log_limiter.status"`
	PsdStatus                                            bool          `json:"psd.status"`
	PsdWeightThreshold                                   int64         `json:"psd.weight_threshold"`
	QosAdvancedEcn                                       int64         `json:"qos.advanced.ecn"`
	QosAdvancedKeepClassAfterEncap                       bool          `json:"qos.advanced.keep_class_after_encap"`
	QosInterfaces                                        []string      `json:"qos.interfaces"`
	QuarantineKeepDBLogDays                              int64         `json:"quarantine.keep_db_log_days"`
	QuarantineKeepQuarantineDays                         int64         `json:"quarantine.keep_quarantine_days"`
	RedActivateProvFw                                    bool          `json:"red.activate_prov_fw"`
	RedAuthorization                                     bool          `json:"red.authorization"`
	RedCaSettingsCity                                    string        `json:"red.ca_settings.city"`
	RedCaSettingsCountry                                 string        `json:"red.ca_settings.country"`
	RedCaSettingsEmail                                   string        `json:"red.ca_settings.email"`
	RedCaSettingsOrganization                            string        `json:"red.ca_settings.organization"`
	RedClients                                           []interface{} `json:"red.clients"`
	RedDeauthTimeout                                     string        `json:"red.deauth_timeout"`
	RedOverlayFwEnabled                                  bool          `json:"red.overlay_fw_enabled"`
	RedRegistryCert                                      string        `json:"red.registry_cert"`
	RedRegistryID                                        string        `json:"red.registry_id"`
	RedRegistryKey                                       string        `json:"red.registry_key"`
	RedServerCert                                        string        `json:"red.server_cert"`
	RedServers                                           []interface{} `json:"red.servers"`
	RedStatus                                            bool          `json:"red.status"`
	RedTls12Only                                         bool          `json:"red.tls_1_2_only"`
	RemoteAccessAdvancedMsdns1                           string        `json:"remote_access.advanced.msdns1"`
	RemoteAccessAdvancedMsdns2                           string        `json:"remote_access.advanced.msdns2"`
	RemoteAccessAdvancedMsdomain                         string        `json:"remote_access.advanced.msdomain"`
	RemoteAccessAdvancedMswins1                          string        `json:"remote_access.advanced.mswins1"`
	RemoteAccessAdvancedMswins2                          string        `json:"remote_access.advanced.mswins2"`
	RemoteAccessCisco                                    string        `json:"remote_access.cisco"`
	RemoteAccessClientlessVpnDebug                       bool          `json:"remote_access.clientless_vpn.debug"`
	RemoteAccessClientlessVpnStatus                      bool          `json:"remote_access.clientless_vpn.status"`
	RemoteAccessL2Tp                                     string        `json:"remote_access.l2tp"`
	RemoteAccessPptpAaa                                  []string      `json:"remote_access.pptp.aaa"`
	RemoteAccessPptpAuthentication                       string        `json:"remote_access.pptp.authentication"`
	RemoteAccessPptpDebug                                bool          `json:"remote_access.pptp.debug"`
	RemoteAccessPptpEncryption                           string        `json:"remote_access.pptp.encryption"`
	RemoteAccessPptpIpAssignmentDhcp                     string        `json:"remote_access.pptp.ip_assignment_dhcp"`
	RemoteAccessPptpIpAssignmentDhcpInterface            string        `json:"remote_access.pptp.ip_assignment_dhcp_interface"`
	RemoteAccessPptpIpAssignmentMode                     string        `json:"remote_access.pptp.ip_assignment_mode"`
	RemoteAccessPptpIpAssignmentPool                     string        `json:"remote_access.pptp.ip_assignment_pool"`
	RemoteAccessPptpIphoneConnectionName                 string        `json:"remote_access.pptp.iphone_connection_name"`
	RemoteAccessPptpIphoneHostname                       string        `json:"remote_access.pptp.iphone_hostname"`
	RemoteAccessPptpIphoneStatus                         bool          `json:"remote_access.pptp.iphone_status"`
	RemoteAccessPptpMtu                                  int64         `json:"remote_access.pptp.mtu"`
	RemoteAccessPptpStatus                               bool          `json:"remote_access.pptp.status"`
	RemoteSyslogBuffer                                   int64         `json:"remote_syslog.buffer"`
	RemoteSyslogLogs                                     []interface{} `json:"remote_syslog.logs"`
	RemoteSyslogStatus                                   bool          `json:"remote_syslog.status"`
	RemoteSyslogTarget                                   []interface{} `json:"remote_syslog.target"`
	ReportingAccountingKeepdays                          int64         `json:"reporting.accounting_keepdays"`
	ReportingAccountingStatus                            bool          `json:"reporting.accounting_status"`
	ReportingAnonymizing                                 bool          `json:"reporting.anonymizing"`
	ReportingAppctrlKeepdays                             int64         `json:"reporting.appctrl_keepdays"`
	ReportingAppctrlStatus                               bool          `json:"reporting.appctrl_status"`
	ReportingAtpKeepdays                                 int64         `json:"reporting.atp_keepdays"`
	ReportingAtpReset                                    struct{}      `json:"reporting.atp_reset"`
	ReportingAtpStatus                                   bool          `json:"reporting.atp_status"`
	ReportingAuthenticationKeepdays                      int64         `json:"reporting.authentication_keepdays"`
	ReportingAuthenticationStatus                        bool          `json:"reporting.authentication_status"`
	ReportingCsvSeparator                                string        `json:"reporting.csv_separator"`
	ReportingEmailsecurityImport                         []interface{} `json:"reporting.emailsecurity_import"`
	ReportingEmailsecurityKeepdays                       int64         `json:"reporting.emailsecurity_keepdays"`
	ReportingEmailsecurityStatus                         bool          `json:"reporting.emailsecurity_status"`
	ReportingEnableVpnAccounting                         bool          `json:"reporting.enable_vpn_accounting"`
	ReportingHideAccountingips                           []interface{} `json:"reporting.hide_accountingips"`
	ReportingHideMailaddresses                           []interface{} `json:"reporting.hide_mailaddresses"`
	ReportingHideMaildomains                             []interface{} `json:"reporting.hide_maildomains"`
	ReportingHideNetsecips                               []interface{} `json:"reporting.hide_netsecips"`
	ReportingHideWebdomains                              []interface{} `json:"reporting.hide_webdomains"`
	ReportingIpsImport                                   []interface{} `json:"reporting.ips_import"`
	ReportingIpsKeepdays                                 int64         `json:"reporting.ips_keepdays"`
	ReportingIpsStatus                                   bool          `json:"reporting.ips_status"`
	ReportingPacketfilterImport                          []interface{} `json:"reporting.packetfilter_import"`
	ReportingPacketfilterKeepdays                        int64         `json:"reporting.packetfilter_keepdays"`
	ReportingPacketfilterStatus                          bool          `json:"reporting.packetfilter_status"`
	ReportingPassword1                                   string        `json:"reporting.password1"`
	ReportingPassword2                                   string        `json:"reporting.password2"`
	ReportingSandboxKeepdays                             int64         `json:"reporting.sandbox_keepdays"`
	ReportingUserlogFromLogs                             bool          `json:"reporting.userlog_from_logs"`
	ReportingVpnKeepdays                                 int64         `json:"reporting.vpn_keepdays"`
	ReportingVpnStatus                                   bool          `json:"reporting.vpn_status"`
	ReportingWafKeepdays                                 int64         `json:"reporting.waf_keepdays"`
	ReportingWafStatus                                   bool          `json:"reporting.waf_status"`
	ReportingWebsecurityDetail                           struct{}      `json:"reporting.websecurity_detail"`
	ReportingWebsecurityImport                           []interface{} `json:"reporting.websecurity_import"`
	ReportingWebsecurityKeepdays                         int64         `json:"reporting.websecurity_keepdays"`
	ReportingWebsecurityStatus                           bool          `json:"reporting.websecurity_status"`
	ReverseProxyAuaRefreshEnabled                        bool          `json:"reverse_proxy.aua_refresh_enabled"`
	ReverseProxyAuaRefreshInterval                       int64         `json:"reverse_proxy.aua_refresh_interval"`
	ReverseProxyBlacklistDnsrblZones                     []string      `json:"reverse_proxy.blacklist.dnsrbl_zones"`
	ReverseProxyBlacklistGeoipCodes                      []string      `json:"reverse_proxy.blacklist.geoip_codes"`
	ReverseProxyCookiesignkey                            string        `json:"reverse_proxy.cookiesignkey"`
	ReverseProxyCssdHostname                             string        `json:"reverse_proxy.cssd_hostname"`
	ReverseProxyCssdPort                                 struct{}      `json:"reverse_proxy.cssd_port"`
	ReverseProxyCustomThreatFiltersEnabled               bool          `json:"reverse_proxy.custom_threat_filters_enabled"`
	ReverseProxyFormhardeningSecret                      string        `json:"reverse_proxy.formhardening_secret"`
	ReverseProxyKeepalive                                bool          `json:"reverse_proxy.keepalive"`
	ReverseProxyManualmode                               bool          `json:"reverse_proxy.manualmode"`
	ReverseProxyMaxConnectionsPerChild                   struct{}      `json:"reverse_proxy.max_connections_per_child"`
	ReverseProxyMaxPreforkProcesses                      int64         `json:"reverse_proxy.max_prefork_processes"`
	ReverseProxyMaxProcesses                             int64         `json:"reverse_proxy.max_processes"`
	ReverseProxyMaxSessionFiles                          int64         `json:"reverse_proxy.max_session_files"`
	ReverseProxyMaxSpareProcesses                        int64         `json:"reverse_proxy.max_spare_processes"`
	ReverseProxyMaxSpareThreads                          int64         `json:"reverse_proxy.max_spare_threads"`
	ReverseProxyMaxThreadsPerProcess                     int64         `json:"reverse_proxy.max_threads_per_process"`
	ReverseProxyMinSpareProcesses                        int64         `json:"reverse_proxy.min_spare_processes"`
	ReverseProxyMinSpareThreads                          int64         `json:"reverse_proxy.min_spare_threads"`
	ReverseProxyMinTLS                                   string        `json:"reverse_proxy.min_tls"`
	ReverseProxyModsecurityBeta                          bool          `json:"reverse_proxy.modsecurity_beta"`
	ReverseProxyMpmMode                                  string        `json:"reverse_proxy.mpm_mode"`
	ReverseProxyPatternversion                           string        `json:"reverse_proxy.patternversion"`
	ReverseProxyPort                                     int64         `json:"reverse_proxy.port"`
	ReverseProxyProxyprotocol                            bool          `json:"reverse_proxy.proxyprotocol"`
	ReverseProxyRequestLineLimit                         struct{}      `json:"reverse_proxy.request_line_limit"`
	ReverseProxySlowhttpExceptions                       []interface{} `json:"reverse_proxy.slowhttp_exceptions"`
	ReverseProxySlowhttpRequestHeaderTimeoutBase         int64         `json:"reverse_proxy.slowhttp_request_header_timeout_base"`
	ReverseProxySlowhttpRequestHeaderTimeoutEnabled      bool          `json:"reverse_proxy.slowhttp_request_header_timeout_enabled"`
	ReverseProxySlowhttpRequestHeaderTimeoutMax          int64         `json:"reverse_proxy.slowhttp_request_header_timeout_max"`
	ReverseProxySlowhttpRequestHeaderTimeoutRate         int64         `json:"reverse_proxy.slowhttp_request_header_timeout_rate"`
	ReverseProxyStatus                                   bool          `json:"reverse_proxy.status"`
	ReverseProxyTraceEnabled                             bool          `json:"reverse_proxy.trace_enabled"`
	ReverseProxyUrlhardeningsignkey                      string        `json:"reverse_proxy.urlhardeningsignkey"`
	ReverseProxyWhatkilledus                             bool          `json:"reverse_proxy.whatkilledus"`
	RoutesPolicy                                         []interface{} `json:"routes.policy"`
	RoutesStatic                                         []string      `json:"routes.static"`
	RoutingBgpMaximumPaths                               struct{}      `json:"routing.bgp.maximum_paths"`
	RoutingBgpMaximumPathsIbgp                           struct{}      `json:"routing.bgp.maximum_paths_ibgp"`
	RoutingBgpMultipleAs                                 bool          `json:"routing.bgp.multiple_as"`
	RoutingBgpStatus                                     bool          `json:"routing.bgp.status"`
	RoutingBgpStrictMatch                                bool          `json:"routing.bgp.strict_match"`
	RoutingBgpSystems                                    []interface{} `json:"routing.bgp.systems"`
	RoutingOspfAbrType                                   string        `json:"routing.ospf.abr_type"`
	RoutingOspfAreas                                     []interface{} `json:"routing.ospf.areas"`
	RoutingOspfDefaultInformation                        string        `json:"routing.ospf.default_information"`
	RoutingOspfDefaultRouteMetric                        int64         `json:"routing.ospf.default_route_metric"`
	RoutingOspfRedistributeBgpMetric                     int64         `json:"routing.ospf.redistribute.bgp.metric"`
	RoutingOspfRedistributeBgpStatus                     bool          `json:"routing.ospf.redistribute.bgp.status"`
	RoutingOspfRedistributeConnectedMetric               int64         `json:"routing.ospf.redistribute.connected.metric"`
	RoutingOspfRedistributeConnectedStatus               bool          `json:"routing.ospf.redistribute.connected.status"`
	RoutingOspfRedistributeIpsecStatus                   bool          `json:"routing.ospf.redistribute.ipsec.status"`
	RoutingOspfRedistributeSslVpnStatus                  bool          `json:"routing.ospf.redistribute.ssl_vpn.status"`
	RoutingOspfRedistributeStaticMetric                  int64         `json:"routing.ospf.redistribute.static.metric"`
	RoutingOspfRedistributeStaticStatus                  bool          `json:"routing.ospf.redistribute.static.status"`
	RoutingOspfReferenceBandwidth                        struct{}      `json:"routing.ospf.reference_bandwidth"`
	RoutingOspfRouterID                                  string        `json:"routing.ospf.router_id"`
	RoutingOspfStatus                                    bool          `json:"routing.ospf.status"`
	RoutingQuaggaAllowedNetworks                         []interface{} `json:"routing.quagga.allowed_networks"`
	RoutingQuaggaEnablePassword                          string        `json:"routing.quagga.enable_password"`
	RoutingQuaggaLinkDetect                              bool          `json:"routing.quagga.link_detect"`
	RoutingQuaggaPassword                                string        `json:"routing.quagga.password"`
	SandboxReportdDebug                                  string        `json:"sandbox_reportd.debug"`
	SandboxReportdPollInterval                           int64         `json:"sandbox_reportd.poll_interval"`
	SandboxReportdRequestTimeout                         int64         `json:"sandbox_reportd.request_timeout"`
	SandboxReportdRetryTimes                             int64         `json:"sandbox_reportd.retry_times"`
	SandboxdBypassSandboxLimit                           int64         `json:"sandboxd.bypass_sandbox_limit"`
	SandboxdCacheExpire                                  int64         `json:"sandboxd.cache_expire"`
	SandboxdCertstore                                    string        `json:"sandboxd.certstore"`
	SandboxdClientTimeout                                int64         `json:"sandboxd.client_timeout"`
	SandboxdCloudPollInterval                            int64         `json:"sandboxd.cloud_poll_interval"`
	SandboxdCloudPollRequestMaximum                      int64         `json:"sandboxd.cloud_poll_request_maximum"`
	SandboxdCloudPollTimeout                             int64         `json:"sandboxd.cloud_poll_timeout"`
	SandboxdConnectTimeout                               int64         `json:"sandboxd.connect_timeout"`
	SandboxdDebug                                        struct{}      `json:"sandboxd.debug"`
	SandboxdDhparams2048                                 string        `json:"sandboxd.dhparams_2048"`
	SandboxdEdgeServerCertValidation                     bool          `json:"sandboxd.edge_server_cert_validation"`
	SandboxdEdgeServerHost                               string        `json:"sandboxd.edge_server_host"`
	SandboxdEdgeServerPort                               int64         `json:"sandboxd.edge_server_port"`
	SandboxdFiletypeSkiplist                             []interface{} `json:"sandboxd.filetype_skiplist"`
	SandboxdNumOfEventThreads                            int64         `json:"sandboxd.num_of_event_threads"`
	SandboxdNumOfWorkerThreads                           int64         `json:"sandboxd.num_of_worker_threads"`
	SandboxdResponseTimeout                              int64         `json:"sandboxd.response_timeout"`
	SandboxdRetryIntervals                               string        `json:"sandboxd.retry_intervals"`
	SandboxdSandboxEnabled                               bool          `json:"sandboxd.sandbox_enabled"`
	SandboxdSandboxdScoreThreshold                       int64         `json:"sandboxd.sandboxd_score_threshold"`
	SandboxdSbxVersion                                   int64         `json:"sandboxd.sbx_version"`
	SandboxdSqliteBusyTimeout                            int64         `json:"sandboxd.sqlite_busy_timeout"`
	SandboxdSslCertFile                                  string        `json:"sandboxd.ssl_cert_file"`
	SandboxdSslKeyFile                                   string        `json:"sandboxd.ssl_key_file"`
	SandboxdSslciphers                                   string        `json:"sandboxd.sslciphers"`
	SettingsAdminEmail                                   string        `json:"settings.admin_email"`
	SettingsBasicSetup                                   bool          `json:"settings.basic_setup"`
	SettingsCcMode                                       bool          `json:"settings.cc_mode"`
	SettingsCity                                         string        `json:"settings.city"`
	SettingsCountry                                      string        `json:"settings.country"`
	SettingsExtraSwap                                    struct{}      `json:"settings.extra_swap"`
	SettingsHostname                                     string        `json:"settings.hostname"`
	SettingsIcsaMode                                     bool          `json:"settings.icsa_mode"`
	SettingsOrganization                                 string        `json:"settings.organization"`
	SettingsPasswordComplexityMinDigits                  int64         `json:"settings.password_complexity.min_digits"`
	SettingsPasswordComplexityMinLength                  int64         `json:"settings.password_complexity.min_length"`
	SettingsPasswordComplexityMinLowerChars              int64         `json:"settings.password_complexity.min_lower_chars"`
	SettingsPasswordComplexityMinSpecialChars            int64         `json:"settings.password_complexity.min_special_chars"`
	SettingsPasswordComplexityMinUpperChars              int64         `json:"settings.password_complexity.min_upper_chars"`
	SettingsPasswordComplexityStatus                     bool          `json:"settings.password_complexity.status"`
	SettingsPopularity                                   string        `json:"settings.popularity"`
	SettingsRasUpdate                                    string        `json:"settings.ras_update"`
	SettingsSystemID                                     string        `json:"settings.system_id"`
	SettingsTimezone                                     string        `json:"settings.timezone"`
	SipAllowedNetworks                                   []string      `json:"sip.allowed_networks"`
	SipExpectMode                                        string        `json:"sip.expect_mode"`
	SipLogRelated                                        bool          `json:"sip.log_related"`
	SipServers                                           []string      `json:"sip.servers"`
	SipStatus                                            bool          `json:"sip.status"`
	SmsClientHostname                                    string        `json:"sms_client.hostname"`
	SmsClientName                                        string        `json:"sms_client.name"`
	SmsClientPassword                                    string        `json:"sms_client.password"`
	SmsClientPort                                        struct{}      `json:"sms_client.port"`
	SmsClientStatus                                      bool          `json:"sms_client.status"`
	SmsClientUsername                                    string        `json:"sms_client.username"`
	SMTPAuthAaa                                          []interface{} `json:"smtp.auth_aaa"`
	SMTPAuthStatus                                       bool          `json:"smtp.auth_status"`
	SMTPAvFooter                                         string        `json:"smtp.av_footer"`
	SMTPAvFooterStatus                                   bool          `json:"smtp.av_footer_status"`
	SMTPBatvSecret                                       string        `json:"smtp.batv_secret"`
	SMTPBlockerService                                   string        `json:"smtp.blocker_service"`
	SMTPCffAsMarker                                      string        `json:"smtp.cff_as_marker"`
	SMTPDkimDomains                                      []interface{} `json:"smtp.dkim_domains"`
	SMTPDkimPrivateKey                                   string        `json:"smtp.dkim_private_key"`
	SMTPDkimSelector                                     string        `json:"smtp.dkim_selector"`
	SMTPEnableOldExpressionFilter                        bool          `json:"smtp.enable_old_expression_filter"`
	SMTPEncryptionUtility                                string        `json:"smtp.encryption_utility"`
	SMTPExceptions                                       []interface{} `json:"smtp.exceptions"`
	SMTPFootersMode                                      string        `json:"smtp.footers_mode"`
	SMTPGlobalAsReject                                   string        `json:"smtp.global_as_reject"`
	SMTPGlobalAvReject                                   bool          `json:"smtp.global_av_reject"`
	SMTPGlobalProfile                                    string        `json:"smtp.global_profile"`
	SMTPHostBlacklist                                    []interface{} `json:"smtp.host_blacklist"`
	SMTPHostname                                         string        `json:"smtp.hostname"`
	SMTPMaxMessageSize                                   int64         `json:"smtp.max_message_size"`
	SMTPMode                                             string        `json:"smtp.mode"`
	SMTPParentProxyAuthPass                              string        `json:"smtp.parent_proxy_auth_pass"`
	SMTPParentProxyAuthStatus                            bool          `json:"smtp.parent_proxy_auth_status"`
	SMTPParentProxyAuthUser                              string        `json:"smtp.parent_proxy_auth_user"`
	SMTPParentProxyHost                                  string        `json:"smtp.parent_proxy_host"`
	SMTPParentProxyPort                                  int64         `json:"smtp.parent_proxy_port"`
	SMTPParentProxyStatus                                bool          `json:"smtp.parent_proxy_status"`
	SMTPPostmaster                                       string        `json:"smtp.postmaster"`
	SMTPProfiles                                         []interface{} `json:"smtp.profiles"`
	SMTPRecipientsMax                                    int64         `json:"smtp.recipients_max"`
	SMTPRelays                                           []interface{} `json:"smtp.relays"`
	SMTPScanOutgoingEmails                               bool          `json:"smtp.scan_outgoing_emails"`
	SMTPScannerPoolMaxPool                               int64         `json:"smtp.scanner_pool.max_pool"`
	SMTPScannerPoolThresholds                            []int64       `json:"smtp.scanner_pool.thresholds"`
	SMTPScannerTimeout                                   int64         `json:"smtp.scanner_timeout"`
	SMTPSmarthostAuth                                    bool          `json:"smtp.smarthost_auth"`
	SMTPSmarthostHostname                                string        `json:"smtp.smarthost_hostname"`
	SMTPSmarthostPass                                    string        `json:"smtp.smarthost_pass"`
	SMTPSmarthostPort                                    int64         `json:"smtp.smarthost_port"`
	SMTPSmarthostStatus                                  bool          `json:"smtp.smarthost_status"`
	SMTPSmarthostUser                                    string        `json:"smtp.smarthost_user"`
	SMTPSmtpAcceptMax                                    int64         `json:"smtp.smtp_accept_max"`
	SMTPSmtpAcceptPerConnectionMax                       int64         `json:"smtp.smtp_accept_per_connection_max"`
	SMTPSmtpAcceptPerHostMax                             int64         `json:"smtp.smtp_accept_per_host_max"`
	SMTPStatus                                           bool          `json:"smtp.status"`
	SMTPTlsAvoid                                         []interface{} `json:"smtp.tls_avoid"`
	SMTPTlsCert                                          string        `json:"smtp.tls_cert"`
	SMTPTlsRequire                                       []interface{} `json:"smtp.tls_require"`
	SMTPTlsRequireSenderDomains                          []interface{} `json:"smtp.tls_require_sender_domains"`
	SMTPTransparent                                      bool          `json:"smtp.transparent"`
	SMTPTransparentSkip                                  []interface{} `json:"smtp.transparent_skip"`
	SMTPTransparentSkipAutoPf                            bool          `json:"smtp.transparent_skip_auto_pf"`
	SMTPUpstreamHosts                                    []interface{} `json:"smtp.upstream_hosts"`
	SMTPUpstreamHostsOnly                                bool          `json:"smtp.upstream_hosts_only"`
	SnmpAllowedNetworks                                  []interface{} `json:"snmp.allowed_networks"`
	SnmpAuthPassword                                     string        `json:"snmp.auth_password"`
	SnmpAuthType                                         string        `json:"snmp.auth_type"`
	SnmpCommunity                                        string        `json:"snmp.community"`
	SnmpDeviceAdmin                                      string        `json:"snmp.device_admin"`
	SnmpDeviceLocation                                   string        `json:"snmp.device_location"`
	SnmpDeviceName                                       string        `json:"snmp.device_name"`
	SnmpEncryptPassword                                  string        `json:"snmp.encrypt_password"`
	SnmpEncryptType                                      string        `json:"snmp.encrypt_type"`
	SnmpStatus                                           bool          `json:"snmp.status"`
	SnmpTraps                                            []interface{} `json:"snmp.traps"`
	SnmpTrapsUseOldOids                                  bool          `json:"snmp.traps_use_old_oids"`
	SnmpUsername                                         string        `json:"snmp.username"`
	SnmpVersion                                          string        `json:"snmp.version"`
	SocksAaa                                             []string      `json:"socks.aaa"`
	SocksAllowedNetworks                                 []string      `json:"socks.allowed_networks"`
	SocksAuthentication                                  bool          `json:"socks.authentication"`
	SocksStatus                                          bool          `json:"socks.status"`
	SpxGlobalErrorNotificationTarget                     string        `json:"spx.global.error_notification_target"`
	SpxGlobalExpirySettingsAllowSecureReplyDays          int64         `json:"spx.global.expiry_settings.allow_secure_reply_days"`
	SpxGlobalExpirySettingsKeepDelayedMailDays           int64         `json:"spx.global.expiry_settings.keep_delayed_mail_days"`
	SpxGlobalExpirySettingsKeepUnusedPwdDays             int64         `json:"spx.global.expiry_settings.keep_unused_pwd_days"`
	SpxGlobalExpirySettingsRegistrationReminderDays      int64         `json:"spx.global.expiry_settings.registration_reminder_days"`
	SpxGlobalPasswordStrengthMinLength                   int64         `json:"spx.global.password_strength.min_length"`
	SpxGlobalPasswordStrengthRequireSpecChars            bool          `json:"spx.global.password_strength.require_spec_chars"`
	SpxGlobalPortalSettingsAllowedNetworks               []interface{} `json:"spx.global.portal_settings.allowed_networks"`
	SpxGlobalPortalSettingsHostname                      string        `json:"spx.global.portal_settings.hostname"`
	SpxGlobalPortalSettingsInterfaceAddress              string        `json:"spx.global.portal_settings.interface_address"`
	SpxGlobalPortalSettingsPort                          int64         `json:"spx.global.portal_settings.port"`
	SpxGlobalPoweredByLogo                               string        `json:"spx.global.powered_by_logo"`
	SpxGlobalSpxPriority                                 bool          `json:"spx.global.spx_priority"`
	SpxGlobalStatus                                      bool          `json:"spx.global.status"`
	SpxSpxAuthPassword                                   string        `json:"spx.spx_auth.password"`
	SpxSpxAuthPort                                       int64         `json:"spx.spx_auth.port"`
	SpxSpxAuthServer                                     string        `json:"spx.spx_auth.server"`
	SpxSpxAuthUrl                                        string        `json:"spx.spx_auth.url"`
	SpxTemplates                                         []string      `json:"spx.templates"`
	SSHAllowedNetworks                                   []string      `json:"ssh.allowed_networks"`
	SSHLoginKeys                                         []string      `json:"ssh.login_keys"`
	SSHPasswordAuth                                      bool          `json:"ssh.password_auth"`
	SSHPort                                              int64         `json:"ssh.port"`
	SSHPubkeyAuth                                        bool          `json:"ssh.pubkey_auth"`
	SSHRootKeys                                          []string      `json:"ssh.root_keys"`
	SSHRootLogin                                         string        `json:"ssh.root_login"`
	SSHStatus                                            bool          `json:"ssh.status"`
	SslVpnAuthenticationAlgorithm                        string        `json:"ssl_vpn.authentication_algorithm"`
	SslVpnCertificate                                    string        `json:"ssl_vpn.certificate"`
	SslVpnCompression                                    bool          `json:"ssl_vpn.compression"`
	SslVpnDatachannelKeyLifetime                         int64         `json:"ssl_vpn.datachannel_key_lifetime"`
	SslVpnDebug                                          bool          `json:"ssl_vpn.debug"`
	SslVpnDhKeySize                                      string        `json:"ssl_vpn.dh_key_size"`
	SslVpnDuplicateCn                                    bool          `json:"ssl_vpn.duplicate_cn"`
	SslVpnEncryptionAlgorithm                            string        `json:"ssl_vpn.encryption_algorithm"`
	SslVpnHostname                                       string        `json:"ssl_vpn.hostname"`
	SslVpnInterface                                      string        `json:"ssl_vpn.interface"`
	SslVpnInterfaceAddress                               string        `json:"ssl_vpn.interface_address"`
	SslVpnIpAssignmentPool                               string        `json:"ssl_vpn.ip_assignment_pool"`
	SslVpnPort                                           int64         `json:"ssl_vpn.port"`
	SslVpnProtocol                                       string        `json:"ssl_vpn.protocol"`
	SslVpnUserAuthOptional                               bool          `json:"ssl_vpn.user_auth_optional"`
	SupportAccessAccessID                                string        `json:"support_access.access_id"`
	SupportAccessApuServer                               string        `json:"support_access.apu_server"`
	SupportAccessLifetimeDuration                        string        `json:"support_access.lifetime_duration"`
	SupportAccessLifetimeEnd                             struct{}      `json:"support_access.lifetime_end"`
	SupportAccessSshKeys                                 []interface{} `json:"support_access.ssh_keys"`
	SupportAccessStatus                                  bool          `json:"support_access.status"`
	U2DcacheAllowedNetworks                              []interface{} `json:"u2dcache.allowed_networks"`
	U2DcachePort                                         int64         `json:"u2dcache.port"`
	U2DcacheStatus                                       bool          `json:"u2dcache.status"`
	Up2DateCacheHost                                     string        `json:"up2date.cache_host"`
	Up2DateCachePort                                     int64         `json:"up2date.cache_port"`
	Up2DateCacheStatus                                   bool          `json:"up2date.cache_status"`
	Up2DateCacheUseAcc                                   bool          `json:"up2date.cache_use_acc"`
	Up2DateParentProxyAuthPass                           string        `json:"up2date.parent_proxy_auth_pass"`
	Up2DateParentProxyAuthStatus                         bool          `json:"up2date.parent_proxy_auth_status"`
	Up2DateParentProxyAuthUser                           string        `json:"up2date.parent_proxy_auth_user"`
	Up2DateParentProxyHost                               string        `json:"up2date.parent_proxy_host"`
	Up2DateParentProxyPort                               int64         `json:"up2date.parent_proxy_port"`
	Up2DateParentProxyStatus                             bool          `json:"up2date.parent_proxy_status"`
	Up2DatePatternDownloadInterval                       struct{}      `json:"up2date.pattern_download_interval"`
	Up2DatePatternDownloadStatus                         bool          `json:"up2date.pattern_download_status"`
	Up2DateScheduledUp2Date                              []interface{} `json:"up2date.scheduled_up2date"`
	Up2DateServers                                       []string      `json:"up2date.servers"`
	Up2DateStatus                                        bool          `json:"up2date.status"`
	Up2DateSystemAutoinstallTime                         string        `json:"up2date.system_autoinstall_time"`
	Up2DateSystemDownloadInterval                        int64         `json:"up2date.system_download_interval"`
	Up2DateSystemDownloadStatus                          bool          `json:"up2date.system_download_status"`
	UplinkActions                                        []interface{} `json:"uplink.actions"`
	UplinkActive                                         string        `json:"uplink.active"`
	UplinkCondition                                      string        `json:"uplink.condition"`
	UplinkInterfaces                                     string        `json:"uplink.interfaces"`
	UplinkMonitoring                                     bool          `json:"uplink.monitoring"`
	UplinkPassive                                        string        `json:"uplink.passive"`
	UplinkPrimary                                        string        `json:"uplink.primary"`
	UplinkRules                                          []string      `json:"uplink.rules"`
	UplinkScheduler                                      string        `json:"uplink.scheduler"`
	UplinkStatus                                         bool          `json:"uplink.status"`
	WebadminAllowedNetworks                              []string      `json:"webadmin.allowed_networks"`
	WebadminCa                                           string        `json:"webadmin.ca"`
	WebadminCert                                         string        `json:"webadmin.cert"`
	WebadminDashboardRefresh                             string        `json:"webadmin.dashboard_refresh"`
	WebadminLanguage                                     string        `json:"webadmin.language"`
	WebadminLogAdminConnect                              bool          `json:"webadmin.log_admin_connect"`
	WebadminOfferWizard                                  bool          `json:"webadmin.offer_wizard"`
	WebadminPort                                         int64         `json:"webadmin.port"`
	WebadminRestAPI                                      bool          `json:"webadmin.rest_api"`
	WebadminTermsOfUseStatus                             bool          `json:"webadmin.terms_of_use.status"`
	WebadminTermsOfUseText                               string        `json:"webadmin.terms_of_use.text"`
	WebadminTimeout                                      int64         `json:"webadmin.timeout"`
	WebadminTimeoutOnDashboard                           bool          `json:"webadmin.timeout_on_dashboard"`
	WebadminTlsCiphers                                   string        `json:"webadmin.tls_ciphers"`
	WebadminTlsProtocols                                 string        `json:"webadmin.tls_protocols"`
}

var defsNodes = map[string]sophos.RestObject{}

// RestObjects implements the sophos.Node interface and returns a map of Nodes's Objects
func (Nodes) RestObjects() map[string]sophos.RestObject {
	return defsNodes
}

// GetPath implements sophos.RestGetter
func (*Nodes) GetPath() string { return "/api/nodes" }

// RefRequired implements sophos.RestGetter
func (*Nodes) RefRequired() (string, bool) { return "", false }

var defNodes = &sophos.Definition{Description: "Nodes", Name: "Nodes", Link: "/api/definitions/nodes", Swag: map[string]sophos.MethodMap{"/nodes/{id}": {"get": sophos.MethodDescriptions{Description: "Returns one specific node", Parameters: []sophos.Parameter{{Name: "id", In: "path", Description: "id of the node", Type: "string", Required: true}}, Tags: []string{"Single Nodes"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "Bad update request, checkout the error message for details"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden to change/read the node (rights/role not sufficient)"}, 404: {Description: "Node not found"}}}, "put": sophos.MethodDescriptions{Description: "Update one specific node", Parameters: []sophos.Parameter{{Name: "id", In: "path", Description: "id of the node", Type: "string", Required: true}, {Name: "body", In: "body", Description: "New value of the node", Type: "", Required: true}}, Tags: []string{"Single Nodes"}, Responses: map[int]struct{ Description string }{400: {Description: "Bad update request, checkout the error message for details"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden to change/read the node (rights/role not sufficient)"}, 404: {Description: "Node not found"}, 204: {Description: "OK"}}}}, "/nodes/": {"get": sophos.MethodDescriptions{Description: "Returns all available nodes", Parameters: []sophos.Parameter(nil), Tags: []string{"Multiple Nodes"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden to change/read the node (rights/role not sufficient)"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Change multiple nodes at once", Parameters: []sophos.Parameter{{Name: "body", In: "body", Description: "Subset or complete result of GET /nodes", Type: "", Required: true}}, Tags: []string{"Multiple Nodes"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden to change/read the node (rights/role not sufficient)"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}}}

// Definition returns the /api/definitions struct of Nodes
func (Nodes) Definition() sophos.Definition { return *defNodes }

// ApiRoutes returns all known Nodes Paths
func (Nodes) ApiRoutes() []string {
	return []string{}
}

// References returns the Nodes's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Nodes) References() []string {
	return []string{}
}

// Status is a generated struct representing the Sophos Status Endpoint
// GET /api/nodes/status
type Status struct {
	StatusVersion StatusVersion `json:"Status_status"`
}

var defsStatus = map[string]sophos.RestObject{
	"StatusVersion": &StatusVersion{},
}

// RestObjects implements the sophos.Node interface and returns a map of Status's Objects
func (Status) RestObjects() map[string]sophos.RestObject {
	return defsStatus
}

// GetPath implements sophos.RestGetter
func (*Status) GetPath() string { return "/api/nodes/status" }

// RefRequired implements sophos.RestGetter
func (*Status) RefRequired() (string, bool) { return "", false }

var defStatus = &sophos.Definition{Description: "Status", Name: "Status", Link: "/api/definitions/status", Swag: map[string]sophos.MethodMap{"/status/version": {"get": sophos.MethodDescriptions{Description: "Returns some version numbers of the UTM software", Parameters: []sophos.Parameter(nil), Tags: []string{"Status"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Status
func (Status) Definition() sophos.Definition { return *defStatus }

// ApiRoutes returns all known Status Paths
func (Status) ApiRoutes() []string {
	return []string{
		"/api/status/version",
	}
}

// References returns the Status's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Status) References() []string {
	return []string{}
}

// StatusVersion is an Sophos Endpoint subType and implements sophos.RestObject
type StatusVersion struct {
	Restd string `json:"restd"`
	Utm   string `json:"utm"`
}

// GetPath implements sophos.RestObject and returns the StatusVersion GET path
// Returns some version numbers of the UTM software
func (*StatusVersion) GetPath() string { return "/api/status/version" }

// RefRequired implements sophos.RestObject
func (*StatusVersion) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the StatusVersion DELETE path
func (*StatusVersion) DeletePath(ref string) string {
	return fmt.Sprintf("/api", ref)
}

// PatchPath implements sophos.RestObject and returns the StatusVersion PATCH path
func (*StatusVersion) PatchPath(ref string) string {
	return fmt.Sprintf("/api", ref)
}

// PostPath implements sophos.RestObject and returns the StatusVersion POST path
func (*StatusVersion) PostPath() string {
	return "/api"
}

// PutPath implements sophos.RestObject and returns the StatusVersion PUT path
func (*StatusVersion) PutPath(ref string) string {
	return fmt.Sprintf("/api", ref)
}

// Aaa is a generated struct representing the Sophos Aaa Endpoint
// GET /api/nodes/aaa
type Aaa struct {
	AaaGroup AaaGroup `json:"aaa_group"`
	AaaUser  AaaUser  `json:"aaa_user"`
}

var defsAaa = map[string]sophos.RestObject{
	"AaaGroup": &AaaGroup{},
	"AaaUser":  &AaaUser{},
}

// RestObjects implements the sophos.Node interface and returns a map of Aaa's Objects
func (Aaa) RestObjects() map[string]sophos.RestObject {
	return defsAaa
}

// GetPath implements sophos.RestGetter
func (*Aaa) GetPath() string { return "/api/nodes/aaa" }

// RefRequired implements sophos.RestGetter
func (*Aaa) RefRequired() (string, bool) { return "", false }

var defAaa = &sophos.Definition{Description: "aaa", Name: "aaa", Link: "/api/definitions/aaa", Swag: map[string]sophos.MethodMap{"/objects/aaa/user/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available user types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aaa/user"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object user types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aaa/user that will be changes", Type: "", Required: true}}, Tags: []string{"aaa/user"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object user", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aaa/user that will be updated", Type: "", Required: true}}, Tags: []string{"aaa/user"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object user", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"aaa/user"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}}, "/objects/aaa/user/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aaa/user"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/aaa/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available aaa/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"aaa/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new aaa/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aaa/group that will be created", Type: "", Required: true}}, Tags: []string{"aaa/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/aaa/group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aaa/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aaa/group that will be changes", Type: "", Required: true}}, Tags: []string{"aaa/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aaa/group that will be updated", Type: "", Required: true}}, Tags: []string{"aaa/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"aaa/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/aaa/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aaa/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/aaa/user/": {"get": sophos.MethodDescriptions{Description: "Returns all available aaa/user objects", Parameters: []sophos.Parameter(nil), Tags: []string{"aaa/user"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new aaa/user object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aaa/user that will be created", Type: "", Required: true}}, Tags: []string{"aaa/user"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}}}

// Definition returns the /api/definitions struct of Aaa
func (Aaa) Definition() sophos.Definition { return *defAaa }

// ApiRoutes returns all known Aaa Paths
func (Aaa) ApiRoutes() []string {
	return []string{
		"/api/objects/aaa/group/",
		"/api/objects/aaa/group/{ref}",
		"/api/objects/aaa/group/{ref}/usedby",
		"/api/objects/aaa/user/",
		"/api/objects/aaa/user/{ref}",
		"/api/objects/aaa/user/{ref}/usedby",
	}
}

// References returns the Aaa's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Aaa) References() []string {
	return []string{
		"REF_AaaGroup",
		"REF_AaaUser",
	}
}

// AaaGroup is an Sophos Endpoint subType and implements sophos.RestObject
type AaaGroups []AaaGroup
type AaaGroup struct {
	Locked               string        `json:"_locked"`
	Reference            string        `json:"_ref"`
	_type                string        `json:"_type"`
	AdirectoryGroups     []interface{} `json:"adirectory_groups"`
	AdirectoryGroupsSids struct{}      `json:"adirectory_groups_sids"`
	BackendMatch         string        `json:"backend_match"`
	Comment              string        `json:"comment"`
	Dynamic              string        `json:"dynamic"`
	EdirectoryGroups     []interface{} `json:"edirectory_groups"`
	IpsecDn              string        `json:"ipsec_dn"`
	LdapAttribute        string        `json:"ldap_attribute"`
	LdapAttributeValue   string        `json:"ldap_attribute_value"`
	Members              []string      `json:"members"`
	Name                 string        `json:"name"`
	Network              string        `json:"network"`
	RadiusGroups         []interface{} `json:"radius_groups"`
	TacacsGroups         []interface{} `json:"tacacs_groups"`
}

// GetPath implements sophos.RestObject and returns the AaaGroups GET path
// Returns all available aaa/group objects
func (*AaaGroups) GetPath() string { return "/api/objects/aaa/group/" }

// RefRequired implements sophos.RestObject
func (*AaaGroups) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the AaaGroups GET path
// Returns all available group types
func (a *AaaGroup) GetPath() string { return fmt.Sprintf("/api/objects/aaa/group/%s", a.Reference) }

// RefRequired implements sophos.RestObject
func (a *AaaGroup) RefRequired() (string, bool) { return a.Reference, true }

// DeletePath implements sophos.RestObject and returns the AaaGroup DELETE path
// Creates or updates the complete object group
func (*AaaGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/aaa/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AaaGroup PATCH path
// Changes to parts of the object group types
func (*AaaGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/aaa/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AaaGroup POST path
// Create a new aaa/group object
func (*AaaGroup) PostPath() string {
	return "/api/objects/aaa/group/"
}

// PutPath implements sophos.RestObject and returns the AaaGroup PUT path
// Creates or updates the complete object group
func (*AaaGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/aaa/group/%s", ref)
}

// Type implements sophos.Object
func (a *AaaGroup) GetType() string { return a._type }

// AaaUser is an Sophos Endpoint subType and implements sophos.RestObject
type AaaUsers []AaaUser
type AaaUser struct {
	Locked           string        `json:"_locked"`
	Reference        string        `json:"_ref"`
	_type            string        `json:"_type"`
	AccManaged       bool          `json:"acc_managed"`
	AllowedNetworks  []string      `json:"allowed_networks"`
	Authentication   string        `json:"authentication"`
	BackendUpdate    bool          `json:"backend_update"`
	Clearpass        string        `json:"clearpass"`
	Comment          string        `json:"comment"`
	EmailPrimary     string        `json:"email_primary"`
	EmailSecondary   []interface{} `json:"email_secondary"`
	Enabled          bool          `json:"enabled"`
	LastauthBackend  string        `json:"lastauth_backend"`
	LastauthFacility string        `json:"lastauth_facility"`
	LastauthTime     int64         `json:"lastauth_time"`
	Loc              string        `json:"loc"`
	Md4hash          string        `json:"md4hash"`
	Name             string        `json:"name"`
	Network          string        `json:"network"`
	Pop3Accounts     []interface{} `json:"pop3_accounts"`
	RasIP            string        `json:"ras_ip"`
	RasOnline        bool          `json:"ras_online"`
	Realname         string        `json:"realname"`
	SenderBlacklist  []interface{} `json:"sender_blacklist"`
	SenderWhitelist  []interface{} `json:"sender_whitelist"`
	Status           bool          `json:"status"`
	UseRasIP         bool          `json:"use_ras_ip"`
	UserPreferences  string        `json:"user_preferences"`
	X509Cert         string        `json:"x509_cert"`
	X509CertGost     string        `json:"x509_cert_gost"`
}

// GetPath implements sophos.RestObject and returns the AaaUser GET path
// Returns all available aaa/user objects
func (*AaaUser) GetPath() string { return "/api/objects/aaa/user/" }

// RefRequired implements sophos.RestObject
func (*AaaUser) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AaaUser DELETE path
// Creates or updates the complete object user
func (*AaaUser) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/aaa/user/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AaaUser PATCH path
// Changes to parts of the object user types
func (*AaaUser) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/aaa/user/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AaaUser POST path
// Create a new aaa/user object
func (*AaaUser) PostPath() string {
	return "/api/objects/aaa/user/"
}

// PutPath implements sophos.RestObject and returns the AaaUser PUT path
// Creates or updates the complete object user
func (*AaaUser) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/aaa/user/%s", ref)
}

// AmazonVpc is a generated struct representing the Sophos AmazonVpc Endpoint
// GET /api/nodes/amazon_vpc
type AmazonVpc struct {
	AutoPfrule  int64    `json:"auto_pfrule"`
	Connections []string `json:"connections"`
	Networks    []string `json:"networks"`
	Status      int64    `json:"status"`
}

var defsAmazonVpc = map[string]sophos.RestObject{
	"AmazonVpcTunnel":     &AmazonVpcTunnel{},
	"AmazonVpcGroup":      &AmazonVpcGroup{},
	"AmazonVpcConnection": &AmazonVpcConnection{},
}

// RestObjects implements the sophos.Node interface and returns a map of AmazonVpc's Objects
func (AmazonVpc) RestObjects() map[string]sophos.RestObject {
	return defsAmazonVpc
}

// GetPath implements sophos.RestGetter
func (*AmazonVpc) GetPath() string { return "/api/nodes/amazon_vpc" }

// RefRequired implements sophos.RestGetter
func (*AmazonVpc) RefRequired() (string, bool) { return "", false }

var defAmazonVpc = &sophos.Definition{Description: "amazon_vpc", Name: "amazon_vpc", Link: "/api/definitions/amazon_vpc", Swag: map[string]sophos.MethodMap{"/objects/amazon_vpc/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"amazon_vpc/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/amazon_vpc/tunnel/": {"get": sophos.MethodDescriptions{Description: "Returns all available amazon_vpc/tunnel objects", Parameters: []sophos.Parameter(nil), Tags: []string{"amazon_vpc/tunnel"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new amazon_vpc/tunnel object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "amazon_vpc/tunnel that will be created", Type: "", Required: true}}, Tags: []string{"amazon_vpc/tunnel"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/amazon_vpc/tunnel/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"amazon_vpc/tunnel"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/amazon_vpc/connection/": {"get": sophos.MethodDescriptions{Description: "Returns all available amazon_vpc/connection objects", Parameters: []sophos.Parameter(nil), Tags: []string{"amazon_vpc/connection"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new amazon_vpc/connection object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "amazon_vpc/connection that will be created", Type: "", Required: true}}, Tags: []string{"amazon_vpc/connection"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/amazon_vpc/connection/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"amazon_vpc/connection"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "amazon_vpc/connection that will be changes", Type: "", Required: true}}, Tags: []string{"amazon_vpc/connection"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "amazon_vpc/connection that will be updated", Type: "", Required: true}}, Tags: []string{"amazon_vpc/connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"amazon_vpc/connection"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/amazon_vpc/connection/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"amazon_vpc/connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/amazon_vpc/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available amazon_vpc/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"amazon_vpc/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new amazon_vpc/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "amazon_vpc/group that will be created", Type: "", Required: true}}, Tags: []string{"amazon_vpc/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/amazon_vpc/group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"amazon_vpc/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "amazon_vpc/group that will be changes", Type: "", Required: true}}, Tags: []string{"amazon_vpc/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "amazon_vpc/group that will be updated", Type: "", Required: true}}, Tags: []string{"amazon_vpc/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"amazon_vpc/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/amazon_vpc/tunnel/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object tunnel", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"amazon_vpc/tunnel"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available tunnel types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"amazon_vpc/tunnel"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object tunnel types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "amazon_vpc/tunnel that will be changes", Type: "", Required: true}}, Tags: []string{"amazon_vpc/tunnel"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object tunnel", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "amazon_vpc/tunnel that will be updated", Type: "", Required: true}}, Tags: []string{"amazon_vpc/tunnel"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}}}

// Definition returns the /api/definitions struct of AmazonVpc
func (AmazonVpc) Definition() sophos.Definition { return *defAmazonVpc }

// ApiRoutes returns all known AmazonVpc Paths
func (AmazonVpc) ApiRoutes() []string {
	return []string{
		"/api/objects/amazon_vpc/connection/",
		"/api/objects/amazon_vpc/connection/{ref}",
		"/api/objects/amazon_vpc/connection/{ref}/usedby",
		"/api/objects/amazon_vpc/group/",
		"/api/objects/amazon_vpc/group/{ref}",
		"/api/objects/amazon_vpc/group/{ref}/usedby",
		"/api/objects/amazon_vpc/tunnel/",
		"/api/objects/amazon_vpc/tunnel/{ref}",
		"/api/objects/amazon_vpc/tunnel/{ref}/usedby",
	}
}

// References returns the AmazonVpc's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (AmazonVpc) References() []string {
	return []string{
		"REF_AmazonVpcConnection",
		"REF_AmazonVpcGroup",
		"REF_AmazonVpcTunnel",
	}
}

// AmazonVpcTunnel is an Sophos Endpoint subType and implements sophos.RestObject
type AmazonVpcTunnels []AmazonVpcTunnel
type AmazonVpcTunnel struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Address   string `json:"address"`
	Bgp       string `json:"bgp"`
	Comment   string `json:"comment"`
	Ipsec     string `json:"ipsec"`
	Name      string `json:"name"`
	Netmask   int64  `json:"netmask"`
}

// GetPath implements sophos.RestObject and returns the AmazonVpcTunnel GET path
// Returns all available amazon_vpc/tunnel objects
func (*AmazonVpcTunnel) GetPath() string { return "/api/objects/amazon_vpc/tunnel/" }

// RefRequired implements sophos.RestObject
func (*AmazonVpcTunnel) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AmazonVpcTunnel DELETE path
// Creates or updates the complete object tunnel
func (*AmazonVpcTunnel) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/amazon_vpc/tunnel/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AmazonVpcTunnel PATCH path
// Changes to parts of the object tunnel types
func (*AmazonVpcTunnel) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/amazon_vpc/tunnel/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AmazonVpcTunnel POST path
// Create a new amazon_vpc/tunnel object
func (*AmazonVpcTunnel) PostPath() string {
	return "/api/objects/amazon_vpc/tunnel/"
}

// PutPath implements sophos.RestObject and returns the AmazonVpcTunnel PUT path
// Creates or updates the complete object tunnel
func (*AmazonVpcTunnel) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/amazon_vpc/tunnel/%s", ref)
}

// AmazonVpcGroup is an Sophos Endpoint subType and implements sophos.RestObject
type AmazonVpcGroup []interface{}

// GetPath implements sophos.RestObject and returns the AmazonVpcGroup GET path
// Returns all available amazon_vpc/group objects
func (*AmazonVpcGroup) GetPath() string { return "/api/objects/amazon_vpc/group/" }

// RefRequired implements sophos.RestObject
func (*AmazonVpcGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AmazonVpcGroup DELETE path
// Creates or updates the complete object group
func (*AmazonVpcGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/amazon_vpc/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AmazonVpcGroup PATCH path
// Changes to parts of the object group types
func (*AmazonVpcGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/amazon_vpc/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AmazonVpcGroup POST path
// Create a new amazon_vpc/group object
func (*AmazonVpcGroup) PostPath() string {
	return "/api/objects/amazon_vpc/group/"
}

// PutPath implements sophos.RestObject and returns the AmazonVpcGroup PUT path
// Creates or updates the complete object group
func (*AmazonVpcGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/amazon_vpc/group/%s", ref)
}

// AmazonVpcConnection is an Sophos Endpoint subType and implements sophos.RestObject
type AmazonVpcConnections []AmazonVpcConnection
type AmazonVpcConnection struct {
	Locked     string   `json:"_locked"`
	Reference  string   `json:"_ref"`
	_type      string   `json:"_type"`
	Comment    string   `json:"comment"`
	Dev        string   `json:"dev"`
	ID         string   `json:"id"`
	Name       string   `json:"name"`
	Region     string   `json:"region"`
	Status     bool     `json:"status"`
	Tunnel     []string `json:"tunnel"`
	VpcGateway string   `json:"vpc_gateway"`
	VpcID      string   `json:"vpc_id"`
	VpcNetmask int64    `json:"vpc_netmask"`
	VpcNetwork string   `json:"vpc_network"`
}

// GetPath implements sophos.RestObject and returns the AmazonVpcConnection GET path
// Returns all available amazon_vpc/connection objects
func (*AmazonVpcConnection) GetPath() string { return "/api/objects/amazon_vpc/connection/" }

// RefRequired implements sophos.RestObject
func (*AmazonVpcConnection) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AmazonVpcConnection DELETE path
// Creates or updates the complete object connection
func (*AmazonVpcConnection) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/amazon_vpc/connection/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AmazonVpcConnection PATCH path
// Changes to parts of the object connection types
func (*AmazonVpcConnection) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/amazon_vpc/connection/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AmazonVpcConnection POST path
// Create a new amazon_vpc/connection object
func (*AmazonVpcConnection) PostPath() string {
	return "/api/objects/amazon_vpc/connection/"
}

// PutPath implements sophos.RestObject and returns the AmazonVpcConnection PUT path
// Creates or updates the complete object connection
func (*AmazonVpcConnection) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/amazon_vpc/connection/%s", ref)
}

// ApplicationControl is a generated struct representing the Sophos ApplicationControl Endpoint
// GET /api/nodes/application_control
type ApplicationControl struct {
	ApplicationControlGroup ApplicationControlGroup `json:"application_control_group"`
	ApplicationControlRule  ApplicationControlRule  `json:"application_control_rule"`
}

var defsApplicationControl = map[string]sophos.RestObject{
	"ApplicationControlGroup": &ApplicationControlGroup{},
	"ApplicationControlRule":  &ApplicationControlRule{},
}

// RestObjects implements the sophos.Node interface and returns a map of ApplicationControl's Objects
func (ApplicationControl) RestObjects() map[string]sophos.RestObject {
	return defsApplicationControl
}

// GetPath implements sophos.RestGetter
func (*ApplicationControl) GetPath() string { return "/api/nodes/application_control" }

// RefRequired implements sophos.RestGetter
func (*ApplicationControl) RefRequired() (string, bool) { return "", false }

var defApplicationControl = &sophos.Definition{Description: "application_control", Name: "application_control", Link: "/api/definitions/application_control", Swag: map[string]sophos.MethodMap{"/objects/application_control/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"application_control/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/application_control/rule/": {"get": sophos.MethodDescriptions{Description: "Returns all available application_control/rule objects", Parameters: []sophos.Parameter(nil), Tags: []string{"application_control/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new application_control/rule object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "application_control/rule that will be created", Type: "", Required: true}}, Tags: []string{"application_control/rule"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/application_control/rule/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"application_control/rule"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"application_control/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "application_control/rule that will be changes", Type: "", Required: true}}, Tags: []string{"application_control/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "application_control/rule that will be updated", Type: "", Required: true}}, Tags: []string{"application_control/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/application_control/rule/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"application_control/rule"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/application_control/group/": {"post": sophos.MethodDescriptions{Description: "Create a new application_control/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "application_control/group that will be created", Type: "", Required: true}}, Tags: []string{"application_control/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available application_control/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"application_control/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/application_control/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"application_control/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"application_control/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "application_control/group that will be changes", Type: "", Required: true}}, Tags: []string{"application_control/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "application_control/group that will be updated", Type: "", Required: true}}, Tags: []string{"application_control/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of ApplicationControl
func (ApplicationControl) Definition() sophos.Definition { return *defApplicationControl }

// ApiRoutes returns all known ApplicationControl Paths
func (ApplicationControl) ApiRoutes() []string {
	return []string{
		"/api/objects/application_control/group/",
		"/api/objects/application_control/group/{ref}",
		"/api/objects/application_control/group/{ref}/usedby",
		"/api/objects/application_control/rule/",
		"/api/objects/application_control/rule/{ref}",
		"/api/objects/application_control/rule/{ref}/usedby",
	}
}

// References returns the ApplicationControl's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (ApplicationControl) References() []string {
	return []string{
		"REF_ApplicationControlGroup",
		"REF_ApplicationControlRule",
	}
}

// ApplicationControlGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ApplicationControlGroup []interface{}

// GetPath implements sophos.RestObject and returns the ApplicationControlGroup GET path
// Returns all available application_control/group objects
func (*ApplicationControlGroup) GetPath() string { return "/api/objects/application_control/group/" }

// RefRequired implements sophos.RestObject
func (*ApplicationControlGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ApplicationControlGroup DELETE path
// Creates or updates the complete object group
func (*ApplicationControlGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/application_control/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ApplicationControlGroup PATCH path
// Changes to parts of the object group types
func (*ApplicationControlGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/application_control/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ApplicationControlGroup POST path
// Create a new application_control/group object
func (*ApplicationControlGroup) PostPath() string {
	return "/api/objects/application_control/group/"
}

// PutPath implements sophos.RestObject and returns the ApplicationControlGroup PUT path
// Creates or updates the complete object group
func (*ApplicationControlGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/application_control/group/%s", ref)
}

// ApplicationControlRule is an Sophos Endpoint subType and implements sophos.RestObject
type ApplicationControlRules []ApplicationControlRule
type ApplicationControlRule struct {
	Locked                  string        `json:"_locked"`
	Reference               string        `json:"_ref"`
	_type                   string        `json:"_type"`
	Action                  string        `json:"action"`
	Applications            []string      `json:"applications"`
	Comment                 string        `json:"comment"`
	DestinationNetworks     []string      `json:"destination_networks"`
	Group                   string        `json:"group"`
	GroupFilterProductivity int64         `json:"group_filter_productivity"`
	GroupFilterRisk         int64         `json:"group_filter_risk"`
	Groups                  []interface{} `json:"groups"`
	Log                     bool          `json:"log"`
	Name                    string        `json:"name"`
	SourceNetworks          []string      `json:"source_networks"`
	Status                  bool          `json:"status"`
}

// GetPath implements sophos.RestObject and returns the ApplicationControlRules GET path
// Returns all available application_control/rule objects
func (*ApplicationControlRules) GetPath() string { return "/api/objects/application_control/rule/" }

// RefRequired implements sophos.RestObject
func (*ApplicationControlRules) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ApplicationControlRules GET path
// Returns all available rule types
func (a *ApplicationControlRule) GetPath() string {
	return fmt.Sprintf("/api/objects/application_control/rule/%s", a.Reference)
}

// RefRequired implements sophos.RestObject
func (a *ApplicationControlRule) RefRequired() (string, bool) { return a.Reference, true }

// DeletePath implements sophos.RestObject and returns the ApplicationControlRule DELETE path
// Creates or updates the complete object rule
func (*ApplicationControlRule) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/application_control/rule/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ApplicationControlRule PATCH path
// Changes to parts of the object rule types
func (*ApplicationControlRule) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/application_control/rule/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ApplicationControlRule POST path
// Create a new application_control/rule object
func (*ApplicationControlRule) PostPath() string {
	return "/api/objects/application_control/rule/"
}

// PutPath implements sophos.RestObject and returns the ApplicationControlRule PUT path
// Creates or updates the complete object rule
func (*ApplicationControlRule) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/application_control/rule/%s", ref)
}

// Type implements sophos.Object
func (a *ApplicationControlRule) GetType() string { return a._type }

// Authentication is a generated struct representing the Sophos Authentication Endpoint
// GET /api/nodes/authentication
type Authentication struct {
	AuthenticationLdap       AuthenticationLdap       `json:"authentication_ldap"`
	AuthenticationAdirectory AuthenticationAdirectory `json:"authentication_adirectory"`
	AuthenticationGroup      AuthenticationGroup      `json:"authentication_group"`
	AuthenticationOtpToken   AuthenticationOtpToken   `json:"authentication_otp_token"`
	AuthenticationRadius     AuthenticationRadius     `json:"authentication_radius"`
	AuthenticationTacacs     AuthenticationTacacs     `json:"authentication_tacacs"`
	AuthenticationEdirectory AuthenticationEdirectory `json:"authentication_edirectory"`
}

var defsAuthentication = map[string]sophos.RestObject{
	"AuthenticationLdap":       &AuthenticationLdap{},
	"AuthenticationAdirectory": &AuthenticationAdirectory{},
	"AuthenticationGroup":      &AuthenticationGroup{},
	"AuthenticationOtpToken":   &AuthenticationOtpToken{},
	"AuthenticationRadius":     &AuthenticationRadius{},
	"AuthenticationTacacs":     &AuthenticationTacacs{},
	"AuthenticationEdirectory": &AuthenticationEdirectory{},
}

// RestObjects implements the sophos.Node interface and returns a map of Authentication's Objects
func (Authentication) RestObjects() map[string]sophos.RestObject {
	return defsAuthentication
}

// GetPath implements sophos.RestGetter
func (*Authentication) GetPath() string { return "/api/nodes/authentication" }

// RefRequired implements sophos.RestGetter
func (*Authentication) RefRequired() (string, bool) { return "", false }

var defAuthentication = &sophos.Definition{Description: "authentication", Name: "authentication", Link: "/api/definitions/authentication", Swag: map[string]sophos.MethodMap{"/objects/authentication/adirectory/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object adirectory", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"authentication/adirectory"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available adirectory types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/adirectory"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object adirectory types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/adirectory that will be changes", Type: "", Required: true}}, Tags: []string{"authentication/adirectory"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object adirectory", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/adirectory that will be updated", Type: "", Required: true}}, Tags: []string{"authentication/adirectory"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/authentication/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available authentication/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"authentication/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new authentication/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/group that will be created", Type: "", Required: true}}, Tags: []string{"authentication/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/group/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/group that will be changes", Type: "", Required: true}}, Tags: []string{"authentication/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/group that will be updated", Type: "", Required: true}}, Tags: []string{"authentication/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"authentication/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/authentication/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/ldap/": {"get": sophos.MethodDescriptions{Description: "Returns all available authentication/ldap objects", Parameters: []sophos.Parameter(nil), Tags: []string{"authentication/ldap"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new authentication/ldap object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/ldap that will be created", Type: "", Required: true}}, Tags: []string{"authentication/ldap"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/otp_token/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object otp_token", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"authentication/otp_token"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available otp_token types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/otp_token"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object otp_token types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/otp_token that will be changes", Type: "", Required: true}}, Tags: []string{"authentication/otp_token"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object otp_token", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/otp_token that will be updated", Type: "", Required: true}}, Tags: []string{"authentication/otp_token"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/authentication/radius/": {"get": sophos.MethodDescriptions{Description: "Returns all available authentication/radius objects", Parameters: []sophos.Parameter(nil), Tags: []string{"authentication/radius"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new authentication/radius object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/radius that will be created", Type: "", Required: true}}, Tags: []string{"authentication/radius"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/tacacs/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object tacacs", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"authentication/tacacs"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available tacacs types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/tacacs"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object tacacs types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/tacacs that will be changes", Type: "", Required: true}}, Tags: []string{"authentication/tacacs"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object tacacs", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/tacacs that will be updated", Type: "", Required: true}}, Tags: []string{"authentication/tacacs"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/authentication/adirectory/": {"get": sophos.MethodDescriptions{Description: "Returns all available authentication/adirectory objects", Parameters: []sophos.Parameter(nil), Tags: []string{"authentication/adirectory"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new authentication/adirectory object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/adirectory that will be created", Type: "", Required: true}}, Tags: []string{"authentication/adirectory"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/adirectory/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/adirectory"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/edirectory/": {"get": sophos.MethodDescriptions{Description: "Returns all available authentication/edirectory objects", Parameters: []sophos.Parameter(nil), Tags: []string{"authentication/edirectory"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new authentication/edirectory object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/edirectory that will be created", Type: "", Required: true}}, Tags: []string{"authentication/edirectory"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/edirectory/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object edirectory", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"authentication/edirectory"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available edirectory types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/edirectory"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object edirectory types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/edirectory that will be changes", Type: "", Required: true}}, Tags: []string{"authentication/edirectory"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object edirectory", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/edirectory that will be updated", Type: "", Required: true}}, Tags: []string{"authentication/edirectory"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/ldap/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ldap", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"authentication/ldap"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ldap types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/ldap"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ldap types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/ldap that will be changes", Type: "", Required: true}}, Tags: []string{"authentication/ldap"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ldap", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/ldap that will be updated", Type: "", Required: true}}, Tags: []string{"authentication/ldap"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/authentication/ldap/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/ldap"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/otp_token/": {"get": sophos.MethodDescriptions{Description: "Returns all available authentication/otp_token objects", Parameters: []sophos.Parameter(nil), Tags: []string{"authentication/otp_token"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new authentication/otp_token object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/otp_token that will be created", Type: "", Required: true}}, Tags: []string{"authentication/otp_token"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/radius/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object radius", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"authentication/radius"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available radius types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/radius"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object radius types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/radius that will be changes", Type: "", Required: true}}, Tags: []string{"authentication/radius"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object radius", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/radius that will be updated", Type: "", Required: true}}, Tags: []string{"authentication/radius"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/authentication/tacacs/": {"get": sophos.MethodDescriptions{Description: "Returns all available authentication/tacacs objects", Parameters: []sophos.Parameter(nil), Tags: []string{"authentication/tacacs"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new authentication/tacacs object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "authentication/tacacs that will be created", Type: "", Required: true}}, Tags: []string{"authentication/tacacs"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/tacacs/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/tacacs"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/edirectory/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/edirectory"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/otp_token/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/otp_token"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/authentication/radius/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"authentication/radius"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Authentication
func (Authentication) Definition() sophos.Definition { return *defAuthentication }

// ApiRoutes returns all known Authentication Paths
func (Authentication) ApiRoutes() []string {
	return []string{
		"/api/objects/authentication/adirectory/",
		"/api/objects/authentication/adirectory/{ref}",
		"/api/objects/authentication/adirectory/{ref}/usedby",
		"/api/objects/authentication/edirectory/",
		"/api/objects/authentication/edirectory/{ref}",
		"/api/objects/authentication/edirectory/{ref}/usedby",
		"/api/objects/authentication/group/",
		"/api/objects/authentication/group/{ref}",
		"/api/objects/authentication/group/{ref}/usedby",
		"/api/objects/authentication/ldap/",
		"/api/objects/authentication/ldap/{ref}",
		"/api/objects/authentication/ldap/{ref}/usedby",
		"/api/objects/authentication/otp_token/",
		"/api/objects/authentication/otp_token/{ref}",
		"/api/objects/authentication/otp_token/{ref}/usedby",
		"/api/objects/authentication/radius/",
		"/api/objects/authentication/radius/{ref}",
		"/api/objects/authentication/radius/{ref}/usedby",
		"/api/objects/authentication/tacacs/",
		"/api/objects/authentication/tacacs/{ref}",
		"/api/objects/authentication/tacacs/{ref}/usedby",
	}
}

// References returns the Authentication's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Authentication) References() []string {
	return []string{
		"REF_AuthenticationAdirectory",
		"REF_AuthenticationEdirectory",
		"REF_AuthenticationGroup",
		"REF_AuthenticationLdap",
		"REF_AuthenticationOtpToken",
		"REF_AuthenticationRadius",
		"REF_AuthenticationTacacs",
	}
}

// AuthenticationLdap is an Sophos Endpoint subType and implements sophos.RestObject
type AuthenticationLdap []interface{}

// GetPath implements sophos.RestObject and returns the AuthenticationLdap GET path
// Returns all available authentication/ldap objects
func (*AuthenticationLdap) GetPath() string { return "/api/objects/authentication/ldap/" }

// RefRequired implements sophos.RestObject
func (*AuthenticationLdap) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AuthenticationLdap DELETE path
// Creates or updates the complete object ldap
func (*AuthenticationLdap) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/ldap/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AuthenticationLdap PATCH path
// Changes to parts of the object ldap types
func (*AuthenticationLdap) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/ldap/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AuthenticationLdap POST path
// Create a new authentication/ldap object
func (*AuthenticationLdap) PostPath() string {
	return "/api/objects/authentication/ldap/"
}

// PutPath implements sophos.RestObject and returns the AuthenticationLdap PUT path
// Creates or updates the complete object ldap
func (*AuthenticationLdap) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/ldap/%s", ref)
}

// AuthenticationAdirectory is an Sophos Endpoint subType and implements sophos.RestObject
type AuthenticationAdirectory []interface{}

// GetPath implements sophos.RestObject and returns the AuthenticationAdirectory GET path
// Returns all available authentication/adirectory objects
func (*AuthenticationAdirectory) GetPath() string { return "/api/objects/authentication/adirectory/" }

// RefRequired implements sophos.RestObject
func (*AuthenticationAdirectory) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AuthenticationAdirectory DELETE path
// Creates or updates the complete object adirectory
func (*AuthenticationAdirectory) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/adirectory/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AuthenticationAdirectory PATCH path
// Changes to parts of the object adirectory types
func (*AuthenticationAdirectory) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/adirectory/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AuthenticationAdirectory POST path
// Create a new authentication/adirectory object
func (*AuthenticationAdirectory) PostPath() string {
	return "/api/objects/authentication/adirectory/"
}

// PutPath implements sophos.RestObject and returns the AuthenticationAdirectory PUT path
// Creates or updates the complete object adirectory
func (*AuthenticationAdirectory) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/adirectory/%s", ref)
}

// AuthenticationGroup is an Sophos Endpoint subType and implements sophos.RestObject
type AuthenticationGroup []interface{}

// GetPath implements sophos.RestObject and returns the AuthenticationGroup GET path
// Returns all available authentication/group objects
func (*AuthenticationGroup) GetPath() string { return "/api/objects/authentication/group/" }

// RefRequired implements sophos.RestObject
func (*AuthenticationGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AuthenticationGroup DELETE path
// Creates or updates the complete object group
func (*AuthenticationGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AuthenticationGroup PATCH path
// Changes to parts of the object group types
func (*AuthenticationGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AuthenticationGroup POST path
// Create a new authentication/group object
func (*AuthenticationGroup) PostPath() string {
	return "/api/objects/authentication/group/"
}

// PutPath implements sophos.RestObject and returns the AuthenticationGroup PUT path
// Creates or updates the complete object group
func (*AuthenticationGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/group/%s", ref)
}

// AuthenticationOtpToken is an Sophos Endpoint subType and implements sophos.RestObject
type AuthenticationOtpToken []interface{}

// GetPath implements sophos.RestObject and returns the AuthenticationOtpToken GET path
// Returns all available authentication/otp_token objects
func (*AuthenticationOtpToken) GetPath() string { return "/api/objects/authentication/otp_token/" }

// RefRequired implements sophos.RestObject
func (*AuthenticationOtpToken) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AuthenticationOtpToken DELETE path
// Creates or updates the complete object otp_token
func (*AuthenticationOtpToken) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/otp_token/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AuthenticationOtpToken PATCH path
// Changes to parts of the object otp_token types
func (*AuthenticationOtpToken) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/otp_token/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AuthenticationOtpToken POST path
// Create a new authentication/otp_token object
func (*AuthenticationOtpToken) PostPath() string {
	return "/api/objects/authentication/otp_token/"
}

// PutPath implements sophos.RestObject and returns the AuthenticationOtpToken PUT path
// Creates or updates the complete object otp_token
func (*AuthenticationOtpToken) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/otp_token/%s", ref)
}

// AuthenticationRadius is an Sophos Endpoint subType and implements sophos.RestObject
type AuthenticationRadius []interface{}

// GetPath implements sophos.RestObject and returns the AuthenticationRadius GET path
// Returns all available authentication/radius objects
func (*AuthenticationRadius) GetPath() string { return "/api/objects/authentication/radius/" }

// RefRequired implements sophos.RestObject
func (*AuthenticationRadius) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AuthenticationRadius DELETE path
// Creates or updates the complete object radius
func (*AuthenticationRadius) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/radius/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AuthenticationRadius PATCH path
// Changes to parts of the object radius types
func (*AuthenticationRadius) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/radius/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AuthenticationRadius POST path
// Create a new authentication/radius object
func (*AuthenticationRadius) PostPath() string {
	return "/api/objects/authentication/radius/"
}

// PutPath implements sophos.RestObject and returns the AuthenticationRadius PUT path
// Creates or updates the complete object radius
func (*AuthenticationRadius) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/radius/%s", ref)
}

// AuthenticationTacacs is an Sophos Endpoint subType and implements sophos.RestObject
type AuthenticationTacacs []interface{}

// GetPath implements sophos.RestObject and returns the AuthenticationTacacs GET path
// Returns all available authentication/tacacs objects
func (*AuthenticationTacacs) GetPath() string { return "/api/objects/authentication/tacacs/" }

// RefRequired implements sophos.RestObject
func (*AuthenticationTacacs) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AuthenticationTacacs DELETE path
// Creates or updates the complete object tacacs
func (*AuthenticationTacacs) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/tacacs/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AuthenticationTacacs PATCH path
// Changes to parts of the object tacacs types
func (*AuthenticationTacacs) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/tacacs/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AuthenticationTacacs POST path
// Create a new authentication/tacacs object
func (*AuthenticationTacacs) PostPath() string {
	return "/api/objects/authentication/tacacs/"
}

// PutPath implements sophos.RestObject and returns the AuthenticationTacacs PUT path
// Creates or updates the complete object tacacs
func (*AuthenticationTacacs) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/tacacs/%s", ref)
}

// AuthenticationEdirectory is an Sophos Endpoint subType and implements sophos.RestObject
type AuthenticationEdirectory []interface{}

// GetPath implements sophos.RestObject and returns the AuthenticationEdirectory GET path
// Returns all available authentication/edirectory objects
func (*AuthenticationEdirectory) GetPath() string { return "/api/objects/authentication/edirectory/" }

// RefRequired implements sophos.RestObject
func (*AuthenticationEdirectory) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AuthenticationEdirectory DELETE path
// Creates or updates the complete object edirectory
func (*AuthenticationEdirectory) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/edirectory/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AuthenticationEdirectory PATCH path
// Changes to parts of the object edirectory types
func (*AuthenticationEdirectory) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/edirectory/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AuthenticationEdirectory POST path
// Create a new authentication/edirectory object
func (*AuthenticationEdirectory) PostPath() string {
	return "/api/objects/authentication/edirectory/"
}

// PutPath implements sophos.RestObject and returns the AuthenticationEdirectory PUT path
// Creates or updates the complete object edirectory
func (*AuthenticationEdirectory) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/authentication/edirectory/%s", ref)
}

// Awe is a generated struct representing the Sophos Awe Endpoint
// GET /api/nodes/awe
type Awe struct {
	AllowedInterfaces []interface{} `json:"allowed_interfaces"`
	Clients           []interface{} `json:"clients"`
	Devices           []interface{} `json:"devices"`
	Global            struct {
		ApAutoaccept        int64  `json:"ap_autoaccept"`
		ApDebuglevel        int64  `json:"ap_debuglevel"`
		ApSoftlimit         int64  `json:"ap_softlimit"`
		ApVlantag           int64  `json:"ap_vlantag"`
		AweStatus           int64  `json:"awe_status"`
		BridgeUpdateKickout int64  `json:"bridge_update_kickout"`
		InitialSetup        int64  `json:"initial_setup"`
		LogLevel            int64  `json:"log_level"`
		MagicIP             string `json:"magic_ip"`
		NotificationTimeout int64  `json:"notification_timeout"`
		RadiusConf          string `json:"radius_conf"`
		Rootpw              string `json:"rootpw"`
		StayOnline          int64  `json:"stay_online"`
		StoreBssStats       int64  `json:"store_bss_stats"`
		TunnelIDOffset      int64  `json:"tunnel_id_offset"`
		Vlantagging         int64  `json:"vlantagging"`
	} `json:"global"`
	Networks []string `json:"networks"`
}

var defsAwe = map[string]sophos.RestObject{
	"AweRed":    &AweRed{},
	"AweClient": &AweClient{},
	"AweDevice": &AweDevice{},
	"AweGroup":  &AweGroup{},
	"AweLocal":  &AweLocal{},
}

// RestObjects implements the sophos.Node interface and returns a map of Awe's Objects
func (Awe) RestObjects() map[string]sophos.RestObject {
	return defsAwe
}

// GetPath implements sophos.RestGetter
func (*Awe) GetPath() string { return "/api/nodes/awe" }

// RefRequired implements sophos.RestGetter
func (*Awe) RefRequired() (string, bool) { return "", false }

var defAwe = &sophos.Definition{Description: "awe", Name: "awe", Link: "/api/definitions/awe", Swag: map[string]sophos.MethodMap{"/objects/awe/client/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/client"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe/local/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/local"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe/red/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/red"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/awe/device/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/device"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available awe/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awe/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awe/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/group that will be created", Type: "", Required: true}}, Tags: []string{"awe/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/awe/local/": {"get": sophos.MethodDescriptions{Description: "Returns all available awe/local objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awe/local"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awe/local object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/local that will be created", Type: "", Required: true}}, Tags: []string{"awe/local"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe/local/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object local types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/local that will be changes", Type: "", Required: true}}, Tags: []string{"awe/local"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object local", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/local that will be updated", Type: "", Required: true}}, Tags: []string{"awe/local"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object local", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awe/local"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available local types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/local"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/awe/red/": {"get": sophos.MethodDescriptions{Description: "Returns all available awe/red objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awe/red"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awe/red object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/red that will be created", Type: "", Required: true}}, Tags: []string{"awe/red"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe/client/": {"get": sophos.MethodDescriptions{Description: "Returns all available awe/client objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awe/client"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awe/client object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/client that will be created", Type: "", Required: true}}, Tags: []string{"awe/client"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/awe/device/": {"get": sophos.MethodDescriptions{Description: "Returns all available awe/device objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awe/device"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awe/device object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/device that will be created", Type: "", Required: true}}, Tags: []string{"awe/device"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awe/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/group that will be changes", Type: "", Required: true}}, Tags: []string{"awe/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/group that will be updated", Type: "", Required: true}}, Tags: []string{"awe/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/awe/red/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object red", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awe/red"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available red types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/red"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object red types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/red that will be changes", Type: "", Required: true}}, Tags: []string{"awe/red"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object red", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/red that will be updated", Type: "", Required: true}}, Tags: []string{"awe/red"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe/client/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object client", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awe/client"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available client types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/client"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object client types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/client that will be changes", Type: "", Required: true}}, Tags: []string{"awe/client"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object client", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/client that will be updated", Type: "", Required: true}}, Tags: []string{"awe/client"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/awe/device/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object device", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awe/device"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available device types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe/device"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object device types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/device that will be changes", Type: "", Required: true}}, Tags: []string{"awe/device"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object device", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe/device that will be updated", Type: "", Required: true}}, Tags: []string{"awe/device"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}}}

// Definition returns the /api/definitions struct of Awe
func (Awe) Definition() sophos.Definition { return *defAwe }

// ApiRoutes returns all known Awe Paths
func (Awe) ApiRoutes() []string {
	return []string{
		"/api/objects/awe/client/",
		"/api/objects/awe/client/{ref}",
		"/api/objects/awe/client/{ref}/usedby",
		"/api/objects/awe/device/",
		"/api/objects/awe/device/{ref}",
		"/api/objects/awe/device/{ref}/usedby",
		"/api/objects/awe/group/",
		"/api/objects/awe/group/{ref}",
		"/api/objects/awe/group/{ref}/usedby",
		"/api/objects/awe/local/",
		"/api/objects/awe/local/{ref}",
		"/api/objects/awe/local/{ref}/usedby",
		"/api/objects/awe/red/",
		"/api/objects/awe/red/{ref}",
		"/api/objects/awe/red/{ref}/usedby",
	}
}

// References returns the Awe's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Awe) References() []string {
	return []string{
		"REF_AweClient",
		"REF_AweDevice",
		"REF_AweGroup",
		"REF_AweLocal",
		"REF_AweRed",
	}
}

// AweRed is an Sophos Endpoint subType and implements sophos.RestObject
type AweRed []interface{}

// GetPath implements sophos.RestObject and returns the AweRed GET path
// Returns all available awe/red objects
func (*AweRed) GetPath() string { return "/api/objects/awe/red/" }

// RefRequired implements sophos.RestObject
func (*AweRed) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AweRed DELETE path
// Creates or updates the complete object red
func (*AweRed) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/red/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AweRed PATCH path
// Changes to parts of the object red types
func (*AweRed) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/red/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AweRed POST path
// Create a new awe/red object
func (*AweRed) PostPath() string {
	return "/api/objects/awe/red/"
}

// PutPath implements sophos.RestObject and returns the AweRed PUT path
// Creates or updates the complete object red
func (*AweRed) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/red/%s", ref)
}

// AweClient is an Sophos Endpoint subType and implements sophos.RestObject
type AweClient []interface{}

// GetPath implements sophos.RestObject and returns the AweClient GET path
// Returns all available awe/client objects
func (*AweClient) GetPath() string { return "/api/objects/awe/client/" }

// RefRequired implements sophos.RestObject
func (*AweClient) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AweClient DELETE path
// Creates or updates the complete object client
func (*AweClient) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/client/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AweClient PATCH path
// Changes to parts of the object client types
func (*AweClient) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/client/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AweClient POST path
// Create a new awe/client object
func (*AweClient) PostPath() string {
	return "/api/objects/awe/client/"
}

// PutPath implements sophos.RestObject and returns the AweClient PUT path
// Creates or updates the complete object client
func (*AweClient) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/client/%s", ref)
}

// AweDevice is an Sophos Endpoint subType and implements sophos.RestObject
type AweDevice []interface{}

// GetPath implements sophos.RestObject and returns the AweDevice GET path
// Returns all available awe/device objects
func (*AweDevice) GetPath() string { return "/api/objects/awe/device/" }

// RefRequired implements sophos.RestObject
func (*AweDevice) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AweDevice DELETE path
// Creates or updates the complete object device
func (*AweDevice) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/device/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AweDevice PATCH path
// Changes to parts of the object device types
func (*AweDevice) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/device/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AweDevice POST path
// Create a new awe/device object
func (*AweDevice) PostPath() string {
	return "/api/objects/awe/device/"
}

// PutPath implements sophos.RestObject and returns the AweDevice PUT path
// Creates or updates the complete object device
func (*AweDevice) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/device/%s", ref)
}

// AweGroup is an Sophos Endpoint subType and implements sophos.RestObject
type AweGroup []interface{}

// GetPath implements sophos.RestObject and returns the AweGroup GET path
// Returns all available awe/group objects
func (*AweGroup) GetPath() string { return "/api/objects/awe/group/" }

// RefRequired implements sophos.RestObject
func (*AweGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AweGroup DELETE path
// Creates or updates the complete object group
func (*AweGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AweGroup PATCH path
// Changes to parts of the object group types
func (*AweGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AweGroup POST path
// Create a new awe/group object
func (*AweGroup) PostPath() string {
	return "/api/objects/awe/group/"
}

// PutPath implements sophos.RestObject and returns the AweGroup PUT path
// Creates or updates the complete object group
func (*AweGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/group/%s", ref)
}

// AweLocal is an Sophos Endpoint subType and implements sophos.RestObject
type AweLocal []interface{}

// GetPath implements sophos.RestObject and returns the AweLocal GET path
// Returns all available awe/local objects
func (*AweLocal) GetPath() string { return "/api/objects/awe/local/" }

// RefRequired implements sophos.RestObject
func (*AweLocal) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AweLocal DELETE path
// Creates or updates the complete object local
func (*AweLocal) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/local/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AweLocal PATCH path
// Changes to parts of the object local types
func (*AweLocal) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/local/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AweLocal POST path
// Create a new awe/local object
func (*AweLocal) PostPath() string {
	return "/api/objects/awe/local/"
}

// PutPath implements sophos.RestObject and returns the AweLocal PUT path
// Creates or updates the complete object local
func (*AweLocal) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe/local/%s", ref)
}

// AweNetworkDeviceAssociation is a generated struct representing the Sophos AweNetworkDeviceAssociation Endpoint
// GET /api/nodes/awe_network_device_association
type AweNetworkDeviceAssociation struct {
	AweNetworkDeviceAssociationMeshRole AweNetworkDeviceAssociationMeshRole `json:"awe_network_device_association_mesh_role"`
	AweNetworkDeviceAssociationGroup    AweNetworkDeviceAssociationGroup    `json:"awe_network_device_association_group"`
}

var defsAweNetworkDeviceAssociation = map[string]sophos.RestObject{
	"AweNetworkDeviceAssociationMeshRole": &AweNetworkDeviceAssociationMeshRole{},
	"AweNetworkDeviceAssociationGroup":    &AweNetworkDeviceAssociationGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of AweNetworkDeviceAssociation's Objects
func (AweNetworkDeviceAssociation) RestObjects() map[string]sophos.RestObject {
	return defsAweNetworkDeviceAssociation
}

// GetPath implements sophos.RestGetter
func (*AweNetworkDeviceAssociation) GetPath() string {
	return "/api/nodes/awe_network_device_association"
}

// RefRequired implements sophos.RestGetter
func (*AweNetworkDeviceAssociation) RefRequired() (string, bool) { return "", false }

var defAweNetworkDeviceAssociation = &sophos.Definition{Description: "awe_network_device_association", Name: "awe_network_device_association", Link: "/api/definitions/awe_network_device_association", Swag: map[string]sophos.MethodMap{"/objects/awe_network_device_association/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available awe_network_device_association/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awe_network_device_association/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awe_network_device_association/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe_network_device_association/group that will be created", Type: "", Required: true}}, Tags: []string{"awe_network_device_association/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe_network_device_association/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awe_network_device_association/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe_network_device_association/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe_network_device_association/group that will be changes", Type: "", Required: true}}, Tags: []string{"awe_network_device_association/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe_network_device_association/group that will be updated", Type: "", Required: true}}, Tags: []string{"awe_network_device_association/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe_network_device_association/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe_network_device_association/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe_network_device_association/mesh_role/": {"get": sophos.MethodDescriptions{Description: "Returns all available awe_network_device_association/mesh_role objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awe_network_device_association/mesh_role"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awe_network_device_association/mesh_role object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe_network_device_association/mesh_role that will be created", Type: "", Required: true}}, Tags: []string{"awe_network_device_association/mesh_role"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awe_network_device_association/mesh_role/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object mesh_role", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awe_network_device_association/mesh_role"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available mesh_role types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe_network_device_association/mesh_role"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object mesh_role types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe_network_device_association/mesh_role that will be changes", Type: "", Required: true}}, Tags: []string{"awe_network_device_association/mesh_role"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object mesh_role", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awe_network_device_association/mesh_role that will be updated", Type: "", Required: true}}, Tags: []string{"awe_network_device_association/mesh_role"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/awe_network_device_association/mesh_role/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awe_network_device_association/mesh_role"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}}}

// Definition returns the /api/definitions struct of AweNetworkDeviceAssociation
func (AweNetworkDeviceAssociation) Definition() sophos.Definition {
	return *defAweNetworkDeviceAssociation
}

// ApiRoutes returns all known AweNetworkDeviceAssociation Paths
func (AweNetworkDeviceAssociation) ApiRoutes() []string {
	return []string{
		"/api/objects/awe_network_device_association/group/",
		"/api/objects/awe_network_device_association/group/{ref}",
		"/api/objects/awe_network_device_association/group/{ref}/usedby",
		"/api/objects/awe_network_device_association/mesh_role/",
		"/api/objects/awe_network_device_association/mesh_role/{ref}",
		"/api/objects/awe_network_device_association/mesh_role/{ref}/usedby",
	}
}

// References returns the AweNetworkDeviceAssociation's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (AweNetworkDeviceAssociation) References() []string {
	return []string{
		"REF_AweNetworkDeviceAssociationGroup",
		"REF_AweNetworkDeviceAssociationMeshRole",
	}
}

// AweNetworkDeviceAssociationMeshRole is an Sophos Endpoint subType and implements sophos.RestObject
type AweNetworkDeviceAssociationMeshRole []interface{}

// GetPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationMeshRole GET path
// Returns all available awe_network_device_association/mesh_role objects
func (*AweNetworkDeviceAssociationMeshRole) GetPath() string {
	return "/api/objects/awe_network_device_association/mesh_role/"
}

// RefRequired implements sophos.RestObject
func (*AweNetworkDeviceAssociationMeshRole) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AweNetworkDeviceAssociationMeshRole DELETE path
// Creates or updates the complete object mesh_role
func (*AweNetworkDeviceAssociationMeshRole) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awe_network_device_association/mesh_role/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationMeshRole PATCH path
// Changes to parts of the object mesh_role types
func (*AweNetworkDeviceAssociationMeshRole) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe_network_device_association/mesh_role/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationMeshRole POST path
// Create a new awe_network_device_association/mesh_role object
func (*AweNetworkDeviceAssociationMeshRole) PostPath() string {
	return "/api/objects/awe_network_device_association/mesh_role/"
}

// PutPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationMeshRole PUT path
// Creates or updates the complete object mesh_role
func (*AweNetworkDeviceAssociationMeshRole) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe_network_device_association/mesh_role/%s", ref)
}

// AweNetworkDeviceAssociationGroup is an Sophos Endpoint subType and implements sophos.RestObject
type AweNetworkDeviceAssociationGroup []interface{}

// GetPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationGroup GET path
// Returns all available awe_network_device_association/group objects
func (*AweNetworkDeviceAssociationGroup) GetPath() string {
	return "/api/objects/awe_network_device_association/group/"
}

// RefRequired implements sophos.RestObject
func (*AweNetworkDeviceAssociationGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AweNetworkDeviceAssociationGroup DELETE path
// Creates or updates the complete object group
func (*AweNetworkDeviceAssociationGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awe_network_device_association/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationGroup PATCH path
// Changes to parts of the object group types
func (*AweNetworkDeviceAssociationGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe_network_device_association/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationGroup POST path
// Create a new awe_network_device_association/group object
func (*AweNetworkDeviceAssociationGroup) PostPath() string {
	return "/api/objects/awe_network_device_association/group/"
}

// PutPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationGroup PUT path
// Creates or updates the complete object group
func (*AweNetworkDeviceAssociationGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awe_network_device_association/group/%s", ref)
}

// Aws is a generated struct representing the Sophos Aws Endpoint
// GET /api/nodes/aws
type Aws struct {
	AwsRegion       AwsRegion       `json:"aws_region"`
	AwsGroup        AwsGroup        `json:"aws_group"`
	AwsInstanceType AwsInstanceType `json:"aws_instance_type"`
}

var defsAws = map[string]sophos.RestObject{
	"AwsRegion":       &AwsRegion{},
	"AwsGroup":        &AwsGroup{},
	"AwsInstanceType": &AwsInstanceType{},
}

// RestObjects implements the sophos.Node interface and returns a map of Aws's Objects
func (Aws) RestObjects() map[string]sophos.RestObject {
	return defsAws
}

// GetPath implements sophos.RestGetter
func (*Aws) GetPath() string { return "/api/nodes/aws" }

// RefRequired implements sophos.RestGetter
func (*Aws) RefRequired() (string, bool) { return "", false }

var defAws = &sophos.Definition{Description: "aws", Name: "aws", Link: "/api/definitions/aws", Swag: map[string]sophos.MethodMap{"/objects/aws/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"aws/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aws/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aws/group that will be changes", Type: "", Required: true}}, Tags: []string{"aws/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aws/group that will be updated", Type: "", Required: true}}, Tags: []string{"aws/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/aws/instance_type/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aws/instance_type"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/aws/instance_type/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object instance_type", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"aws/instance_type"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available instance_type types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aws/instance_type"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object instance_type types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aws/instance_type that will be changes", Type: "", Required: true}}, Tags: []string{"aws/instance_type"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object instance_type", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aws/instance_type that will be updated", Type: "", Required: true}}, Tags: []string{"aws/instance_type"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/aws/region/": {"post": sophos.MethodDescriptions{Description: "Create a new aws/region object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aws/region that will be created", Type: "", Required: true}}, Tags: []string{"aws/region"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available aws/region objects", Parameters: []sophos.Parameter(nil), Tags: []string{"aws/region"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/aws/region/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object region", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"aws/region"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available region types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aws/region"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object region types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aws/region that will be changes", Type: "", Required: true}}, Tags: []string{"aws/region"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object region", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aws/region that will be updated", Type: "", Required: true}}, Tags: []string{"aws/region"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/aws/region/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aws/region"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/aws/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available aws/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"aws/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new aws/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aws/group that will be created", Type: "", Required: true}}, Tags: []string{"aws/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/aws/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"aws/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/aws/instance_type/": {"get": sophos.MethodDescriptions{Description: "Returns all available aws/instance_type objects", Parameters: []sophos.Parameter(nil), Tags: []string{"aws/instance_type"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new aws/instance_type object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "aws/instance_type that will be created", Type: "", Required: true}}, Tags: []string{"aws/instance_type"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Aws
func (Aws) Definition() sophos.Definition { return *defAws }

// ApiRoutes returns all known Aws Paths
func (Aws) ApiRoutes() []string {
	return []string{
		"/api/objects/aws/group/",
		"/api/objects/aws/group/{ref}",
		"/api/objects/aws/group/{ref}/usedby",
		"/api/objects/aws/instance_type/",
		"/api/objects/aws/instance_type/{ref}",
		"/api/objects/aws/instance_type/{ref}/usedby",
		"/api/objects/aws/region/",
		"/api/objects/aws/region/{ref}",
		"/api/objects/aws/region/{ref}/usedby",
	}
}

// References returns the Aws's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Aws) References() []string {
	return []string{
		"REF_AwsGroup",
		"REF_AwsInstanceType",
		"REF_AwsRegion",
	}
}

// AwsRegion is an Sophos Endpoint subType and implements sophos.RestObject
type AwsRegions []AwsRegion
type AwsRegion struct {
	Locked            string   `json:"_locked"`
	Reference         string   `json:"_ref"`
	_type             string   `json:"_type"`
	AvailabilityZones []string `json:"availability_zones"`
	Code              string   `json:"code"`
	Comment           string   `json:"comment"`
	InstanceTypes     []string `json:"instance_types"`
	Name              string   `json:"name"`
	Partition         string   `json:"partition"`
}

// GetPath implements sophos.RestObject and returns the AwsRegions GET path
// Returns all available aws/region objects
func (*AwsRegions) GetPath() string { return "/api/objects/aws/region/" }

// RefRequired implements sophos.RestObject
func (*AwsRegions) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the AwsRegions GET path
// Returns all available region types
func (a *AwsRegion) GetPath() string { return fmt.Sprintf("/api/objects/aws/region/%s", a.Reference) }

// RefRequired implements sophos.RestObject
func (a *AwsRegion) RefRequired() (string, bool) { return a.Reference, true }

// DeletePath implements sophos.RestObject and returns the AwsRegion DELETE path
// Creates or updates the complete object region
func (*AwsRegion) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/aws/region/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AwsRegion PATCH path
// Changes to parts of the object region types
func (*AwsRegion) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/aws/region/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AwsRegion POST path
// Create a new aws/region object
func (*AwsRegion) PostPath() string {
	return "/api/objects/aws/region/"
}

// PutPath implements sophos.RestObject and returns the AwsRegion PUT path
// Creates or updates the complete object region
func (*AwsRegion) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/aws/region/%s", ref)
}

// Type implements sophos.Object
func (a *AwsRegion) GetType() string { return a._type }

// AwsGroup is an Sophos Endpoint subType and implements sophos.RestObject
type AwsGroup []interface{}

// GetPath implements sophos.RestObject and returns the AwsGroup GET path
// Returns all available aws/group objects
func (*AwsGroup) GetPath() string { return "/api/objects/aws/group/" }

// RefRequired implements sophos.RestObject
func (*AwsGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AwsGroup DELETE path
// Creates or updates the complete object group
func (*AwsGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/aws/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AwsGroup PATCH path
// Changes to parts of the object group types
func (*AwsGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/aws/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AwsGroup POST path
// Create a new aws/group object
func (*AwsGroup) PostPath() string {
	return "/api/objects/aws/group/"
}

// PutPath implements sophos.RestObject and returns the AwsGroup PUT path
// Creates or updates the complete object group
func (*AwsGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/aws/group/%s", ref)
}

// AwsInstanceType is an Sophos Endpoint subType and implements sophos.RestObject
type AwsInstanceTypes []AwsInstanceType
type AwsInstanceType struct {
	Locked             string      `json:"_locked"`
	Reference          string      `json:"_ref"`
	_type              string      `json:"_type"`
	Comment            string      `json:"comment"`
	CPUCores           int64       `json:"cpu_cores"`
	Deprecated         bool        `json:"deprecated"`
	MemoryBytes        interface{} `json:"memory_bytes"`
	Model              string      `json:"model"`
	Name               string      `json:"name"`
	NetworkPerformance string      `json:"network_performance"`
}

// GetPath implements sophos.RestObject and returns the AwsInstanceTypes GET path
// Returns all available aws/instance_type objects
func (*AwsInstanceTypes) GetPath() string { return "/api/objects/aws/instance_type/" }

// RefRequired implements sophos.RestObject
func (*AwsInstanceTypes) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the AwsInstanceTypes GET path
// Returns all available instance_type types
func (a *AwsInstanceType) GetPath() string {
	return fmt.Sprintf("/api/objects/aws/instance_type/%s", a.Reference)
}

// RefRequired implements sophos.RestObject
func (a *AwsInstanceType) RefRequired() (string, bool) { return a.Reference, true }

// DeletePath implements sophos.RestObject and returns the AwsInstanceType DELETE path
// Creates or updates the complete object instance_type
func (*AwsInstanceType) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/aws/instance_type/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AwsInstanceType PATCH path
// Changes to parts of the object instance_type types
func (*AwsInstanceType) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/aws/instance_type/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AwsInstanceType POST path
// Create a new aws/instance_type object
func (*AwsInstanceType) PostPath() string {
	return "/api/objects/aws/instance_type/"
}

// PutPath implements sophos.RestObject and returns the AwsInstanceType PUT path
// Creates or updates the complete object instance_type
func (*AwsInstanceType) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/aws/instance_type/%s", ref)
}

// Type implements sophos.Object
func (a *AwsInstanceType) GetType() string { return a._type }

// Awscli is a generated struct representing the Sophos Awscli Endpoint
// GET /api/nodes/awscli
type Awscli struct {
	Profiles []interface{} `json:"profiles"`
}

var defsAwscli = map[string]sophos.RestObject{
	"AwscliGroup":   &AwscliGroup{},
	"AwscliProfile": &AwscliProfile{},
}

// RestObjects implements the sophos.Node interface and returns a map of Awscli's Objects
func (Awscli) RestObjects() map[string]sophos.RestObject {
	return defsAwscli
}

// GetPath implements sophos.RestGetter
func (*Awscli) GetPath() string { return "/api/nodes/awscli" }

// RefRequired implements sophos.RestGetter
func (*Awscli) RefRequired() (string, bool) { return "", false }

var defAwscli = &sophos.Definition{Description: "awscli", Name: "awscli", Link: "/api/definitions/awscli", Swag: map[string]sophos.MethodMap{"/objects/awscli/profile/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/profile that will be changes", Type: "", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/profile that will be updated", Type: "", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/awscli/profile/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awscli/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available awscli/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awscli/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/group that will be created", Type: "", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awscli/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/group that will be changes", Type: "", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/group that will be updated", Type: "", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/awscli/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"awscli/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/awscli/profile/": {"get": sophos.MethodDescriptions{Description: "Returns all available awscli/profile objects", Parameters: []sophos.Parameter(nil), Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new awscli/profile object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "awscli/profile that will be created", Type: "", Required: true}}, Tags: []string{"awscli/profile"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Awscli
func (Awscli) Definition() sophos.Definition { return *defAwscli }

// ApiRoutes returns all known Awscli Paths
func (Awscli) ApiRoutes() []string {
	return []string{
		"/api/objects/awscli/group/",
		"/api/objects/awscli/group/{ref}",
		"/api/objects/awscli/group/{ref}/usedby",
		"/api/objects/awscli/profile/",
		"/api/objects/awscli/profile/{ref}",
		"/api/objects/awscli/profile/{ref}/usedby",
	}
}

// References returns the Awscli's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Awscli) References() []string {
	return []string{
		"REF_AwscliGroup",
		"REF_AwscliProfile",
	}
}

// AwscliGroup is an Sophos Endpoint subType and implements sophos.RestObject
type AwscliGroup []interface{}

// GetPath implements sophos.RestObject and returns the AwscliGroup GET path
// Returns all available awscli/group objects
func (*AwscliGroup) GetPath() string { return "/api/objects/awscli/group/" }

// RefRequired implements sophos.RestObject
func (*AwscliGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AwscliGroup DELETE path
// Creates or updates the complete object group
func (*AwscliGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AwscliGroup PATCH path
// Changes to parts of the object group types
func (*AwscliGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AwscliGroup POST path
// Create a new awscli/group object
func (*AwscliGroup) PostPath() string {
	return "/api/objects/awscli/group/"
}

// PutPath implements sophos.RestObject and returns the AwscliGroup PUT path
// Creates or updates the complete object group
func (*AwscliGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/group/%s", ref)
}

// AwscliProfile is an Sophos Endpoint subType and implements sophos.RestObject
type AwscliProfile []interface{}

// GetPath implements sophos.RestObject and returns the AwscliProfile GET path
// Returns all available awscli/profile objects
func (*AwscliProfile) GetPath() string { return "/api/objects/awscli/profile/" }

// RefRequired implements sophos.RestObject
func (*AwscliProfile) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the AwscliProfile DELETE path
// Creates or updates the complete object profile
func (*AwscliProfile) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/profile/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the AwscliProfile PATCH path
// Changes to parts of the object profile types
func (*AwscliProfile) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/profile/%s", ref)
}

// PostPath implements sophos.RestObject and returns the AwscliProfile POST path
// Create a new awscli/profile object
func (*AwscliProfile) PostPath() string {
	return "/api/objects/awscli/profile/"
}

// PutPath implements sophos.RestObject and returns the AwscliProfile PUT path
// Creates or updates the complete object profile
func (*AwscliProfile) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/awscli/profile/%s", ref)
}

// Bgp is a generated struct representing the Sophos Bgp Endpoint
// GET /api/nodes/bgp
type Bgp struct {
	BgpNeighbor  BgpNeighbor  `json:"bgp_neighbor"`
	BgpSystem    BgpSystem    `json:"bgp_system"`
	BgpAmazonVpc BgpAmazonVpc `json:"bgp_amazon_vpc"`
	BgpFilter    BgpFilter    `json:"bgp_filter"`
	BgpGroup     BgpGroup     `json:"bgp_group"`
	BgpRouteMap  BgpRouteMap  `json:"bgp_route_map"`
}

var defsBgp = map[string]sophos.RestObject{
	"BgpNeighbor":  &BgpNeighbor{},
	"BgpSystem":    &BgpSystem{},
	"BgpAmazonVpc": &BgpAmazonVpc{},
	"BgpFilter":    &BgpFilter{},
	"BgpGroup":     &BgpGroup{},
	"BgpRouteMap":  &BgpRouteMap{},
}

// RestObjects implements the sophos.Node interface and returns a map of Bgp's Objects
func (Bgp) RestObjects() map[string]sophos.RestObject {
	return defsBgp
}

// GetPath implements sophos.RestGetter
func (*Bgp) GetPath() string { return "/api/nodes/bgp" }

// RefRequired implements sophos.RestGetter
func (*Bgp) RefRequired() (string, bool) { return "", false }

var defBgp = &sophos.Definition{Description: "bgp", Name: "bgp", Link: "/api/definitions/bgp", Swag: map[string]sophos.MethodMap{"/objects/bgp/amazon_vpc/": {"get": sophos.MethodDescriptions{Description: "Returns all available bgp/amazon_vpc objects", Parameters: []sophos.Parameter(nil), Tags: []string{"bgp/amazon_vpc"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new bgp/amazon_vpc object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/amazon_vpc that will be created", Type: "", Required: true}}, Tags: []string{"bgp/amazon_vpc"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/bgp/amazon_vpc/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/amazon_vpc"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/bgp/filter/": {"get": sophos.MethodDescriptions{Description: "Returns all available bgp/filter objects", Parameters: []sophos.Parameter(nil), Tags: []string{"bgp/filter"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new bgp/filter object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/filter that will be created", Type: "", Required: true}}, Tags: []string{"bgp/filter"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/bgp/route_map/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object route_map", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"bgp/route_map"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available route_map types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/route_map"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object route_map types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/route_map that will be changes", Type: "", Required: true}}, Tags: []string{"bgp/route_map"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object route_map", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/route_map that will be updated", Type: "", Required: true}}, Tags: []string{"bgp/route_map"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/bgp/route_map/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/route_map"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/bgp/system/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object system", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"bgp/system"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available system types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/system"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object system types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/system that will be changes", Type: "", Required: true}}, Tags: []string{"bgp/system"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object system", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/system that will be updated", Type: "", Required: true}}, Tags: []string{"bgp/system"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/bgp/amazon_vpc/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object amazon_vpc", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"bgp/amazon_vpc"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available amazon_vpc types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/amazon_vpc"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object amazon_vpc types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/amazon_vpc that will be changes", Type: "", Required: true}}, Tags: []string{"bgp/amazon_vpc"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object amazon_vpc", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/amazon_vpc that will be updated", Type: "", Required: true}}, Tags: []string{"bgp/amazon_vpc"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/bgp/filter/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object filter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"bgp/filter"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available filter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/filter"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object filter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/filter that will be changes", Type: "", Required: true}}, Tags: []string{"bgp/filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object filter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/filter that will be updated", Type: "", Required: true}}, Tags: []string{"bgp/filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/bgp/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available bgp/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"bgp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new bgp/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/group that will be created", Type: "", Required: true}}, Tags: []string{"bgp/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/bgp/neighbor/": {"get": sophos.MethodDescriptions{Description: "Returns all available bgp/neighbor objects", Parameters: []sophos.Parameter(nil), Tags: []string{"bgp/neighbor"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new bgp/neighbor object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/neighbor that will be created", Type: "", Required: true}}, Tags: []string{"bgp/neighbor"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/bgp/neighbor/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object neighbor", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"bgp/neighbor"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available neighbor types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/neighbor"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object neighbor types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/neighbor that will be changes", Type: "", Required: true}}, Tags: []string{"bgp/neighbor"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object neighbor", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/neighbor that will be updated", Type: "", Required: true}}, Tags: []string{"bgp/neighbor"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/bgp/system/": {"get": sophos.MethodDescriptions{Description: "Returns all available bgp/system objects", Parameters: []sophos.Parameter(nil), Tags: []string{"bgp/system"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new bgp/system object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/system that will be created", Type: "", Required: true}}, Tags: []string{"bgp/system"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/bgp/filter/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/filter"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/bgp/neighbor/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/neighbor"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/bgp/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"bgp/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/group that will be changes", Type: "", Required: true}}, Tags: []string{"bgp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/group that will be updated", Type: "", Required: true}}, Tags: []string{"bgp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/bgp/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/bgp/route_map/": {"post": sophos.MethodDescriptions{Description: "Create a new bgp/route_map object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "bgp/route_map that will be created", Type: "", Required: true}}, Tags: []string{"bgp/route_map"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available bgp/route_map objects", Parameters: []sophos.Parameter(nil), Tags: []string{"bgp/route_map"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/bgp/system/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"bgp/system"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Bgp
func (Bgp) Definition() sophos.Definition { return *defBgp }

// ApiRoutes returns all known Bgp Paths
func (Bgp) ApiRoutes() []string {
	return []string{
		"/api/objects/bgp/amazon_vpc/",
		"/api/objects/bgp/amazon_vpc/{ref}",
		"/api/objects/bgp/amazon_vpc/{ref}/usedby",
		"/api/objects/bgp/filter/",
		"/api/objects/bgp/filter/{ref}",
		"/api/objects/bgp/filter/{ref}/usedby",
		"/api/objects/bgp/group/",
		"/api/objects/bgp/group/{ref}",
		"/api/objects/bgp/group/{ref}/usedby",
		"/api/objects/bgp/neighbor/",
		"/api/objects/bgp/neighbor/{ref}",
		"/api/objects/bgp/neighbor/{ref}/usedby",
		"/api/objects/bgp/route_map/",
		"/api/objects/bgp/route_map/{ref}",
		"/api/objects/bgp/route_map/{ref}/usedby",
		"/api/objects/bgp/system/",
		"/api/objects/bgp/system/{ref}",
		"/api/objects/bgp/system/{ref}/usedby",
	}
}

// References returns the Bgp's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Bgp) References() []string {
	return []string{
		"REF_BgpAmazonVpc",
		"REF_BgpFilter",
		"REF_BgpGroup",
		"REF_BgpNeighbor",
		"REF_BgpRouteMap",
		"REF_BgpSystem",
	}
}

// BgpNeighbor is an Sophos Endpoint subType and implements sophos.RestObject
type BgpNeighbor []interface{}

// GetPath implements sophos.RestObject and returns the BgpNeighbor GET path
// Returns all available bgp/neighbor objects
func (*BgpNeighbor) GetPath() string { return "/api/objects/bgp/neighbor/" }

// RefRequired implements sophos.RestObject
func (*BgpNeighbor) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the BgpNeighbor DELETE path
// Creates or updates the complete object neighbor
func (*BgpNeighbor) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/neighbor/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the BgpNeighbor PATCH path
// Changes to parts of the object neighbor types
func (*BgpNeighbor) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/neighbor/%s", ref)
}

// PostPath implements sophos.RestObject and returns the BgpNeighbor POST path
// Create a new bgp/neighbor object
func (*BgpNeighbor) PostPath() string {
	return "/api/objects/bgp/neighbor/"
}

// PutPath implements sophos.RestObject and returns the BgpNeighbor PUT path
// Creates or updates the complete object neighbor
func (*BgpNeighbor) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/neighbor/%s", ref)
}

// BgpSystem is an Sophos Endpoint subType and implements sophos.RestObject
type BgpSystem []interface{}

// GetPath implements sophos.RestObject and returns the BgpSystem GET path
// Returns all available bgp/system objects
func (*BgpSystem) GetPath() string { return "/api/objects/bgp/system/" }

// RefRequired implements sophos.RestObject
func (*BgpSystem) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the BgpSystem DELETE path
// Creates or updates the complete object system
func (*BgpSystem) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/system/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the BgpSystem PATCH path
// Changes to parts of the object system types
func (*BgpSystem) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/system/%s", ref)
}

// PostPath implements sophos.RestObject and returns the BgpSystem POST path
// Create a new bgp/system object
func (*BgpSystem) PostPath() string {
	return "/api/objects/bgp/system/"
}

// PutPath implements sophos.RestObject and returns the BgpSystem PUT path
// Creates or updates the complete object system
func (*BgpSystem) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/system/%s", ref)
}

// BgpAmazonVpc is an Sophos Endpoint subType and implements sophos.RestObject
type BgpAmazonVpcs []BgpAmazonVpc
type BgpAmazonVpc struct {
	Locked       string   `json:"_locked"`
	Reference    string   `json:"_ref"`
	_type        string   `json:"_type"`
	Comment      string   `json:"comment"`
	Custom       string   `json:"custom"`
	Host         string   `json:"host"`
	ID           string   `json:"id"`
	LocalAsn     int64    `json:"local_asn"`
	MaximumPaths int64    `json:"maximum_paths"`
	Name         string   `json:"name"`
	Network      []string `json:"network"`
	RemoteAsn    int64    `json:"remote_asn"`
}

// GetPath implements sophos.RestObject and returns the BgpAmazonVpc GET path
// Returns all available bgp/amazon_vpc objects
func (*BgpAmazonVpc) GetPath() string { return "/api/objects/bgp/amazon_vpc/" }

// RefRequired implements sophos.RestObject
func (*BgpAmazonVpc) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the BgpAmazonVpc DELETE path
// Creates or updates the complete object amazon_vpc
func (*BgpAmazonVpc) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/amazon_vpc/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the BgpAmazonVpc PATCH path
// Changes to parts of the object amazon_vpc types
func (*BgpAmazonVpc) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/amazon_vpc/%s", ref)
}

// PostPath implements sophos.RestObject and returns the BgpAmazonVpc POST path
// Create a new bgp/amazon_vpc object
func (*BgpAmazonVpc) PostPath() string {
	return "/api/objects/bgp/amazon_vpc/"
}

// PutPath implements sophos.RestObject and returns the BgpAmazonVpc PUT path
// Creates or updates the complete object amazon_vpc
func (*BgpAmazonVpc) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/amazon_vpc/%s", ref)
}

// BgpFilter is an Sophos Endpoint subType and implements sophos.RestObject
type BgpFilter []interface{}

// GetPath implements sophos.RestObject and returns the BgpFilter GET path
// Returns all available bgp/filter objects
func (*BgpFilter) GetPath() string { return "/api/objects/bgp/filter/" }

// RefRequired implements sophos.RestObject
func (*BgpFilter) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the BgpFilter DELETE path
// Creates or updates the complete object filter
func (*BgpFilter) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/filter/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the BgpFilter PATCH path
// Changes to parts of the object filter types
func (*BgpFilter) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/filter/%s", ref)
}

// PostPath implements sophos.RestObject and returns the BgpFilter POST path
// Create a new bgp/filter object
func (*BgpFilter) PostPath() string {
	return "/api/objects/bgp/filter/"
}

// PutPath implements sophos.RestObject and returns the BgpFilter PUT path
// Creates or updates the complete object filter
func (*BgpFilter) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/filter/%s", ref)
}

// BgpGroup is an Sophos Endpoint subType and implements sophos.RestObject
type BgpGroup []interface{}

// GetPath implements sophos.RestObject and returns the BgpGroup GET path
// Returns all available bgp/group objects
func (*BgpGroup) GetPath() string { return "/api/objects/bgp/group/" }

// RefRequired implements sophos.RestObject
func (*BgpGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the BgpGroup DELETE path
// Creates or updates the complete object group
func (*BgpGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the BgpGroup PATCH path
// Changes to parts of the object group types
func (*BgpGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the BgpGroup POST path
// Create a new bgp/group object
func (*BgpGroup) PostPath() string {
	return "/api/objects/bgp/group/"
}

// PutPath implements sophos.RestObject and returns the BgpGroup PUT path
// Creates or updates the complete object group
func (*BgpGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/group/%s", ref)
}

// BgpRouteMap is an Sophos Endpoint subType and implements sophos.RestObject
type BgpRouteMap []interface{}

// GetPath implements sophos.RestObject and returns the BgpRouteMap GET path
// Returns all available bgp/route_map objects
func (*BgpRouteMap) GetPath() string { return "/api/objects/bgp/route_map/" }

// RefRequired implements sophos.RestObject
func (*BgpRouteMap) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the BgpRouteMap DELETE path
// Creates or updates the complete object route_map
func (*BgpRouteMap) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/route_map/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the BgpRouteMap PATCH path
// Changes to parts of the object route_map types
func (*BgpRouteMap) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/route_map/%s", ref)
}

// PostPath implements sophos.RestObject and returns the BgpRouteMap POST path
// Create a new bgp/route_map object
func (*BgpRouteMap) PostPath() string {
	return "/api/objects/bgp/route_map/"
}

// PutPath implements sophos.RestObject and returns the BgpRouteMap PUT path
// Creates or updates the complete object route_map
func (*BgpRouteMap) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/bgp/route_map/%s", ref)
}

// Ca is a generated struct representing the Sophos Ca Endpoint
// GET /api/nodes/ca
type Ca struct {
	CaGost     string `json:"ca_gost"`
	CaIpsec    string `json:"ca_ipsec"`
	CaProxies  string `json:"ca_proxies"`
	CaRed      string `json:"ca_red"`
	DefKeysize int64  `json:"def_keysize"`
	GlobalCas  struct {
		EmailEncryption struct {
			TrustNewCas int64         `json:"trust_new_cas"`
			Trusted     []interface{} `json:"trusted"`
			Untrusted   []interface{} `json:"untrusted"`
		} `json:"email_encryption"`
		HTTPProxy struct {
			TrustNewCas int64         `json:"trust_new_cas"`
			Trusted     []interface{} `json:"trusted"`
			Untrusted   []interface{} `json:"untrusted"`
		} `json:"http_proxy"`
	} `json:"global_cas"`
}

var defsCa = map[string]sophos.RestObject{
	"CaHostCert":           &CaHostCert{},
	"CaHttpVerificationCa": &CaHttpVerificationCa{},
	"CaVerificationCa":     &CaVerificationCa{},
	"CaGroup":              &CaGroup{},
	"CaMetaCrl":            &CaMetaCrl{},
	"CaRsa":                &CaRsa{},
	"CaSigningCa":          &CaSigningCa{},
	"CaHostKeyCert":        &CaHostKeyCert{},
	"CaMetaX509":           &CaMetaX509{},
	"CaCrl":                &CaCrl{},
}

// RestObjects implements the sophos.Node interface and returns a map of Ca's Objects
func (Ca) RestObjects() map[string]sophos.RestObject {
	return defsCa
}

// GetPath implements sophos.RestGetter
func (*Ca) GetPath() string { return "/api/nodes/ca" }

// RefRequired implements sophos.RestGetter
func (*Ca) RefRequired() (string, bool) { return "", false }

var defCa = &sophos.Definition{Description: "ca", Name: "ca", Link: "/api/definitions/ca", Swag: map[string]sophos.MethodMap{"/objects/ca/host_key_cert/": {"post": sophos.MethodDescriptions{Description: "Create a new ca/host_key_cert object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/host_key_cert that will be created", Type: "", Required: true}}, Tags: []string{"ca/host_key_cert"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ca/host_key_cert objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/host_key_cert"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/meta_x509/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object meta_x509", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/meta_x509"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available meta_x509 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/meta_x509"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object meta_x509 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/meta_x509 that will be changes", Type: "", Required: true}}, Tags: []string{"ca/meta_x509"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object meta_x509", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/meta_x509 that will be updated", Type: "", Required: true}}, Tags: []string{"ca/meta_x509"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ca/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ca/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ca/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/group that will be created", Type: "", Required: true}}, Tags: []string{"ca/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/ca/signing_ca/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object signing_ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/signing_ca"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available signing_ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/signing_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object signing_ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/signing_ca that will be changes", Type: "", Required: true}}, Tags: []string{"ca/signing_ca"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object signing_ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/signing_ca that will be updated", Type: "", Required: true}}, Tags: []string{"ca/signing_ca"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/ca/rsa/": {"get": sophos.MethodDescriptions{Description: "Returns all available ca/rsa objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/rsa"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ca/rsa object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/rsa that will be created", Type: "", Required: true}}, Tags: []string{"ca/rsa"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/signing_ca/": {"post": sophos.MethodDescriptions{Description: "Create a new ca/signing_ca object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/signing_ca that will be created", Type: "", Required: true}}, Tags: []string{"ca/signing_ca"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ca/signing_ca objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/signing_ca"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/ca/crl/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object crl", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/crl that will be updated", Type: "", Required: true}}, Tags: []string{"ca/crl"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object crl", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/crl"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available crl types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/crl"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object crl types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/crl that will be changes", Type: "", Required: true}}, Tags: []string{"ca/crl"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ca/crl/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/crl"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/http_verification_ca/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object http_verification_ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/http_verification_ca"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available http_verification_ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/http_verification_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object http_verification_ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/http_verification_ca that will be changes", Type: "", Required: true}}, Tags: []string{"ca/http_verification_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object http_verification_ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/http_verification_ca that will be updated", Type: "", Required: true}}, Tags: []string{"ca/http_verification_ca"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/ca/crl/": {"get": sophos.MethodDescriptions{Description: "Returns all available ca/crl objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/crl"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ca/crl object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/crl that will be created", Type: "", Required: true}}, Tags: []string{"ca/crl"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/host_cert/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object host_cert types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/host_cert that will be changes", Type: "", Required: true}}, Tags: []string{"ca/host_cert"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object host_cert", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/host_cert that will be updated", Type: "", Required: true}}, Tags: []string{"ca/host_cert"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object host_cert", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/host_cert"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available host_cert types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/host_cert"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ca/meta_crl/": {"get": sophos.MethodDescriptions{Description: "Returns all available ca/meta_crl objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/meta_crl"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ca/meta_crl object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/meta_crl that will be created", Type: "", Required: true}}, Tags: []string{"ca/meta_crl"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/meta_crl/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object meta_crl", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/meta_crl"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available meta_crl types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/meta_crl"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object meta_crl types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/meta_crl that will be changes", Type: "", Required: true}}, Tags: []string{"ca/meta_crl"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object meta_crl", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/meta_crl that will be updated", Type: "", Required: true}}, Tags: []string{"ca/meta_crl"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/meta_x509/": {"get": sophos.MethodDescriptions{Description: "Returns all available ca/meta_x509 objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/meta_x509"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ca/meta_x509 object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/meta_x509 that will be created", Type: "", Required: true}}, Tags: []string{"ca/meta_x509"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/host_cert/": {"get": sophos.MethodDescriptions{Description: "Returns all available ca/host_cert objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/host_cert"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ca/host_cert object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/host_cert that will be created", Type: "", Required: true}}, Tags: []string{"ca/host_cert"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/host_key_cert/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available host_key_cert types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/host_key_cert"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object host_key_cert types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/host_key_cert that will be changes", Type: "", Required: true}}, Tags: []string{"ca/host_key_cert"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object host_key_cert", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/host_key_cert that will be updated", Type: "", Required: true}}, Tags: []string{"ca/host_key_cert"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object host_key_cert", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/host_key_cert"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/http_verification_ca/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/http_verification_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/host_key_cert/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/host_key_cert"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/ca/meta_x509/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/meta_x509"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/ca/verification_ca/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/verification_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/host_cert/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/host_cert"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/http_verification_ca/": {"get": sophos.MethodDescriptions{Description: "Returns all available ca/http_verification_ca objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/http_verification_ca"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ca/http_verification_ca object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/http_verification_ca that will be created", Type: "", Required: true}}, Tags: []string{"ca/http_verification_ca"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/verification_ca/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object verification_ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/verification_ca"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available verification_ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/verification_ca"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object verification_ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/verification_ca that will be changes", Type: "", Required: true}}, Tags: []string{"ca/verification_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object verification_ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/verification_ca that will be updated", Type: "", Required: true}}, Tags: []string{"ca/verification_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ca/rsa/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object rsa", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/rsa"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available rsa types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/rsa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object rsa types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/rsa that will be changes", Type: "", Required: true}}, Tags: []string{"ca/rsa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object rsa", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/rsa that will be updated", Type: "", Required: true}}, Tags: []string{"ca/rsa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ca/rsa/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/rsa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/signing_ca/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/signing_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/verification_ca/": {"get": sophos.MethodDescriptions{Description: "Returns all available ca/verification_ca objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ca/verification_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ca/verification_ca object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/verification_ca that will be created", Type: "", Required: true}}, Tags: []string{"ca/verification_ca"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ca/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ca/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/group that will be changes", Type: "", Required: true}}, Tags: []string{"ca/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ca/group that will be updated", Type: "", Required: true}}, Tags: []string{"ca/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ca/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/ca/meta_crl/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ca/meta_crl"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Ca
func (Ca) Definition() sophos.Definition { return *defCa }

// ApiRoutes returns all known Ca Paths
func (Ca) ApiRoutes() []string {
	return []string{
		"/api/objects/ca/crl/",
		"/api/objects/ca/crl/{ref}",
		"/api/objects/ca/crl/{ref}/usedby",
		"/api/objects/ca/group/",
		"/api/objects/ca/group/{ref}",
		"/api/objects/ca/group/{ref}/usedby",
		"/api/objects/ca/host_cert/",
		"/api/objects/ca/host_cert/{ref}",
		"/api/objects/ca/host_cert/{ref}/usedby",
		"/api/objects/ca/host_key_cert/",
		"/api/objects/ca/host_key_cert/{ref}",
		"/api/objects/ca/host_key_cert/{ref}/usedby",
		"/api/objects/ca/http_verification_ca/",
		"/api/objects/ca/http_verification_ca/{ref}",
		"/api/objects/ca/http_verification_ca/{ref}/usedby",
		"/api/objects/ca/meta_crl/",
		"/api/objects/ca/meta_crl/{ref}",
		"/api/objects/ca/meta_crl/{ref}/usedby",
		"/api/objects/ca/meta_x509/",
		"/api/objects/ca/meta_x509/{ref}",
		"/api/objects/ca/meta_x509/{ref}/usedby",
		"/api/objects/ca/rsa/",
		"/api/objects/ca/rsa/{ref}",
		"/api/objects/ca/rsa/{ref}/usedby",
		"/api/objects/ca/signing_ca/",
		"/api/objects/ca/signing_ca/{ref}",
		"/api/objects/ca/signing_ca/{ref}/usedby",
		"/api/objects/ca/verification_ca/",
		"/api/objects/ca/verification_ca/{ref}",
		"/api/objects/ca/verification_ca/{ref}/usedby",
	}
}

// References returns the Ca's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Ca) References() []string {
	return []string{
		"REF_CaCrl",
		"REF_CaGroup",
		"REF_CaHostCert",
		"REF_CaHostKeyCert",
		"REF_CaHttpVerificationCa",
		"REF_CaMetaCrl",
		"REF_CaMetaX509",
		"REF_CaRsa",
		"REF_CaSigningCa",
		"REF_CaVerificationCa",
	}
}

// CaHostCert is an Sophos Endpoint subType and implements sophos.RestObject
type CaHostCerts []CaHostCert
type CaHostCert struct {
	Locked      string `json:"_locked"`
	Reference   string `json:"_ref"`
	_type       string `json:"_type"`
	Certificate string `json:"certificate"`
	Comment     string `json:"comment"`
	Meta        string `json:"meta"`
	Name        string `json:"name"`
}

// GetPath implements sophos.RestObject and returns the CaHostCert GET path
// Returns all available ca/host_cert objects
func (*CaHostCert) GetPath() string { return "/api/objects/ca/host_cert/" }

// RefRequired implements sophos.RestObject
func (*CaHostCert) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CaHostCert DELETE path
// Creates or updates the complete object host_cert
func (*CaHostCert) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/host_cert/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaHostCert PATCH path
// Changes to parts of the object host_cert types
func (*CaHostCert) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/host_cert/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaHostCert POST path
// Create a new ca/host_cert object
func (*CaHostCert) PostPath() string {
	return "/api/objects/ca/host_cert/"
}

// PutPath implements sophos.RestObject and returns the CaHostCert PUT path
// Creates or updates the complete object host_cert
func (*CaHostCert) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/host_cert/%s", ref)
}

// CaHttpVerificationCa is an Sophos Endpoint subType and implements sophos.RestObject
type CaHttpVerificationCa []interface{}

// GetPath implements sophos.RestObject and returns the CaHttpVerificationCa GET path
// Returns all available ca/http_verification_ca objects
func (*CaHttpVerificationCa) GetPath() string { return "/api/objects/ca/http_verification_ca/" }

// RefRequired implements sophos.RestObject
func (*CaHttpVerificationCa) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CaHttpVerificationCa DELETE path
// Creates or updates the complete object http_verification_ca
func (*CaHttpVerificationCa) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/http_verification_ca/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaHttpVerificationCa PATCH path
// Changes to parts of the object http_verification_ca types
func (*CaHttpVerificationCa) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/http_verification_ca/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaHttpVerificationCa POST path
// Create a new ca/http_verification_ca object
func (*CaHttpVerificationCa) PostPath() string {
	return "/api/objects/ca/http_verification_ca/"
}

// PutPath implements sophos.RestObject and returns the CaHttpVerificationCa PUT path
// Creates or updates the complete object http_verification_ca
func (*CaHttpVerificationCa) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/http_verification_ca/%s", ref)
}

// CaVerificationCa is an Sophos Endpoint subType and implements sophos.RestObject
type CaVerificationCa []interface{}

// GetPath implements sophos.RestObject and returns the CaVerificationCa GET path
// Returns all available ca/verification_ca objects
func (*CaVerificationCa) GetPath() string { return "/api/objects/ca/verification_ca/" }

// RefRequired implements sophos.RestObject
func (*CaVerificationCa) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CaVerificationCa DELETE path
// Creates or updates the complete object verification_ca
func (*CaVerificationCa) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/verification_ca/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaVerificationCa PATCH path
// Changes to parts of the object verification_ca types
func (*CaVerificationCa) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/verification_ca/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaVerificationCa POST path
// Create a new ca/verification_ca object
func (*CaVerificationCa) PostPath() string {
	return "/api/objects/ca/verification_ca/"
}

// PutPath implements sophos.RestObject and returns the CaVerificationCa PUT path
// Creates or updates the complete object verification_ca
func (*CaVerificationCa) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/verification_ca/%s", ref)
}

// CaGroup is an Sophos Endpoint subType and implements sophos.RestObject
type CaGroup []interface{}

// GetPath implements sophos.RestObject and returns the CaGroup GET path
// Returns all available ca/group objects
func (*CaGroup) GetPath() string { return "/api/objects/ca/group/" }

// RefRequired implements sophos.RestObject
func (*CaGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CaGroup DELETE path
// Creates or updates the complete object group
func (*CaGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaGroup PATCH path
// Changes to parts of the object group types
func (*CaGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaGroup POST path
// Create a new ca/group object
func (*CaGroup) PostPath() string {
	return "/api/objects/ca/group/"
}

// PutPath implements sophos.RestObject and returns the CaGroup PUT path
// Creates or updates the complete object group
func (*CaGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/group/%s", ref)
}

// CaMetaCrl is an Sophos Endpoint subType and implements sophos.RestObject
type CaMetaCrl []interface{}

// GetPath implements sophos.RestObject and returns the CaMetaCrl GET path
// Returns all available ca/meta_crl objects
func (*CaMetaCrl) GetPath() string { return "/api/objects/ca/meta_crl/" }

// RefRequired implements sophos.RestObject
func (*CaMetaCrl) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CaMetaCrl DELETE path
// Creates or updates the complete object meta_crl
func (*CaMetaCrl) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/meta_crl/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaMetaCrl PATCH path
// Changes to parts of the object meta_crl types
func (*CaMetaCrl) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/meta_crl/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaMetaCrl POST path
// Create a new ca/meta_crl object
func (*CaMetaCrl) PostPath() string {
	return "/api/objects/ca/meta_crl/"
}

// PutPath implements sophos.RestObject and returns the CaMetaCrl PUT path
// Creates or updates the complete object meta_crl
func (*CaMetaCrl) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/meta_crl/%s", ref)
}

// CaRsa is an Sophos Endpoint subType and implements sophos.RestObject
type CaRsas []CaRsa
type CaRsa struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Comment   string `json:"comment"`
	Key       string `json:"key"`
	KeySize   int64  `json:"key_size"`
	Name      string `json:"name"`
	Pubkey    string `json:"pubkey"`
	VpnID     string `json:"vpn_id"`
	VpnIDType string `json:"vpn_id_type"`
}

// GetPath implements sophos.RestObject and returns the CaRsa GET path
// Returns all available ca/rsa objects
func (*CaRsa) GetPath() string { return "/api/objects/ca/rsa/" }

// RefRequired implements sophos.RestObject
func (*CaRsa) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CaRsa DELETE path
// Creates or updates the complete object rsa
func (*CaRsa) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/rsa/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaRsa PATCH path
// Changes to parts of the object rsa types
func (*CaRsa) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/rsa/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaRsa POST path
// Create a new ca/rsa object
func (*CaRsa) PostPath() string {
	return "/api/objects/ca/rsa/"
}

// PutPath implements sophos.RestObject and returns the CaRsa PUT path
// Creates or updates the complete object rsa
func (*CaRsa) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/rsa/%s", ref)
}

// CaSigningCa is an Sophos Endpoint subType and implements sophos.RestObject
type CaSigningCas []CaSigningCa
type CaSigningCa struct {
	Locked      string `json:"_locked"`
	Reference   string `json:"_ref"`
	_type       string `json:"_type"`
	Certificate string `json:"certificate"`
	Comment     string `json:"comment"`
	Config      string `json:"config"`
	Encrypted   bool   `json:"encrypted"`
	Index       string `json:"index"`
	Key         string `json:"key"`
	Meta        string `json:"meta"`
	Name        string `json:"name"`
	Serial      string `json:"serial"`
}

// GetPath implements sophos.RestObject and returns the CaSigningCa GET path
// Returns all available ca/signing_ca objects
func (*CaSigningCa) GetPath() string { return "/api/objects/ca/signing_ca/" }

// RefRequired implements sophos.RestObject
func (*CaSigningCa) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CaSigningCa DELETE path
// Creates or updates the complete object signing_ca
func (*CaSigningCa) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/signing_ca/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaSigningCa PATCH path
// Changes to parts of the object signing_ca types
func (*CaSigningCa) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/signing_ca/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaSigningCa POST path
// Create a new ca/signing_ca object
func (*CaSigningCa) PostPath() string {
	return "/api/objects/ca/signing_ca/"
}

// PutPath implements sophos.RestObject and returns the CaSigningCa PUT path
// Creates or updates the complete object signing_ca
func (*CaSigningCa) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/signing_ca/%s", ref)
}

// CaHostKeyCert is an Sophos Endpoint subType and implements sophos.RestObject
type CaHostKeyCerts []CaHostKeyCert
type CaHostKeyCert struct {
	Locked      string `json:"_locked"`
	Reference   string `json:"_ref"`
	_type       string `json:"_type"`
	Ca          string `json:"ca"`
	Certificate string `json:"certificate"`
	Comment     string `json:"comment"`
	Encrypted   bool   `json:"encrypted"`
	Key         string `json:"key"`
	Meta        string `json:"meta"`
	Name        string `json:"name"`
}

// GetPath implements sophos.RestObject and returns the CaHostKeyCerts GET path
// Returns all available ca/host_key_cert objects
func (*CaHostKeyCerts) GetPath() string { return "/api/objects/ca/host_key_cert/" }

// RefRequired implements sophos.RestObject
func (*CaHostKeyCerts) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the CaHostKeyCerts GET path
// Returns all available host_key_cert types
func (c *CaHostKeyCert) GetPath() string {
	return fmt.Sprintf("/api/objects/ca/host_key_cert/%s", c.Reference)
}

// RefRequired implements sophos.RestObject
func (c *CaHostKeyCert) RefRequired() (string, bool) { return c.Reference, true }

// DeletePath implements sophos.RestObject and returns the CaHostKeyCert DELETE path
// Creates or updates the complete object host_key_cert
func (*CaHostKeyCert) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/host_key_cert/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaHostKeyCert PATCH path
// Changes to parts of the object host_key_cert types
func (*CaHostKeyCert) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/host_key_cert/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaHostKeyCert POST path
// Create a new ca/host_key_cert object
func (*CaHostKeyCert) PostPath() string {
	return "/api/objects/ca/host_key_cert/"
}

// PutPath implements sophos.RestObject and returns the CaHostKeyCert PUT path
// Creates or updates the complete object host_key_cert
func (*CaHostKeyCert) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/host_key_cert/%s", ref)
}

// Type implements sophos.Object
func (c *CaHostKeyCert) GetType() string { return c._type }

// CaMetaX509 is an Sophos Endpoint subType and implements sophos.RestObject
type CaMetaX509s []CaMetaX509
type CaMetaX509 struct {
	Locked             string   `json:"_locked"`
	Reference          string   `json:"_ref"`
	_type              string   `json:"_type"`
	Comment            string   `json:"comment"`
	Enddate            string   `json:"enddate"`
	Fingerprint        string   `json:"fingerprint"`
	Issuer             string   `json:"issuer"`
	IssuerHash         string   `json:"issuer_hash"`
	Name               string   `json:"name"`
	PublicKeyAlgorithm string   `json:"public_key_algorithm"`
	Serial             string   `json:"serial"`
	Startdate          string   `json:"startdate"`
	Subject            string   `json:"subject"`
	SubjectAltNames    []string `json:"subject_alt_names"`
	SubjectHash        string   `json:"subject_hash"`
	VpnID              string   `json:"vpn_id"`
	VpnIDType          string   `json:"vpn_id_type"`
}

// GetPath implements sophos.RestObject and returns the CaMetaX509 GET path
// Returns all available ca/meta_x509 objects
func (*CaMetaX509) GetPath() string { return "/api/objects/ca/meta_x509/" }

// RefRequired implements sophos.RestObject
func (*CaMetaX509) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CaMetaX509 DELETE path
// Creates or updates the complete object meta_x509
func (*CaMetaX509) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/meta_x509/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaMetaX509 PATCH path
// Changes to parts of the object meta_x509 types
func (*CaMetaX509) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/meta_x509/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaMetaX509 POST path
// Create a new ca/meta_x509 object
func (*CaMetaX509) PostPath() string {
	return "/api/objects/ca/meta_x509/"
}

// PutPath implements sophos.RestObject and returns the CaMetaX509 PUT path
// Creates or updates the complete object meta_x509
func (*CaMetaX509) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/meta_x509/%s", ref)
}

// CaCrl is an Sophos Endpoint subType and implements sophos.RestObject
type CaCrl []interface{}

// GetPath implements sophos.RestObject and returns the CaCrl GET path
// Returns all available ca/crl objects
func (*CaCrl) GetPath() string { return "/api/objects/ca/crl/" }

// RefRequired implements sophos.RestObject
func (*CaCrl) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CaCrl DELETE path
// Creates or updates the complete object crl
func (*CaCrl) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/crl/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CaCrl PATCH path
// Changes to parts of the object crl types
func (*CaCrl) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/crl/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CaCrl POST path
// Create a new ca/crl object
func (*CaCrl) PostPath() string {
	return "/api/objects/ca/crl/"
}

// PutPath implements sophos.RestObject and returns the CaCrl PUT path
// Creates or updates the complete object crl
func (*CaCrl) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ca/crl/%s", ref)
}

// ClientlessVpn is a generated struct representing the Sophos ClientlessVpn Endpoint
// GET /api/nodes/clientless_vpn
type ClientlessVpn struct {
	ClientlessVpnConnection ClientlessVpnConnection `json:"clientless_vpn_connection"`
	ClientlessVpnGroup      ClientlessVpnGroup      `json:"clientless_vpn_group"`
}

var defsClientlessVpn = map[string]sophos.RestObject{
	"ClientlessVpnConnection": &ClientlessVpnConnection{},
	"ClientlessVpnGroup":      &ClientlessVpnGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of ClientlessVpn's Objects
func (ClientlessVpn) RestObjects() map[string]sophos.RestObject {
	return defsClientlessVpn
}

// GetPath implements sophos.RestGetter
func (*ClientlessVpn) GetPath() string { return "/api/nodes/clientless_vpn" }

// RefRequired implements sophos.RestGetter
func (*ClientlessVpn) RefRequired() (string, bool) { return "", false }

var defClientlessVpn = &sophos.Definition{Description: "clientless_vpn", Name: "clientless_vpn", Link: "/api/definitions/clientless_vpn", Swag: map[string]sophos.MethodMap{"/objects/clientless_vpn/connection/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"clientless_vpn/connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/clientless_vpn/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available clientless_vpn/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"clientless_vpn/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new clientless_vpn/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "clientless_vpn/group that will be created", Type: "", Required: true}}, Tags: []string{"clientless_vpn/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/clientless_vpn/group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"clientless_vpn/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "clientless_vpn/group that will be changes", Type: "", Required: true}}, Tags: []string{"clientless_vpn/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "clientless_vpn/group that will be updated", Type: "", Required: true}}, Tags: []string{"clientless_vpn/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"clientless_vpn/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/clientless_vpn/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"clientless_vpn/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/clientless_vpn/connection/": {"get": sophos.MethodDescriptions{Description: "Returns all available clientless_vpn/connection objects", Parameters: []sophos.Parameter(nil), Tags: []string{"clientless_vpn/connection"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new clientless_vpn/connection object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "clientless_vpn/connection that will be created", Type: "", Required: true}}, Tags: []string{"clientless_vpn/connection"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/clientless_vpn/connection/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "clientless_vpn/connection that will be updated", Type: "", Required: true}}, Tags: []string{"clientless_vpn/connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"clientless_vpn/connection"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"clientless_vpn/connection"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "clientless_vpn/connection that will be changes", Type: "", Required: true}}, Tags: []string{"clientless_vpn/connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}}}

// Definition returns the /api/definitions struct of ClientlessVpn
func (ClientlessVpn) Definition() sophos.Definition { return *defClientlessVpn }

// ApiRoutes returns all known ClientlessVpn Paths
func (ClientlessVpn) ApiRoutes() []string {
	return []string{
		"/api/objects/clientless_vpn/connection/",
		"/api/objects/clientless_vpn/connection/{ref}",
		"/api/objects/clientless_vpn/connection/{ref}/usedby",
		"/api/objects/clientless_vpn/group/",
		"/api/objects/clientless_vpn/group/{ref}",
		"/api/objects/clientless_vpn/group/{ref}/usedby",
	}
}

// References returns the ClientlessVpn's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (ClientlessVpn) References() []string {
	return []string{
		"REF_ClientlessVpnConnection",
		"REF_ClientlessVpnGroup",
	}
}

// ClientlessVpnConnection is an Sophos Endpoint subType and implements sophos.RestObject
type ClientlessVpnConnections []ClientlessVpnConnection
type ClientlessVpnConnection struct {
	Locked        string        `json:"_locked"`
	Reference     string        `json:"_ref"`
	_type         string        `json:"_type"`
	AllowedUsers  []string      `json:"allowed_users"`
	AutoLogin     bool          `json:"auto_login"`
	Comment       string        `json:"comment"`
	Destination   string        `json:"destination"`
	HostKeyCert   string        `json:"host_key_cert"`
	Login         string        `json:"login"`
	Name          string        `json:"name"`
	Password      string        `json:"password"`
	PfExceptions  []interface{} `json:"pf_exceptions"`
	Port          int64         `json:"port"`
	PrivateKey    string        `json:"private_key"`
	RdpSecurity   string        `json:"rdp_security"`
	RecordSession bool          `json:"record_session"`
	Service       string        `json:"service"`
	ShareSession  bool          `json:"share_session"`
	Status        bool          `json:"status"`
	UID           int64         `json:"uid"`
	WebPath       string        `json:"web_path"`
}

// GetPath implements sophos.RestObject and returns the ClientlessVpnConnections GET path
// Returns all available clientless_vpn/connection objects
func (*ClientlessVpnConnections) GetPath() string { return "/api/objects/clientless_vpn/connection/" }

// RefRequired implements sophos.RestObject
func (*ClientlessVpnConnections) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ClientlessVpnConnections GET path
// Returns all available connection types
func (c *ClientlessVpnConnection) GetPath() string {
	return fmt.Sprintf("/api/objects/clientless_vpn/connection/%s", c.Reference)
}

// RefRequired implements sophos.RestObject
func (c *ClientlessVpnConnection) RefRequired() (string, bool) { return c.Reference, true }

// DeletePath implements sophos.RestObject and returns the ClientlessVpnConnection DELETE path
// Creates or updates the complete object connection
func (*ClientlessVpnConnection) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/clientless_vpn/connection/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ClientlessVpnConnection PATCH path
// Changes to parts of the object connection types
func (*ClientlessVpnConnection) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/clientless_vpn/connection/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ClientlessVpnConnection POST path
// Create a new clientless_vpn/connection object
func (*ClientlessVpnConnection) PostPath() string {
	return "/api/objects/clientless_vpn/connection/"
}

// PutPath implements sophos.RestObject and returns the ClientlessVpnConnection PUT path
// Creates or updates the complete object connection
func (*ClientlessVpnConnection) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/clientless_vpn/connection/%s", ref)
}

// Type implements sophos.Object
func (c *ClientlessVpnConnection) GetType() string { return c._type }

// ClientlessVpnGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ClientlessVpnGroup []interface{}

// GetPath implements sophos.RestObject and returns the ClientlessVpnGroup GET path
// Returns all available clientless_vpn/group objects
func (*ClientlessVpnGroup) GetPath() string { return "/api/objects/clientless_vpn/group/" }

// RefRequired implements sophos.RestObject
func (*ClientlessVpnGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ClientlessVpnGroup DELETE path
// Creates or updates the complete object group
func (*ClientlessVpnGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/clientless_vpn/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ClientlessVpnGroup PATCH path
// Changes to parts of the object group types
func (*ClientlessVpnGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/clientless_vpn/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ClientlessVpnGroup POST path
// Create a new clientless_vpn/group object
func (*ClientlessVpnGroup) PostPath() string {
	return "/api/objects/clientless_vpn/group/"
}

// PutPath implements sophos.RestObject and returns the ClientlessVpnGroup PUT path
// Creates or updates the complete object group
func (*ClientlessVpnGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/clientless_vpn/group/%s", ref)
}

// Condition is a generated struct representing the Sophos Condition Endpoint
// GET /api/nodes/condition
type Condition struct {
	ConditionObjref ConditionObjref `json:"condition_objref"`
	ConditionGroup  ConditionGroup  `json:"condition_group"`
}

var defsCondition = map[string]sophos.RestObject{
	"ConditionObjref": &ConditionObjref{},
	"ConditionGroup":  &ConditionGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Condition's Objects
func (Condition) RestObjects() map[string]sophos.RestObject {
	return defsCondition
}

// GetPath implements sophos.RestGetter
func (*Condition) GetPath() string { return "/api/nodes/condition" }

// RefRequired implements sophos.RestGetter
func (*Condition) RefRequired() (string, bool) { return "", false }

var defCondition = &sophos.Definition{Description: "condition", Name: "condition", Link: "/api/definitions/condition", Swag: map[string]sophos.MethodMap{"/objects/condition/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available condition/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"condition/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new condition/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "condition/group that will be created", Type: "", Required: true}}, Tags: []string{"condition/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/condition/group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"condition/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "condition/group that will be changes", Type: "", Required: true}}, Tags: []string{"condition/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "condition/group that will be updated", Type: "", Required: true}}, Tags: []string{"condition/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"condition/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/condition/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"condition/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/condition/objref/": {"get": sophos.MethodDescriptions{Description: "Returns all available condition/objref objects", Parameters: []sophos.Parameter(nil), Tags: []string{"condition/objref"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new condition/objref object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "condition/objref that will be created", Type: "", Required: true}}, Tags: []string{"condition/objref"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/condition/objref/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available objref types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"condition/objref"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object objref types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "condition/objref that will be changes", Type: "", Required: true}}, Tags: []string{"condition/objref"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object objref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "condition/objref that will be updated", Type: "", Required: true}}, Tags: []string{"condition/objref"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object objref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"condition/objref"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/condition/objref/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"condition/objref"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Condition
func (Condition) Definition() sophos.Definition { return *defCondition }

// ApiRoutes returns all known Condition Paths
func (Condition) ApiRoutes() []string {
	return []string{
		"/api/objects/condition/group/",
		"/api/objects/condition/group/{ref}",
		"/api/objects/condition/group/{ref}/usedby",
		"/api/objects/condition/objref/",
		"/api/objects/condition/objref/{ref}",
		"/api/objects/condition/objref/{ref}/usedby",
	}
}

// References returns the Condition's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Condition) References() []string {
	return []string{
		"REF_ConditionGroup",
		"REF_ConditionObjref",
	}
}

// ConditionObjref is an Sophos Endpoint subType and implements sophos.RestObject
type ConditionObjrefs []ConditionObjref
type ConditionObjref struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Attr      string `json:"attr"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Operator  string `json:"operator"`
	Ref       string `json:"ref"`
	Value     string `json:"value"`
}

// GetPath implements sophos.RestObject and returns the ConditionObjref GET path
// Returns all available condition/objref objects
func (*ConditionObjref) GetPath() string { return "/api/objects/condition/objref/" }

// RefRequired implements sophos.RestObject
func (*ConditionObjref) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ConditionObjref DELETE path
// Creates or updates the complete object objref
func (*ConditionObjref) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/condition/objref/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ConditionObjref PATCH path
// Changes to parts of the object objref types
func (*ConditionObjref) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/condition/objref/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ConditionObjref POST path
// Create a new condition/objref object
func (*ConditionObjref) PostPath() string {
	return "/api/objects/condition/objref/"
}

// PutPath implements sophos.RestObject and returns the ConditionObjref PUT path
// Creates or updates the complete object objref
func (*ConditionObjref) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/condition/objref/%s", ref)
}

// ConditionGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ConditionGroup []interface{}

// GetPath implements sophos.RestObject and returns the ConditionGroup GET path
// Returns all available condition/group objects
func (*ConditionGroup) GetPath() string { return "/api/objects/condition/group/" }

// RefRequired implements sophos.RestObject
func (*ConditionGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ConditionGroup DELETE path
// Creates or updates the complete object group
func (*ConditionGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/condition/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ConditionGroup PATCH path
// Changes to parts of the object group types
func (*ConditionGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/condition/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ConditionGroup POST path
// Create a new condition/group object
func (*ConditionGroup) PostPath() string {
	return "/api/objects/condition/group/"
}

// PutPath implements sophos.RestObject and returns the ConditionGroup PUT path
// Creates or updates the complete object group
func (*ConditionGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/condition/group/%s", ref)
}

// Cron is a generated struct representing the Sophos Cron Endpoint
// GET /api/nodes/cron
type Cron struct {
	CronGroup CronGroup `json:"cron_group"`
	CronAt    CronAt    `json:"cron_at"`
}

var defsCron = map[string]sophos.RestObject{
	"CronGroup": &CronGroup{},
	"CronAt":    &CronAt{},
}

// RestObjects implements the sophos.Node interface and returns a map of Cron's Objects
func (Cron) RestObjects() map[string]sophos.RestObject {
	return defsCron
}

// GetPath implements sophos.RestGetter
func (*Cron) GetPath() string { return "/api/nodes/cron" }

// RefRequired implements sophos.RestGetter
func (*Cron) RefRequired() (string, bool) { return "", false }

var defCron = &sophos.Definition{Description: "cron", Name: "cron", Link: "/api/definitions/cron", Swag: map[string]sophos.MethodMap{"/objects/cron/group/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "cron/group that will be changes", Type: "", Required: true}}, Tags: []string{"cron/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "cron/group that will be updated", Type: "", Required: true}}, Tags: []string{"cron/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"cron/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"cron/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/cron/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"cron/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/cron/at/": {"get": sophos.MethodDescriptions{Description: "Returns all available cron/at objects", Parameters: []sophos.Parameter(nil), Tags: []string{"cron/at"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new cron/at object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "cron/at that will be created", Type: "", Required: true}}, Tags: []string{"cron/at"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/cron/at/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available at types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"cron/at"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object at types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "cron/at that will be changes", Type: "", Required: true}}, Tags: []string{"cron/at"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object at", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "cron/at that will be updated", Type: "", Required: true}}, Tags: []string{"cron/at"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object at", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"cron/at"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/cron/at/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"cron/at"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/cron/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available cron/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"cron/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new cron/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "cron/group that will be created", Type: "", Required: true}}, Tags: []string{"cron/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Cron
func (Cron) Definition() sophos.Definition { return *defCron }

// ApiRoutes returns all known Cron Paths
func (Cron) ApiRoutes() []string {
	return []string{
		"/api/objects/cron/at/",
		"/api/objects/cron/at/{ref}",
		"/api/objects/cron/at/{ref}/usedby",
		"/api/objects/cron/group/",
		"/api/objects/cron/group/{ref}",
		"/api/objects/cron/group/{ref}/usedby",
	}
}

// References returns the Cron's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Cron) References() []string {
	return []string{
		"REF_CronAt",
		"REF_CronGroup",
	}
}

// CronGroup is an Sophos Endpoint subType and implements sophos.RestObject
type CronGroup []interface{}

// GetPath implements sophos.RestObject and returns the CronGroup GET path
// Returns all available cron/group objects
func (*CronGroup) GetPath() string { return "/api/objects/cron/group/" }

// RefRequired implements sophos.RestObject
func (*CronGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CronGroup DELETE path
// Creates or updates the complete object group
func (*CronGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/cron/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CronGroup PATCH path
// Changes to parts of the object group types
func (*CronGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/cron/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CronGroup POST path
// Create a new cron/group object
func (*CronGroup) PostPath() string {
	return "/api/objects/cron/group/"
}

// PutPath implements sophos.RestObject and returns the CronGroup PUT path
// Creates or updates the complete object group
func (*CronGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/cron/group/%s", ref)
}

// CronAt is an Sophos Endpoint subType and implements sophos.RestObject
type CronAt []interface{}

// GetPath implements sophos.RestObject and returns the CronAt GET path
// Returns all available cron/at objects
func (*CronAt) GetPath() string { return "/api/objects/cron/at/" }

// RefRequired implements sophos.RestObject
func (*CronAt) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the CronAt DELETE path
// Creates or updates the complete object at
func (*CronAt) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/cron/at/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the CronAt PATCH path
// Changes to parts of the object at types
func (*CronAt) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/cron/at/%s", ref)
}

// PostPath implements sophos.RestObject and returns the CronAt POST path
// Create a new cron/at object
func (*CronAt) PostPath() string {
	return "/api/objects/cron/at/"
}

// PutPath implements sophos.RestObject and returns the CronAt PUT path
// Creates or updates the complete object at
func (*CronAt) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/cron/at/%s", ref)
}

// Dhcp is a generated struct representing the Sophos Dhcp Endpoint
// GET /api/nodes/dhcp
type Dhcp struct {
	Relay struct {
		DhcpServer string        `json:"dhcp_server"`
		Interfaces []interface{} `json:"interfaces"`
		Status     int64         `json:"status"`
	} `json:"relay"`
	Relay6 struct {
		ItfsFacingClients []interface{} `json:"itfs_facing_clients"`
		ItfsFacingServer6 []interface{} `json:"itfs_facing_server6"`
		Status            int64         `json:"status"`
	} `json:"relay6"`
	Server struct {
		Custom4 string   `json:"custom4"`
		Custom6 string   `json:"custom6"`
		Servers []string `json:"servers"`
	} `json:"server"`
}

var defsDhcp = map[string]sophos.RestObject{
	"DhcpOption6":   &DhcpOption6{},
	"DhcpServer":    &DhcpServer{},
	"DhcpServer6":   &DhcpServer6{},
	"DhcpStateless": &DhcpStateless{},
	"DhcpGroup":     &DhcpGroup{},
	"DhcpOption":    &DhcpOption{},
}

// RestObjects implements the sophos.Node interface and returns a map of Dhcp's Objects
func (Dhcp) RestObjects() map[string]sophos.RestObject {
	return defsDhcp
}

// GetPath implements sophos.RestGetter
func (*Dhcp) GetPath() string { return "/api/nodes/dhcp" }

// RefRequired implements sophos.RestGetter
func (*Dhcp) RefRequired() (string, bool) { return "", false }

var defDhcp = &sophos.Definition{Description: "dhcp", Name: "dhcp", Link: "/api/definitions/dhcp", Swag: map[string]sophos.MethodMap{"/objects/dhcp/stateless/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available stateless types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/stateless"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object stateless types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/stateless that will be changes", Type: "", Required: true}}, Tags: []string{"dhcp/stateless"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object stateless", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/stateless that will be updated", Type: "", Required: true}}, Tags: []string{"dhcp/stateless"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object stateless", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dhcp/stateless"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/server6/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available server6 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/server6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object server6 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/server6 that will be changes", Type: "", Required: true}}, Tags: []string{"dhcp/server6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object server6", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/server6 that will be updated", Type: "", Required: true}}, Tags: []string{"dhcp/server6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object server6", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dhcp/server6"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/stateless/": {"get": sophos.MethodDescriptions{Description: "Returns all available dhcp/stateless objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dhcp/stateless"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dhcp/stateless object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/stateless that will be created", Type: "", Required: true}}, Tags: []string{"dhcp/stateless"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/dhcp/option/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/option"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/option6/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/option6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/server/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/server"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/dhcp/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available dhcp/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dhcp/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dhcp/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/group that will be created", Type: "", Required: true}}, Tags: []string{"dhcp/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/dhcp/option/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object option types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/option that will be changes", Type: "", Required: true}}, Tags: []string{"dhcp/option"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object option", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/option that will be updated", Type: "", Required: true}}, Tags: []string{"dhcp/option"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object option", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dhcp/option"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available option types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/option"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/option/": {"get": sophos.MethodDescriptions{Description: "Returns all available dhcp/option objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dhcp/option"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dhcp/option object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/option that will be created", Type: "", Required: true}}, Tags: []string{"dhcp/option"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/server/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object server types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/server that will be changes", Type: "", Required: true}}, Tags: []string{"dhcp/server"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object server", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/server that will be updated", Type: "", Required: true}}, Tags: []string{"dhcp/server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object server", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dhcp/server"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available server types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/dhcp/server6/": {"get": sophos.MethodDescriptions{Description: "Returns all available dhcp/server6 objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dhcp/server6"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dhcp/server6 object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/server6 that will be created", Type: "", Required: true}}, Tags: []string{"dhcp/server6"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/stateless/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/stateless"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/group/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/group that will be changes", Type: "", Required: true}}, Tags: []string{"dhcp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/group that will be updated", Type: "", Required: true}}, Tags: []string{"dhcp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dhcp/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/dhcp/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/dhcp/server/": {"get": sophos.MethodDescriptions{Description: "Returns all available dhcp/server objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dhcp/server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dhcp/server object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/server that will be created", Type: "", Required: true}}, Tags: []string{"dhcp/server"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/server6/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/server6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/option6/": {"post": sophos.MethodDescriptions{Description: "Create a new dhcp/option6 object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/option6 that will be created", Type: "", Required: true}}, Tags: []string{"dhcp/option6"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available dhcp/option6 objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dhcp/option6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dhcp/option6/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object option6", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dhcp/option6"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available option6 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dhcp/option6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object option6 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/option6 that will be changes", Type: "", Required: true}}, Tags: []string{"dhcp/option6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object option6", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dhcp/option6 that will be updated", Type: "", Required: true}}, Tags: []string{"dhcp/option6"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}}}

// Definition returns the /api/definitions struct of Dhcp
func (Dhcp) Definition() sophos.Definition { return *defDhcp }

// ApiRoutes returns all known Dhcp Paths
func (Dhcp) ApiRoutes() []string {
	return []string{
		"/api/objects/dhcp/group/",
		"/api/objects/dhcp/group/{ref}",
		"/api/objects/dhcp/group/{ref}/usedby",
		"/api/objects/dhcp/option/",
		"/api/objects/dhcp/option/{ref}",
		"/api/objects/dhcp/option/{ref}/usedby",
		"/api/objects/dhcp/option6/",
		"/api/objects/dhcp/option6/{ref}",
		"/api/objects/dhcp/option6/{ref}/usedby",
		"/api/objects/dhcp/server/",
		"/api/objects/dhcp/server/{ref}",
		"/api/objects/dhcp/server/{ref}/usedby",
		"/api/objects/dhcp/server6/",
		"/api/objects/dhcp/server6/{ref}",
		"/api/objects/dhcp/server6/{ref}/usedby",
		"/api/objects/dhcp/stateless/",
		"/api/objects/dhcp/stateless/{ref}",
		"/api/objects/dhcp/stateless/{ref}/usedby",
	}
}

// References returns the Dhcp's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Dhcp) References() []string {
	return []string{
		"REF_DhcpGroup",
		"REF_DhcpOption",
		"REF_DhcpOption6",
		"REF_DhcpServer",
		"REF_DhcpServer6",
		"REF_DhcpStateless",
	}
}

// DhcpOption6 is an Sophos Endpoint subType and implements sophos.RestObject
type DhcpOption6 []interface{}

// GetPath implements sophos.RestObject and returns the DhcpOption6 GET path
// Returns all available dhcp/option6 objects
func (*DhcpOption6) GetPath() string { return "/api/objects/dhcp/option6/" }

// RefRequired implements sophos.RestObject
func (*DhcpOption6) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the DhcpOption6 DELETE path
// Creates or updates the complete object option6
func (*DhcpOption6) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/option6/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DhcpOption6 PATCH path
// Changes to parts of the object option6 types
func (*DhcpOption6) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/option6/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DhcpOption6 POST path
// Create a new dhcp/option6 object
func (*DhcpOption6) PostPath() string {
	return "/api/objects/dhcp/option6/"
}

// PutPath implements sophos.RestObject and returns the DhcpOption6 PUT path
// Creates or updates the complete object option6
func (*DhcpOption6) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/option6/%s", ref)
}

// DhcpServer is an Sophos Endpoint subType and implements sophos.RestObject
type DhcpServers []DhcpServer
type DhcpServer struct {
	Locked          string   `json:"_locked"`
	Reference       string   `json:"_ref"`
	_type           string   `json:"_type"`
	Address         string   `json:"address"`
	Comment         string   `json:"comment"`
	Custom          string   `json:"custom"`
	DefaultGateway  string   `json:"default_gateway"`
	DenyUnknown     bool     `json:"deny_unknown"`
	DNS1            string   `json:"dns1"`
	DNS2            string   `json:"dns2"`
	Domain          string   `json:"domain"`
	Interface       string   `json:"interface"`
	LeaseTime       int64    `json:"lease_time"`
	Mappings        []string `json:"mappings"`
	Name            string   `json:"name"`
	Netmask         int64    `json:"netmask"`
	ProxyAutoconfig bool     `json:"proxy_autoconfig"`
	RangeEnd        string   `json:"range_end"`
	RangeStart      string   `json:"range_start"`
	RelayMode       bool     `json:"relay_mode"`
	Status          bool     `json:"status"`
	Wins            string   `json:"wins"`
	WinsNodeType    string   `json:"wins_node_type"`
}

// GetPath implements sophos.RestObject and returns the DhcpServers GET path
// Returns all available dhcp/server objects
func (*DhcpServers) GetPath() string { return "/api/objects/dhcp/server/" }

// RefRequired implements sophos.RestObject
func (*DhcpServers) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the DhcpServers GET path
// Returns all available server types
func (d *DhcpServer) GetPath() string { return fmt.Sprintf("/api/objects/dhcp/server/%s", d.Reference) }

// RefRequired implements sophos.RestObject
func (d *DhcpServer) RefRequired() (string, bool) { return d.Reference, true }

// DeletePath implements sophos.RestObject and returns the DhcpServer DELETE path
// Creates or updates the complete object server
func (*DhcpServer) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/server/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DhcpServer PATCH path
// Changes to parts of the object server types
func (*DhcpServer) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/server/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DhcpServer POST path
// Create a new dhcp/server object
func (*DhcpServer) PostPath() string {
	return "/api/objects/dhcp/server/"
}

// PutPath implements sophos.RestObject and returns the DhcpServer PUT path
// Creates or updates the complete object server
func (*DhcpServer) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/server/%s", ref)
}

// Type implements sophos.Object
func (d *DhcpServer) GetType() string { return d._type }

// DhcpServer6 is an Sophos Endpoint subType and implements sophos.RestObject
type DhcpServer6 []interface{}

// GetPath implements sophos.RestObject and returns the DhcpServer6 GET path
// Returns all available dhcp/server6 objects
func (*DhcpServer6) GetPath() string { return "/api/objects/dhcp/server6/" }

// RefRequired implements sophos.RestObject
func (*DhcpServer6) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the DhcpServer6 DELETE path
// Creates or updates the complete object server6
func (*DhcpServer6) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/server6/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DhcpServer6 PATCH path
// Changes to parts of the object server6 types
func (*DhcpServer6) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/server6/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DhcpServer6 POST path
// Create a new dhcp/server6 object
func (*DhcpServer6) PostPath() string {
	return "/api/objects/dhcp/server6/"
}

// PutPath implements sophos.RestObject and returns the DhcpServer6 PUT path
// Creates or updates the complete object server6
func (*DhcpServer6) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/server6/%s", ref)
}

// DhcpStateless is an Sophos Endpoint subType and implements sophos.RestObject
type DhcpStateless []interface{}

// GetPath implements sophos.RestObject and returns the DhcpStateless GET path
// Returns all available dhcp/stateless objects
func (*DhcpStateless) GetPath() string { return "/api/objects/dhcp/stateless/" }

// RefRequired implements sophos.RestObject
func (*DhcpStateless) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the DhcpStateless DELETE path
// Creates or updates the complete object stateless
func (*DhcpStateless) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/stateless/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DhcpStateless PATCH path
// Changes to parts of the object stateless types
func (*DhcpStateless) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/stateless/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DhcpStateless POST path
// Create a new dhcp/stateless object
func (*DhcpStateless) PostPath() string {
	return "/api/objects/dhcp/stateless/"
}

// PutPath implements sophos.RestObject and returns the DhcpStateless PUT path
// Creates or updates the complete object stateless
func (*DhcpStateless) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/stateless/%s", ref)
}

// DhcpGroup is an Sophos Endpoint subType and implements sophos.RestObject
type DhcpGroup []interface{}

// GetPath implements sophos.RestObject and returns the DhcpGroup GET path
// Returns all available dhcp/group objects
func (*DhcpGroup) GetPath() string { return "/api/objects/dhcp/group/" }

// RefRequired implements sophos.RestObject
func (*DhcpGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the DhcpGroup DELETE path
// Creates or updates the complete object group
func (*DhcpGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DhcpGroup PATCH path
// Changes to parts of the object group types
func (*DhcpGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DhcpGroup POST path
// Create a new dhcp/group object
func (*DhcpGroup) PostPath() string {
	return "/api/objects/dhcp/group/"
}

// PutPath implements sophos.RestObject and returns the DhcpGroup PUT path
// Creates or updates the complete object group
func (*DhcpGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/group/%s", ref)
}

// DhcpOption is an Sophos Endpoint subType and implements sophos.RestObject
type DhcpOptions []DhcpOption
type DhcpOption struct {
	Locked    string        `json:"_locked"`
	Reference string        `json:"_ref"`
	_type     string        `json:"_type"`
	Address   string        `json:"address"`
	Code      int64         `json:"code"`
	Comment   string        `json:"comment"`
	DhcpName  string        `json:"dhcp_name"`
	Host      []interface{} `json:"host"`
	Integer   int64         `json:"integer"`
	Mac       string        `json:"mac"`
	Name      string        `json:"name"`
	Scope     string        `json:"scope"`
	Server    []interface{} `json:"server"`
	Status    bool          `json:"status"`
	String    string        `json:"string"`
	Text      string        `json:"text"`
	Type      string        `json:"type"`
	Vendor    string        `json:"vendor"`
}

// GetPath implements sophos.RestObject and returns the DhcpOption GET path
// Returns all available dhcp/option objects
func (*DhcpOption) GetPath() string { return "/api/objects/dhcp/option/" }

// RefRequired implements sophos.RestObject
func (*DhcpOption) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the DhcpOption DELETE path
// Creates or updates the complete object option
func (*DhcpOption) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/option/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DhcpOption PATCH path
// Changes to parts of the object option types
func (*DhcpOption) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/option/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DhcpOption POST path
// Create a new dhcp/option object
func (*DhcpOption) PostPath() string {
	return "/api/objects/dhcp/option/"
}

// PutPath implements sophos.RestObject and returns the DhcpOption PUT path
// Creates or updates the complete object option
func (*DhcpOption) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dhcp/option/%s", ref)
}

// Dns is a generated struct representing the Sophos Dns Endpoint
// GET /api/nodes/dns
type Dns struct {
	AllowedNetworks []string      `json:"allowed_networks"`
	Axfr            []interface{} `json:"axfr"`
	Dnssec          int64         `json:"dnssec"`
	Email           string        `json:"email"`
	EmptyZones      string        `json:"empty_zones"`
	FwdDynamic      int64         `json:"fwd_dynamic"`
	FwdStatic       []string      `json:"fwd_static"`
	RecheckInterval int64         `json:"recheck_interval"`
	Routes          []string      `json:"routes"`
}

var defsDns = map[string]sophos.RestObject{
	"DnsAxfr":  &DnsAxfr{},
	"DnsGroup": &DnsGroup{},
	"DnsRoute": &DnsRoute{},
}

// RestObjects implements the sophos.Node interface and returns a map of Dns's Objects
func (Dns) RestObjects() map[string]sophos.RestObject {
	return defsDns
}

// GetPath implements sophos.RestGetter
func (*Dns) GetPath() string { return "/api/nodes/dns" }

// RefRequired implements sophos.RestGetter
func (*Dns) RefRequired() (string, bool) { return "", false }

var defDns = &sophos.Definition{Description: "dns", Name: "dns", Link: "/api/definitions/dns", Swag: map[string]sophos.MethodMap{"/objects/dns/route/": {"get": sophos.MethodDescriptions{Description: "Returns all available dns/route objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dns/route"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dns/route object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dns/route that will be created", Type: "", Required: true}}, Tags: []string{"dns/route"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dns/route/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object route", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dns/route"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available route types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dns/route"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object route types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dns/route that will be changes", Type: "", Required: true}}, Tags: []string{"dns/route"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object route", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dns/route that will be updated", Type: "", Required: true}}, Tags: []string{"dns/route"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/dns/route/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dns/route"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dns/axfr/": {"get": sophos.MethodDescriptions{Description: "Returns all available dns/axfr objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dns/axfr"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dns/axfr object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dns/axfr that will be created", Type: "", Required: true}}, Tags: []string{"dns/axfr"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dns/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available dns/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dns/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dns/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dns/group that will be created", Type: "", Required: true}}, Tags: []string{"dns/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dns/group/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dns/group that will be updated", Type: "", Required: true}}, Tags: []string{"dns/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dns/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dns/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dns/group that will be changes", Type: "", Required: true}}, Tags: []string{"dns/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/dns/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dns/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dns/axfr/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object axfr", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dns/axfr"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available axfr types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dns/axfr"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object axfr types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dns/axfr that will be changes", Type: "", Required: true}}, Tags: []string{"dns/axfr"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object axfr", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dns/axfr that will be updated", Type: "", Required: true}}, Tags: []string{"dns/axfr"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/dns/axfr/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dns/axfr"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Dns
func (Dns) Definition() sophos.Definition { return *defDns }

// ApiRoutes returns all known Dns Paths
func (Dns) ApiRoutes() []string {
	return []string{
		"/api/objects/dns/axfr/",
		"/api/objects/dns/axfr/{ref}",
		"/api/objects/dns/axfr/{ref}/usedby",
		"/api/objects/dns/group/",
		"/api/objects/dns/group/{ref}",
		"/api/objects/dns/group/{ref}/usedby",
		"/api/objects/dns/route/",
		"/api/objects/dns/route/{ref}",
		"/api/objects/dns/route/{ref}/usedby",
	}
}

// References returns the Dns's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Dns) References() []string {
	return []string{
		"REF_DnsAxfr",
		"REF_DnsGroup",
		"REF_DnsRoute",
	}
}

// DnsAxfr is an Sophos Endpoint subType and implements sophos.RestObject
type DnsAxfr []interface{}

// GetPath implements sophos.RestObject and returns the DnsAxfr GET path
// Returns all available dns/axfr objects
func (*DnsAxfr) GetPath() string { return "/api/objects/dns/axfr/" }

// RefRequired implements sophos.RestObject
func (*DnsAxfr) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the DnsAxfr DELETE path
// Creates or updates the complete object axfr
func (*DnsAxfr) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dns/axfr/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DnsAxfr PATCH path
// Changes to parts of the object axfr types
func (*DnsAxfr) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dns/axfr/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DnsAxfr POST path
// Create a new dns/axfr object
func (*DnsAxfr) PostPath() string {
	return "/api/objects/dns/axfr/"
}

// PutPath implements sophos.RestObject and returns the DnsAxfr PUT path
// Creates or updates the complete object axfr
func (*DnsAxfr) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dns/axfr/%s", ref)
}

// DnsGroup is an Sophos Endpoint subType and implements sophos.RestObject
type DnsGroup []interface{}

// GetPath implements sophos.RestObject and returns the DnsGroup GET path
// Returns all available dns/group objects
func (*DnsGroup) GetPath() string { return "/api/objects/dns/group/" }

// RefRequired implements sophos.RestObject
func (*DnsGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the DnsGroup DELETE path
// Creates or updates the complete object group
func (*DnsGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dns/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DnsGroup PATCH path
// Changes to parts of the object group types
func (*DnsGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dns/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DnsGroup POST path
// Create a new dns/group object
func (*DnsGroup) PostPath() string {
	return "/api/objects/dns/group/"
}

// PutPath implements sophos.RestObject and returns the DnsGroup PUT path
// Creates or updates the complete object group
func (*DnsGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dns/group/%s", ref)
}

// DnsRoute is an Sophos Endpoint subType and implements sophos.RestObject
type DnsRoutes []DnsRoute
type DnsRoute struct {
	Locked    string   `json:"_locked"`
	Reference string   `json:"_ref"`
	_type     string   `json:"_type"`
	Comment   string   `json:"comment"`
	Name      string   `json:"name"`
	Prefix    string   `json:"prefix"`
	Status    bool     `json:"status"`
	Targets   []string `json:"targets"`
}

// GetPath implements sophos.RestObject and returns the DnsRoutes GET path
// Returns all available dns/route objects
func (*DnsRoutes) GetPath() string { return "/api/objects/dns/route/" }

// RefRequired implements sophos.RestObject
func (*DnsRoutes) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the DnsRoutes GET path
// Returns all available route types
func (d *DnsRoute) GetPath() string { return fmt.Sprintf("/api/objects/dns/route/%s", d.Reference) }

// RefRequired implements sophos.RestObject
func (d *DnsRoute) RefRequired() (string, bool) { return d.Reference, true }

// DeletePath implements sophos.RestObject and returns the DnsRoute DELETE path
// Creates or updates the complete object route
func (*DnsRoute) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dns/route/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DnsRoute PATCH path
// Changes to parts of the object route types
func (*DnsRoute) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dns/route/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DnsRoute POST path
// Create a new dns/route object
func (*DnsRoute) PostPath() string {
	return "/api/objects/dns/route/"
}

// PutPath implements sophos.RestObject and returns the DnsRoute PUT path
// Creates or updates the complete object route
func (*DnsRoute) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dns/route/%s", ref)
}

// Type implements sophos.Object
func (d *DnsRoute) GetType() string { return d._type }

// Dyndns is a generated struct representing the Sophos Dyndns Endpoint
// GET /api/nodes/dyndns
type Dyndns struct {
	Rules []interface{} `json:"rules"`
}

var defsDyndns = map[string]sophos.RestObject{
	"DyndnsDyndns": &DyndnsDyndns{},
	"DyndnsGroup":  &DyndnsGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Dyndns's Objects
func (Dyndns) RestObjects() map[string]sophos.RestObject {
	return defsDyndns
}

// GetPath implements sophos.RestGetter
func (*Dyndns) GetPath() string { return "/api/nodes/dyndns" }

// RefRequired implements sophos.RestGetter
func (*Dyndns) RefRequired() (string, bool) { return "", false }

var defDyndns = &sophos.Definition{Description: "dyndns", Name: "dyndns", Link: "/api/definitions/dyndns", Swag: map[string]sophos.MethodMap{"/objects/dyndns/dyndns/": {"get": sophos.MethodDescriptions{Description: "Returns all available dyndns/dyndns objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dyndns/dyndns"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dyndns/dyndns object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dyndns/dyndns that will be created", Type: "", Required: true}}, Tags: []string{"dyndns/dyndns"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/dyndns/dyndns/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object dyndns", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dyndns/dyndns"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available dyndns types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dyndns/dyndns"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object dyndns types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dyndns/dyndns that will be changes", Type: "", Required: true}}, Tags: []string{"dyndns/dyndns"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object dyndns", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dyndns/dyndns that will be updated", Type: "", Required: true}}, Tags: []string{"dyndns/dyndns"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dyndns/dyndns/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dyndns/dyndns"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dyndns/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available dyndns/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"dyndns/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new dyndns/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dyndns/group that will be created", Type: "", Required: true}}, Tags: []string{"dyndns/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/dyndns/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"dyndns/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dyndns/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dyndns/group that will be changes", Type: "", Required: true}}, Tags: []string{"dyndns/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "dyndns/group that will be updated", Type: "", Required: true}}, Tags: []string{"dyndns/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/dyndns/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"dyndns/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}}}

// Definition returns the /api/definitions struct of Dyndns
func (Dyndns) Definition() sophos.Definition { return *defDyndns }

// ApiRoutes returns all known Dyndns Paths
func (Dyndns) ApiRoutes() []string {
	return []string{
		"/api/objects/dyndns/dyndns/",
		"/api/objects/dyndns/dyndns/{ref}",
		"/api/objects/dyndns/dyndns/{ref}/usedby",
		"/api/objects/dyndns/group/",
		"/api/objects/dyndns/group/{ref}",
		"/api/objects/dyndns/group/{ref}/usedby",
	}
}

// References returns the Dyndns's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Dyndns) References() []string {
	return []string{
		"REF_DyndnsDyndns",
		"REF_DyndnsGroup",
	}
}

// DyndnsDyndns is an Sophos Endpoint subType and implements sophos.RestObject
type DyndnsDyndns []interface{}

// GetPath implements sophos.RestObject and returns the DyndnsDyndns GET path
// Returns all available dyndns/dyndns objects
func (*DyndnsDyndns) GetPath() string { return "/api/objects/dyndns/dyndns/" }

// RefRequired implements sophos.RestObject
func (*DyndnsDyndns) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the DyndnsDyndns DELETE path
// Creates or updates the complete object dyndns
func (*DyndnsDyndns) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dyndns/dyndns/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DyndnsDyndns PATCH path
// Changes to parts of the object dyndns types
func (*DyndnsDyndns) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dyndns/dyndns/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DyndnsDyndns POST path
// Create a new dyndns/dyndns object
func (*DyndnsDyndns) PostPath() string {
	return "/api/objects/dyndns/dyndns/"
}

// PutPath implements sophos.RestObject and returns the DyndnsDyndns PUT path
// Creates or updates the complete object dyndns
func (*DyndnsDyndns) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dyndns/dyndns/%s", ref)
}

// DyndnsGroup is an Sophos Endpoint subType and implements sophos.RestObject
type DyndnsGroup []interface{}

// GetPath implements sophos.RestObject and returns the DyndnsGroup GET path
// Returns all available dyndns/group objects
func (*DyndnsGroup) GetPath() string { return "/api/objects/dyndns/group/" }

// RefRequired implements sophos.RestObject
func (*DyndnsGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the DyndnsGroup DELETE path
// Creates or updates the complete object group
func (*DyndnsGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/dyndns/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the DyndnsGroup PATCH path
// Changes to parts of the object group types
func (*DyndnsGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/dyndns/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the DyndnsGroup POST path
// Create a new dyndns/group object
func (*DyndnsGroup) PostPath() string {
	return "/api/objects/dyndns/group/"
}

// PutPath implements sophos.RestObject and returns the DyndnsGroup PUT path
// Creates or updates the complete object group
func (*DyndnsGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/dyndns/group/%s", ref)
}

// Emailpki is a generated struct representing the Sophos Emailpki Endpoint
// GET /api/nodes/emailpki
type Emailpki struct {
	Authority struct {
		Cert                  string `json:"cert"`
		Fingerprint           string `json:"fingerprint"`
		Key                   string `json:"key"`
		PostmasterFingerprint string `json:"postmaster_fingerprint"`
		PostmasterPrivkey     string `json:"postmaster_privkey"`
		PostmasterPubkey      string `json:"postmaster_pubkey"`
	} `json:"authority"`
	Global struct {
		City         string `json:"city"`
		Country      string `json:"country"`
		Organization string `json:"organization"`
		Postmaster   string `json:"postmaster"`
		Status       int64  `json:"status"`
	} `json:"global"`
	Objects struct {
		Cas     []string      `json:"cas"`
		Openpgp []interface{} `json:"openpgp"`
		Smime   []interface{} `json:"smime"`
		Users   []interface{} `json:"users"`
	} `json:"objects"`
	Openpgp struct {
		MainKeysize int64 `json:"main_keysize"`
		SubKeysize  int64 `json:"sub_keysize"`
	} `json:"openpgp"`
	Options struct {
		ExternalAuto     int64  `json:"external_auto"`
		Keyserver        string `json:"keyserver"`
		PolicyDecryption int64  `json:"policy_decryption"`
		PolicyEncryption int64  `json:"policy_encryption"`
		PolicySign       int64  `json:"policy_sign"`
		PolicyVerify     int64  `json:"policy_verify"`
	} `json:"options"`
}

var defsEmailpki = map[string]sophos.RestObject{
	"EmailpkiGroup":   &EmailpkiGroup{},
	"EmailpkiOpenpgp": &EmailpkiOpenpgp{},
	"EmailpkiSmime":   &EmailpkiSmime{},
	"EmailpkiUser":    &EmailpkiUser{},
}

// RestObjects implements the sophos.Node interface and returns a map of Emailpki's Objects
func (Emailpki) RestObjects() map[string]sophos.RestObject {
	return defsEmailpki
}

// GetPath implements sophos.RestGetter
func (*Emailpki) GetPath() string { return "/api/nodes/emailpki" }

// RefRequired implements sophos.RestGetter
func (*Emailpki) RefRequired() (string, bool) { return "", false }

var defEmailpki = &sophos.Definition{Description: "emailpki", Name: "emailpki", Link: "/api/definitions/emailpki", Swag: map[string]sophos.MethodMap{"/objects/emailpki/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"emailpki/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/emailpki/openpgp/": {"get": sophos.MethodDescriptions{Description: "Returns all available emailpki/openpgp objects", Parameters: []sophos.Parameter(nil), Tags: []string{"emailpki/openpgp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new emailpki/openpgp object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/openpgp that will be created", Type: "", Required: true}}, Tags: []string{"emailpki/openpgp"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/emailpki/openpgp/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"emailpki/openpgp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/emailpki/smime/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object smime", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"emailpki/smime"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available smime types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"emailpki/smime"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object smime types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/smime that will be changes", Type: "", Required: true}}, Tags: []string{"emailpki/smime"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object smime", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/smime that will be updated", Type: "", Required: true}}, Tags: []string{"emailpki/smime"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/emailpki/smime/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"emailpki/smime"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/emailpki/user/": {"get": sophos.MethodDescriptions{Description: "Returns all available emailpki/user objects", Parameters: []sophos.Parameter(nil), Tags: []string{"emailpki/user"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new emailpki/user object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/user that will be created", Type: "", Required: true}}, Tags: []string{"emailpki/user"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/emailpki/user/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available user types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"emailpki/user"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object user types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/user that will be changes", Type: "", Required: true}}, Tags: []string{"emailpki/user"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object user", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/user that will be updated", Type: "", Required: true}}, Tags: []string{"emailpki/user"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object user", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"emailpki/user"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/emailpki/user/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"emailpki/user"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/emailpki/group/": {"post": sophos.MethodDescriptions{Description: "Create a new emailpki/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/group that will be created", Type: "", Required: true}}, Tags: []string{"emailpki/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available emailpki/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"emailpki/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/emailpki/group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"emailpki/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/group that will be changes", Type: "", Required: true}}, Tags: []string{"emailpki/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/group that will be updated", Type: "", Required: true}}, Tags: []string{"emailpki/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"emailpki/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/emailpki/openpgp/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object openpgp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"emailpki/openpgp"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available openpgp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"emailpki/openpgp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object openpgp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/openpgp that will be changes", Type: "", Required: true}}, Tags: []string{"emailpki/openpgp"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object openpgp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/openpgp that will be updated", Type: "", Required: true}}, Tags: []string{"emailpki/openpgp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/emailpki/smime/": {"get": sophos.MethodDescriptions{Description: "Returns all available emailpki/smime objects", Parameters: []sophos.Parameter(nil), Tags: []string{"emailpki/smime"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new emailpki/smime object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "emailpki/smime that will be created", Type: "", Required: true}}, Tags: []string{"emailpki/smime"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}}}

// Definition returns the /api/definitions struct of Emailpki
func (Emailpki) Definition() sophos.Definition { return *defEmailpki }

// ApiRoutes returns all known Emailpki Paths
func (Emailpki) ApiRoutes() []string {
	return []string{
		"/api/objects/emailpki/group/",
		"/api/objects/emailpki/group/{ref}",
		"/api/objects/emailpki/group/{ref}/usedby",
		"/api/objects/emailpki/openpgp/",
		"/api/objects/emailpki/openpgp/{ref}",
		"/api/objects/emailpki/openpgp/{ref}/usedby",
		"/api/objects/emailpki/smime/",
		"/api/objects/emailpki/smime/{ref}",
		"/api/objects/emailpki/smime/{ref}/usedby",
		"/api/objects/emailpki/user/",
		"/api/objects/emailpki/user/{ref}",
		"/api/objects/emailpki/user/{ref}/usedby",
	}
}

// References returns the Emailpki's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Emailpki) References() []string {
	return []string{
		"REF_EmailpkiGroup",
		"REF_EmailpkiOpenpgp",
		"REF_EmailpkiSmime",
		"REF_EmailpkiUser",
	}
}

// EmailpkiGroup is an Sophos Endpoint subType and implements sophos.RestObject
type EmailpkiGroup []interface{}

// GetPath implements sophos.RestObject and returns the EmailpkiGroup GET path
// Returns all available emailpki/group objects
func (*EmailpkiGroup) GetPath() string { return "/api/objects/emailpki/group/" }

// RefRequired implements sophos.RestObject
func (*EmailpkiGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EmailpkiGroup DELETE path
// Creates or updates the complete object group
func (*EmailpkiGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EmailpkiGroup PATCH path
// Changes to parts of the object group types
func (*EmailpkiGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EmailpkiGroup POST path
// Create a new emailpki/group object
func (*EmailpkiGroup) PostPath() string {
	return "/api/objects/emailpki/group/"
}

// PutPath implements sophos.RestObject and returns the EmailpkiGroup PUT path
// Creates or updates the complete object group
func (*EmailpkiGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/group/%s", ref)
}

// EmailpkiOpenpgp is an Sophos Endpoint subType and implements sophos.RestObject
type EmailpkiOpenpgp []interface{}

// GetPath implements sophos.RestObject and returns the EmailpkiOpenpgp GET path
// Returns all available emailpki/openpgp objects
func (*EmailpkiOpenpgp) GetPath() string { return "/api/objects/emailpki/openpgp/" }

// RefRequired implements sophos.RestObject
func (*EmailpkiOpenpgp) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EmailpkiOpenpgp DELETE path
// Creates or updates the complete object openpgp
func (*EmailpkiOpenpgp) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/openpgp/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EmailpkiOpenpgp PATCH path
// Changes to parts of the object openpgp types
func (*EmailpkiOpenpgp) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/openpgp/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EmailpkiOpenpgp POST path
// Create a new emailpki/openpgp object
func (*EmailpkiOpenpgp) PostPath() string {
	return "/api/objects/emailpki/openpgp/"
}

// PutPath implements sophos.RestObject and returns the EmailpkiOpenpgp PUT path
// Creates or updates the complete object openpgp
func (*EmailpkiOpenpgp) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/openpgp/%s", ref)
}

// EmailpkiSmime is an Sophos Endpoint subType and implements sophos.RestObject
type EmailpkiSmime []interface{}

// GetPath implements sophos.RestObject and returns the EmailpkiSmime GET path
// Returns all available emailpki/smime objects
func (*EmailpkiSmime) GetPath() string { return "/api/objects/emailpki/smime/" }

// RefRequired implements sophos.RestObject
func (*EmailpkiSmime) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EmailpkiSmime DELETE path
// Creates or updates the complete object smime
func (*EmailpkiSmime) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/smime/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EmailpkiSmime PATCH path
// Changes to parts of the object smime types
func (*EmailpkiSmime) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/smime/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EmailpkiSmime POST path
// Create a new emailpki/smime object
func (*EmailpkiSmime) PostPath() string {
	return "/api/objects/emailpki/smime/"
}

// PutPath implements sophos.RestObject and returns the EmailpkiSmime PUT path
// Creates or updates the complete object smime
func (*EmailpkiSmime) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/smime/%s", ref)
}

// EmailpkiUser is an Sophos Endpoint subType and implements sophos.RestObject
type EmailpkiUser []interface{}

// GetPath implements sophos.RestObject and returns the EmailpkiUser GET path
// Returns all available emailpki/user objects
func (*EmailpkiUser) GetPath() string { return "/api/objects/emailpki/user/" }

// RefRequired implements sophos.RestObject
func (*EmailpkiUser) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EmailpkiUser DELETE path
// Creates or updates the complete object user
func (*EmailpkiUser) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/user/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EmailpkiUser PATCH path
// Changes to parts of the object user types
func (*EmailpkiUser) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/user/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EmailpkiUser POST path
// Create a new emailpki/user object
func (*EmailpkiUser) PostPath() string {
	return "/api/objects/emailpki/user/"
}

// PutPath implements sophos.RestObject and returns the EmailpkiUser PUT path
// Creates or updates the complete object user
func (*EmailpkiUser) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/emailpki/user/%s", ref)
}

// Epp is a generated struct representing the Sophos Epp Endpoint
// GET /api/nodes/epp
type Epp struct {
	AllowedNetworks       []string      `json:"allowed_networks"`
	Certificate           string        `json:"certificate"`
	City                  string        `json:"city"`
	Country               string        `json:"country"`
	DefaultEndpointsGroup string        `json:"default_endpoints_group"`
	Devices               []interface{} `json:"devices"`
	Email                 string        `json:"email"`
	Endpoints             []interface{} `json:"endpoints"`
	EndpointsGroups       []string      `json:"endpoints_groups"`
	Exceptions            struct {
		Av []interface{} `json:"av"`
		Dc []interface{} `json:"dc"`
	} `json:"exceptions"`
	FallbackURL       string `json:"fallback_url"`
	MagnetPassword    string `json:"magnet_password"`
	MagnetUsername    string `json:"magnet_username"`
	Organization      string `json:"organization"`
	ParentProxyHost   string `json:"parent_proxy_host"`
	ParentProxyPort   int64  `json:"parent_proxy_port"`
	ParentProxyStatus int64  `json:"parent_proxy_status"`
	Policies          struct {
		Av []string `json:"av"`
		Dc []string `json:"dc"`
	} `json:"policies"`
	Port              int64  `json:"port"`
	PrivateKey        string `json:"private_key"`
	RegistrationToken string `json:"registration_token"`
	Status            struct {
		Av     int64 `json:"av"`
		Broker int64 `json:"broker"`
		Dc     int64 `json:"dc"`
		Epp    int64 `json:"epp"`
		Wc     int64 `json:"wc"`
	} `json:"status"`
	TamperPassword string `json:"tamper_password"`
	Version        string `json:"version"`
	WdxToken       string `json:"wdx_token"`
}

var defsEpp = map[string]sophos.RestObject{
	"EppDcException":    &EppDcException{},
	"EppDevice":         &EppDevice{},
	"EppEndpoint":       &EppEndpoint{},
	"EppGroup":          &EppGroup{},
	"EppAvException":    &EppAvException{},
	"EppAvPolicy":       &EppAvPolicy{},
	"EppDcPolicy":       &EppDcPolicy{},
	"EppEndpointsGroup": &EppEndpointsGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Epp's Objects
func (Epp) RestObjects() map[string]sophos.RestObject {
	return defsEpp
}

// GetPath implements sophos.RestGetter
func (*Epp) GetPath() string { return "/api/nodes/epp" }

// RefRequired implements sophos.RestGetter
func (*Epp) RefRequired() (string, bool) { return "", false }

var defEpp = &sophos.Definition{Description: "epp", Name: "epp", Link: "/api/definitions/epp", Swag: map[string]sophos.MethodMap{"/objects/epp/av_policy/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/av_policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/dc_exception/": {"get": sophos.MethodDescriptions{Description: "Returns all available epp/dc_exception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"epp/dc_exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new epp/dc_exception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/dc_exception that will be created", Type: "", Required: true}}, Tags: []string{"epp/dc_exception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/epp/dc_policy/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object dc_policy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"epp/dc_policy"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available dc_policy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/dc_policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object dc_policy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/dc_policy that will be changes", Type: "", Required: true}}, Tags: []string{"epp/dc_policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object dc_policy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/dc_policy that will be updated", Type: "", Required: true}}, Tags: []string{"epp/dc_policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/epp/dc_policy/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/dc_policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/endpoints_group/": {"get": sophos.MethodDescriptions{Description: "Returns all available epp/endpoints_group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"epp/endpoints_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new epp/endpoints_group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/endpoints_group that will be created", Type: "", Required: true}}, Tags: []string{"epp/endpoints_group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/endpoints_group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object endpoints_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"epp/endpoints_group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available endpoints_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/endpoints_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object endpoints_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/endpoints_group that will be changes", Type: "", Required: true}}, Tags: []string{"epp/endpoints_group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object endpoints_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/endpoints_group that will be updated", Type: "", Required: true}}, Tags: []string{"epp/endpoints_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/epp/av_exception/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object av_exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"epp/av_exception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available av_exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/av_exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object av_exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/av_exception that will be changes", Type: "", Required: true}}, Tags: []string{"epp/av_exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object av_exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/av_exception that will be updated", Type: "", Required: true}}, Tags: []string{"epp/av_exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/epp/av_exception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/av_exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/av_policy/": {"get": sophos.MethodDescriptions{Description: "Returns all available epp/av_policy objects", Parameters: []sophos.Parameter(nil), Tags: []string{"epp/av_policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new epp/av_policy object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/av_policy that will be created", Type: "", Required: true}}, Tags: []string{"epp/av_policy"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/epp/av_policy/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object av_policy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"epp/av_policy"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available av_policy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/av_policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object av_policy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/av_policy that will be changes", Type: "", Required: true}}, Tags: []string{"epp/av_policy"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object av_policy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/av_policy that will be updated", Type: "", Required: true}}, Tags: []string{"epp/av_policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/epp/dc_policy/": {"post": sophos.MethodDescriptions{Description: "Create a new epp/dc_policy object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/dc_policy that will be created", Type: "", Required: true}}, Tags: []string{"epp/dc_policy"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available epp/dc_policy objects", Parameters: []sophos.Parameter(nil), Tags: []string{"epp/dc_policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/endpoint/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object endpoint", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"epp/endpoint"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available endpoint types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/endpoint"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object endpoint types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/endpoint that will be changes", Type: "", Required: true}}, Tags: []string{"epp/endpoint"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object endpoint", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/endpoint that will be updated", Type: "", Required: true}}, Tags: []string{"epp/endpoint"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/epp/endpoints_group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/endpoints_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available epp/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"epp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new epp/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/group that will be created", Type: "", Required: true}}, Tags: []string{"epp/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/epp/dc_exception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/dc_exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/device/": {"get": sophos.MethodDescriptions{Description: "Returns all available epp/device objects", Parameters: []sophos.Parameter(nil), Tags: []string{"epp/device"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new epp/device object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/device that will be created", Type: "", Required: true}}, Tags: []string{"epp/device"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/endpoint/": {"get": sophos.MethodDescriptions{Description: "Returns all available epp/endpoint objects", Parameters: []sophos.Parameter(nil), Tags: []string{"epp/endpoint"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new epp/endpoint object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/endpoint that will be created", Type: "", Required: true}}, Tags: []string{"epp/endpoint"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/epp/group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/group that will be changes", Type: "", Required: true}}, Tags: []string{"epp/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/group that will be updated", Type: "", Required: true}}, Tags: []string{"epp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"epp/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/av_exception/": {"get": sophos.MethodDescriptions{Description: "Returns all available epp/av_exception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"epp/av_exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new epp/av_exception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/av_exception that will be created", Type: "", Required: true}}, Tags: []string{"epp/av_exception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/epp/dc_exception/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object dc_exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"epp/dc_exception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available dc_exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/dc_exception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object dc_exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/dc_exception that will be changes", Type: "", Required: true}}, Tags: []string{"epp/dc_exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object dc_exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/dc_exception that will be updated", Type: "", Required: true}}, Tags: []string{"epp/dc_exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/epp/device/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available device types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/device"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object device types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/device that will be changes", Type: "", Required: true}}, Tags: []string{"epp/device"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object device", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "epp/device that will be updated", Type: "", Required: true}}, Tags: []string{"epp/device"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object device", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"epp/device"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}}, "/objects/epp/device/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/device"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/epp/endpoint/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"epp/endpoint"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Epp
func (Epp) Definition() sophos.Definition { return *defEpp }

// ApiRoutes returns all known Epp Paths
func (Epp) ApiRoutes() []string {
	return []string{
		"/api/objects/epp/av_exception/",
		"/api/objects/epp/av_exception/{ref}",
		"/api/objects/epp/av_exception/{ref}/usedby",
		"/api/objects/epp/av_policy/",
		"/api/objects/epp/av_policy/{ref}",
		"/api/objects/epp/av_policy/{ref}/usedby",
		"/api/objects/epp/dc_exception/",
		"/api/objects/epp/dc_exception/{ref}",
		"/api/objects/epp/dc_exception/{ref}/usedby",
		"/api/objects/epp/dc_policy/",
		"/api/objects/epp/dc_policy/{ref}",
		"/api/objects/epp/dc_policy/{ref}/usedby",
		"/api/objects/epp/device/",
		"/api/objects/epp/device/{ref}",
		"/api/objects/epp/device/{ref}/usedby",
		"/api/objects/epp/endpoint/",
		"/api/objects/epp/endpoint/{ref}",
		"/api/objects/epp/endpoint/{ref}/usedby",
		"/api/objects/epp/endpoints_group/",
		"/api/objects/epp/endpoints_group/{ref}",
		"/api/objects/epp/endpoints_group/{ref}/usedby",
		"/api/objects/epp/group/",
		"/api/objects/epp/group/{ref}",
		"/api/objects/epp/group/{ref}/usedby",
	}
}

// References returns the Epp's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Epp) References() []string {
	return []string{
		"REF_EppAvException",
		"REF_EppAvPolicy",
		"REF_EppDcException",
		"REF_EppDcPolicy",
		"REF_EppDevice",
		"REF_EppEndpoint",
		"REF_EppEndpointsGroup",
		"REF_EppGroup",
	}
}

// EppDcException is an Sophos Endpoint subType and implements sophos.RestObject
type EppDcException []interface{}

// GetPath implements sophos.RestObject and returns the EppDcException GET path
// Returns all available epp/dc_exception objects
func (*EppDcException) GetPath() string { return "/api/objects/epp/dc_exception/" }

// RefRequired implements sophos.RestObject
func (*EppDcException) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EppDcException DELETE path
// Creates or updates the complete object dc_exception
func (*EppDcException) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/dc_exception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EppDcException PATCH path
// Changes to parts of the object dc_exception types
func (*EppDcException) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/dc_exception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EppDcException POST path
// Create a new epp/dc_exception object
func (*EppDcException) PostPath() string {
	return "/api/objects/epp/dc_exception/"
}

// PutPath implements sophos.RestObject and returns the EppDcException PUT path
// Creates or updates the complete object dc_exception
func (*EppDcException) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/dc_exception/%s", ref)
}

// EppDevice is an Sophos Endpoint subType and implements sophos.RestObject
type EppDevice []interface{}

// GetPath implements sophos.RestObject and returns the EppDevice GET path
// Returns all available epp/device objects
func (*EppDevice) GetPath() string { return "/api/objects/epp/device/" }

// RefRequired implements sophos.RestObject
func (*EppDevice) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EppDevice DELETE path
// Creates or updates the complete object device
func (*EppDevice) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/device/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EppDevice PATCH path
// Changes to parts of the object device types
func (*EppDevice) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/device/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EppDevice POST path
// Create a new epp/device object
func (*EppDevice) PostPath() string {
	return "/api/objects/epp/device/"
}

// PutPath implements sophos.RestObject and returns the EppDevice PUT path
// Creates or updates the complete object device
func (*EppDevice) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/device/%s", ref)
}

// EppEndpoint is an Sophos Endpoint subType and implements sophos.RestObject
type EppEndpoint []interface{}

// GetPath implements sophos.RestObject and returns the EppEndpoint GET path
// Returns all available epp/endpoint objects
func (*EppEndpoint) GetPath() string { return "/api/objects/epp/endpoint/" }

// RefRequired implements sophos.RestObject
func (*EppEndpoint) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EppEndpoint DELETE path
// Creates or updates the complete object endpoint
func (*EppEndpoint) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/endpoint/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EppEndpoint PATCH path
// Changes to parts of the object endpoint types
func (*EppEndpoint) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/endpoint/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EppEndpoint POST path
// Create a new epp/endpoint object
func (*EppEndpoint) PostPath() string {
	return "/api/objects/epp/endpoint/"
}

// PutPath implements sophos.RestObject and returns the EppEndpoint PUT path
// Creates or updates the complete object endpoint
func (*EppEndpoint) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/endpoint/%s", ref)
}

// EppGroup is an Sophos Endpoint subType and implements sophos.RestObject
type EppGroup []interface{}

// GetPath implements sophos.RestObject and returns the EppGroup GET path
// Returns all available epp/group objects
func (*EppGroup) GetPath() string { return "/api/objects/epp/group/" }

// RefRequired implements sophos.RestObject
func (*EppGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EppGroup DELETE path
// Creates or updates the complete object group
func (*EppGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EppGroup PATCH path
// Changes to parts of the object group types
func (*EppGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EppGroup POST path
// Create a new epp/group object
func (*EppGroup) PostPath() string {
	return "/api/objects/epp/group/"
}

// PutPath implements sophos.RestObject and returns the EppGroup PUT path
// Creates or updates the complete object group
func (*EppGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/group/%s", ref)
}

// EppAvException is an Sophos Endpoint subType and implements sophos.RestObject
type EppAvException []interface{}

// GetPath implements sophos.RestObject and returns the EppAvException GET path
// Returns all available epp/av_exception objects
func (*EppAvException) GetPath() string { return "/api/objects/epp/av_exception/" }

// RefRequired implements sophos.RestObject
func (*EppAvException) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EppAvException DELETE path
// Creates or updates the complete object av_exception
func (*EppAvException) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/av_exception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EppAvException PATCH path
// Changes to parts of the object av_exception types
func (*EppAvException) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/av_exception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EppAvException POST path
// Create a new epp/av_exception object
func (*EppAvException) PostPath() string {
	return "/api/objects/epp/av_exception/"
}

// PutPath implements sophos.RestObject and returns the EppAvException PUT path
// Creates or updates the complete object av_exception
func (*EppAvException) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/av_exception/%s", ref)
}

// EppAvPolicy is an Sophos Endpoint subType and implements sophos.RestObject
type EppAvPolicys []EppAvPolicy
type EppAvPolicy struct {
	Locked                    string `json:"_locked"`
	Reference                 string `json:"_ref"`
	_type                     string `json:"_type"`
	AlertOnly                 bool   `json:"alert_only"`
	AutoCleanup               bool   `json:"auto_cleanup"`
	BlockMaliciousSites       bool   `json:"block_malicious_sites"`
	Comment                   string `json:"comment"`
	DetectBufferOverflow      bool   `json:"detect_buffer_overflow"`
	DetectMaliciousFiles      bool   `json:"detect_malicious_files"`
	DetectSuspiciousBehaviour bool   `json:"detect_suspicious_behaviour"`
	DownloadScanning          bool   `json:"download_scanning"`
	Hips                      bool   `json:"hips"`
	LowPriorityScan           bool   `json:"low_priority_scan"`
	Name                      string `json:"name"`
	OnAccessScanning          bool   `json:"on_access_scanning"`
	OnRead                    bool   `json:"on_read"`
	OnRename                  bool   `json:"on_rename"`
	OnWrite                   bool   `json:"on_write"`
	RootKitScan               bool   `json:"root_kit_scan"`
	ScanForPua                bool   `json:"scan_for_pua"`
	ScanForSuspiciousFiles    bool   `json:"scan_for_suspicious_files"`
	ScanInsideArchive         bool   `json:"scan_inside_archive"`
	ScanSystemMemory          bool   `json:"scan_system_memory"`
	ScheduledScanning         bool   `json:"scheduled_scanning"`
	SendSampleFile            bool   `json:"send_sample_file"`
	SophosLiveProtection      bool   `json:"sophos_live_protection"`
	TimeEvent                 string `json:"time_event"`
	WebProtection             bool   `json:"web_protection"`
}

// GetPath implements sophos.RestObject and returns the EppAvPolicy GET path
// Returns all available epp/av_policy objects
func (*EppAvPolicy) GetPath() string { return "/api/objects/epp/av_policy/" }

// RefRequired implements sophos.RestObject
func (*EppAvPolicy) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EppAvPolicy DELETE path
// Creates or updates the complete object av_policy
func (*EppAvPolicy) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/av_policy/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EppAvPolicy PATCH path
// Changes to parts of the object av_policy types
func (*EppAvPolicy) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/av_policy/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EppAvPolicy POST path
// Create a new epp/av_policy object
func (*EppAvPolicy) PostPath() string {
	return "/api/objects/epp/av_policy/"
}

// PutPath implements sophos.RestObject and returns the EppAvPolicy PUT path
// Creates or updates the complete object av_policy
func (*EppAvPolicy) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/av_policy/%s", ref)
}

// EppDcPolicy is an Sophos Endpoint subType and implements sophos.RestObject
type EppDcPolicys []EppDcPolicy
type EppDcPolicy struct {
	Locked           string `json:"_locked"`
	Reference        string `json:"_ref"`
	_type            string `json:"_type"`
	Bluetooth        string `json:"bluetooth"`
	Comment          string `json:"comment"`
	EncryptedStorage string `json:"encrypted_storage"`
	FloppyDrive      string `json:"floppy_drive"`
	Infrared         string `json:"infrared"`
	Modem            string `json:"modem"`
	Name             string `json:"name"`
	OpticalDrive     string `json:"optical_drive"`
	RemovableStorage string `json:"removable_storage"`
	Wireless         string `json:"wireless"`
}

// GetPath implements sophos.RestObject and returns the EppDcPolicy GET path
// Returns all available epp/dc_policy objects
func (*EppDcPolicy) GetPath() string { return "/api/objects/epp/dc_policy/" }

// RefRequired implements sophos.RestObject
func (*EppDcPolicy) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the EppDcPolicy DELETE path
// Creates or updates the complete object dc_policy
func (*EppDcPolicy) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/dc_policy/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EppDcPolicy PATCH path
// Changes to parts of the object dc_policy types
func (*EppDcPolicy) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/dc_policy/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EppDcPolicy POST path
// Create a new epp/dc_policy object
func (*EppDcPolicy) PostPath() string {
	return "/api/objects/epp/dc_policy/"
}

// PutPath implements sophos.RestObject and returns the EppDcPolicy PUT path
// Creates or updates the complete object dc_policy
func (*EppDcPolicy) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/dc_policy/%s", ref)
}

// EppEndpointsGroup is an Sophos Endpoint subType and implements sophos.RestObject
type EppEndpointsGroups []EppEndpointsGroup
type EppEndpointsGroup struct {
	Locked           string        `json:"_locked"`
	Reference        string        `json:"_ref"`
	_type            string        `json:"_type"`
	AvPolicy         string        `json:"av_policy"`
	Comment          string        `json:"comment"`
	DcPolicy         string        `json:"dc_policy"`
	Endpoints        []interface{} `json:"endpoints"`
	Name             string        `json:"name"`
	ProxyAddress     string        `json:"proxy_address"`
	ProxyPassword    string        `json:"proxy_password"`
	ProxyPort        int64         `json:"proxy_port"`
	ProxySupport     bool          `json:"proxy_support"`
	ProxyUser        string        `json:"proxy_user"`
	TamperProtection bool          `json:"tamper_protection"`
	WebControl       bool          `json:"web_control"`
}

// GetPath implements sophos.RestObject and returns the EppEndpointsGroups GET path
// Returns all available epp/endpoints_group objects
func (*EppEndpointsGroups) GetPath() string { return "/api/objects/epp/endpoints_group/" }

// RefRequired implements sophos.RestObject
func (*EppEndpointsGroups) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the EppEndpointsGroups GET path
// Returns all available endpoints_group types
func (e *EppEndpointsGroup) GetPath() string {
	return fmt.Sprintf("/api/objects/epp/endpoints_group/%s", e.Reference)
}

// RefRequired implements sophos.RestObject
func (e *EppEndpointsGroup) RefRequired() (string, bool) { return e.Reference, true }

// DeletePath implements sophos.RestObject and returns the EppEndpointsGroup DELETE path
// Creates or updates the complete object endpoints_group
func (*EppEndpointsGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/endpoints_group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the EppEndpointsGroup PATCH path
// Changes to parts of the object endpoints_group types
func (*EppEndpointsGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/endpoints_group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the EppEndpointsGroup POST path
// Create a new epp/endpoints_group object
func (*EppEndpointsGroup) PostPath() string {
	return "/api/objects/epp/endpoints_group/"
}

// PutPath implements sophos.RestObject and returns the EppEndpointsGroup PUT path
// Creates or updates the complete object endpoints_group
func (*EppEndpointsGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/epp/endpoints_group/%s", ref)
}

// Type implements sophos.Object
func (e *EppEndpointsGroup) GetType() string { return e._type }

// Ftp is a generated struct representing the Sophos Ftp Endpoint
// GET /api/nodes/ftp
type Ftp struct {
	AllowedClients        []interface{} `json:"allowed_clients"`
	AllowedServers        []string      `json:"allowed_servers"`
	CffAv                 int64         `json:"cff_av"`
	CffAvEngines          string        `json:"cff_av_engines"`
	CffFileExtensions     []interface{} `json:"cff_file_extensions"`
	Exceptions            []interface{} `json:"exceptions"`
	MaxFileSize           int64         `json:"max_file_size"`
	MsWinMode             int64         `json:"ms_win_mode"`
	OperationMode         string        `json:"operation_mode"`
	RestrictedServers     []string      `json:"restricted_servers"`
	Status                int64         `json:"status"`
	TransparentSkip       []interface{} `json:"transparent_skip"`
	TransparentSkipAutoPf int64         `json:"transparent_skip_auto_pf"`
}

var defsFtp = map[string]sophos.RestObject{
	"FtpException": &FtpException{},
	"FtpGroup":     &FtpGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Ftp's Objects
func (Ftp) RestObjects() map[string]sophos.RestObject {
	return defsFtp
}

// GetPath implements sophos.RestGetter
func (*Ftp) GetPath() string { return "/api/nodes/ftp" }

// RefRequired implements sophos.RestGetter
func (*Ftp) RefRequired() (string, bool) { return "", false }

var defFtp = &sophos.Definition{Description: "ftp", Name: "ftp", Link: "/api/definitions/ftp", Swag: map[string]sophos.MethodMap{"/objects/ftp/exception/": {"get": sophos.MethodDescriptions{Description: "Returns all available ftp/exception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ftp/exception"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ftp/exception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ftp/exception that will be created", Type: "", Required: true}}, Tags: []string{"ftp/exception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/ftp/exception/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ftp/exception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ftp/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ftp/exception that will be changes", Type: "", Required: true}}, Tags: []string{"ftp/exception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ftp/exception that will be updated", Type: "", Required: true}}, Tags: []string{"ftp/exception"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/ftp/exception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ftp/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ftp/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ftp/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ftp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ftp/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ftp/group that will be created", Type: "", Required: true}}, Tags: []string{"ftp/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ftp/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ftp/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ftp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ftp/group that will be changes", Type: "", Required: true}}, Tags: []string{"ftp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ftp/group that will be updated", Type: "", Required: true}}, Tags: []string{"ftp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ftp/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ftp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Ftp
func (Ftp) Definition() sophos.Definition { return *defFtp }

// ApiRoutes returns all known Ftp Paths
func (Ftp) ApiRoutes() []string {
	return []string{
		"/api/objects/ftp/exception/",
		"/api/objects/ftp/exception/{ref}",
		"/api/objects/ftp/exception/{ref}/usedby",
		"/api/objects/ftp/group/",
		"/api/objects/ftp/group/{ref}",
		"/api/objects/ftp/group/{ref}/usedby",
	}
}

// References returns the Ftp's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Ftp) References() []string {
	return []string{
		"REF_FtpException",
		"REF_FtpGroup",
	}
}

// FtpException is an Sophos Endpoint subType and implements sophos.RestObject
type FtpException []interface{}

// GetPath implements sophos.RestObject and returns the FtpException GET path
// Returns all available ftp/exception objects
func (*FtpException) GetPath() string { return "/api/objects/ftp/exception/" }

// RefRequired implements sophos.RestObject
func (*FtpException) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the FtpException DELETE path
// Creates or updates the complete object exception
func (*FtpException) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ftp/exception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the FtpException PATCH path
// Changes to parts of the object exception types
func (*FtpException) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ftp/exception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the FtpException POST path
// Create a new ftp/exception object
func (*FtpException) PostPath() string {
	return "/api/objects/ftp/exception/"
}

// PutPath implements sophos.RestObject and returns the FtpException PUT path
// Creates or updates the complete object exception
func (*FtpException) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ftp/exception/%s", ref)
}

// FtpGroup is an Sophos Endpoint subType and implements sophos.RestObject
type FtpGroup []interface{}

// GetPath implements sophos.RestObject and returns the FtpGroup GET path
// Returns all available ftp/group objects
func (*FtpGroup) GetPath() string { return "/api/objects/ftp/group/" }

// RefRequired implements sophos.RestObject
func (*FtpGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the FtpGroup DELETE path
// Creates or updates the complete object group
func (*FtpGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ftp/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the FtpGroup PATCH path
// Changes to parts of the object group types
func (*FtpGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ftp/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the FtpGroup POST path
// Create a new ftp/group object
func (*FtpGroup) PostPath() string {
	return "/api/objects/ftp/group/"
}

// PutPath implements sophos.RestObject and returns the FtpGroup PUT path
// Creates or updates the complete object group
func (*FtpGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ftp/group/%s", ref)
}

// Geoip is a generated struct representing the Sophos Geoip Endpoint
// GET /api/nodes/geoip
type Geoip struct {
	CountriesDst []string      `json:"countries_dst"`
	CountriesSrc []string      `json:"countries_src"`
	Exceptions   []interface{} `json:"exceptions"`
	Log          string        `json:"log"`
	Status       int64         `json:"status"`
}

var defsGeoip = map[string]sophos.RestObject{
	"GeoipDstexception": &GeoipDstexception{},
	"GeoipGeoipgroup":   &GeoipGeoipgroup{},
	"GeoipGroup":        &GeoipGroup{},
	"GeoipSrcexception": &GeoipSrcexception{},
}

// RestObjects implements the sophos.Node interface and returns a map of Geoip's Objects
func (Geoip) RestObjects() map[string]sophos.RestObject {
	return defsGeoip
}

// GetPath implements sophos.RestGetter
func (*Geoip) GetPath() string { return "/api/nodes/geoip" }

// RefRequired implements sophos.RestGetter
func (*Geoip) RefRequired() (string, bool) { return "", false }

var defGeoip = &sophos.Definition{Description: "geoip", Name: "geoip", Link: "/api/definitions/geoip", Swag: map[string]sophos.MethodMap{"/objects/geoip/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available geoip/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"geoip/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new geoip/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/group that will be created", Type: "", Required: true}}, Tags: []string{"geoip/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/geoip/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"geoip/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/geoip/srcexception/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object srcexception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"geoip/srcexception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available srcexception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"geoip/srcexception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object srcexception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/srcexception that will be changes", Type: "", Required: true}}, Tags: []string{"geoip/srcexception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object srcexception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/srcexception that will be updated", Type: "", Required: true}}, Tags: []string{"geoip/srcexception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/geoip/dstexception/": {"get": sophos.MethodDescriptions{Description: "Returns all available geoip/dstexception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"geoip/dstexception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new geoip/dstexception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/dstexception that will be created", Type: "", Required: true}}, Tags: []string{"geoip/dstexception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/geoip/dstexception/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object dstexception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"geoip/dstexception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available dstexception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"geoip/dstexception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object dstexception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/dstexception that will be changes", Type: "", Required: true}}, Tags: []string{"geoip/dstexception"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object dstexception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/dstexception that will be updated", Type: "", Required: true}}, Tags: []string{"geoip/dstexception"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/geoip/geoipgroup/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"geoip/geoipgroup"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/geoip/group/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/group that will be updated", Type: "", Required: true}}, Tags: []string{"geoip/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"geoip/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"geoip/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/group that will be changes", Type: "", Required: true}}, Tags: []string{"geoip/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/geoip/srcexception/": {"post": sophos.MethodDescriptions{Description: "Create a new geoip/srcexception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/srcexception that will be created", Type: "", Required: true}}, Tags: []string{"geoip/srcexception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available geoip/srcexception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"geoip/srcexception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/geoip/srcexception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"geoip/srcexception"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/geoip/dstexception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"geoip/dstexception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/geoip/geoipgroup/": {"get": sophos.MethodDescriptions{Description: "Returns all available geoip/geoipgroup objects", Parameters: []sophos.Parameter(nil), Tags: []string{"geoip/geoipgroup"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new geoip/geoipgroup object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/geoipgroup that will be created", Type: "", Required: true}}, Tags: []string{"geoip/geoipgroup"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/geoip/geoipgroup/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object geoipgroup", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/geoipgroup that will be updated", Type: "", Required: true}}, Tags: []string{"geoip/geoipgroup"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object geoipgroup", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"geoip/geoipgroup"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available geoipgroup types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"geoip/geoipgroup"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object geoipgroup types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "geoip/geoipgroup that will be changes", Type: "", Required: true}}, Tags: []string{"geoip/geoipgroup"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}}}

// Definition returns the /api/definitions struct of Geoip
func (Geoip) Definition() sophos.Definition { return *defGeoip }

// ApiRoutes returns all known Geoip Paths
func (Geoip) ApiRoutes() []string {
	return []string{
		"/api/objects/geoip/dstexception/",
		"/api/objects/geoip/dstexception/{ref}",
		"/api/objects/geoip/dstexception/{ref}/usedby",
		"/api/objects/geoip/geoipgroup/",
		"/api/objects/geoip/geoipgroup/{ref}",
		"/api/objects/geoip/geoipgroup/{ref}/usedby",
		"/api/objects/geoip/group/",
		"/api/objects/geoip/group/{ref}",
		"/api/objects/geoip/group/{ref}/usedby",
		"/api/objects/geoip/srcexception/",
		"/api/objects/geoip/srcexception/{ref}",
		"/api/objects/geoip/srcexception/{ref}/usedby",
	}
}

// References returns the Geoip's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Geoip) References() []string {
	return []string{
		"REF_GeoipDstexception",
		"REF_GeoipGeoipgroup",
		"REF_GeoipGroup",
		"REF_GeoipSrcexception",
	}
}

// GeoipDstexception is an Sophos Endpoint subType and implements sophos.RestObject
type GeoipDstexception []interface{}

// GetPath implements sophos.RestObject and returns the GeoipDstexception GET path
// Returns all available geoip/dstexception objects
func (*GeoipDstexception) GetPath() string { return "/api/objects/geoip/dstexception/" }

// RefRequired implements sophos.RestObject
func (*GeoipDstexception) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the GeoipDstexception DELETE path
// Creates or updates the complete object dstexception
func (*GeoipDstexception) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/dstexception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the GeoipDstexception PATCH path
// Changes to parts of the object dstexception types
func (*GeoipDstexception) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/dstexception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the GeoipDstexception POST path
// Create a new geoip/dstexception object
func (*GeoipDstexception) PostPath() string {
	return "/api/objects/geoip/dstexception/"
}

// PutPath implements sophos.RestObject and returns the GeoipDstexception PUT path
// Creates or updates the complete object dstexception
func (*GeoipDstexception) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/dstexception/%s", ref)
}

// GeoipGeoipgroup is an Sophos Endpoint subType and implements sophos.RestObject
type GeoipGeoipgroups []GeoipGeoipgroup
type GeoipGeoipgroup struct {
	Locked    string   `json:"_locked"`
	Reference string   `json:"_ref"`
	_type     string   `json:"_type"`
	Comment   string   `json:"comment"`
	Countries []string `json:"countries"`
	Name      string   `json:"name"`
}

// GetPath implements sophos.RestObject and returns the GeoipGeoipgroups GET path
// Returns all available geoip/geoipgroup objects
func (*GeoipGeoipgroups) GetPath() string { return "/api/objects/geoip/geoipgroup/" }

// RefRequired implements sophos.RestObject
func (*GeoipGeoipgroups) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the GeoipGeoipgroups GET path
// Returns all available geoipgroup types
func (g *GeoipGeoipgroup) GetPath() string {
	return fmt.Sprintf("/api/objects/geoip/geoipgroup/%s", g.Reference)
}

// RefRequired implements sophos.RestObject
func (g *GeoipGeoipgroup) RefRequired() (string, bool) { return g.Reference, true }

// DeletePath implements sophos.RestObject and returns the GeoipGeoipgroup DELETE path
// Creates or updates the complete object geoipgroup
func (*GeoipGeoipgroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/geoipgroup/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the GeoipGeoipgroup PATCH path
// Changes to parts of the object geoipgroup types
func (*GeoipGeoipgroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/geoipgroup/%s", ref)
}

// PostPath implements sophos.RestObject and returns the GeoipGeoipgroup POST path
// Create a new geoip/geoipgroup object
func (*GeoipGeoipgroup) PostPath() string {
	return "/api/objects/geoip/geoipgroup/"
}

// PutPath implements sophos.RestObject and returns the GeoipGeoipgroup PUT path
// Creates or updates the complete object geoipgroup
func (*GeoipGeoipgroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/geoipgroup/%s", ref)
}

// Type implements sophos.Object
func (g *GeoipGeoipgroup) GetType() string { return g._type }

// GeoipGroup is an Sophos Endpoint subType and implements sophos.RestObject
type GeoipGroup []interface{}

// GetPath implements sophos.RestObject and returns the GeoipGroup GET path
// Returns all available geoip/group objects
func (*GeoipGroup) GetPath() string { return "/api/objects/geoip/group/" }

// RefRequired implements sophos.RestObject
func (*GeoipGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the GeoipGroup DELETE path
// Creates or updates the complete object group
func (*GeoipGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the GeoipGroup PATCH path
// Changes to parts of the object group types
func (*GeoipGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the GeoipGroup POST path
// Create a new geoip/group object
func (*GeoipGroup) PostPath() string {
	return "/api/objects/geoip/group/"
}

// PutPath implements sophos.RestObject and returns the GeoipGroup PUT path
// Creates or updates the complete object group
func (*GeoipGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/group/%s", ref)
}

// GeoipSrcexception is an Sophos Endpoint subType and implements sophos.RestObject
type GeoipSrcexception []interface{}

// GetPath implements sophos.RestObject and returns the GeoipSrcexception GET path
// Returns all available geoip/srcexception objects
func (*GeoipSrcexception) GetPath() string { return "/api/objects/geoip/srcexception/" }

// RefRequired implements sophos.RestObject
func (*GeoipSrcexception) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the GeoipSrcexception DELETE path
// Creates or updates the complete object srcexception
func (*GeoipSrcexception) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/srcexception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the GeoipSrcexception PATCH path
// Changes to parts of the object srcexception types
func (*GeoipSrcexception) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/srcexception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the GeoipSrcexception POST path
// Create a new geoip/srcexception object
func (*GeoipSrcexception) PostPath() string {
	return "/api/objects/geoip/srcexception/"
}

// PutPath implements sophos.RestObject and returns the GeoipSrcexception PUT path
// Creates or updates the complete object srcexception
func (*GeoipSrcexception) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/geoip/srcexception/%s", ref)
}

// Hotspot is a generated struct representing the Sophos Hotspot Endpoint
// GET /api/nodes/hotspot
type Hotspot struct {
	Cert            string        `json:"cert"`
	DeleteDays      int64         `json:"delete_days"`
	SslPortal       int64         `json:"ssl_portal"`
	Status          int64         `json:"status"`
	TransparentSkip []interface{} `json:"transparent_skip"`
}

var defsHotspot = map[string]sophos.RestObject{
	"HotspotGroup":   &HotspotGroup{},
	"HotspotPortal":  &HotspotPortal{},
	"HotspotVoucher": &HotspotVoucher{},
}

// RestObjects implements the sophos.Node interface and returns a map of Hotspot's Objects
func (Hotspot) RestObjects() map[string]sophos.RestObject {
	return defsHotspot
}

// GetPath implements sophos.RestGetter
func (*Hotspot) GetPath() string { return "/api/nodes/hotspot" }

// RefRequired implements sophos.RestGetter
func (*Hotspot) RefRequired() (string, bool) { return "", false }

var defHotspot = &sophos.Definition{Description: "hotspot", Name: "hotspot", Link: "/api/definitions/hotspot", Swag: map[string]sophos.MethodMap{"/objects/hotspot/portal/": {"get": sophos.MethodDescriptions{Description: "Returns all available hotspot/portal objects", Parameters: []sophos.Parameter(nil), Tags: []string{"hotspot/portal"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new hotspot/portal object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "hotspot/portal that will be created", Type: "", Required: true}}, Tags: []string{"hotspot/portal"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/hotspot/voucher/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available voucher types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"hotspot/voucher"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object voucher types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "hotspot/voucher that will be changes", Type: "", Required: true}}, Tags: []string{"hotspot/voucher"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object voucher", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "hotspot/voucher that will be updated", Type: "", Required: true}}, Tags: []string{"hotspot/voucher"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object voucher", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"hotspot/voucher"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/hotspot/voucher/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"hotspot/voucher"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/hotspot/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"hotspot/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"hotspot/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "hotspot/group that will be changes", Type: "", Required: true}}, Tags: []string{"hotspot/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "hotspot/group that will be updated", Type: "", Required: true}}, Tags: []string{"hotspot/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/hotspot/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"hotspot/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/hotspot/portal/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object portal types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "hotspot/portal that will be changes", Type: "", Required: true}}, Tags: []string{"hotspot/portal"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object portal", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "hotspot/portal that will be updated", Type: "", Required: true}}, Tags: []string{"hotspot/portal"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object portal", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"hotspot/portal"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available portal types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"hotspot/portal"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/hotspot/portal/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"hotspot/portal"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/hotspot/voucher/": {"get": sophos.MethodDescriptions{Description: "Returns all available hotspot/voucher objects", Parameters: []sophos.Parameter(nil), Tags: []string{"hotspot/voucher"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new hotspot/voucher object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "hotspot/voucher that will be created", Type: "", Required: true}}, Tags: []string{"hotspot/voucher"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/hotspot/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available hotspot/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"hotspot/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new hotspot/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "hotspot/group that will be created", Type: "", Required: true}}, Tags: []string{"hotspot/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}}}

// Definition returns the /api/definitions struct of Hotspot
func (Hotspot) Definition() sophos.Definition { return *defHotspot }

// ApiRoutes returns all known Hotspot Paths
func (Hotspot) ApiRoutes() []string {
	return []string{
		"/api/objects/hotspot/group/",
		"/api/objects/hotspot/group/{ref}",
		"/api/objects/hotspot/group/{ref}/usedby",
		"/api/objects/hotspot/portal/",
		"/api/objects/hotspot/portal/{ref}",
		"/api/objects/hotspot/portal/{ref}/usedby",
		"/api/objects/hotspot/voucher/",
		"/api/objects/hotspot/voucher/{ref}",
		"/api/objects/hotspot/voucher/{ref}/usedby",
	}
}

// References returns the Hotspot's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Hotspot) References() []string {
	return []string{
		"REF_HotspotGroup",
		"REF_HotspotPortal",
		"REF_HotspotVoucher",
	}
}

// HotspotGroup is an Sophos Endpoint subType and implements sophos.RestObject
type HotspotGroup []interface{}

// GetPath implements sophos.RestObject and returns the HotspotGroup GET path
// Returns all available hotspot/group objects
func (*HotspotGroup) GetPath() string { return "/api/objects/hotspot/group/" }

// RefRequired implements sophos.RestObject
func (*HotspotGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HotspotGroup DELETE path
// Creates or updates the complete object group
func (*HotspotGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/hotspot/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HotspotGroup PATCH path
// Changes to parts of the object group types
func (*HotspotGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/hotspot/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HotspotGroup POST path
// Create a new hotspot/group object
func (*HotspotGroup) PostPath() string {
	return "/api/objects/hotspot/group/"
}

// PutPath implements sophos.RestObject and returns the HotspotGroup PUT path
// Creates or updates the complete object group
func (*HotspotGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/hotspot/group/%s", ref)
}

// HotspotPortal is an Sophos Endpoint subType and implements sophos.RestObject
type HotspotPortal []interface{}

// GetPath implements sophos.RestObject and returns the HotspotPortal GET path
// Returns all available hotspot/portal objects
func (*HotspotPortal) GetPath() string { return "/api/objects/hotspot/portal/" }

// RefRequired implements sophos.RestObject
func (*HotspotPortal) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HotspotPortal DELETE path
// Creates or updates the complete object portal
func (*HotspotPortal) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/hotspot/portal/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HotspotPortal PATCH path
// Changes to parts of the object portal types
func (*HotspotPortal) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/hotspot/portal/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HotspotPortal POST path
// Create a new hotspot/portal object
func (*HotspotPortal) PostPath() string {
	return "/api/objects/hotspot/portal/"
}

// PutPath implements sophos.RestObject and returns the HotspotPortal PUT path
// Creates or updates the complete object portal
func (*HotspotPortal) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/hotspot/portal/%s", ref)
}

// HotspotVoucher is an Sophos Endpoint subType and implements sophos.RestObject
type HotspotVoucher []interface{}

// GetPath implements sophos.RestObject and returns the HotspotVoucher GET path
// Returns all available hotspot/voucher objects
func (*HotspotVoucher) GetPath() string { return "/api/objects/hotspot/voucher/" }

// RefRequired implements sophos.RestObject
func (*HotspotVoucher) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HotspotVoucher DELETE path
// Creates or updates the complete object voucher
func (*HotspotVoucher) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/hotspot/voucher/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HotspotVoucher PATCH path
// Changes to parts of the object voucher types
func (*HotspotVoucher) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/hotspot/voucher/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HotspotVoucher POST path
// Create a new hotspot/voucher object
func (*HotspotVoucher) PostPath() string {
	return "/api/objects/hotspot/voucher/"
}

// PutPath implements sophos.RestObject and returns the HotspotVoucher PUT path
// Creates or updates the complete object voucher
func (*HotspotVoucher) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/hotspot/voucher/%s", ref)
}

// Http is a generated struct representing the Sophos Http Endpoint
// GET /api/nodes/http
type Http struct {
	AdSsoInterfaces                  []interface{} `json:"ad_sso_interfaces"`
	AdssoRedirectUseHostname         int64         `json:"adsso_redirect_use_hostname"`
	AllowSsl3                        int64         `json:"allow_ssl3"`
	AllowTLS1_2                      int64         `json:"allow_tls_1_2"`
	AllowedPuas                      []interface{} `json:"allowed_puas"`
	AllowedTargetServices            []string      `json:"allowed_target_services"`
	AuaMaxconns                      int64         `json:"aua_maxconns"`
	AuaTimeout                       int64         `json:"aua_timeout"`
	AuthCacheSize                    int64         `json:"auth_cache_size"`
	AuthCacheTTL                     int64         `json:"auth_cache_ttl"`
	AuthRealm                        string        `json:"auth_realm"`
	AuthUsercacheTTL                 int64         `json:"auth_usercache_ttl"`
	BlockUnscannable                 int64         `json:"block_unscannable"`
	BypassStreaming                  int64         `json:"bypass_streaming"`
	CaList                           []interface{} `json:"ca_list"`
	CacheIgnoresCookies              int64         `json:"cache_ignores_cookies"`
	Cachessl                         int64         `json:"cachessl"`
	Caching                          int64         `json:"caching"`
	Certcache                        string        `json:"certcache"`
	Certstore                        string        `json:"certstore"`
	CffOverrideUsers                 []interface{} `json:"cff_override_users"`
	ClientTimeout                    int64         `json:"client_timeout"`
	ConfLockWorkaround               int64         `json:"conf_lock_workaround"`
	ConnectTimeout                   int64         `json:"connect_timeout"`
	ConnectV6Timeout                 int64         `json:"connect_v6_timeout"`
	Connlimit                        int64         `json:"connlimit"`
	CtypeInspectBody                 int64         `json:"ctype_inspect_body"`
	CtypeUnpackArchive               int64         `json:"ctype_unpack_archive"`
	Debug                            []interface{} `json:"debug"`
	Defaultblockaction               string        `json:"defaultblockaction"`
	Deferagents                      []string      `json:"deferagents"`
	Deferlength                      int64         `json:"deferlength"`
	DisplayHTTPBlockpageExplicitMode int64         `json:"display_http_blockpage_explicit_mode"`
	DisplayIntro                     int64         `json:"display_intro"`
	DownloadManagerDefaultCharset    string        `json:"download_manager_default_charset"`
	EdirDelayBasicAuth               int64         `json:"edir_delay_basic_auth"`
	EnableOutInterface               int64         `json:"enable_out_interface"`
	EppQuotaAction                   string        `json:"epp_quota_action"`
	Exceptions                       []string      `json:"exceptions"`
	ForcedCachingExtension           []string      `json:"forced_caching_extension"`
	ForcedCachingNeverCachePrefix    []string      `json:"forced_caching_never_cache_prefix"`
	ForcedCachingStatus              int64         `json:"forced_caching_status"`
	ForcedCachingTTL                 int64         `json:"forced_caching_ttl"`
	ForcedCachingUserAgentPrefix     []string      `json:"forced_caching_user_agent_prefix"`
	HTTPLoopbackDetect               int64         `json:"http_loopback_detect"`
	IeSslBlockpageWorkaround         int64         `json:"ie_ssl_blockpage_workaround"`
	LimitAdSsoInterfaces             int64         `json:"limit_ad_sso_interfaces"`
	LocalSiteList                    []interface{} `json:"local_site_list"`
	MaxContentEncoding               int64         `json:"max_content_encoding"`
	MaxTempfileSize                  int64         `json:"max_tempfile_size"`
	Maxthreads                       int64         `json:"maxthreads"`
	MaxthreadsUnused                 int64         `json:"maxthreads_unused"`
	Modulepath                       string        `json:"modulepath"`
	Modules                          []string      `json:"modules"`
	Noscancontent                    []string      `json:"noscancontent"`
	OpendirectoryKeytab              string        `json:"opendirectory_keytab"`
	PacFile                          string        `json:"pac_file"`
	ParentProxyHost                  string        `json:"parent_proxy_host"`
	ParentProxyPort                  int64         `json:"parent_proxy_port"`
	ParentProxyStatus                int64         `json:"parent_proxy_status"`
	PassthroughID                    string        `json:"passthrough_id"`
	PharmingProtection               int64         `json:"pharming_protection"`
	Port                             int64         `json:"port"`
	PortalCert                       string        `json:"portal_cert"`
	PortalCertChain                  []interface{} `json:"portal_cert_chain"`
	PortalDomain                     string        `json:"portal_domain"`
	PortalHosts                      []interface{} `json:"portal_hosts"`
	PortalUseCert                    int64         `json:"portal_use_cert"`
	ProceedCacheTimeout              int64         `json:"proceed_cache_timeout"`
	Profiles                         []string      `json:"profiles"`
	QuotaSliceTime                   int64         `json:"quota_slice_time"`
	RemoveRequest                    []interface{} `json:"remove_request"`
	RemoveResponse                   []string      `json:"remove_response"`
	ResponseTimeout                  int64         `json:"response_timeout"`
	ScLocalDB                        string        `json:"sc_local_db"`
	ScanEppTraffic                   int64         `json:"scan_epp_traffic"`
	Searchdomain                     string        `json:"searchdomain"`
	StrictHTTP                       int64         `json:"strict_http"`
	TlsciphersClient                 string        `json:"tlsciphers_client"`
	TlsciphersServer                 string        `json:"tlsciphers_server"`
	TmpfsUsageMinMemsize             int64         `json:"tmpfs_usage_min_memsize"`
	TransparentAuthTimeout           int64         `json:"transparent_auth_timeout"`
	TransparentDstSkip               []interface{} `json:"transparent_dst_skip"`
	TransparentSkipAutoPf            int64         `json:"transparent_skip_auto_pf"`
	TransparentSrcSkip               []interface{} `json:"transparent_src_skip"`
	TunnelTimeout                    int64         `json:"tunnel_timeout"`
	TunnelV6Timeout                  int64         `json:"tunnel_v6_timeout"`
	Undefercontent                   []string      `json:"undefercontent"`
	Undeferextension                 []string      `json:"undeferextension"`
	URLFilteringRedirectURL          string        `json:"url_filtering_redirect_url"`
	UseDstaddrForGeopiplookup        int64         `json:"use_dstaddr_for_geopiplookup"`
	UseKrb5Adsso                     int64         `json:"use_krb5_adsso"`
	UseSni                           int64         `json:"use_sni"`
	UseSxlUrid                       int64         `json:"use_sxl_urid"`
}

var defsHttp = map[string]sophos.RestObject{
	"HttpCffAction":   &HttpCffAction{},
	"HttpException":   &HttpException{},
	"HttpParentProxy": &HttpParentProxy{},
	"HttpProfile":     &HttpProfile{},
	"HttpDomainRegex": &HttpDomainRegex{},
	"HttpGroup":       &HttpGroup{},
	"HttpSpCategory":  &HttpSpCategory{},
	"HttpLslTag":      &HttpLslTag{},
	"HttpPacFile":     &HttpPacFile{},
	"HttpSpSubcat":    &HttpSpSubcat{},
	"HttpCffProfile":  &HttpCffProfile{},
	"HttpDeviceAuth":  &HttpDeviceAuth{},
	"HttpLocalSite":   &HttpLocalSite{},
}

// RestObjects implements the sophos.Node interface and returns a map of Http's Objects
func (Http) RestObjects() map[string]sophos.RestObject {
	return defsHttp
}

// GetPath implements sophos.RestGetter
func (*Http) GetPath() string { return "/api/nodes/http" }

// RefRequired implements sophos.RestGetter
func (*Http) RefRequired() (string, bool) { return "", false }

var defHttp = &sophos.Definition{Description: "http", Name: "http", Link: "/api/definitions/http", Swag: map[string]sophos.MethodMap{"/objects/http/cff_action/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object cff_action", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/cff_action"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available cff_action types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/cff_action"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object cff_action types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/cff_action that will be changes", Type: "", Required: true}}, Tags: []string{"http/cff_action"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object cff_action", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/cff_action that will be updated", Type: "", Required: true}}, Tags: []string{"http/cff_action"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/http/domain_regex/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object domain_regex", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/domain_regex"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available domain_regex types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/domain_regex"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object domain_regex types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/domain_regex that will be changes", Type: "", Required: true}}, Tags: []string{"http/domain_regex"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object domain_regex", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/domain_regex that will be updated", Type: "", Required: true}}, Tags: []string{"http/domain_regex"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/http/exception/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/exception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/exception that will be changes", Type: "", Required: true}}, Tags: []string{"http/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/exception that will be updated", Type: "", Required: true}}, Tags: []string{"http/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/exception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/group that will be created", Type: "", Required: true}}, Tags: []string{"http/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/http/profile/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/domain_regex/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/domain_regex objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/domain_regex"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/domain_regex object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/domain_regex that will be created", Type: "", Required: true}}, Tags: []string{"http/domain_regex"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/http/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/http/profile/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/profile"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/profile that will be changes", Type: "", Required: true}}, Tags: []string{"http/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/profile that will be updated", Type: "", Required: true}}, Tags: []string{"http/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/http/sp_category/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object sp_category", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/sp_category"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available sp_category types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/sp_category"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object sp_category types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/sp_category that will be changes", Type: "", Required: true}}, Tags: []string{"http/sp_category"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object sp_category", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/sp_category that will be updated", Type: "", Required: true}}, Tags: []string{"http/sp_category"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/http/lsl_tag/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/lsl_tag objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/lsl_tag"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/lsl_tag object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/lsl_tag that will be created", Type: "", Required: true}}, Tags: []string{"http/lsl_tag"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/pac_file/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/pac_file objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/pac_file"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/pac_file object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/pac_file that will be created", Type: "", Required: true}}, Tags: []string{"http/pac_file"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/sp_subcat/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/sp_subcat objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/sp_subcat"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/sp_subcat object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/sp_subcat that will be created", Type: "", Required: true}}, Tags: []string{"http/sp_subcat"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/http/cff_profile/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/cff_profile objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/cff_profile"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/cff_profile object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/cff_profile that will be created", Type: "", Required: true}}, Tags: []string{"http/cff_profile"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/device_auth/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object device_auth", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/device_auth"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available device_auth types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/device_auth"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object device_auth types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/device_auth that will be changes", Type: "", Required: true}}, Tags: []string{"http/device_auth"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object device_auth", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/device_auth that will be updated", Type: "", Required: true}}, Tags: []string{"http/device_auth"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/http/device_auth/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/device_auth"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/http/domain_regex/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/domain_regex"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/local_site/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/local_site"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/exception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/local_site/": {"post": sophos.MethodDescriptions{Description: "Create a new http/local_site object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/local_site that will be created", Type: "", Required: true}}, Tags: []string{"http/local_site"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available http/local_site objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/local_site"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/http/pac_file/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/pac_file"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/http/sp_category/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/sp_category objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/sp_category"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/sp_category object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/sp_category that will be created", Type: "", Required: true}}, Tags: []string{"http/sp_category"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/sp_subcat/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object sp_subcat", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/sp_subcat"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available sp_subcat types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/sp_subcat"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object sp_subcat types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/sp_subcat that will be changes", Type: "", Required: true}}, Tags: []string{"http/sp_subcat"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object sp_subcat", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/sp_subcat that will be updated", Type: "", Required: true}}, Tags: []string{"http/sp_subcat"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/http/parent_proxy/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/parent_proxy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/sp_subcat/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/sp_subcat"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/cff_profile/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object cff_profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/cff_profile"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available cff_profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/cff_profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object cff_profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/cff_profile that will be changes", Type: "", Required: true}}, Tags: []string{"http/cff_profile"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object cff_profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/cff_profile that will be updated", Type: "", Required: true}}, Tags: []string{"http/cff_profile"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/http/cff_profile/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/cff_profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/device_auth/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/device_auth objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/device_auth"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/device_auth object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/device_auth that will be created", Type: "", Required: true}}, Tags: []string{"http/device_auth"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/lsl_tag/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object lsl_tag", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/lsl_tag"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available lsl_tag types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/lsl_tag"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object lsl_tag types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/lsl_tag that will be changes", Type: "", Required: true}}, Tags: []string{"http/lsl_tag"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object lsl_tag", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/lsl_tag that will be updated", Type: "", Required: true}}, Tags: []string{"http/lsl_tag"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/http/sp_category/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/sp_category"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/parent_proxy/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object parent_proxy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/parent_proxy"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available parent_proxy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/parent_proxy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object parent_proxy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/parent_proxy that will be changes", Type: "", Required: true}}, Tags: []string{"http/parent_proxy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object parent_proxy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/parent_proxy that will be updated", Type: "", Required: true}}, Tags: []string{"http/parent_proxy"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/cff_action/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/cff_action"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/group that will be changes", Type: "", Required: true}}, Tags: []string{"http/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/group that will be updated", Type: "", Required: true}}, Tags: []string{"http/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/http/local_site/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object local_site", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/local_site that will be updated", Type: "", Required: true}}, Tags: []string{"http/local_site"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object local_site", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/local_site"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available local_site types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/local_site"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object local_site types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/local_site that will be changes", Type: "", Required: true}}, Tags: []string{"http/local_site"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/http/lsl_tag/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/lsl_tag"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/pac_file/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object pac_file", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/pac_file that will be updated", Type: "", Required: true}}, Tags: []string{"http/pac_file"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object pac_file", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"http/pac_file"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available pac_file types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"http/pac_file"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object pac_file types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/pac_file that will be changes", Type: "", Required: true}}, Tags: []string{"http/pac_file"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/http/cff_action/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/cff_action objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/cff_action"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/cff_action object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/cff_action that will be created", Type: "", Required: true}}, Tags: []string{"http/cff_action"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/http/exception/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/exception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/exception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/exception that will be created", Type: "", Required: true}}, Tags: []string{"http/exception"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/parent_proxy/": {"post": sophos.MethodDescriptions{Description: "Create a new http/parent_proxy object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/parent_proxy that will be created", Type: "", Required: true}}, Tags: []string{"http/parent_proxy"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available http/parent_proxy objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/parent_proxy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/http/profile/": {"get": sophos.MethodDescriptions{Description: "Returns all available http/profile objects", Parameters: []sophos.Parameter(nil), Tags: []string{"http/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new http/profile object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "http/profile that will be created", Type: "", Required: true}}, Tags: []string{"http/profile"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}}}

// Definition returns the /api/definitions struct of Http
func (Http) Definition() sophos.Definition { return *defHttp }

// ApiRoutes returns all known Http Paths
func (Http) ApiRoutes() []string {
	return []string{
		"/api/objects/http/cff_action/",
		"/api/objects/http/cff_action/{ref}",
		"/api/objects/http/cff_action/{ref}/usedby",
		"/api/objects/http/cff_profile/",
		"/api/objects/http/cff_profile/{ref}",
		"/api/objects/http/cff_profile/{ref}/usedby",
		"/api/objects/http/device_auth/",
		"/api/objects/http/device_auth/{ref}",
		"/api/objects/http/device_auth/{ref}/usedby",
		"/api/objects/http/domain_regex/",
		"/api/objects/http/domain_regex/{ref}",
		"/api/objects/http/domain_regex/{ref}/usedby",
		"/api/objects/http/exception/",
		"/api/objects/http/exception/{ref}",
		"/api/objects/http/exception/{ref}/usedby",
		"/api/objects/http/group/",
		"/api/objects/http/group/{ref}",
		"/api/objects/http/group/{ref}/usedby",
		"/api/objects/http/local_site/",
		"/api/objects/http/local_site/{ref}",
		"/api/objects/http/local_site/{ref}/usedby",
		"/api/objects/http/lsl_tag/",
		"/api/objects/http/lsl_tag/{ref}",
		"/api/objects/http/lsl_tag/{ref}/usedby",
		"/api/objects/http/pac_file/",
		"/api/objects/http/pac_file/{ref}",
		"/api/objects/http/pac_file/{ref}/usedby",
		"/api/objects/http/parent_proxy/",
		"/api/objects/http/parent_proxy/{ref}",
		"/api/objects/http/parent_proxy/{ref}/usedby",
		"/api/objects/http/profile/",
		"/api/objects/http/profile/{ref}",
		"/api/objects/http/profile/{ref}/usedby",
		"/api/objects/http/sp_category/",
		"/api/objects/http/sp_category/{ref}",
		"/api/objects/http/sp_category/{ref}/usedby",
		"/api/objects/http/sp_subcat/",
		"/api/objects/http/sp_subcat/{ref}",
		"/api/objects/http/sp_subcat/{ref}/usedby",
	}
}

// References returns the Http's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Http) References() []string {
	return []string{
		"REF_HttpCffAction",
		"REF_HttpCffProfile",
		"REF_HttpDeviceAuth",
		"REF_HttpDomainRegex",
		"REF_HttpException",
		"REF_HttpGroup",
		"REF_HttpLocalSite",
		"REF_HttpLslTag",
		"REF_HttpPacFile",
		"REF_HttpParentProxy",
		"REF_HttpProfile",
		"REF_HttpSpCategory",
		"REF_HttpSpSubcat",
	}
}

// HttpCffAction is an Sophos Endpoint subType and implements sophos.RestObject
type HttpCffActions []HttpCffAction
type HttpCffAction struct {
	Locked                   string        `json:"_locked"`
	Reference                string        `json:"_ref"`
	_type                    string        `json:"_type"`
	AllowTags                []interface{} `json:"allow_tags"`
	Av                       bool          `json:"av"`
	AvEngines                string        `json:"av_engines"`
	BingSafesearch           string        `json:"bing_safesearch"`
	BlockTags                []interface{} `json:"block_tags"`
	CheckMaxDownload         bool          `json:"check_max_download"`
	Comment                  string        `json:"comment"`
	ContenttypeBlacklist     []interface{} `json:"contenttype_blacklist"`
	ContenttypeBlacklistWarn []interface{} `json:"contenttype_blacklist_warn"`
	CreativeCommonsFilter    bool          `json:"creative_commons_filter"`
	EmbeddedRemoval          bool          `json:"embedded_removal"`
	Extensions               []string      `json:"extensions"`
	ExtensionsWarn           []interface{} `json:"extensions_warn"`
	GoogleSafesearch         string        `json:"google_safesearch"`
	Googleappdomains         []interface{} `json:"googleappdomains"`
	GoogleappdomainsEnabled  bool          `json:"googleappdomains_enabled"`
	LogAccess                bool          `json:"log_access"`
	LogBlocked               bool          `json:"log_blocked"`
	MaxDownloadSize          int64         `json:"max_download_size"`
	MaxFilesize              int64         `json:"max_filesize"`
	Mode                     string        `json:"mode"`
	Name                     string        `json:"name"`
	ParentProxies            []interface{} `json:"parent_proxies"`
	Pua                      bool          `json:"pua"`
	QuotaTags                []interface{} `json:"quota_tags"`
	QuotaTime                int64         `json:"quota_time"`
	Sandbox                  bool          `json:"sandbox"`
	ScriptRemoval            bool          `json:"script_removal"`
	SpCategories             []interface{} `json:"sp_categories"`
	SpCategoriesQuota        []interface{} `json:"sp_categories_quota"`
	SpCategoriesWarn         []interface{} `json:"sp_categories_warn"`
	SpMinreputation          string        `json:"sp_minreputation"`
	Spyware                  bool          `json:"spyware"`
	UncategorizedWebsites    string        `json:"uncategorized_websites"`
	URLBlacklist             []interface{} `json:"url_blacklist"`
	URLWhitelist             []interface{} `json:"url_whitelist"`
	WarnTags                 []interface{} `json:"warn_tags"`
	YahooSafesearch          string        `json:"yahoo_safesearch"`
}

// GetPath implements sophos.RestObject and returns the HttpCffActions GET path
// Returns all available http/cff_action objects
func (*HttpCffActions) GetPath() string { return "/api/objects/http/cff_action/" }

// RefRequired implements sophos.RestObject
func (*HttpCffActions) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the HttpCffActions GET path
// Returns all available cff_action types
func (h *HttpCffAction) GetPath() string {
	return fmt.Sprintf("/api/objects/http/cff_action/%s", h.Reference)
}

// RefRequired implements sophos.RestObject
func (h *HttpCffAction) RefRequired() (string, bool) { return h.Reference, true }

// DeletePath implements sophos.RestObject and returns the HttpCffAction DELETE path
// Creates or updates the complete object cff_action
func (*HttpCffAction) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/cff_action/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpCffAction PATCH path
// Changes to parts of the object cff_action types
func (*HttpCffAction) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/cff_action/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpCffAction POST path
// Create a new http/cff_action object
func (*HttpCffAction) PostPath() string {
	return "/api/objects/http/cff_action/"
}

// PutPath implements sophos.RestObject and returns the HttpCffAction PUT path
// Creates or updates the complete object cff_action
func (*HttpCffAction) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/cff_action/%s", ref)
}

// Type implements sophos.Object
func (h *HttpCffAction) GetType() string { return h._type }

// HttpException is an Sophos Endpoint subType and implements sophos.RestObject
type HttpExceptions []HttpException
type HttpException struct {
	Locked          string        `json:"_locked"`
	Reference       string        `json:"_ref"`
	_type           string        `json:"_type"`
	Aaa             []interface{} `json:"aaa"`
	Comment         string        `json:"comment"`
	Domains         []string      `json:"domains"`
	EndpointsGroups []interface{} `json:"endpoints_groups"`
	Name            string        `json:"name"`
	Networks        []interface{} `json:"networks"`
	Operator        string        `json:"operator"`
	Skiplist        []string      `json:"skiplist"`
	SpCategories    []interface{} `json:"sp_categories"`
	Status          bool          `json:"status"`
	Tags            []interface{} `json:"tags"`
	UserAgents      []interface{} `json:"user_agents"`
}

// GetPath implements sophos.RestObject and returns the HttpExceptions GET path
// Returns all available http/exception objects
func (*HttpExceptions) GetPath() string { return "/api/objects/http/exception/" }

// RefRequired implements sophos.RestObject
func (*HttpExceptions) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the HttpExceptions GET path
// Returns all available exception types
func (h *HttpException) GetPath() string {
	return fmt.Sprintf("/api/objects/http/exception/%s", h.Reference)
}

// RefRequired implements sophos.RestObject
func (h *HttpException) RefRequired() (string, bool) { return h.Reference, true }

// DeletePath implements sophos.RestObject and returns the HttpException DELETE path
// Creates or updates the complete object exception
func (*HttpException) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/exception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpException PATCH path
// Changes to parts of the object exception types
func (*HttpException) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/exception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpException POST path
// Create a new http/exception object
func (*HttpException) PostPath() string {
	return "/api/objects/http/exception/"
}

// PutPath implements sophos.RestObject and returns the HttpException PUT path
// Creates or updates the complete object exception
func (*HttpException) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/exception/%s", ref)
}

// Type implements sophos.Object
func (h *HttpException) GetType() string { return h._type }

// HttpParentProxy is an Sophos Endpoint subType and implements sophos.RestObject
type HttpParentProxy []interface{}

// GetPath implements sophos.RestObject and returns the HttpParentProxy GET path
// Returns all available http/parent_proxy objects
func (*HttpParentProxy) GetPath() string { return "/api/objects/http/parent_proxy/" }

// RefRequired implements sophos.RestObject
func (*HttpParentProxy) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HttpParentProxy DELETE path
// Creates or updates the complete object parent_proxy
func (*HttpParentProxy) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/parent_proxy/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpParentProxy PATCH path
// Changes to parts of the object parent_proxy types
func (*HttpParentProxy) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/parent_proxy/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpParentProxy POST path
// Create a new http/parent_proxy object
func (*HttpParentProxy) PostPath() string {
	return "/api/objects/http/parent_proxy/"
}

// PutPath implements sophos.RestObject and returns the HttpParentProxy PUT path
// Creates or updates the complete object parent_proxy
func (*HttpParentProxy) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/parent_proxy/%s", ref)
}

// HttpProfile is an Sophos Endpoint subType and implements sophos.RestObject
type HttpProfiles []HttpProfile
type HttpProfile struct {
	Locked             string        `json:"_locked"`
	Reference          string        `json:"_ref"`
	_type              string        `json:"_type"`
	Aua                bool          `json:"aua"`
	BlockOnAuthFailed  bool          `json:"block_on_auth_failed"`
	CffProfiles        []string      `json:"cff_profiles"`
	Comment            string        `json:"comment"`
	DefaultCffAction   string        `json:"default_cff_action"`
	DeviceAuth         []interface{} `json:"device_auth"`
	EdirSso            bool          `json:"edir_sso"`
	EnableDeviceAuth   bool          `json:"enable_device_auth"`
	EndpointsGroups    []interface{} `json:"endpoints_groups"`
	FullTransparent    bool          `json:"full_transparent"`
	InProgress         bool          `json:"in_progress"`
	Name               string        `json:"name"`
	Networks           []interface{} `json:"networks"`
	Ntlm               bool          `json:"ntlm"`
	OpendirectoryAuth  bool          `json:"opendirectory_auth"`
	OrderedCffProfiles []string      `json:"ordered_cff_profiles"`
	OutInterface       string        `json:"out_interface"`
	ScanSslOpt         string        `json:"scan_ssl_opt"`
	SelectiveScanCat   []string      `json:"selective_scan_cat"`
	SelectiveScanTags  []interface{} `json:"selective_scan_tags"`
	Status             bool          `json:"status"`
	Transparent        bool          `json:"transparent"`
	TransparentAac     bool          `json:"transparent_aac"`
	TransparentAuth    bool          `json:"transparent_auth"`
}

// GetPath implements sophos.RestObject and returns the HttpProfiles GET path
// Returns all available http/profile objects
func (*HttpProfiles) GetPath() string { return "/api/objects/http/profile/" }

// RefRequired implements sophos.RestObject
func (*HttpProfiles) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the HttpProfiles GET path
// Returns all available profile types
func (h *HttpProfile) GetPath() string {
	return fmt.Sprintf("/api/objects/http/profile/%s", h.Reference)
}

// RefRequired implements sophos.RestObject
func (h *HttpProfile) RefRequired() (string, bool) { return h.Reference, true }

// DeletePath implements sophos.RestObject and returns the HttpProfile DELETE path
// Creates or updates the complete object profile
func (*HttpProfile) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/profile/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpProfile PATCH path
// Changes to parts of the object profile types
func (*HttpProfile) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/profile/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpProfile POST path
// Create a new http/profile object
func (*HttpProfile) PostPath() string {
	return "/api/objects/http/profile/"
}

// PutPath implements sophos.RestObject and returns the HttpProfile PUT path
// Creates or updates the complete object profile
func (*HttpProfile) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/profile/%s", ref)
}

// Type implements sophos.Object
func (h *HttpProfile) GetType() string { return h._type }

// HttpDomainRegex is an Sophos Endpoint subType and implements sophos.RestObject
type HttpDomainRegex []interface{}

// GetPath implements sophos.RestObject and returns the HttpDomainRegex GET path
// Returns all available http/domain_regex objects
func (*HttpDomainRegex) GetPath() string { return "/api/objects/http/domain_regex/" }

// RefRequired implements sophos.RestObject
func (*HttpDomainRegex) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HttpDomainRegex DELETE path
// Creates or updates the complete object domain_regex
func (*HttpDomainRegex) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/domain_regex/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpDomainRegex PATCH path
// Changes to parts of the object domain_regex types
func (*HttpDomainRegex) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/domain_regex/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpDomainRegex POST path
// Create a new http/domain_regex object
func (*HttpDomainRegex) PostPath() string {
	return "/api/objects/http/domain_regex/"
}

// PutPath implements sophos.RestObject and returns the HttpDomainRegex PUT path
// Creates or updates the complete object domain_regex
func (*HttpDomainRegex) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/domain_regex/%s", ref)
}

// HttpGroup is an Sophos Endpoint subType and implements sophos.RestObject
type HttpGroup []interface{}

// GetPath implements sophos.RestObject and returns the HttpGroup GET path
// Returns all available http/group objects
func (*HttpGroup) GetPath() string { return "/api/objects/http/group/" }

// RefRequired implements sophos.RestObject
func (*HttpGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HttpGroup DELETE path
// Creates or updates the complete object group
func (*HttpGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpGroup PATCH path
// Changes to parts of the object group types
func (*HttpGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpGroup POST path
// Create a new http/group object
func (*HttpGroup) PostPath() string {
	return "/api/objects/http/group/"
}

// PutPath implements sophos.RestObject and returns the HttpGroup PUT path
// Creates or updates the complete object group
func (*HttpGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/group/%s", ref)
}

// HttpSpCategory is an Sophos Endpoint subType and implements sophos.RestObject
type HttpSpCategorys []HttpSpCategory
type HttpSpCategory struct {
	Locked    string   `json:"_locked"`
	Reference string   `json:"_ref"`
	_type     string   `json:"_type"`
	Comment   string   `json:"comment"`
	ID        string   `json:"id"`
	Name      string   `json:"name"`
	Subcats   []string `json:"subcats"`
}

// GetPath implements sophos.RestObject and returns the HttpSpCategory GET path
// Returns all available http/sp_category objects
func (*HttpSpCategory) GetPath() string { return "/api/objects/http/sp_category/" }

// RefRequired implements sophos.RestObject
func (*HttpSpCategory) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HttpSpCategory DELETE path
// Creates or updates the complete object sp_category
func (*HttpSpCategory) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/sp_category/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpSpCategory PATCH path
// Changes to parts of the object sp_category types
func (*HttpSpCategory) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/sp_category/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpSpCategory POST path
// Create a new http/sp_category object
func (*HttpSpCategory) PostPath() string {
	return "/api/objects/http/sp_category/"
}

// PutPath implements sophos.RestObject and returns the HttpSpCategory PUT path
// Creates or updates the complete object sp_category
func (*HttpSpCategory) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/sp_category/%s", ref)
}

// HttpLslTag is an Sophos Endpoint subType and implements sophos.RestObject
type HttpLslTag []interface{}

// GetPath implements sophos.RestObject and returns the HttpLslTag GET path
// Returns all available http/lsl_tag objects
func (*HttpLslTag) GetPath() string { return "/api/objects/http/lsl_tag/" }

// RefRequired implements sophos.RestObject
func (*HttpLslTag) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HttpLslTag DELETE path
// Creates or updates the complete object lsl_tag
func (*HttpLslTag) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/lsl_tag/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpLslTag PATCH path
// Changes to parts of the object lsl_tag types
func (*HttpLslTag) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/lsl_tag/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpLslTag POST path
// Create a new http/lsl_tag object
func (*HttpLslTag) PostPath() string {
	return "/api/objects/http/lsl_tag/"
}

// PutPath implements sophos.RestObject and returns the HttpLslTag PUT path
// Creates or updates the complete object lsl_tag
func (*HttpLslTag) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/lsl_tag/%s", ref)
}

// HttpPacFile is an Sophos Endpoint subType and implements sophos.RestObject
type HttpPacFiles []HttpPacFile
type HttpPacFile struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Comment   string `json:"comment"`
	Content   string `json:"content"`
	Name      string `json:"name"`
	Status    bool   `json:"status"`
}

// GetPath implements sophos.RestObject and returns the HttpPacFiles GET path
// Returns all available http/pac_file objects
func (*HttpPacFiles) GetPath() string { return "/api/objects/http/pac_file/" }

// RefRequired implements sophos.RestObject
func (*HttpPacFiles) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the HttpPacFiles GET path
// Returns all available pac_file types
func (h *HttpPacFile) GetPath() string {
	return fmt.Sprintf("/api/objects/http/pac_file/%s", h.Reference)
}

// RefRequired implements sophos.RestObject
func (h *HttpPacFile) RefRequired() (string, bool) { return h.Reference, true }

// DeletePath implements sophos.RestObject and returns the HttpPacFile DELETE path
// Creates or updates the complete object pac_file
func (*HttpPacFile) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/pac_file/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpPacFile PATCH path
// Changes to parts of the object pac_file types
func (*HttpPacFile) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/pac_file/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpPacFile POST path
// Create a new http/pac_file object
func (*HttpPacFile) PostPath() string {
	return "/api/objects/http/pac_file/"
}

// PutPath implements sophos.RestObject and returns the HttpPacFile PUT path
// Creates or updates the complete object pac_file
func (*HttpPacFile) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/pac_file/%s", ref)
}

// Type implements sophos.Object
func (h *HttpPacFile) GetType() string { return h._type }

// HttpSpSubcat is an Sophos Endpoint subType and implements sophos.RestObject
type HttpSpSubcats []HttpSpSubcat
type HttpSpSubcat struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Comment   string `json:"comment"`
	ID        string `json:"id"`
	Name      string `json:"name"`
}

// GetPath implements sophos.RestObject and returns the HttpSpSubcats GET path
// Returns all available http/sp_subcat objects
func (*HttpSpSubcats) GetPath() string { return "/api/objects/http/sp_subcat/" }

// RefRequired implements sophos.RestObject
func (*HttpSpSubcats) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the HttpSpSubcats GET path
// Returns all available sp_subcat types
func (h *HttpSpSubcat) GetPath() string {
	return fmt.Sprintf("/api/objects/http/sp_subcat/%s", h.Reference)
}

// RefRequired implements sophos.RestObject
func (h *HttpSpSubcat) RefRequired() (string, bool) { return h.Reference, true }

// DeletePath implements sophos.RestObject and returns the HttpSpSubcat DELETE path
// Creates or updates the complete object sp_subcat
func (*HttpSpSubcat) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/sp_subcat/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpSpSubcat PATCH path
// Changes to parts of the object sp_subcat types
func (*HttpSpSubcat) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/sp_subcat/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpSpSubcat POST path
// Create a new http/sp_subcat object
func (*HttpSpSubcat) PostPath() string {
	return "/api/objects/http/sp_subcat/"
}

// PutPath implements sophos.RestObject and returns the HttpSpSubcat PUT path
// Creates or updates the complete object sp_subcat
func (*HttpSpSubcat) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/sp_subcat/%s", ref)
}

// Type implements sophos.Object
func (h *HttpSpSubcat) GetType() string { return h._type }

// HttpCffProfile is an Sophos Endpoint subType and implements sophos.RestObject
type HttpCffProfiles []HttpCffProfile
type HttpCffProfile struct {
	Locked         string   `json:"_locked"`
	Reference      string   `json:"_ref"`
	_type          string   `json:"_type"`
	Aaa            []string `json:"aaa"`
	Action         string   `json:"action"`
	CffProfileName string   `json:"cff_profile_name"`
	Comment        string   `json:"comment"`
	InProgress     string   `json:"in_progress"`
	Name           string   `json:"name"`
	SkipAuth       bool     `json:"skip_auth"`
	TimeEvent      string   `json:"time_event"`
}

// GetPath implements sophos.RestObject and returns the HttpCffProfiles GET path
// Returns all available http/cff_profile objects
func (*HttpCffProfiles) GetPath() string { return "/api/objects/http/cff_profile/" }

// RefRequired implements sophos.RestObject
func (*HttpCffProfiles) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the HttpCffProfiles GET path
// Returns all available cff_profile types
func (h *HttpCffProfile) GetPath() string {
	return fmt.Sprintf("/api/objects/http/cff_profile/%s", h.Reference)
}

// RefRequired implements sophos.RestObject
func (h *HttpCffProfile) RefRequired() (string, bool) { return h.Reference, true }

// DeletePath implements sophos.RestObject and returns the HttpCffProfile DELETE path
// Creates or updates the complete object cff_profile
func (*HttpCffProfile) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/cff_profile/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpCffProfile PATCH path
// Changes to parts of the object cff_profile types
func (*HttpCffProfile) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/cff_profile/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpCffProfile POST path
// Create a new http/cff_profile object
func (*HttpCffProfile) PostPath() string {
	return "/api/objects/http/cff_profile/"
}

// PutPath implements sophos.RestObject and returns the HttpCffProfile PUT path
// Creates or updates the complete object cff_profile
func (*HttpCffProfile) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/cff_profile/%s", ref)
}

// Type implements sophos.Object
func (h *HttpCffProfile) GetType() string { return h._type }

// HttpDeviceAuth is an Sophos Endpoint subType and implements sophos.RestObject
type HttpDeviceAuth []interface{}

// GetPath implements sophos.RestObject and returns the HttpDeviceAuth GET path
// Returns all available http/device_auth objects
func (*HttpDeviceAuth) GetPath() string { return "/api/objects/http/device_auth/" }

// RefRequired implements sophos.RestObject
func (*HttpDeviceAuth) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HttpDeviceAuth DELETE path
// Creates or updates the complete object device_auth
func (*HttpDeviceAuth) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/device_auth/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpDeviceAuth PATCH path
// Changes to parts of the object device_auth types
func (*HttpDeviceAuth) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/device_auth/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpDeviceAuth POST path
// Create a new http/device_auth object
func (*HttpDeviceAuth) PostPath() string {
	return "/api/objects/http/device_auth/"
}

// PutPath implements sophos.RestObject and returns the HttpDeviceAuth PUT path
// Creates or updates the complete object device_auth
func (*HttpDeviceAuth) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/device_auth/%s", ref)
}

// HttpLocalSite is an Sophos Endpoint subType and implements sophos.RestObject
type HttpLocalSite []interface{}

// GetPath implements sophos.RestObject and returns the HttpLocalSite GET path
// Returns all available http/local_site objects
func (*HttpLocalSite) GetPath() string { return "/api/objects/http/local_site/" }

// RefRequired implements sophos.RestObject
func (*HttpLocalSite) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the HttpLocalSite DELETE path
// Creates or updates the complete object local_site
func (*HttpLocalSite) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/http/local_site/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the HttpLocalSite PATCH path
// Changes to parts of the object local_site types
func (*HttpLocalSite) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/local_site/%s", ref)
}

// PostPath implements sophos.RestObject and returns the HttpLocalSite POST path
// Create a new http/local_site object
func (*HttpLocalSite) PostPath() string {
	return "/api/objects/http/local_site/"
}

// PutPath implements sophos.RestObject and returns the HttpLocalSite PUT path
// Creates or updates the complete object local_site
func (*HttpLocalSite) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/http/local_site/%s", ref)
}

// Interface is a generated struct representing the Sophos Interface Endpoint
// GET /api/nodes/interface
type Interface struct {
	InterfaceEthernet InterfaceEthernet `json:"interface_ethernet"`
	InterfaceVlan     InterfaceVlan     `json:"interface_vlan"`
	InterfacePpp3G    InterfacePpp3G    `json:"interface_ppp3g"`
	InterfacePppoa    InterfacePppoa    `json:"interface_pppoa"`
	InterfacePppoe    InterfacePppoe    `json:"interface_pppoe"`
	InterfacePppmodem InterfacePppmodem `json:"interface_pppmodem"`
	InterfaceBridge   InterfaceBridge   `json:"interface_bridge"`
	InterfaceGroup    InterfaceGroup    `json:"interface_group"`
	InterfaceTunnel   InterfaceTunnel   `json:"interface_tunnel"`
}

var defsInterface = map[string]sophos.RestObject{
	"InterfaceEthernet": &InterfaceEthernet{},
	"InterfaceVlan":     &InterfaceVlan{},
	"InterfacePpp3G":    &InterfacePpp3G{},
	"InterfacePppoa":    &InterfacePppoa{},
	"InterfacePppoe":    &InterfacePppoe{},
	"InterfacePppmodem": &InterfacePppmodem{},
	"InterfaceBridge":   &InterfaceBridge{},
	"InterfaceGroup":    &InterfaceGroup{},
	"InterfaceTunnel":   &InterfaceTunnel{},
}

// RestObjects implements the sophos.Node interface and returns a map of Interface's Objects
func (Interface) RestObjects() map[string]sophos.RestObject {
	return defsInterface
}

// GetPath implements sophos.RestGetter
func (*Interface) GetPath() string { return "/api/nodes/interface" }

// RefRequired implements sophos.RestGetter
func (*Interface) RefRequired() (string, bool) { return "", false }

var defInterface = &sophos.Definition{Description: "interface", Name: "interface", Link: "/api/definitions/interface", Swag: map[string]sophos.MethodMap{"/objects/interface/pppmodem/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/pppmodem"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/pppoa/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object pppoa", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"interface/pppoa"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available pppoa types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/pppoa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object pppoa types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/pppoa that will be changes", Type: "", Required: true}}, Tags: []string{"interface/pppoa"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object pppoa", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/pppoa that will be updated", Type: "", Required: true}}, Tags: []string{"interface/pppoa"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/interface/tunnel/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object tunnel", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"interface/tunnel"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available tunnel types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/tunnel"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object tunnel types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/tunnel that will be changes", Type: "", Required: true}}, Tags: []string{"interface/tunnel"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object tunnel", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/tunnel that will be updated", Type: "", Required: true}}, Tags: []string{"interface/tunnel"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/interface/vlan/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object vlan types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/vlan that will be changes", Type: "", Required: true}}, Tags: []string{"interface/vlan"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object vlan", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/vlan that will be updated", Type: "", Required: true}}, Tags: []string{"interface/vlan"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object vlan", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"interface/vlan"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available vlan types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/vlan"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available interface/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"interface/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new interface/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/group that will be created", Type: "", Required: true}}, Tags: []string{"interface/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/ppp3g/": {"get": sophos.MethodDescriptions{Description: "Returns all available interface/ppp3g objects", Parameters: []sophos.Parameter(nil), Tags: []string{"interface/ppp3g"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new interface/ppp3g object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/ppp3g that will be created", Type: "", Required: true}}, Tags: []string{"interface/ppp3g"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/interface/pppoe/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/pppoe"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/tunnel/": {"get": sophos.MethodDescriptions{Description: "Returns all available interface/tunnel objects", Parameters: []sophos.Parameter(nil), Tags: []string{"interface/tunnel"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new interface/tunnel object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/tunnel that will be created", Type: "", Required: true}}, Tags: []string{"interface/tunnel"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/interface/tunnel/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/tunnel"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/interface/ethernet/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/ethernet"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/ppp3g/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/ppp3g"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/pppoa/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/pppoa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/pppoe/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object pppoe", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"interface/pppoe"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available pppoe types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/pppoe"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object pppoe types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/pppoe that will be changes", Type: "", Required: true}}, Tags: []string{"interface/pppoe"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object pppoe", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/pppoe that will be updated", Type: "", Required: true}}, Tags: []string{"interface/pppoe"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/interface/vlan/": {"post": sophos.MethodDescriptions{Description: "Create a new interface/vlan object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/vlan that will be created", Type: "", Required: true}}, Tags: []string{"interface/vlan"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available interface/vlan objects", Parameters: []sophos.Parameter(nil), Tags: []string{"interface/vlan"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/vlan/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/vlan"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/bridge/": {"post": sophos.MethodDescriptions{Description: "Create a new interface/bridge object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/bridge that will be created", Type: "", Required: true}}, Tags: []string{"interface/bridge"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available interface/bridge objects", Parameters: []sophos.Parameter(nil), Tags: []string{"interface/bridge"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/interface/bridge/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object bridge", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"interface/bridge"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available bridge types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/bridge"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object bridge types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/bridge that will be changes", Type: "", Required: true}}, Tags: []string{"interface/bridge"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object bridge", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/bridge that will be updated", Type: "", Required: true}}, Tags: []string{"interface/bridge"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/interface/pppmodem/": {"post": sophos.MethodDescriptions{Description: "Create a new interface/pppmodem object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/pppmodem that will be created", Type: "", Required: true}}, Tags: []string{"interface/pppmodem"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available interface/pppmodem objects", Parameters: []sophos.Parameter(nil), Tags: []string{"interface/pppmodem"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/pppmodem/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object pppmodem", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/pppmodem that will be updated", Type: "", Required: true}}, Tags: []string{"interface/pppmodem"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object pppmodem", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"interface/pppmodem"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available pppmodem types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/pppmodem"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object pppmodem types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/pppmodem that will be changes", Type: "", Required: true}}, Tags: []string{"interface/pppmodem"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/interface/ethernet/": {"get": sophos.MethodDescriptions{Description: "Returns all available interface/ethernet objects", Parameters: []sophos.Parameter(nil), Tags: []string{"interface/ethernet"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new interface/ethernet object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/ethernet that will be created", Type: "", Required: true}}, Tags: []string{"interface/ethernet"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/interface/ethernet/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ethernet", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"interface/ethernet"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ethernet types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/ethernet"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ethernet types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/ethernet that will be changes", Type: "", Required: true}}, Tags: []string{"interface/ethernet"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ethernet", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/ethernet that will be updated", Type: "", Required: true}}, Tags: []string{"interface/ethernet"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/interface/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"interface/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/group that will be changes", Type: "", Required: true}}, Tags: []string{"interface/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/group that will be updated", Type: "", Required: true}}, Tags: []string{"interface/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/interface/bridge/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/bridge"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/ppp3g/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ppp3g", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"interface/ppp3g"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ppp3g types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"interface/ppp3g"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ppp3g types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/ppp3g that will be changes", Type: "", Required: true}}, Tags: []string{"interface/ppp3g"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ppp3g", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/ppp3g that will be updated", Type: "", Required: true}}, Tags: []string{"interface/ppp3g"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/interface/pppoa/": {"get": sophos.MethodDescriptions{Description: "Returns all available interface/pppoa objects", Parameters: []sophos.Parameter(nil), Tags: []string{"interface/pppoa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new interface/pppoa object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/pppoa that will be created", Type: "", Required: true}}, Tags: []string{"interface/pppoa"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/interface/pppoe/": {"get": sophos.MethodDescriptions{Description: "Returns all available interface/pppoe objects", Parameters: []sophos.Parameter(nil), Tags: []string{"interface/pppoe"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new interface/pppoe object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "interface/pppoe that will be created", Type: "", Required: true}}, Tags: []string{"interface/pppoe"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Interface
func (Interface) Definition() sophos.Definition { return *defInterface }

// ApiRoutes returns all known Interface Paths
func (Interface) ApiRoutes() []string {
	return []string{
		"/api/objects/interface/bridge/",
		"/api/objects/interface/bridge/{ref}",
		"/api/objects/interface/bridge/{ref}/usedby",
		"/api/objects/interface/ethernet/",
		"/api/objects/interface/ethernet/{ref}",
		"/api/objects/interface/ethernet/{ref}/usedby",
		"/api/objects/interface/group/",
		"/api/objects/interface/group/{ref}",
		"/api/objects/interface/group/{ref}/usedby",
		"/api/objects/interface/ppp3g/",
		"/api/objects/interface/ppp3g/{ref}",
		"/api/objects/interface/ppp3g/{ref}/usedby",
		"/api/objects/interface/pppmodem/",
		"/api/objects/interface/pppmodem/{ref}",
		"/api/objects/interface/pppmodem/{ref}/usedby",
		"/api/objects/interface/pppoa/",
		"/api/objects/interface/pppoa/{ref}",
		"/api/objects/interface/pppoa/{ref}/usedby",
		"/api/objects/interface/pppoe/",
		"/api/objects/interface/pppoe/{ref}",
		"/api/objects/interface/pppoe/{ref}/usedby",
		"/api/objects/interface/tunnel/",
		"/api/objects/interface/tunnel/{ref}",
		"/api/objects/interface/tunnel/{ref}/usedby",
		"/api/objects/interface/vlan/",
		"/api/objects/interface/vlan/{ref}",
		"/api/objects/interface/vlan/{ref}/usedby",
	}
}

// References returns the Interface's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Interface) References() []string {
	return []string{
		"REF_InterfaceBridge",
		"REF_InterfaceEthernet",
		"REF_InterfaceGroup",
		"REF_InterfacePpp3G",
		"REF_InterfacePppmodem",
		"REF_InterfacePppoa",
		"REF_InterfacePppoe",
		"REF_InterfaceTunnel",
		"REF_InterfaceVlan",
	}
}

// InterfaceEthernet is an Sophos Endpoint subType and implements sophos.RestObject
type InterfaceEthernets []InterfaceEthernet
type InterfaceEthernet struct {
	Locked              string        `json:"_locked"`
	Reference           string        `json:"_ref"`
	_type               string        `json:"_type"`
	AdditionalAddresses []interface{} `json:"additional_addresses"`
	Bandwidth           int64         `json:"bandwidth"`
	Comment             string        `json:"comment"`
	Inbandwidth         int64         `json:"inbandwidth"`
	Itfhw               string        `json:"itfhw"`
	Link                bool          `json:"link"`
	Mtu                 int64         `json:"mtu"`
	MtuAutoDiscovery    bool          `json:"mtu_auto_discovery"`
	Name                string        `json:"name"`
	Outbandwidth        int64         `json:"outbandwidth"`
	PrimaryAddress      string        `json:"primary_address"`
	Proxyarp            bool          `json:"proxyarp"`
	Proxyndp            bool          `json:"proxyndp"`
	Status              bool          `json:"status"`
}

// GetPath implements sophos.RestObject and returns the InterfaceEthernet GET path
// Returns all available interface/ethernet objects
func (*InterfaceEthernet) GetPath() string { return "/api/objects/interface/ethernet/" }

// RefRequired implements sophos.RestObject
func (*InterfaceEthernet) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the InterfaceEthernet DELETE path
// Creates or updates the complete object ethernet
func (*InterfaceEthernet) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/ethernet/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the InterfaceEthernet PATCH path
// Changes to parts of the object ethernet types
func (*InterfaceEthernet) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/ethernet/%s", ref)
}

// PostPath implements sophos.RestObject and returns the InterfaceEthernet POST path
// Create a new interface/ethernet object
func (*InterfaceEthernet) PostPath() string {
	return "/api/objects/interface/ethernet/"
}

// PutPath implements sophos.RestObject and returns the InterfaceEthernet PUT path
// Creates or updates the complete object ethernet
func (*InterfaceEthernet) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/ethernet/%s", ref)
}

// InterfaceVlan is an Sophos Endpoint subType and implements sophos.RestObject
type InterfaceVlans []InterfaceVlan
type InterfaceVlan struct {
	Locked              string        `json:"_locked"`
	Reference           string        `json:"_ref"`
	_type               string        `json:"_type"`
	AdditionalAddresses []interface{} `json:"additional_addresses"`
	Bandwidth           int64         `json:"bandwidth"`
	Comment             string        `json:"comment"`
	Inbandwidth         int64         `json:"inbandwidth"`
	Itfhw               string        `json:"itfhw"`
	Link                bool          `json:"link"`
	Macvlan             bool          `json:"macvlan"`
	Mtu                 int64         `json:"mtu"`
	MtuAutoDiscovery    bool          `json:"mtu_auto_discovery"`
	Name                string        `json:"name"`
	Outbandwidth        int64         `json:"outbandwidth"`
	PrimaryAddress      string        `json:"primary_address"`
	Proxyarp            bool          `json:"proxyarp"`
	Proxyndp            bool          `json:"proxyndp"`
	Status              bool          `json:"status"`
	Vlantag             int64         `json:"vlantag"`
}

// GetPath implements sophos.RestObject and returns the InterfaceVlans GET path
// Returns all available interface/vlan objects
func (*InterfaceVlans) GetPath() string { return "/api/objects/interface/vlan/" }

// RefRequired implements sophos.RestObject
func (*InterfaceVlans) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the InterfaceVlans GET path
// Returns all available vlan types
func (i *InterfaceVlan) GetPath() string {
	return fmt.Sprintf("/api/objects/interface/vlan/%s", i.Reference)
}

// RefRequired implements sophos.RestObject
func (i *InterfaceVlan) RefRequired() (string, bool) { return i.Reference, true }

// DeletePath implements sophos.RestObject and returns the InterfaceVlan DELETE path
// Creates or updates the complete object vlan
func (*InterfaceVlan) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/vlan/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the InterfaceVlan PATCH path
// Changes to parts of the object vlan types
func (*InterfaceVlan) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/vlan/%s", ref)
}

// PostPath implements sophos.RestObject and returns the InterfaceVlan POST path
// Create a new interface/vlan object
func (*InterfaceVlan) PostPath() string {
	return "/api/objects/interface/vlan/"
}

// PutPath implements sophos.RestObject and returns the InterfaceVlan PUT path
// Creates or updates the complete object vlan
func (*InterfaceVlan) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/vlan/%s", ref)
}

// Type implements sophos.Object
func (i *InterfaceVlan) GetType() string { return i._type }

// InterfacePpp3G is an Sophos Endpoint subType and implements sophos.RestObject
type InterfacePpp3G []interface{}

// GetPath implements sophos.RestObject and returns the InterfacePpp3G GET path
// Returns all available interface/ppp3g objects
func (*InterfacePpp3G) GetPath() string { return "/api/objects/interface/ppp3g/" }

// RefRequired implements sophos.RestObject
func (*InterfacePpp3G) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the InterfacePpp3G DELETE path
// Creates or updates the complete object ppp3g
func (*InterfacePpp3G) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/ppp3g/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the InterfacePpp3G PATCH path
// Changes to parts of the object ppp3g types
func (*InterfacePpp3G) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/ppp3g/%s", ref)
}

// PostPath implements sophos.RestObject and returns the InterfacePpp3G POST path
// Create a new interface/ppp3g object
func (*InterfacePpp3G) PostPath() string {
	return "/api/objects/interface/ppp3g/"
}

// PutPath implements sophos.RestObject and returns the InterfacePpp3G PUT path
// Creates or updates the complete object ppp3g
func (*InterfacePpp3G) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/ppp3g/%s", ref)
}

// InterfacePppoa is an Sophos Endpoint subType and implements sophos.RestObject
type InterfacePppoa []interface{}

// GetPath implements sophos.RestObject and returns the InterfacePppoa GET path
// Returns all available interface/pppoa objects
func (*InterfacePppoa) GetPath() string { return "/api/objects/interface/pppoa/" }

// RefRequired implements sophos.RestObject
func (*InterfacePppoa) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the InterfacePppoa DELETE path
// Creates or updates the complete object pppoa
func (*InterfacePppoa) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/pppoa/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the InterfacePppoa PATCH path
// Changes to parts of the object pppoa types
func (*InterfacePppoa) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/pppoa/%s", ref)
}

// PostPath implements sophos.RestObject and returns the InterfacePppoa POST path
// Create a new interface/pppoa object
func (*InterfacePppoa) PostPath() string {
	return "/api/objects/interface/pppoa/"
}

// PutPath implements sophos.RestObject and returns the InterfacePppoa PUT path
// Creates or updates the complete object pppoa
func (*InterfacePppoa) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/pppoa/%s", ref)
}

// InterfacePppoe is an Sophos Endpoint subType and implements sophos.RestObject
type InterfacePppoe []interface{}

// GetPath implements sophos.RestObject and returns the InterfacePppoe GET path
// Returns all available interface/pppoe objects
func (*InterfacePppoe) GetPath() string { return "/api/objects/interface/pppoe/" }

// RefRequired implements sophos.RestObject
func (*InterfacePppoe) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the InterfacePppoe DELETE path
// Creates or updates the complete object pppoe
func (*InterfacePppoe) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/pppoe/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the InterfacePppoe PATCH path
// Changes to parts of the object pppoe types
func (*InterfacePppoe) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/pppoe/%s", ref)
}

// PostPath implements sophos.RestObject and returns the InterfacePppoe POST path
// Create a new interface/pppoe object
func (*InterfacePppoe) PostPath() string {
	return "/api/objects/interface/pppoe/"
}

// PutPath implements sophos.RestObject and returns the InterfacePppoe PUT path
// Creates or updates the complete object pppoe
func (*InterfacePppoe) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/pppoe/%s", ref)
}

// InterfacePppmodem is an Sophos Endpoint subType and implements sophos.RestObject
type InterfacePppmodem []interface{}

// GetPath implements sophos.RestObject and returns the InterfacePppmodem GET path
// Returns all available interface/pppmodem objects
func (*InterfacePppmodem) GetPath() string { return "/api/objects/interface/pppmodem/" }

// RefRequired implements sophos.RestObject
func (*InterfacePppmodem) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the InterfacePppmodem DELETE path
// Creates or updates the complete object pppmodem
func (*InterfacePppmodem) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/pppmodem/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the InterfacePppmodem PATCH path
// Changes to parts of the object pppmodem types
func (*InterfacePppmodem) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/pppmodem/%s", ref)
}

// PostPath implements sophos.RestObject and returns the InterfacePppmodem POST path
// Create a new interface/pppmodem object
func (*InterfacePppmodem) PostPath() string {
	return "/api/objects/interface/pppmodem/"
}

// PutPath implements sophos.RestObject and returns the InterfacePppmodem PUT path
// Creates or updates the complete object pppmodem
func (*InterfacePppmodem) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/pppmodem/%s", ref)
}

// InterfaceBridge is an Sophos Endpoint subType and implements sophos.RestObject
type InterfaceBridge []interface{}

// GetPath implements sophos.RestObject and returns the InterfaceBridge GET path
// Returns all available interface/bridge objects
func (*InterfaceBridge) GetPath() string { return "/api/objects/interface/bridge/" }

// RefRequired implements sophos.RestObject
func (*InterfaceBridge) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the InterfaceBridge DELETE path
// Creates or updates the complete object bridge
func (*InterfaceBridge) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/bridge/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the InterfaceBridge PATCH path
// Changes to parts of the object bridge types
func (*InterfaceBridge) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/bridge/%s", ref)
}

// PostPath implements sophos.RestObject and returns the InterfaceBridge POST path
// Create a new interface/bridge object
func (*InterfaceBridge) PostPath() string {
	return "/api/objects/interface/bridge/"
}

// PutPath implements sophos.RestObject and returns the InterfaceBridge PUT path
// Creates or updates the complete object bridge
func (*InterfaceBridge) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/bridge/%s", ref)
}

// InterfaceGroup is an Sophos Endpoint subType and implements sophos.RestObject
type InterfaceGroups []InterfaceGroup
type InterfaceGroup struct {
	Locked           string        `json:"_locked"`
	Reference        string        `json:"_ref"`
	_type            string        `json:"_type"`
	Comment          string        `json:"comment"`
	Link             bool          `json:"link"`
	Members          []interface{} `json:"members"`
	Name             string        `json:"name"`
	PrimaryAddresses string        `json:"primary_addresses"`
}

// GetPath implements sophos.RestObject and returns the InterfaceGroup GET path
// Returns all available interface/group objects
func (*InterfaceGroup) GetPath() string { return "/api/objects/interface/group/" }

// RefRequired implements sophos.RestObject
func (*InterfaceGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the InterfaceGroup DELETE path
// Creates or updates the complete object group
func (*InterfaceGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the InterfaceGroup PATCH path
// Changes to parts of the object group types
func (*InterfaceGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the InterfaceGroup POST path
// Create a new interface/group object
func (*InterfaceGroup) PostPath() string {
	return "/api/objects/interface/group/"
}

// PutPath implements sophos.RestObject and returns the InterfaceGroup PUT path
// Creates or updates the complete object group
func (*InterfaceGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/group/%s", ref)
}

// InterfaceTunnel is an Sophos Endpoint subType and implements sophos.RestObject
type InterfaceTunnel []interface{}

// GetPath implements sophos.RestObject and returns the InterfaceTunnel GET path
// Returns all available interface/tunnel objects
func (*InterfaceTunnel) GetPath() string { return "/api/objects/interface/tunnel/" }

// RefRequired implements sophos.RestObject
func (*InterfaceTunnel) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the InterfaceTunnel DELETE path
// Creates or updates the complete object tunnel
func (*InterfaceTunnel) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/tunnel/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the InterfaceTunnel PATCH path
// Changes to parts of the object tunnel types
func (*InterfaceTunnel) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/tunnel/%s", ref)
}

// PostPath implements sophos.RestObject and returns the InterfaceTunnel POST path
// Create a new interface/tunnel object
func (*InterfaceTunnel) PostPath() string {
	return "/api/objects/interface/tunnel/"
}

// PutPath implements sophos.RestObject and returns the InterfaceTunnel PUT path
// Creates or updates the complete object tunnel
func (*InterfaceTunnel) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/interface/tunnel/%s", ref)
}

// IpfixConnection is a generated struct representing the Sophos IpfixConnection Endpoint
// GET /api/nodes/ipfix_connection
type IpfixConnection struct {
	IpfixConnectionGroup           IpfixConnectionGroup           `json:"ipfix_connection_group"`
	IpfixConnectionIpfixConnection IpfixConnectionIpfixConnection `json:"ipfix_connection_ipfix_connection"`
}

var defsIpfixConnection = map[string]sophos.RestObject{
	"IpfixConnectionGroup":           &IpfixConnectionGroup{},
	"IpfixConnectionIpfixConnection": &IpfixConnectionIpfixConnection{},
}

// RestObjects implements the sophos.Node interface and returns a map of IpfixConnection's Objects
func (IpfixConnection) RestObjects() map[string]sophos.RestObject {
	return defsIpfixConnection
}

// GetPath implements sophos.RestGetter
func (*IpfixConnection) GetPath() string { return "/api/nodes/ipfix_connection" }

// RefRequired implements sophos.RestGetter
func (*IpfixConnection) RefRequired() (string, bool) { return "", false }

var defIpfixConnection = &sophos.Definition{Description: "ipfix_connection", Name: "ipfix_connection", Link: "/api/definitions/ipfix_connection", Swag: map[string]sophos.MethodMap{"/objects/ipfix_connection/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipfix_connection/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipfix_connection/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/group that will be created", Type: "", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipfix_connection/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/group that will be changes", Type: "", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/group that will be updated", Type: "", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipfix_connection/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipfix_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipfix_connection/ipfix_connection/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipfix_connection/ipfix_connection objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipfix_connection/ipfix_connection object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/ipfix_connection that will be created", Type: "", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipfix_connection/ipfix_connection/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ipfix_connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/ipfix_connection that will be changes", Type: "", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ipfix_connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipfix_connection/ipfix_connection that will be updated", Type: "", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ipfix_connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ipfix_connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/ipfix_connection/ipfix_connection/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipfix_connection/ipfix_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of IpfixConnection
func (IpfixConnection) Definition() sophos.Definition { return *defIpfixConnection }

// ApiRoutes returns all known IpfixConnection Paths
func (IpfixConnection) ApiRoutes() []string {
	return []string{
		"/api/objects/ipfix_connection/group/",
		"/api/objects/ipfix_connection/group/{ref}",
		"/api/objects/ipfix_connection/group/{ref}/usedby",
		"/api/objects/ipfix_connection/ipfix_connection/",
		"/api/objects/ipfix_connection/ipfix_connection/{ref}",
		"/api/objects/ipfix_connection/ipfix_connection/{ref}/usedby",
	}
}

// References returns the IpfixConnection's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (IpfixConnection) References() []string {
	return []string{
		"REF_IpfixConnectionGroup",
		"REF_IpfixConnectionIpfixConnection",
	}
}

// IpfixConnectionGroup is an Sophos Endpoint subType and implements sophos.RestObject
type IpfixConnectionGroup []interface{}

// GetPath implements sophos.RestObject and returns the IpfixConnectionGroup GET path
// Returns all available ipfix_connection/group objects
func (*IpfixConnectionGroup) GetPath() string { return "/api/objects/ipfix_connection/group/" }

// RefRequired implements sophos.RestObject
func (*IpfixConnectionGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpfixConnectionGroup DELETE path
// Creates or updates the complete object group
func (*IpfixConnectionGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpfixConnectionGroup PATCH path
// Changes to parts of the object group types
func (*IpfixConnectionGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpfixConnectionGroup POST path
// Create a new ipfix_connection/group object
func (*IpfixConnectionGroup) PostPath() string {
	return "/api/objects/ipfix_connection/group/"
}

// PutPath implements sophos.RestObject and returns the IpfixConnectionGroup PUT path
// Creates or updates the complete object group
func (*IpfixConnectionGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/group/%s", ref)
}

// IpfixConnectionIpfixConnection is an Sophos Endpoint subType and implements sophos.RestObject
type IpfixConnectionIpfixConnection []interface{}

// GetPath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection GET path
// Returns all available ipfix_connection/ipfix_connection objects
func (*IpfixConnectionIpfixConnection) GetPath() string {
	return "/api/objects/ipfix_connection/ipfix_connection/"
}

// RefRequired implements sophos.RestObject
func (*IpfixConnectionIpfixConnection) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection DELETE path
// Creates or updates the complete object ipfix_connection
func (*IpfixConnectionIpfixConnection) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/ipfix_connection/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection PATCH path
// Changes to parts of the object ipfix_connection types
func (*IpfixConnectionIpfixConnection) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/ipfix_connection/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection POST path
// Create a new ipfix_connection/ipfix_connection object
func (*IpfixConnectionIpfixConnection) PostPath() string {
	return "/api/objects/ipfix_connection/ipfix_connection/"
}

// PutPath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection PUT path
// Creates or updates the complete object ipfix_connection
func (*IpfixConnectionIpfixConnection) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipfix_connection/ipfix_connection/%s", ref)
}

// Ips is a generated struct representing the Sophos Ips Endpoint
// GET /api/nodes/ips
type Ips struct {
	DNSServers     []interface{} `json:"dns_servers"`
	Engine         string        `json:"engine"`
	Exceptions     []string      `json:"exceptions"`
	Failopen       int64         `json:"failopen"`
	FileBasedRules int64         `json:"file_based_rules"`
	Groups         []string      `json:"groups"`
	HTTPServers    []interface{} `json:"http_servers"`
	Ipsfb          struct {
		AlertInterval  int64 `json:"alert_interval"`
		ConfigInterval int64 `json:"config_interval"`
		Debug          int64 `json:"debug"`
	} `json:"ipsfb"`
	LocalNetworks  []string      `json:"local_networks"`
	NumInstances   int64         `json:"num_instances"`
	PatternChannel string        `json:"pattern_channel"`
	Policy         string        `json:"policy"`
	QueueLength    int64         `json:"queue_length"`
	QueueThreshold int64         `json:"queue_threshold"`
	ReloadMethod   string        `json:"reload_method"`
	RestartPolicy  string        `json:"restart_policy"`
	RuleModifiers  []interface{} `json:"rule_modifiers"`
	Rules          []interface{} `json:"rules"`
	SkipAcks       int64         `json:"skip_acks"`
	SMTPServers    []interface{} `json:"smtp_servers"`
	Snortsettings  struct {
		MaxQueuedBytes int64  `json:"max_queued_bytes"`
		MaxQueuedSegs  int64  `json:"max_queued_segs"`
		MaxTcp         int64  `json:"max_tcp"`
		MaxUdp         int64  `json:"max_udp"`
		Memcap         int64  `json:"memcap"`
		SearchMethod   string `json:"search_method"`
	} `json:"snortsettings"`
	SqlServers []interface{} `json:"sql_servers"`
	Status     int64         `json:"status"`
}

var defsIps = map[string]sophos.RestObject{
	"IpsException":    &IpsException{},
	"IpsGroup":        &IpsGroup{},
	"IpsRule":         &IpsRule{},
	"IpsRuleModifier": &IpsRuleModifier{},
}

// RestObjects implements the sophos.Node interface and returns a map of Ips's Objects
func (Ips) RestObjects() map[string]sophos.RestObject {
	return defsIps
}

// GetPath implements sophos.RestGetter
func (*Ips) GetPath() string { return "/api/nodes/ips" }

// RefRequired implements sophos.RestGetter
func (*Ips) RefRequired() (string, bool) { return "", false }

var defIps = &sophos.Definition{Description: "ips", Name: "ips", Link: "/api/definitions/ips", Swag: map[string]sophos.MethodMap{"/objects/ips/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ips/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ips/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/group that will be changes", Type: "", Required: true}}, Tags: []string{"ips/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/group that will be updated", Type: "", Required: true}}, Tags: []string{"ips/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/ips/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ips/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ips/rule/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ips/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ips/rule_modifier/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule_modifier", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ips/rule_modifier"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available rule_modifier types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ips/rule_modifier"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object rule_modifier types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/rule_modifier that will be changes", Type: "", Required: true}}, Tags: []string{"ips/rule_modifier"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule_modifier", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/rule_modifier that will be updated", Type: "", Required: true}}, Tags: []string{"ips/rule_modifier"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/ips/rule_modifier/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ips/rule_modifier"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/ips/exception/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ips/exception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ips/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/exception that will be changes", Type: "", Required: true}}, Tags: []string{"ips/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/exception that will be updated", Type: "", Required: true}}, Tags: []string{"ips/exception"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/ips/exception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ips/exception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/ips/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ips/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ips/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ips/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/group that will be created", Type: "", Required: true}}, Tags: []string{"ips/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/ips/rule/": {"get": sophos.MethodDescriptions{Description: "Returns all available ips/rule objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ips/rule"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ips/rule object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/rule that will be created", Type: "", Required: true}}, Tags: []string{"ips/rule"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/ips/rule/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ips/rule"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ips/rule"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/rule that will be changes", Type: "", Required: true}}, Tags: []string{"ips/rule"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/rule that will be updated", Type: "", Required: true}}, Tags: []string{"ips/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ips/rule_modifier/": {"get": sophos.MethodDescriptions{Description: "Returns all available ips/rule_modifier objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ips/rule_modifier"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ips/rule_modifier object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/rule_modifier that will be created", Type: "", Required: true}}, Tags: []string{"ips/rule_modifier"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/ips/exception/": {"post": sophos.MethodDescriptions{Description: "Create a new ips/exception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ips/exception that will be created", Type: "", Required: true}}, Tags: []string{"ips/exception"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ips/exception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ips/exception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}}}

// Definition returns the /api/definitions struct of Ips
func (Ips) Definition() sophos.Definition { return *defIps }

// ApiRoutes returns all known Ips Paths
func (Ips) ApiRoutes() []string {
	return []string{
		"/api/objects/ips/exception/",
		"/api/objects/ips/exception/{ref}",
		"/api/objects/ips/exception/{ref}/usedby",
		"/api/objects/ips/group/",
		"/api/objects/ips/group/{ref}",
		"/api/objects/ips/group/{ref}/usedby",
		"/api/objects/ips/rule/",
		"/api/objects/ips/rule/{ref}",
		"/api/objects/ips/rule/{ref}/usedby",
		"/api/objects/ips/rule_modifier/",
		"/api/objects/ips/rule_modifier/{ref}",
		"/api/objects/ips/rule_modifier/{ref}/usedby",
	}
}

// References returns the Ips's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Ips) References() []string {
	return []string{
		"REF_IpsException",
		"REF_IpsGroup",
		"REF_IpsRule",
		"REF_IpsRuleModifier",
	}
}

// IpsException is an Sophos Endpoint subType and implements sophos.RestObject
type IpsExceptions []IpsException
type IpsException struct {
	Locked              string   `json:"_locked"`
	Reference           string   `json:"_ref"`
	_type               string   `json:"_type"`
	Comment             string   `json:"comment"`
	DestinationNetworks []string `json:"destination_networks"`
	Name                string   `json:"name"`
	Operator            string   `json:"operator"`
	Services            []string `json:"services"`
	Skiplist            []string `json:"skiplist"`
	SourceNetworks      []string `json:"source_networks"`
	Status              bool     `json:"status"`
}

// GetPath implements sophos.RestObject and returns the IpsExceptions GET path
// Returns all available ips/exception objects
func (*IpsExceptions) GetPath() string { return "/api/objects/ips/exception/" }

// RefRequired implements sophos.RestObject
func (*IpsExceptions) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the IpsExceptions GET path
// Returns all available exception types
func (i *IpsException) GetPath() string {
	return fmt.Sprintf("/api/objects/ips/exception/%s", i.Reference)
}

// RefRequired implements sophos.RestObject
func (i *IpsException) RefRequired() (string, bool) { return i.Reference, true }

// DeletePath implements sophos.RestObject and returns the IpsException DELETE path
// Creates or updates the complete object exception
func (*IpsException) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/exception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsException PATCH path
// Changes to parts of the object exception types
func (*IpsException) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/exception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsException POST path
// Create a new ips/exception object
func (*IpsException) PostPath() string {
	return "/api/objects/ips/exception/"
}

// PutPath implements sophos.RestObject and returns the IpsException PUT path
// Creates or updates the complete object exception
func (*IpsException) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/exception/%s", ref)
}

// Type implements sophos.Object
func (i *IpsException) GetType() string { return i._type }

// IpsGroup is an Sophos Endpoint subType and implements sophos.RestObject
type IpsGroups []IpsGroup
type IpsGroup struct {
	Locked       string   `json:"_locked"`
	Reference    string   `json:"_ref"`
	_type        string   `json:"_type"`
	Action       string   `json:"action"`
	Age          int64    `json:"age"`
	Comment      string   `json:"comment"`
	ID           string   `json:"id"`
	Name         string   `json:"name"`
	Notification bool     `json:"notification"`
	Status       bool     `json:"status"`
	Subgroups    []string `json:"subgroups"`
	Warnings     bool     `json:"warnings"`
}

// GetPath implements sophos.RestObject and returns the IpsGroup GET path
// Returns all available ips/group objects
func (*IpsGroup) GetPath() string { return "/api/objects/ips/group/" }

// RefRequired implements sophos.RestObject
func (*IpsGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsGroup DELETE path
// Creates or updates the complete object group
func (*IpsGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsGroup PATCH path
// Changes to parts of the object group types
func (*IpsGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsGroup POST path
// Create a new ips/group object
func (*IpsGroup) PostPath() string {
	return "/api/objects/ips/group/"
}

// PutPath implements sophos.RestObject and returns the IpsGroup PUT path
// Creates or updates the complete object group
func (*IpsGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/group/%s", ref)
}

// IpsRule is an Sophos Endpoint subType and implements sophos.RestObject
type IpsRule []interface{}

// GetPath implements sophos.RestObject and returns the IpsRule GET path
// Returns all available ips/rule objects
func (*IpsRule) GetPath() string { return "/api/objects/ips/rule/" }

// RefRequired implements sophos.RestObject
func (*IpsRule) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsRule DELETE path
// Creates or updates the complete object rule
func (*IpsRule) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/rule/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsRule PATCH path
// Changes to parts of the object rule types
func (*IpsRule) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/rule/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsRule POST path
// Create a new ips/rule object
func (*IpsRule) PostPath() string {
	return "/api/objects/ips/rule/"
}

// PutPath implements sophos.RestObject and returns the IpsRule PUT path
// Creates or updates the complete object rule
func (*IpsRule) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/rule/%s", ref)
}

// IpsRuleModifier is an Sophos Endpoint subType and implements sophos.RestObject
type IpsRuleModifier []interface{}

// GetPath implements sophos.RestObject and returns the IpsRuleModifier GET path
// Returns all available ips/rule_modifier objects
func (*IpsRuleModifier) GetPath() string { return "/api/objects/ips/rule_modifier/" }

// RefRequired implements sophos.RestObject
func (*IpsRuleModifier) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsRuleModifier DELETE path
// Creates or updates the complete object rule_modifier
func (*IpsRuleModifier) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/rule_modifier/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsRuleModifier PATCH path
// Changes to parts of the object rule_modifier types
func (*IpsRuleModifier) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/rule_modifier/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsRuleModifier POST path
// Create a new ips/rule_modifier object
func (*IpsRuleModifier) PostPath() string {
	return "/api/objects/ips/rule_modifier/"
}

// PutPath implements sophos.RestObject and returns the IpsRuleModifier PUT path
// Creates or updates the complete object rule_modifier
func (*IpsRuleModifier) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ips/rule_modifier/%s", ref)
}

// Ipsec is a generated struct representing the Sophos Ipsec Endpoint
// GET /api/nodes/ipsec
type Ipsec struct {
	Advanced struct {
		CrlAutoFetching       int64         `json:"crl_auto_fetching"`
		CrlStrictPolicy       int64         `json:"crl_strict_policy"`
		DeadPeerDetection     int64         `json:"dead_peer_detection"`
		IkeDebug              []interface{} `json:"ike_debug"`
		IkePort               int64         `json:"ike_port"`
		Metric                int64         `json:"metric"`
		NatTraversal          int64         `json:"nat_traversal"`
		NatTraversalKeepalive int64         `json:"nat_traversal_keepalive"`
		ProbePsk              int64         `json:"probe_psk"`
		PskVpnID              string        `json:"psk_vpn_id"`
		PskVpnIDType          string        `json:"psk_vpn_id_type"`
	} `json:"advanced"`
	Connections []string `json:"connections"`
	LocalRsa    string   `json:"local_rsa"`
	LocalX509   string   `json:"local_x509"`
	Status      int64    `json:"status"`
}

var defsIpsec = map[string]sophos.RestObject{
	"IpsecPolicy":        &IpsecPolicy{},
	"IpsecRemoteGateway": &IpsecRemoteGateway{},
	"IpsecGroup":         &IpsecGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Ipsec's Objects
func (Ipsec) RestObjects() map[string]sophos.RestObject {
	return defsIpsec
}

// GetPath implements sophos.RestGetter
func (*Ipsec) GetPath() string { return "/api/nodes/ipsec" }

// RefRequired implements sophos.RestGetter
func (*Ipsec) RefRequired() (string, bool) { return "", false }

var defIpsec = &sophos.Definition{Description: "ipsec", Name: "ipsec", Link: "/api/definitions/ipsec", Swag: map[string]sophos.MethodMap{"/objects/ipsec/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec/group that will be created", Type: "", Required: true}}, Tags: []string{"ipsec/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/ipsec/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec/group that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec/group that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/ipsec/policy/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec/policy objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec/policy"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec/policy object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec/policy that will be created", Type: "", Required: true}}, Tags: []string{"ipsec/policy"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec/policy/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec/policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec/remote_gateway/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object remote_gateway", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec/remote_gateway"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available remote_gateway types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec/remote_gateway"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object remote_gateway types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec/remote_gateway that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec/remote_gateway"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object remote_gateway", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec/remote_gateway that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec/remote_gateway"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ipsec/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec/policy/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object policy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec/policy"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available policy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec/policy"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object policy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec/policy that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec/policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object policy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec/policy that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec/policy"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/ipsec/remote_gateway/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec/remote_gateway objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec/remote_gateway"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec/remote_gateway object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec/remote_gateway that will be created", Type: "", Required: true}}, Tags: []string{"ipsec/remote_gateway"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/ipsec/remote_gateway/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec/remote_gateway"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Ipsec
func (Ipsec) Definition() sophos.Definition { return *defIpsec }

// ApiRoutes returns all known Ipsec Paths
func (Ipsec) ApiRoutes() []string {
	return []string{
		"/api/objects/ipsec/group/",
		"/api/objects/ipsec/group/{ref}",
		"/api/objects/ipsec/group/{ref}/usedby",
		"/api/objects/ipsec/policy/",
		"/api/objects/ipsec/policy/{ref}",
		"/api/objects/ipsec/policy/{ref}/usedby",
		"/api/objects/ipsec/remote_gateway/",
		"/api/objects/ipsec/remote_gateway/{ref}",
		"/api/objects/ipsec/remote_gateway/{ref}/usedby",
	}
}

// References returns the Ipsec's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Ipsec) References() []string {
	return []string{
		"REF_IpsecGroup",
		"REF_IpsecPolicy",
		"REF_IpsecRemoteGateway",
	}
}

// IpsecPolicy is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecPolicys []IpsecPolicy
type IpsecPolicy struct {
	Locked            string `json:"_locked"`
	Reference         string `json:"_ref"`
	_type             string `json:"_type"`
	Comment           string `json:"comment"`
	IkeAuthAlg        string `json:"ike_auth_alg"`
	IkeDhGroup        string `json:"ike_dh_group"`
	IkeEncAlg         string `json:"ike_enc_alg"`
	IkeSaLifetime     int64  `json:"ike_sa_lifetime"`
	IpsecAuthAlg      string `json:"ipsec_auth_alg"`
	IpsecCompression  bool   `json:"ipsec_compression"`
	IpsecEncAlg       string `json:"ipsec_enc_alg"`
	IpsecPfsGroup     string `json:"ipsec_pfs_group"`
	IpsecSaLifetime   int64  `json:"ipsec_sa_lifetime"`
	IpsecStrictPolicy bool   `json:"ipsec_strict_policy"`
	Name              string `json:"name"`
}

// GetPath implements sophos.RestObject and returns the IpsecPolicy GET path
// Returns all available ipsec/policy objects
func (*IpsecPolicy) GetPath() string { return "/api/objects/ipsec/policy/" }

// RefRequired implements sophos.RestObject
func (*IpsecPolicy) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecPolicy DELETE path
// Creates or updates the complete object policy
func (*IpsecPolicy) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec/policy/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecPolicy PATCH path
// Changes to parts of the object policy types
func (*IpsecPolicy) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec/policy/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecPolicy POST path
// Create a new ipsec/policy object
func (*IpsecPolicy) PostPath() string {
	return "/api/objects/ipsec/policy/"
}

// PutPath implements sophos.RestObject and returns the IpsecPolicy PUT path
// Creates or updates the complete object policy
func (*IpsecPolicy) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec/policy/%s", ref)
}

// IpsecRemoteGateway is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecRemoteGateways []IpsecRemoteGateway
type IpsecRemoteGateway struct {
	Locked         string   `json:"_locked"`
	Reference      string   `json:"_ref"`
	_type          string   `json:"_type"`
	Authentication string   `json:"authentication"`
	Comment        string   `json:"comment"`
	Ecn            bool     `json:"ecn"`
	Host           string   `json:"host"`
	Name           string   `json:"name"`
	Networks       []string `json:"networks"`
	PmtuDiscovery  bool     `json:"pmtu_discovery"`
	Xauth          bool     `json:"xauth"`
	XauthPassword  string   `json:"xauth_password"`
	XauthUsername  string   `json:"xauth_username"`
}

// GetPath implements sophos.RestObject and returns the IpsecRemoteGateway GET path
// Returns all available ipsec/remote_gateway objects
func (*IpsecRemoteGateway) GetPath() string { return "/api/objects/ipsec/remote_gateway/" }

// RefRequired implements sophos.RestObject
func (*IpsecRemoteGateway) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecRemoteGateway DELETE path
// Creates or updates the complete object remote_gateway
func (*IpsecRemoteGateway) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec/remote_gateway/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecRemoteGateway PATCH path
// Changes to parts of the object remote_gateway types
func (*IpsecRemoteGateway) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec/remote_gateway/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecRemoteGateway POST path
// Create a new ipsec/remote_gateway object
func (*IpsecRemoteGateway) PostPath() string {
	return "/api/objects/ipsec/remote_gateway/"
}

// PutPath implements sophos.RestObject and returns the IpsecRemoteGateway PUT path
// Creates or updates the complete object remote_gateway
func (*IpsecRemoteGateway) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec/remote_gateway/%s", ref)
}

// IpsecGroup is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecGroup []interface{}

// GetPath implements sophos.RestObject and returns the IpsecGroup GET path
// Returns all available ipsec/group objects
func (*IpsecGroup) GetPath() string { return "/api/objects/ipsec/group/" }

// RefRequired implements sophos.RestObject
func (*IpsecGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecGroup DELETE path
// Creates or updates the complete object group
func (*IpsecGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecGroup PATCH path
// Changes to parts of the object group types
func (*IpsecGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecGroup POST path
// Create a new ipsec/group object
func (*IpsecGroup) PostPath() string {
	return "/api/objects/ipsec/group/"
}

// PutPath implements sophos.RestObject and returns the IpsecGroup PUT path
// Creates or updates the complete object group
func (*IpsecGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec/group/%s", ref)
}

// IpsecConnection is a generated struct representing the Sophos IpsecConnection Endpoint
// GET /api/nodes/ipsec_connection
type IpsecConnection struct {
	IpsecConnectionRoadwarriorX509  IpsecConnectionRoadwarriorX509  `json:"ipsec_connection_roadwarrior_x509"`
	IpsecConnectionSiteToSite       IpsecConnectionSiteToSite       `json:"ipsec_connection_site_to_site"`
	IpsecConnectionGroup            IpsecConnectionGroup            `json:"ipsec_connection_group"`
	IpsecConnectionL2Tp             IpsecConnectionL2Tp             `json:"ipsec_connection_l2tp"`
	IpsecConnectionRoadwarriorCa    IpsecConnectionRoadwarriorCa    `json:"ipsec_connection_roadwarrior_ca"`
	IpsecConnectionRoadwarriorCisco IpsecConnectionRoadwarriorCisco `json:"ipsec_connection_roadwarrior_cisco"`
	IpsecConnectionAmazonVpc        IpsecConnectionAmazonVpc        `json:"ipsec_connection_amazon_vpc"`
	IpsecConnectionRoadwarriorPsk   IpsecConnectionRoadwarriorPsk   `json:"ipsec_connection_roadwarrior_psk"`
}

var defsIpsecConnection = map[string]sophos.RestObject{
	"IpsecConnectionRoadwarriorX509":  &IpsecConnectionRoadwarriorX509{},
	"IpsecConnectionSiteToSite":       &IpsecConnectionSiteToSite{},
	"IpsecConnectionGroup":            &IpsecConnectionGroup{},
	"IpsecConnectionL2Tp":             &IpsecConnectionL2Tp{},
	"IpsecConnectionRoadwarriorCa":    &IpsecConnectionRoadwarriorCa{},
	"IpsecConnectionRoadwarriorCisco": &IpsecConnectionRoadwarriorCisco{},
	"IpsecConnectionAmazonVpc":        &IpsecConnectionAmazonVpc{},
	"IpsecConnectionRoadwarriorPsk":   &IpsecConnectionRoadwarriorPsk{},
}

// RestObjects implements the sophos.Node interface and returns a map of IpsecConnection's Objects
func (IpsecConnection) RestObjects() map[string]sophos.RestObject {
	return defsIpsecConnection
}

// GetPath implements sophos.RestGetter
func (*IpsecConnection) GetPath() string { return "/api/nodes/ipsec_connection" }

// RefRequired implements sophos.RestGetter
func (*IpsecConnection) RefRequired() (string, bool) { return "", false }

var defIpsecConnection = &sophos.Definition{Description: "ipsec_connection", Name: "ipsec_connection", Link: "/api/definitions/ipsec_connection", Swag: map[string]sophos.MethodMap{"/objects/ipsec_connection/roadwarrior_x509/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object roadwarrior_x509", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_connection/roadwarrior_x509"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available roadwarrior_x509 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_x509"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object roadwarrior_x509 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_x509 that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_x509"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object roadwarrior_x509", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_x509 that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_x509"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/site_to_site/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object site_to_site", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_connection/site_to_site"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available site_to_site types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/site_to_site"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object site_to_site types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/site_to_site that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_connection/site_to_site"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object site_to_site", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/site_to_site that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_connection/site_to_site"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ipsec_connection/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/ipsec_connection/l2tp/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_connection/l2tp objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_connection/l2tp"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_connection/l2tp object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/l2tp that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_connection/l2tp"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/l2tp/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object l2tp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_connection/l2tp"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available l2tp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/l2tp"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object l2tp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/l2tp that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_connection/l2tp"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object l2tp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/l2tp that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_connection/l2tp"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/roadwarrior_ca/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/roadwarrior_cisco/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object roadwarrior_cisco", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_connection/roadwarrior_cisco"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available roadwarrior_cisco types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_cisco"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object roadwarrior_cisco types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_cisco that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_cisco"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object roadwarrior_cisco", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_cisco that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_cisco"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/ipsec_connection/roadwarrior_cisco/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_cisco"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/ipsec_connection/amazon_vpc/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_connection/amazon_vpc objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_connection/amazon_vpc"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_connection/amazon_vpc object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/amazon_vpc that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_connection/amazon_vpc"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_connection/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_connection/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_connection/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/group that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_connection/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/roadwarrior_ca/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_connection/roadwarrior_ca objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_connection/roadwarrior_ca"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_connection/roadwarrior_ca object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_ca that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_ca"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/roadwarrior_psk/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object roadwarrior_psk", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_connection/roadwarrior_psk"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available roadwarrior_psk types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_psk"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object roadwarrior_psk types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_psk that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_psk"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object roadwarrior_psk", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_psk that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_psk"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ipsec_connection/roadwarrior_x509/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_connection/roadwarrior_x509 objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_connection/roadwarrior_x509"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_connection/roadwarrior_x509 object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_x509 that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_x509"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/site_to_site/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_connection/site_to_site objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_connection/site_to_site"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_connection/site_to_site object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/site_to_site that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_connection/site_to_site"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/amazon_vpc/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/amazon_vpc"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/roadwarrior_psk/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_psk"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/roadwarrior_x509/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_x509"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/site_to_site/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/site_to_site"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/amazon_vpc/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available amazon_vpc types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/amazon_vpc"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object amazon_vpc types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/amazon_vpc that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_connection/amazon_vpc"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object amazon_vpc", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/amazon_vpc that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_connection/amazon_vpc"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object amazon_vpc", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_connection/amazon_vpc"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/ipsec_connection/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_connection/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/group that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/group that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_connection/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ipsec_connection/l2tp/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/l2tp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/roadwarrior_ca/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object roadwarrior_ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_connection/roadwarrior_ca"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available roadwarrior_ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_ca"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object roadwarrior_ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_ca that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_ca"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object roadwarrior_ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_ca that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_ca"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/roadwarrior_cisco/": {"post": sophos.MethodDescriptions{Description: "Create a new ipsec_connection/roadwarrior_cisco object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_cisco that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_cisco"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ipsec_connection/roadwarrior_cisco objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_connection/roadwarrior_cisco"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_connection/roadwarrior_psk/": {"post": sophos.MethodDescriptions{Description: "Create a new ipsec_connection/roadwarrior_psk object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_connection/roadwarrior_psk that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_connection/roadwarrior_psk"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ipsec_connection/roadwarrior_psk objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_connection/roadwarrior_psk"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of IpsecConnection
func (IpsecConnection) Definition() sophos.Definition { return *defIpsecConnection }

// ApiRoutes returns all known IpsecConnection Paths
func (IpsecConnection) ApiRoutes() []string {
	return []string{
		"/api/objects/ipsec_connection/amazon_vpc/",
		"/api/objects/ipsec_connection/amazon_vpc/{ref}",
		"/api/objects/ipsec_connection/amazon_vpc/{ref}/usedby",
		"/api/objects/ipsec_connection/group/",
		"/api/objects/ipsec_connection/group/{ref}",
		"/api/objects/ipsec_connection/group/{ref}/usedby",
		"/api/objects/ipsec_connection/l2tp/",
		"/api/objects/ipsec_connection/l2tp/{ref}",
		"/api/objects/ipsec_connection/l2tp/{ref}/usedby",
		"/api/objects/ipsec_connection/roadwarrior_ca/",
		"/api/objects/ipsec_connection/roadwarrior_ca/{ref}",
		"/api/objects/ipsec_connection/roadwarrior_ca/{ref}/usedby",
		"/api/objects/ipsec_connection/roadwarrior_cisco/",
		"/api/objects/ipsec_connection/roadwarrior_cisco/{ref}",
		"/api/objects/ipsec_connection/roadwarrior_cisco/{ref}/usedby",
		"/api/objects/ipsec_connection/roadwarrior_psk/",
		"/api/objects/ipsec_connection/roadwarrior_psk/{ref}",
		"/api/objects/ipsec_connection/roadwarrior_psk/{ref}/usedby",
		"/api/objects/ipsec_connection/roadwarrior_x509/",
		"/api/objects/ipsec_connection/roadwarrior_x509/{ref}",
		"/api/objects/ipsec_connection/roadwarrior_x509/{ref}/usedby",
		"/api/objects/ipsec_connection/site_to_site/",
		"/api/objects/ipsec_connection/site_to_site/{ref}",
		"/api/objects/ipsec_connection/site_to_site/{ref}/usedby",
	}
}

// References returns the IpsecConnection's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (IpsecConnection) References() []string {
	return []string{
		"REF_IpsecConnectionAmazonVpc",
		"REF_IpsecConnectionGroup",
		"REF_IpsecConnectionL2Tp",
		"REF_IpsecConnectionRoadwarriorCa",
		"REF_IpsecConnectionRoadwarriorCisco",
		"REF_IpsecConnectionRoadwarriorPsk",
		"REF_IpsecConnectionRoadwarriorX509",
		"REF_IpsecConnectionSiteToSite",
	}
}

// IpsecConnectionRoadwarriorX509 is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecConnectionRoadwarriorX509 []interface{}

// GetPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorX509 GET path
// Returns all available ipsec_connection/roadwarrior_x509 objects
func (*IpsecConnectionRoadwarriorX509) GetPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_x509/"
}

// RefRequired implements sophos.RestObject
func (*IpsecConnectionRoadwarriorX509) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorX509 DELETE path
// Creates or updates the complete object roadwarrior_x509
func (*IpsecConnectionRoadwarriorX509) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_x509/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorX509 PATCH path
// Changes to parts of the object roadwarrior_x509 types
func (*IpsecConnectionRoadwarriorX509) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_x509/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorX509 POST path
// Create a new ipsec_connection/roadwarrior_x509 object
func (*IpsecConnectionRoadwarriorX509) PostPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_x509/"
}

// PutPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorX509 PUT path
// Creates or updates the complete object roadwarrior_x509
func (*IpsecConnectionRoadwarriorX509) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_x509/%s", ref)
}

// IpsecConnectionSiteToSite is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecConnectionSiteToSites []IpsecConnectionSiteToSite
type IpsecConnectionSiteToSite struct {
	Locked        string   `json:"_locked"`
	Reference     string   `json:"_ref"`
	_type         string   `json:"_type"`
	AutoPfIn      string   `json:"auto_pf_in"`
	AutoPfOut     string   `json:"auto_pf_out"`
	AutoPfrule    bool     `json:"auto_pfrule"`
	Bind          bool     `json:"bind"`
	Comment       string   `json:"comment"`
	Interface     string   `json:"interface"`
	Name          string   `json:"name"`
	Networks      []string `json:"networks"`
	Policy        string   `json:"policy"`
	RemoteGateway string   `json:"remote_gateway"`
	Status        bool     `json:"status"`
	StrictRouting bool     `json:"strict_routing"`
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionSiteToSite GET path
// Returns all available ipsec_connection/site_to_site objects
func (*IpsecConnectionSiteToSite) GetPath() string {
	return "/api/objects/ipsec_connection/site_to_site/"
}

// RefRequired implements sophos.RestObject
func (*IpsecConnectionSiteToSite) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecConnectionSiteToSite DELETE path
// Creates or updates the complete object site_to_site
func (*IpsecConnectionSiteToSite) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/site_to_site/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecConnectionSiteToSite PATCH path
// Changes to parts of the object site_to_site types
func (*IpsecConnectionSiteToSite) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/site_to_site/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecConnectionSiteToSite POST path
// Create a new ipsec_connection/site_to_site object
func (*IpsecConnectionSiteToSite) PostPath() string {
	return "/api/objects/ipsec_connection/site_to_site/"
}

// PutPath implements sophos.RestObject and returns the IpsecConnectionSiteToSite PUT path
// Creates or updates the complete object site_to_site
func (*IpsecConnectionSiteToSite) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/site_to_site/%s", ref)
}

// IpsecConnectionGroup is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecConnectionGroup []interface{}

// GetPath implements sophos.RestObject and returns the IpsecConnectionGroup GET path
// Returns all available ipsec_connection/group objects
func (*IpsecConnectionGroup) GetPath() string { return "/api/objects/ipsec_connection/group/" }

// RefRequired implements sophos.RestObject
func (*IpsecConnectionGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecConnectionGroup DELETE path
// Creates or updates the complete object group
func (*IpsecConnectionGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecConnectionGroup PATCH path
// Changes to parts of the object group types
func (*IpsecConnectionGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecConnectionGroup POST path
// Create a new ipsec_connection/group object
func (*IpsecConnectionGroup) PostPath() string {
	return "/api/objects/ipsec_connection/group/"
}

// PutPath implements sophos.RestObject and returns the IpsecConnectionGroup PUT path
// Creates or updates the complete object group
func (*IpsecConnectionGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/group/%s", ref)
}

// IpsecConnectionL2Tp is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecConnectionL2Tps []IpsecConnectionL2Tp
type IpsecConnectionL2Tp struct {
	Locked                    string   `json:"_locked"`
	Reference                 string   `json:"_ref"`
	_type                     string   `json:"_type"`
	AuthenticationType        string   `json:"authentication_type"`
	Certificate               string   `json:"certificate"`
	Comment                   string   `json:"comment"`
	Debug                     bool     `json:"debug"`
	Interface                 string   `json:"interface"`
	IPAssignmentDhcp          string   `json:"ip_assignment_dhcp"`
	IPAssignmentDhcpInterface string   `json:"ip_assignment_dhcp_interface"`
	IPAssignmentMode          string   `json:"ip_assignment_mode"`
	IPAssignmentPool          string   `json:"ip_assignment_pool"`
	IphoneConnectionName      string   `json:"iphone_connection_name"`
	IphoneHostname            string   `json:"iphone_hostname"`
	IphoneStatus              bool     `json:"iphone_status"`
	Name                      string   `json:"name"`
	Policy                    string   `json:"policy"`
	Psk                       string   `json:"psk"`
	Status                    bool     `json:"status"`
	Users                     []string `json:"users"`
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionL2Tps GET path
// Returns all available ipsec_connection/l2tp objects
func (*IpsecConnectionL2Tps) GetPath() string { return "/api/objects/ipsec_connection/l2tp/" }

// RefRequired implements sophos.RestObject
func (*IpsecConnectionL2Tps) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the IpsecConnectionL2Tps GET path
// Returns all available l2tp types
func (i *IpsecConnectionL2Tp) GetPath() string {
	return fmt.Sprintf("/api/objects/ipsec_connection/l2tp/%s", i.Reference)
}

// RefRequired implements sophos.RestObject
func (i *IpsecConnectionL2Tp) RefRequired() (string, bool) { return i.Reference, true }

// DeletePath implements sophos.RestObject and returns the IpsecConnectionL2Tp DELETE path
// Creates or updates the complete object l2tp
func (*IpsecConnectionL2Tp) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/l2tp/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecConnectionL2Tp PATCH path
// Changes to parts of the object l2tp types
func (*IpsecConnectionL2Tp) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/l2tp/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecConnectionL2Tp POST path
// Create a new ipsec_connection/l2tp object
func (*IpsecConnectionL2Tp) PostPath() string {
	return "/api/objects/ipsec_connection/l2tp/"
}

// PutPath implements sophos.RestObject and returns the IpsecConnectionL2Tp PUT path
// Creates or updates the complete object l2tp
func (*IpsecConnectionL2Tp) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/l2tp/%s", ref)
}

// Type implements sophos.Object
func (i *IpsecConnectionL2Tp) GetType() string { return i._type }

// IpsecConnectionRoadwarriorCa is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecConnectionRoadwarriorCa []interface{}

// GetPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCa GET path
// Returns all available ipsec_connection/roadwarrior_ca objects
func (*IpsecConnectionRoadwarriorCa) GetPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_ca/"
}

// RefRequired implements sophos.RestObject
func (*IpsecConnectionRoadwarriorCa) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCa DELETE path
// Creates or updates the complete object roadwarrior_ca
func (*IpsecConnectionRoadwarriorCa) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_ca/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCa PATCH path
// Changes to parts of the object roadwarrior_ca types
func (*IpsecConnectionRoadwarriorCa) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_ca/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCa POST path
// Create a new ipsec_connection/roadwarrior_ca object
func (*IpsecConnectionRoadwarriorCa) PostPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_ca/"
}

// PutPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCa PUT path
// Creates or updates the complete object roadwarrior_ca
func (*IpsecConnectionRoadwarriorCa) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_ca/%s", ref)
}

// IpsecConnectionRoadwarriorCisco is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecConnectionRoadwarriorCisco []interface{}

// GetPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCisco GET path
// Returns all available ipsec_connection/roadwarrior_cisco objects
func (*IpsecConnectionRoadwarriorCisco) GetPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_cisco/"
}

// RefRequired implements sophos.RestObject
func (*IpsecConnectionRoadwarriorCisco) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCisco DELETE path
// Creates or updates the complete object roadwarrior_cisco
func (*IpsecConnectionRoadwarriorCisco) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_cisco/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCisco PATCH path
// Changes to parts of the object roadwarrior_cisco types
func (*IpsecConnectionRoadwarriorCisco) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_cisco/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCisco POST path
// Create a new ipsec_connection/roadwarrior_cisco object
func (*IpsecConnectionRoadwarriorCisco) PostPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_cisco/"
}

// PutPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCisco PUT path
// Creates or updates the complete object roadwarrior_cisco
func (*IpsecConnectionRoadwarriorCisco) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_cisco/%s", ref)
}

// IpsecConnectionAmazonVpc is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecConnectionAmazonVpcs []IpsecConnectionAmazonVpc
type IpsecConnectionAmazonVpc struct {
	Locked         string `json:"_locked"`
	Reference      string `json:"_ref"`
	_type          string `json:"_type"`
	Authentication string `json:"authentication"`
	Comment        string `json:"comment"`
	Interface      string `json:"interface"`
	Name           string `json:"name"`
	Policy         string `json:"policy"`
	Remote         string `json:"remote"`
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionAmazonVpcs GET path
// Returns all available ipsec_connection/amazon_vpc objects
func (*IpsecConnectionAmazonVpcs) GetPath() string { return "/api/objects/ipsec_connection/amazon_vpc/" }

// RefRequired implements sophos.RestObject
func (*IpsecConnectionAmazonVpcs) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the IpsecConnectionAmazonVpcs GET path
// Returns all available amazon_vpc types
func (i *IpsecConnectionAmazonVpc) GetPath() string {
	return fmt.Sprintf("/api/objects/ipsec_connection/amazon_vpc/%s", i.Reference)
}

// RefRequired implements sophos.RestObject
func (i *IpsecConnectionAmazonVpc) RefRequired() (string, bool) { return i.Reference, true }

// DeletePath implements sophos.RestObject and returns the IpsecConnectionAmazonVpc DELETE path
// Creates or updates the complete object amazon_vpc
func (*IpsecConnectionAmazonVpc) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/amazon_vpc/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecConnectionAmazonVpc PATCH path
// Changes to parts of the object amazon_vpc types
func (*IpsecConnectionAmazonVpc) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/amazon_vpc/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecConnectionAmazonVpc POST path
// Create a new ipsec_connection/amazon_vpc object
func (*IpsecConnectionAmazonVpc) PostPath() string {
	return "/api/objects/ipsec_connection/amazon_vpc/"
}

// PutPath implements sophos.RestObject and returns the IpsecConnectionAmazonVpc PUT path
// Creates or updates the complete object amazon_vpc
func (*IpsecConnectionAmazonVpc) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/amazon_vpc/%s", ref)
}

// Type implements sophos.Object
func (i *IpsecConnectionAmazonVpc) GetType() string { return i._type }

// IpsecConnectionRoadwarriorPsk is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecConnectionRoadwarriorPsk []interface{}

// GetPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorPsk GET path
// Returns all available ipsec_connection/roadwarrior_psk objects
func (*IpsecConnectionRoadwarriorPsk) GetPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_psk/"
}

// RefRequired implements sophos.RestObject
func (*IpsecConnectionRoadwarriorPsk) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorPsk DELETE path
// Creates or updates the complete object roadwarrior_psk
func (*IpsecConnectionRoadwarriorPsk) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_psk/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorPsk PATCH path
// Changes to parts of the object roadwarrior_psk types
func (*IpsecConnectionRoadwarriorPsk) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_psk/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorPsk POST path
// Create a new ipsec_connection/roadwarrior_psk object
func (*IpsecConnectionRoadwarriorPsk) PostPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_psk/"
}

// PutPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorPsk PUT path
// Creates or updates the complete object roadwarrior_psk
func (*IpsecConnectionRoadwarriorPsk) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_connection/roadwarrior_psk/%s", ref)
}

// IpsecRemoteAuth is a generated struct representing the Sophos IpsecRemoteAuth Endpoint
// GET /api/nodes/ipsec_remote_auth
type IpsecRemoteAuth struct {
	IpsecRemoteAuthCa    IpsecRemoteAuthCa    `json:"ipsec_remote_auth_ca"`
	IpsecRemoteAuthPsk   IpsecRemoteAuthPsk   `json:"ipsec_remote_auth_psk"`
	IpsecRemoteAuthRsa   IpsecRemoteAuthRsa   `json:"ipsec_remote_auth_rsa"`
	IpsecRemoteAuthX509  IpsecRemoteAuthX509  `json:"ipsec_remote_auth_x509"`
	IpsecRemoteAuthGroup IpsecRemoteAuthGroup `json:"ipsec_remote_auth_group"`
}

var defsIpsecRemoteAuth = map[string]sophos.RestObject{
	"IpsecRemoteAuthCa":    &IpsecRemoteAuthCa{},
	"IpsecRemoteAuthPsk":   &IpsecRemoteAuthPsk{},
	"IpsecRemoteAuthRsa":   &IpsecRemoteAuthRsa{},
	"IpsecRemoteAuthX509":  &IpsecRemoteAuthX509{},
	"IpsecRemoteAuthGroup": &IpsecRemoteAuthGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of IpsecRemoteAuth's Objects
func (IpsecRemoteAuth) RestObjects() map[string]sophos.RestObject {
	return defsIpsecRemoteAuth
}

// GetPath implements sophos.RestGetter
func (*IpsecRemoteAuth) GetPath() string { return "/api/nodes/ipsec_remote_auth" }

// RefRequired implements sophos.RestGetter
func (*IpsecRemoteAuth) RefRequired() (string, bool) { return "", false }

var defIpsecRemoteAuth = &sophos.Definition{Description: "ipsec_remote_auth", Name: "ipsec_remote_auth", Link: "/api/definitions/ipsec_remote_auth", Swag: map[string]sophos.MethodMap{"/objects/ipsec_remote_auth/psk/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/psk"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_remote_auth/x509/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object x509", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_remote_auth/x509"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available x509 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/x509"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object x509 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/x509 that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/x509"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object x509", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/x509 that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/x509"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_remote_auth/ca/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/ca"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/ipsec_remote_auth/x509/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_remote_auth/x509 objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_remote_auth/x509"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_remote_auth/x509 object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/x509 that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/x509"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_remote_auth/rsa/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object rsa", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_remote_auth/rsa"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available rsa types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/rsa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object rsa types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/rsa that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/rsa"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object rsa", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/rsa that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/rsa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ipsec_remote_auth/x509/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/x509"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_remote_auth/ca/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/ca"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ca types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/ca that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/ca"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/ca that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/ca"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ca", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_remote_auth/ca"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}}, "/objects/ipsec_remote_auth/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_remote_auth/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_remote_auth/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_remote_auth/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/group that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_remote_auth/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_remote_auth/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/group that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/group that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/ipsec_remote_auth/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_remote_auth/psk/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object psk", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ipsec_remote_auth/psk"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available psk types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/psk"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object psk types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/psk that will be changes", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/psk"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object psk", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/psk that will be updated", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/psk"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ipsec_remote_auth/ca/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_remote_auth/ca objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_remote_auth/ca"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_remote_auth/ca object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/ca that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/ca"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_remote_auth/psk/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_remote_auth/psk objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_remote_auth/psk"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_remote_auth/psk object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/psk that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/psk"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_remote_auth/rsa/": {"get": sophos.MethodDescriptions{Description: "Returns all available ipsec_remote_auth/rsa objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ipsec_remote_auth/rsa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ipsec_remote_auth/rsa object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ipsec_remote_auth/rsa that will be created", Type: "", Required: true}}, Tags: []string{"ipsec_remote_auth/rsa"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ipsec_remote_auth/rsa/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ipsec_remote_auth/rsa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of IpsecRemoteAuth
func (IpsecRemoteAuth) Definition() sophos.Definition { return *defIpsecRemoteAuth }

// ApiRoutes returns all known IpsecRemoteAuth Paths
func (IpsecRemoteAuth) ApiRoutes() []string {
	return []string{
		"/api/objects/ipsec_remote_auth/ca/",
		"/api/objects/ipsec_remote_auth/ca/{ref}",
		"/api/objects/ipsec_remote_auth/ca/{ref}/usedby",
		"/api/objects/ipsec_remote_auth/group/",
		"/api/objects/ipsec_remote_auth/group/{ref}",
		"/api/objects/ipsec_remote_auth/group/{ref}/usedby",
		"/api/objects/ipsec_remote_auth/psk/",
		"/api/objects/ipsec_remote_auth/psk/{ref}",
		"/api/objects/ipsec_remote_auth/psk/{ref}/usedby",
		"/api/objects/ipsec_remote_auth/rsa/",
		"/api/objects/ipsec_remote_auth/rsa/{ref}",
		"/api/objects/ipsec_remote_auth/rsa/{ref}/usedby",
		"/api/objects/ipsec_remote_auth/x509/",
		"/api/objects/ipsec_remote_auth/x509/{ref}",
		"/api/objects/ipsec_remote_auth/x509/{ref}/usedby",
	}
}

// References returns the IpsecRemoteAuth's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (IpsecRemoteAuth) References() []string {
	return []string{
		"REF_IpsecRemoteAuthCa",
		"REF_IpsecRemoteAuthGroup",
		"REF_IpsecRemoteAuthPsk",
		"REF_IpsecRemoteAuthRsa",
		"REF_IpsecRemoteAuthX509",
	}
}

// IpsecRemoteAuthCa is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecRemoteAuthCa []interface{}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthCa GET path
// Returns all available ipsec_remote_auth/ca objects
func (*IpsecRemoteAuthCa) GetPath() string { return "/api/objects/ipsec_remote_auth/ca/" }

// RefRequired implements sophos.RestObject
func (*IpsecRemoteAuthCa) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecRemoteAuthCa DELETE path
// Creates or updates the complete object ca
func (*IpsecRemoteAuthCa) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/ca/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecRemoteAuthCa PATCH path
// Changes to parts of the object ca types
func (*IpsecRemoteAuthCa) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/ca/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecRemoteAuthCa POST path
// Create a new ipsec_remote_auth/ca object
func (*IpsecRemoteAuthCa) PostPath() string {
	return "/api/objects/ipsec_remote_auth/ca/"
}

// PutPath implements sophos.RestObject and returns the IpsecRemoteAuthCa PUT path
// Creates or updates the complete object ca
func (*IpsecRemoteAuthCa) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/ca/%s", ref)
}

// IpsecRemoteAuthPsk is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecRemoteAuthPsks []IpsecRemoteAuthPsk
type IpsecRemoteAuthPsk struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Psk       string `json:"psk"`
	VpnID     string `json:"vpn_id"`
	VpnIDType string `json:"vpn_id_type"`
}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthPsks GET path
// Returns all available ipsec_remote_auth/psk objects
func (*IpsecRemoteAuthPsks) GetPath() string { return "/api/objects/ipsec_remote_auth/psk/" }

// RefRequired implements sophos.RestObject
func (*IpsecRemoteAuthPsks) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthPsks GET path
// Returns all available psk types
func (i *IpsecRemoteAuthPsk) GetPath() string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/psk/%s", i.Reference)
}

// RefRequired implements sophos.RestObject
func (i *IpsecRemoteAuthPsk) RefRequired() (string, bool) { return i.Reference, true }

// DeletePath implements sophos.RestObject and returns the IpsecRemoteAuthPsk DELETE path
// Creates or updates the complete object psk
func (*IpsecRemoteAuthPsk) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/psk/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecRemoteAuthPsk PATCH path
// Changes to parts of the object psk types
func (*IpsecRemoteAuthPsk) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/psk/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecRemoteAuthPsk POST path
// Create a new ipsec_remote_auth/psk object
func (*IpsecRemoteAuthPsk) PostPath() string {
	return "/api/objects/ipsec_remote_auth/psk/"
}

// PutPath implements sophos.RestObject and returns the IpsecRemoteAuthPsk PUT path
// Creates or updates the complete object psk
func (*IpsecRemoteAuthPsk) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/psk/%s", ref)
}

// Type implements sophos.Object
func (i *IpsecRemoteAuthPsk) GetType() string { return i._type }

// IpsecRemoteAuthRsa is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecRemoteAuthRsa []interface{}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthRsa GET path
// Returns all available ipsec_remote_auth/rsa objects
func (*IpsecRemoteAuthRsa) GetPath() string { return "/api/objects/ipsec_remote_auth/rsa/" }

// RefRequired implements sophos.RestObject
func (*IpsecRemoteAuthRsa) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecRemoteAuthRsa DELETE path
// Creates or updates the complete object rsa
func (*IpsecRemoteAuthRsa) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/rsa/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecRemoteAuthRsa PATCH path
// Changes to parts of the object rsa types
func (*IpsecRemoteAuthRsa) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/rsa/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecRemoteAuthRsa POST path
// Create a new ipsec_remote_auth/rsa object
func (*IpsecRemoteAuthRsa) PostPath() string {
	return "/api/objects/ipsec_remote_auth/rsa/"
}

// PutPath implements sophos.RestObject and returns the IpsecRemoteAuthRsa PUT path
// Creates or updates the complete object rsa
func (*IpsecRemoteAuthRsa) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/rsa/%s", ref)
}

// IpsecRemoteAuthX509 is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecRemoteAuthX509s []IpsecRemoteAuthX509
type IpsecRemoteAuthX509 struct {
	Locked      string `json:"_locked"`
	Reference   string `json:"_ref"`
	_type       string `json:"_type"`
	Certificate string `json:"certificate"`
	Comment     string `json:"comment"`
	Name        string `json:"name"`
	VpnID       string `json:"vpn_id"`
	VpnIDType   string `json:"vpn_id_type"`
}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthX509 GET path
// Returns all available ipsec_remote_auth/x509 objects
func (*IpsecRemoteAuthX509) GetPath() string { return "/api/objects/ipsec_remote_auth/x509/" }

// RefRequired implements sophos.RestObject
func (*IpsecRemoteAuthX509) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecRemoteAuthX509 DELETE path
// Creates or updates the complete object x509
func (*IpsecRemoteAuthX509) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/x509/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecRemoteAuthX509 PATCH path
// Changes to parts of the object x509 types
func (*IpsecRemoteAuthX509) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/x509/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecRemoteAuthX509 POST path
// Create a new ipsec_remote_auth/x509 object
func (*IpsecRemoteAuthX509) PostPath() string {
	return "/api/objects/ipsec_remote_auth/x509/"
}

// PutPath implements sophos.RestObject and returns the IpsecRemoteAuthX509 PUT path
// Creates or updates the complete object x509
func (*IpsecRemoteAuthX509) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/x509/%s", ref)
}

// IpsecRemoteAuthGroup is an Sophos Endpoint subType and implements sophos.RestObject
type IpsecRemoteAuthGroup []interface{}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthGroup GET path
// Returns all available ipsec_remote_auth/group objects
func (*IpsecRemoteAuthGroup) GetPath() string { return "/api/objects/ipsec_remote_auth/group/" }

// RefRequired implements sophos.RestObject
func (*IpsecRemoteAuthGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the IpsecRemoteAuthGroup DELETE path
// Creates or updates the complete object group
func (*IpsecRemoteAuthGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the IpsecRemoteAuthGroup PATCH path
// Changes to parts of the object group types
func (*IpsecRemoteAuthGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the IpsecRemoteAuthGroup POST path
// Create a new ipsec_remote_auth/group object
func (*IpsecRemoteAuthGroup) PostPath() string {
	return "/api/objects/ipsec_remote_auth/group/"
}

// PutPath implements sophos.RestObject and returns the IpsecRemoteAuthGroup PUT path
// Creates or updates the complete object group
func (*IpsecRemoteAuthGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ipsec_remote_auth/group/%s", ref)
}

// Itfhw is a generated struct representing the Sophos Itfhw Endpoint
// GET /api/nodes/itfhw
type Itfhw struct {
	ItfhwAweNetwork      ItfhwAweNetwork      `json:"itfhw_awe_network"`
	ItfhwEthernet        ItfhwEthernet        `json:"itfhw_ethernet"`
	ItfhwLag             ItfhwLag             `json:"itfhw_lag"`
	ItfhwRedClient       ItfhwRedClient       `json:"itfhw_red_client"`
	ItfhwUsbserial       ItfhwUsbserial       `json:"itfhw_usbserial"`
	ItfhwVirtual         ItfhwVirtual         `json:"itfhw_virtual"`
	ItfhwGroup           ItfhwGroup           `json:"itfhw_group"`
	ItfhwRedServer       ItfhwRedServer       `json:"itfhw_red_server"`
	ItfhwSerial          ItfhwSerial          `json:"itfhw_serial"`
	ItfhwAweNetworkGroup ItfhwAweNetworkGroup `json:"itfhw_awe_network_group"`
	ItfhwBridge          ItfhwBridge          `json:"itfhw_bridge"`
}

var defsItfhw = map[string]sophos.RestObject{
	"ItfhwAweNetwork":      &ItfhwAweNetwork{},
	"ItfhwEthernet":        &ItfhwEthernet{},
	"ItfhwLag":             &ItfhwLag{},
	"ItfhwRedClient":       &ItfhwRedClient{},
	"ItfhwUsbserial":       &ItfhwUsbserial{},
	"ItfhwVirtual":         &ItfhwVirtual{},
	"ItfhwGroup":           &ItfhwGroup{},
	"ItfhwRedServer":       &ItfhwRedServer{},
	"ItfhwSerial":          &ItfhwSerial{},
	"ItfhwAweNetworkGroup": &ItfhwAweNetworkGroup{},
	"ItfhwBridge":          &ItfhwBridge{},
}

// RestObjects implements the sophos.Node interface and returns a map of Itfhw's Objects
func (Itfhw) RestObjects() map[string]sophos.RestObject {
	return defsItfhw
}

// GetPath implements sophos.RestGetter
func (*Itfhw) GetPath() string { return "/api/nodes/itfhw" }

// RefRequired implements sophos.RestGetter
func (*Itfhw) RefRequired() (string, bool) { return "", false }

var defItfhw = &sophos.Definition{Description: "itfhw", Name: "itfhw", Link: "/api/definitions/itfhw", Swag: map[string]sophos.MethodMap{"/objects/itfhw/ethernet/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ethernet", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/ethernet"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ethernet types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/ethernet"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ethernet types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/ethernet that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/ethernet"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ethernet", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/ethernet that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/ethernet"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/itfhw/lag/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfhw/lag objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/lag"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfhw/lag object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/lag that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/lag"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/red_client/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfhw/red_client objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/red_client"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfhw/red_client object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/red_client that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/red_client"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/usbserial/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/usbserial"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/virtual/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available virtual types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/virtual"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object virtual types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/virtual that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/virtual"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object virtual", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/virtual that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/virtual"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object virtual", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/virtual"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}}, "/objects/itfhw/awe_network/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfhw/awe_network objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/awe_network"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfhw/awe_network object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/awe_network that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/awe_network"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/red_server/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/red_server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/serial/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfhw/serial objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/serial"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfhw/serial object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/serial that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/serial"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/group/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/group that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/group that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/itfhw/red_server/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfhw/red_server objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/red_server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfhw/red_server object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/red_server that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/red_server"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/virtual/": {"post": sophos.MethodDescriptions{Description: "Create a new itfhw/virtual object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/virtual that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/virtual"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available itfhw/virtual objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/virtual"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/virtual/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/virtual"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/red_client/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available red_client types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/red_client"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object red_client types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/red_client that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/red_client"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object red_client", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/red_client that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/red_client"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object red_client", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/red_client"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}}, "/objects/itfhw/awe_network_group/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfhw/awe_network_group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/awe_network_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfhw/awe_network_group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/awe_network_group that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/awe_network_group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/awe_network_group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/awe_network_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/bridge/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfhw/bridge objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/bridge"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfhw/bridge object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/bridge that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/bridge"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/bridge/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object bridge", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/bridge"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available bridge types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/bridge"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object bridge types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/bridge that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/bridge"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object bridge", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/bridge that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/bridge"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/itfhw/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfhw/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfhw/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/group that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/lag/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/lag"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/usbserial/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available usbserial types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/usbserial"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object usbserial types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/usbserial that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/usbserial"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object usbserial", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/usbserial that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/usbserial"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object usbserial", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/usbserial"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/itfhw/awe_network/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/awe_network"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/itfhw/red_client/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/red_client"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/usbserial/": {"post": sophos.MethodDescriptions{Description: "Create a new itfhw/usbserial object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/usbserial that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/usbserial"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available itfhw/usbserial objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/usbserial"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/itfhw/ethernet/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfhw/ethernet objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfhw/ethernet"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfhw/ethernet object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/ethernet that will be created", Type: "", Required: true}}, Tags: []string{"itfhw/ethernet"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/itfhw/awe_network_group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object awe_network_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/awe_network_group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available awe_network_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/awe_network_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object awe_network_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/awe_network_group that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/awe_network_group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object awe_network_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/awe_network_group that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/awe_network_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/itfhw/ethernet/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/ethernet"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/itfhw/serial/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object serial", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/serial"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available serial types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/serial"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object serial types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/serial that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/serial"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object serial", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/serial that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/serial"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/itfhw/awe_network/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available awe_network types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/awe_network"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object awe_network types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/awe_network that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/awe_network"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object awe_network", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/awe_network that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/awe_network"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object awe_network", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/awe_network"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/lag/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object lag", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/lag"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available lag types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/lag"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object lag types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/lag that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/lag"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object lag", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/lag that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/lag"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/itfhw/red_server/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object red_server", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/red_server that will be updated", Type: "", Required: true}}, Tags: []string{"itfhw/red_server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object red_server", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfhw/red_server"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available red_server types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/red_server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object red_server types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfhw/red_server that will be changes", Type: "", Required: true}}, Tags: []string{"itfhw/red_server"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfhw/bridge/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/bridge"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/itfhw/serial/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfhw/serial"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Itfhw
func (Itfhw) Definition() sophos.Definition { return *defItfhw }

// ApiRoutes returns all known Itfhw Paths
func (Itfhw) ApiRoutes() []string {
	return []string{
		"/api/objects/itfhw/awe_network/",
		"/api/objects/itfhw/awe_network/{ref}",
		"/api/objects/itfhw/awe_network/{ref}/usedby",
		"/api/objects/itfhw/awe_network_group/",
		"/api/objects/itfhw/awe_network_group/{ref}",
		"/api/objects/itfhw/awe_network_group/{ref}/usedby",
		"/api/objects/itfhw/bridge/",
		"/api/objects/itfhw/bridge/{ref}",
		"/api/objects/itfhw/bridge/{ref}/usedby",
		"/api/objects/itfhw/ethernet/",
		"/api/objects/itfhw/ethernet/{ref}",
		"/api/objects/itfhw/ethernet/{ref}/usedby",
		"/api/objects/itfhw/group/",
		"/api/objects/itfhw/group/{ref}",
		"/api/objects/itfhw/group/{ref}/usedby",
		"/api/objects/itfhw/lag/",
		"/api/objects/itfhw/lag/{ref}",
		"/api/objects/itfhw/lag/{ref}/usedby",
		"/api/objects/itfhw/red_client/",
		"/api/objects/itfhw/red_client/{ref}",
		"/api/objects/itfhw/red_client/{ref}/usedby",
		"/api/objects/itfhw/red_server/",
		"/api/objects/itfhw/red_server/{ref}",
		"/api/objects/itfhw/red_server/{ref}/usedby",
		"/api/objects/itfhw/serial/",
		"/api/objects/itfhw/serial/{ref}",
		"/api/objects/itfhw/serial/{ref}/usedby",
		"/api/objects/itfhw/usbserial/",
		"/api/objects/itfhw/usbserial/{ref}",
		"/api/objects/itfhw/usbserial/{ref}/usedby",
		"/api/objects/itfhw/virtual/",
		"/api/objects/itfhw/virtual/{ref}",
		"/api/objects/itfhw/virtual/{ref}/usedby",
	}
}

// References returns the Itfhw's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Itfhw) References() []string {
	return []string{
		"REF_ItfhwAweNetwork",
		"REF_ItfhwAweNetworkGroup",
		"REF_ItfhwBridge",
		"REF_ItfhwEthernet",
		"REF_ItfhwGroup",
		"REF_ItfhwLag",
		"REF_ItfhwRedClient",
		"REF_ItfhwRedServer",
		"REF_ItfhwSerial",
		"REF_ItfhwUsbserial",
		"REF_ItfhwVirtual",
	}
}

// ItfhwAweNetwork is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwAweNetworks []ItfhwAweNetwork
type ItfhwAweNetwork struct {
	Locked            string        `json:"_locked"`
	Reference         string        `json:"_ref"`
	_type             string        `json:"_type"`
	ApBridgemode      string        `json:"ap_bridgemode"`
	Bridge            string        `json:"bridge"`
	ClientIsolation   bool          `json:"client_isolation"`
	Comment           string        `json:"comment"`
	CryptoAlg         string        `json:"crypto_alg"`
	Description       string        `json:"description"`
	Dot11r            bool          `json:"dot11r"`
	DynamicVlan       int64         `json:"dynamic_vlan"`
	EncryptionMode    string        `json:"encryption_mode"`
	FreqBands         string        `json:"freq_bands"`
	Hardware          string        `json:"hardware"`
	HideSsid          bool          `json:"hide_ssid"`
	InterfaceName     string        `json:"interface_name"`
	Mac               string        `json:"mac"`
	MacFilter         string        `json:"mac_filter"`
	MacList           string        `json:"mac_list"`
	MeshID            string        `json:"mesh_id"`
	MeshMode          string        `json:"mesh_mode"`
	MeshSubtag        string        `json:"mesh_subtag"`
	Name              string        `json:"name"`
	NetworkMode       string        `json:"network_mode"`
	NetworkName       string        `json:"network_name"`
	Psk               string        `json:"psk"`
	R0khSecret        string        `json:"r0kh_secret"`
	Ssid              string        `json:"ssid"`
	SsidVlantag       interface{}   `json:"ssid_vlantag"`
	Status            bool          `json:"status"`
	TimeScheduling    bool          `json:"time_scheduling"`
	TimeSelect        []interface{} `json:"time_select"`
	Uapsd             bool          `json:"uapsd"`
	Utf8Ssid          bool          `json:"utf8_ssid"`
	Vlantag           string        `json:"vlantag"`
	Wep128            string        `json:"wep128"`
	WepAuthentication string        `json:"wep_authentication"`
}

// GetPath implements sophos.RestObject and returns the ItfhwAweNetworks GET path
// Returns all available itfhw/awe_network objects
func (*ItfhwAweNetworks) GetPath() string { return "/api/objects/itfhw/awe_network/" }

// RefRequired implements sophos.RestObject
func (*ItfhwAweNetworks) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ItfhwAweNetworks GET path
// Returns all available awe_network types
func (i *ItfhwAweNetwork) GetPath() string {
	return fmt.Sprintf("/api/objects/itfhw/awe_network/%s", i.Reference)
}

// RefRequired implements sophos.RestObject
func (i *ItfhwAweNetwork) RefRequired() (string, bool) { return i.Reference, true }

// DeletePath implements sophos.RestObject and returns the ItfhwAweNetwork DELETE path
// Creates or updates the complete object awe_network
func (*ItfhwAweNetwork) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/awe_network/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwAweNetwork PATCH path
// Changes to parts of the object awe_network types
func (*ItfhwAweNetwork) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/awe_network/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwAweNetwork POST path
// Create a new itfhw/awe_network object
func (*ItfhwAweNetwork) PostPath() string {
	return "/api/objects/itfhw/awe_network/"
}

// PutPath implements sophos.RestObject and returns the ItfhwAweNetwork PUT path
// Creates or updates the complete object awe_network
func (*ItfhwAweNetwork) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/awe_network/%s", ref)
}

// Type implements sophos.Object
func (i *ItfhwAweNetwork) GetType() string { return i._type }

// ItfhwEthernet is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwEthernets []ItfhwEthernet
type ItfhwEthernet struct {
	Locked                string `json:"_locked"`
	Reference             string `json:"_ref"`
	_type                 string `json:"_type"`
	AutoNegotiation       bool   `json:"auto_negotiation"`
	AutoNegotiationStatus bool   `json:"auto_negotiation_status"`
	Comment               string `json:"comment"`
	Description           string `json:"description"`
	Duplex                string `json:"duplex"`
	Hardware              string `json:"hardware"`
	Irq                   int64  `json:"irq"`
	LinkMonitoring        bool   `json:"link_monitoring"`
	Mac                   string `json:"mac"`
	Mii                   bool   `json:"mii"`
	Name                  string `json:"name"`
	Pcidev                string `json:"pcidev"`
	PoeEnabled            bool   `json:"poe_enabled"`
	PoeStatus             string `json:"poe_status"`
	Slot                  string `json:"slot"`
	Speed                 string `json:"speed"`
	SupportedLinkModes    string `json:"supported_link_modes"`
	VirtualMac            string `json:"virtual_mac"`
}

// GetPath implements sophos.RestObject and returns the ItfhwEthernet GET path
// Returns all available itfhw/ethernet objects
func (*ItfhwEthernet) GetPath() string { return "/api/objects/itfhw/ethernet/" }

// RefRequired implements sophos.RestObject
func (*ItfhwEthernet) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfhwEthernet DELETE path
// Creates or updates the complete object ethernet
func (*ItfhwEthernet) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/ethernet/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwEthernet PATCH path
// Changes to parts of the object ethernet types
func (*ItfhwEthernet) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/ethernet/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwEthernet POST path
// Create a new itfhw/ethernet object
func (*ItfhwEthernet) PostPath() string {
	return "/api/objects/itfhw/ethernet/"
}

// PutPath implements sophos.RestObject and returns the ItfhwEthernet PUT path
// Creates or updates the complete object ethernet
func (*ItfhwEthernet) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/ethernet/%s", ref)
}

// ItfhwLag is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwLags []ItfhwLag
type ItfhwLag struct {
	Locked         string `json:"_locked"`
	Reference      string `json:"_ref"`
	_type          string `json:"_type"`
	Comment        string `json:"comment"`
	Description    string `json:"description"`
	Hardware       string `json:"hardware"`
	LinkMonitoring bool   `json:"link_monitoring"`
	Mac            string `json:"mac"`
	Name           string `json:"name"`
}

// GetPath implements sophos.RestObject and returns the ItfhwLags GET path
// Returns all available itfhw/lag objects
func (*ItfhwLags) GetPath() string { return "/api/objects/itfhw/lag/" }

// RefRequired implements sophos.RestObject
func (*ItfhwLags) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ItfhwLags GET path
// Returns all available lag types
func (i *ItfhwLag) GetPath() string { return fmt.Sprintf("/api/objects/itfhw/lag/%s", i.Reference) }

// RefRequired implements sophos.RestObject
func (i *ItfhwLag) RefRequired() (string, bool) { return i.Reference, true }

// DeletePath implements sophos.RestObject and returns the ItfhwLag DELETE path
// Creates or updates the complete object lag
func (*ItfhwLag) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/lag/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwLag PATCH path
// Changes to parts of the object lag types
func (*ItfhwLag) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/lag/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwLag POST path
// Create a new itfhw/lag object
func (*ItfhwLag) PostPath() string {
	return "/api/objects/itfhw/lag/"
}

// PutPath implements sophos.RestObject and returns the ItfhwLag PUT path
// Creates or updates the complete object lag
func (*ItfhwLag) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/lag/%s", ref)
}

// Type implements sophos.Object
func (i *ItfhwLag) GetType() string { return i._type }

// ItfhwRedClient is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwRedClient []interface{}

// GetPath implements sophos.RestObject and returns the ItfhwRedClient GET path
// Returns all available itfhw/red_client objects
func (*ItfhwRedClient) GetPath() string { return "/api/objects/itfhw/red_client/" }

// RefRequired implements sophos.RestObject
func (*ItfhwRedClient) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfhwRedClient DELETE path
// Creates or updates the complete object red_client
func (*ItfhwRedClient) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/red_client/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwRedClient PATCH path
// Changes to parts of the object red_client types
func (*ItfhwRedClient) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/red_client/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwRedClient POST path
// Create a new itfhw/red_client object
func (*ItfhwRedClient) PostPath() string {
	return "/api/objects/itfhw/red_client/"
}

// PutPath implements sophos.RestObject and returns the ItfhwRedClient PUT path
// Creates or updates the complete object red_client
func (*ItfhwRedClient) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/red_client/%s", ref)
}

// ItfhwUsbserial is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwUsbserial []interface{}

// GetPath implements sophos.RestObject and returns the ItfhwUsbserial GET path
// Returns all available itfhw/usbserial objects
func (*ItfhwUsbserial) GetPath() string { return "/api/objects/itfhw/usbserial/" }

// RefRequired implements sophos.RestObject
func (*ItfhwUsbserial) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfhwUsbserial DELETE path
// Creates or updates the complete object usbserial
func (*ItfhwUsbserial) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/usbserial/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwUsbserial PATCH path
// Changes to parts of the object usbserial types
func (*ItfhwUsbserial) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/usbserial/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwUsbserial POST path
// Create a new itfhw/usbserial object
func (*ItfhwUsbserial) PostPath() string {
	return "/api/objects/itfhw/usbserial/"
}

// PutPath implements sophos.RestObject and returns the ItfhwUsbserial PUT path
// Creates or updates the complete object usbserial
func (*ItfhwUsbserial) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/usbserial/%s", ref)
}

// ItfhwVirtual is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwVirtual []interface{}

// GetPath implements sophos.RestObject and returns the ItfhwVirtual GET path
// Returns all available itfhw/virtual objects
func (*ItfhwVirtual) GetPath() string { return "/api/objects/itfhw/virtual/" }

// RefRequired implements sophos.RestObject
func (*ItfhwVirtual) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfhwVirtual DELETE path
// Creates or updates the complete object virtual
func (*ItfhwVirtual) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/virtual/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwVirtual PATCH path
// Changes to parts of the object virtual types
func (*ItfhwVirtual) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/virtual/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwVirtual POST path
// Create a new itfhw/virtual object
func (*ItfhwVirtual) PostPath() string {
	return "/api/objects/itfhw/virtual/"
}

// PutPath implements sophos.RestObject and returns the ItfhwVirtual PUT path
// Creates or updates the complete object virtual
func (*ItfhwVirtual) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/virtual/%s", ref)
}

// ItfhwGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwGroup []interface{}

// GetPath implements sophos.RestObject and returns the ItfhwGroup GET path
// Returns all available itfhw/group objects
func (*ItfhwGroup) GetPath() string { return "/api/objects/itfhw/group/" }

// RefRequired implements sophos.RestObject
func (*ItfhwGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfhwGroup DELETE path
// Creates or updates the complete object group
func (*ItfhwGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwGroup PATCH path
// Changes to parts of the object group types
func (*ItfhwGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwGroup POST path
// Create a new itfhw/group object
func (*ItfhwGroup) PostPath() string {
	return "/api/objects/itfhw/group/"
}

// PutPath implements sophos.RestObject and returns the ItfhwGroup PUT path
// Creates or updates the complete object group
func (*ItfhwGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/group/%s", ref)
}

// ItfhwRedServer is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwRedServer []interface{}

// GetPath implements sophos.RestObject and returns the ItfhwRedServer GET path
// Returns all available itfhw/red_server objects
func (*ItfhwRedServer) GetPath() string { return "/api/objects/itfhw/red_server/" }

// RefRequired implements sophos.RestObject
func (*ItfhwRedServer) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfhwRedServer DELETE path
// Creates or updates the complete object red_server
func (*ItfhwRedServer) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/red_server/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwRedServer PATCH path
// Changes to parts of the object red_server types
func (*ItfhwRedServer) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/red_server/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwRedServer POST path
// Create a new itfhw/red_server object
func (*ItfhwRedServer) PostPath() string {
	return "/api/objects/itfhw/red_server/"
}

// PutPath implements sophos.RestObject and returns the ItfhwRedServer PUT path
// Creates or updates the complete object red_server
func (*ItfhwRedServer) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/red_server/%s", ref)
}

// ItfhwSerial is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwSerial []interface{}

// GetPath implements sophos.RestObject and returns the ItfhwSerial GET path
// Returns all available itfhw/serial objects
func (*ItfhwSerial) GetPath() string { return "/api/objects/itfhw/serial/" }

// RefRequired implements sophos.RestObject
func (*ItfhwSerial) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfhwSerial DELETE path
// Creates or updates the complete object serial
func (*ItfhwSerial) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/serial/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwSerial PATCH path
// Changes to parts of the object serial types
func (*ItfhwSerial) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/serial/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwSerial POST path
// Create a new itfhw/serial object
func (*ItfhwSerial) PostPath() string {
	return "/api/objects/itfhw/serial/"
}

// PutPath implements sophos.RestObject and returns the ItfhwSerial PUT path
// Creates or updates the complete object serial
func (*ItfhwSerial) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/serial/%s", ref)
}

// ItfhwAweNetworkGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwAweNetworkGroup []interface{}

// GetPath implements sophos.RestObject and returns the ItfhwAweNetworkGroup GET path
// Returns all available itfhw/awe_network_group objects
func (*ItfhwAweNetworkGroup) GetPath() string { return "/api/objects/itfhw/awe_network_group/" }

// RefRequired implements sophos.RestObject
func (*ItfhwAweNetworkGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfhwAweNetworkGroup DELETE path
// Creates or updates the complete object awe_network_group
func (*ItfhwAweNetworkGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/awe_network_group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwAweNetworkGroup PATCH path
// Changes to parts of the object awe_network_group types
func (*ItfhwAweNetworkGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/awe_network_group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwAweNetworkGroup POST path
// Create a new itfhw/awe_network_group object
func (*ItfhwAweNetworkGroup) PostPath() string {
	return "/api/objects/itfhw/awe_network_group/"
}

// PutPath implements sophos.RestObject and returns the ItfhwAweNetworkGroup PUT path
// Creates or updates the complete object awe_network_group
func (*ItfhwAweNetworkGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/awe_network_group/%s", ref)
}

// ItfhwBridge is an Sophos Endpoint subType and implements sophos.RestObject
type ItfhwBridge []interface{}

// GetPath implements sophos.RestObject and returns the ItfhwBridge GET path
// Returns all available itfhw/bridge objects
func (*ItfhwBridge) GetPath() string { return "/api/objects/itfhw/bridge/" }

// RefRequired implements sophos.RestObject
func (*ItfhwBridge) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfhwBridge DELETE path
// Creates or updates the complete object bridge
func (*ItfhwBridge) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/bridge/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfhwBridge PATCH path
// Changes to parts of the object bridge types
func (*ItfhwBridge) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/bridge/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfhwBridge POST path
// Create a new itfhw/bridge object
func (*ItfhwBridge) PostPath() string {
	return "/api/objects/itfhw/bridge/"
}

// PutPath implements sophos.RestObject and returns the ItfhwBridge PUT path
// Creates or updates the complete object bridge
func (*ItfhwBridge) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfhw/bridge/%s", ref)
}

// Itfparams is a generated struct representing the Sophos Itfparams Endpoint
// GET /api/nodes/itfparams
type Itfparams struct {
	ItfparamsGroup                ItfparamsGroup                `json:"itfparams_group"`
	ItfparamsLinkAggregationGroup ItfparamsLinkAggregationGroup `json:"itfparams_link_aggregation_group"`
	ItfparamsPrimary              ItfparamsPrimary              `json:"itfparams_primary"`
	ItfparamsSecondary            ItfparamsSecondary            `json:"itfparams_secondary"`
	ItfparamsBridgePort           ItfparamsBridgePort           `json:"itfparams_bridge_port"`
}

var defsItfparams = map[string]sophos.RestObject{
	"ItfparamsGroup":                &ItfparamsGroup{},
	"ItfparamsLinkAggregationGroup": &ItfparamsLinkAggregationGroup{},
	"ItfparamsPrimary":              &ItfparamsPrimary{},
	"ItfparamsSecondary":            &ItfparamsSecondary{},
	"ItfparamsBridgePort":           &ItfparamsBridgePort{},
}

// RestObjects implements the sophos.Node interface and returns a map of Itfparams's Objects
func (Itfparams) RestObjects() map[string]sophos.RestObject {
	return defsItfparams
}

// GetPath implements sophos.RestGetter
func (*Itfparams) GetPath() string { return "/api/nodes/itfparams" }

// RefRequired implements sophos.RestGetter
func (*Itfparams) RefRequired() (string, bool) { return "", false }

var defItfparams = &sophos.Definition{Description: "itfparams", Name: "itfparams", Link: "/api/definitions/itfparams", Swag: map[string]sophos.MethodMap{"/objects/itfparams/bridge_port/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object bridge_port types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/bridge_port that will be changes", Type: "", Required: true}}, Tags: []string{"itfparams/bridge_port"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object bridge_port", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/bridge_port that will be updated", Type: "", Required: true}}, Tags: []string{"itfparams/bridge_port"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object bridge_port", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfparams/bridge_port"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available bridge_port types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/bridge_port"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/itfparams/primary/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object primary types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/primary that will be changes", Type: "", Required: true}}, Tags: []string{"itfparams/primary"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object primary", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/primary that will be updated", Type: "", Required: true}}, Tags: []string{"itfparams/primary"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object primary", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfparams/primary"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available primary types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/primary"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/itfparams/secondary/": {"post": sophos.MethodDescriptions{Description: "Create a new itfparams/secondary object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/secondary that will be created", Type: "", Required: true}}, Tags: []string{"itfparams/secondary"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available itfparams/secondary objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfparams/secondary"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfparams/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfparams/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfparams/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfparams/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/group that will be created", Type: "", Required: true}}, Tags: []string{"itfparams/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfparams/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfparams/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/group that will be changes", Type: "", Required: true}}, Tags: []string{"itfparams/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/group that will be updated", Type: "", Required: true}}, Tags: []string{"itfparams/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfparams/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfparams/link_aggregation_group/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfparams/link_aggregation_group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfparams/link_aggregation_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfparams/link_aggregation_group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/link_aggregation_group that will be created", Type: "", Required: true}}, Tags: []string{"itfparams/link_aggregation_group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfparams/primary/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfparams/primary objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfparams/primary"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfparams/primary object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/primary that will be created", Type: "", Required: true}}, Tags: []string{"itfparams/primary"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/itfparams/primary/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/primary"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfparams/bridge_port/": {"get": sophos.MethodDescriptions{Description: "Returns all available itfparams/bridge_port objects", Parameters: []sophos.Parameter(nil), Tags: []string{"itfparams/bridge_port"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new itfparams/bridge_port object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/bridge_port that will be created", Type: "", Required: true}}, Tags: []string{"itfparams/bridge_port"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/itfparams/link_aggregation_group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object link_aggregation_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfparams/link_aggregation_group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available link_aggregation_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/link_aggregation_group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object link_aggregation_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/link_aggregation_group that will be changes", Type: "", Required: true}}, Tags: []string{"itfparams/link_aggregation_group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object link_aggregation_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/link_aggregation_group that will be updated", Type: "", Required: true}}, Tags: []string{"itfparams/link_aggregation_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/itfparams/secondary/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object secondary types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/secondary that will be changes", Type: "", Required: true}}, Tags: []string{"itfparams/secondary"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object secondary", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "itfparams/secondary that will be updated", Type: "", Required: true}}, Tags: []string{"itfparams/secondary"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object secondary", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"itfparams/secondary"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available secondary types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/secondary"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/itfparams/secondary/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/secondary"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfparams/bridge_port/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/bridge_port"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/itfparams/link_aggregation_group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"itfparams/link_aggregation_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Itfparams
func (Itfparams) Definition() sophos.Definition { return *defItfparams }

// ApiRoutes returns all known Itfparams Paths
func (Itfparams) ApiRoutes() []string {
	return []string{
		"/api/objects/itfparams/bridge_port/",
		"/api/objects/itfparams/bridge_port/{ref}",
		"/api/objects/itfparams/bridge_port/{ref}/usedby",
		"/api/objects/itfparams/group/",
		"/api/objects/itfparams/group/{ref}",
		"/api/objects/itfparams/group/{ref}/usedby",
		"/api/objects/itfparams/link_aggregation_group/",
		"/api/objects/itfparams/link_aggregation_group/{ref}",
		"/api/objects/itfparams/link_aggregation_group/{ref}/usedby",
		"/api/objects/itfparams/primary/",
		"/api/objects/itfparams/primary/{ref}",
		"/api/objects/itfparams/primary/{ref}/usedby",
		"/api/objects/itfparams/secondary/",
		"/api/objects/itfparams/secondary/{ref}",
		"/api/objects/itfparams/secondary/{ref}/usedby",
	}
}

// References returns the Itfparams's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Itfparams) References() []string {
	return []string{
		"REF_ItfparamsBridgePort",
		"REF_ItfparamsGroup",
		"REF_ItfparamsLinkAggregationGroup",
		"REF_ItfparamsPrimary",
		"REF_ItfparamsSecondary",
	}
}

// ItfparamsGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ItfparamsGroup []interface{}

// GetPath implements sophos.RestObject and returns the ItfparamsGroup GET path
// Returns all available itfparams/group objects
func (*ItfparamsGroup) GetPath() string { return "/api/objects/itfparams/group/" }

// RefRequired implements sophos.RestObject
func (*ItfparamsGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfparamsGroup DELETE path
// Creates or updates the complete object group
func (*ItfparamsGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfparamsGroup PATCH path
// Changes to parts of the object group types
func (*ItfparamsGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfparamsGroup POST path
// Create a new itfparams/group object
func (*ItfparamsGroup) PostPath() string {
	return "/api/objects/itfparams/group/"
}

// PutPath implements sophos.RestObject and returns the ItfparamsGroup PUT path
// Creates or updates the complete object group
func (*ItfparamsGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/group/%s", ref)
}

// ItfparamsLinkAggregationGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ItfparamsLinkAggregationGroups []ItfparamsLinkAggregationGroup
type ItfparamsLinkAggregationGroup struct {
	Locked         string   `json:"_locked"`
	Reference      string   `json:"_ref"`
	_type          string   `json:"_type"`
	AdSelect       int64    `json:"ad_select"`
	ArpInterval    int64    `json:"arp_interval"`
	ArpIPTarget    string   `json:"arp_ip_target"`
	Comment        string   `json:"comment"`
	Downdelay      int64    `json:"downdelay"`
	EnforceMac     bool     `json:"enforce_mac"`
	ID             int64    `json:"id"`
	Itfhw          []string `json:"itfhw"`
	LacpRate       int64    `json:"lacp_rate"`
	Mac            string   `json:"mac"`
	Miimon         int64    `json:"miimon"`
	Mode           int64    `json:"mode"`
	Name           string   `json:"name"`
	Primary        string   `json:"primary"`
	Status         bool     `json:"status"`
	Updelay        int64    `json:"updelay"`
	UseCarrier     bool     `json:"use_carrier"`
	VirtualMac     string   `json:"virtual_mac"`
	XmitHashPolicy string   `json:"xmit_hash_policy"`
}

// GetPath implements sophos.RestObject and returns the ItfparamsLinkAggregationGroups GET path
// Returns all available itfparams/link_aggregation_group objects
func (*ItfparamsLinkAggregationGroups) GetPath() string {
	return "/api/objects/itfparams/link_aggregation_group/"
}

// RefRequired implements sophos.RestObject
func (*ItfparamsLinkAggregationGroups) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ItfparamsLinkAggregationGroups GET path
// Returns all available link_aggregation_group types
func (i *ItfparamsLinkAggregationGroup) GetPath() string {
	return fmt.Sprintf("/api/objects/itfparams/link_aggregation_group/%s", i.Reference)
}

// RefRequired implements sophos.RestObject
func (i *ItfparamsLinkAggregationGroup) RefRequired() (string, bool) { return i.Reference, true }

// DeletePath implements sophos.RestObject and returns the ItfparamsLinkAggregationGroup DELETE path
// Creates or updates the complete object link_aggregation_group
func (*ItfparamsLinkAggregationGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/link_aggregation_group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfparamsLinkAggregationGroup PATCH path
// Changes to parts of the object link_aggregation_group types
func (*ItfparamsLinkAggregationGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/link_aggregation_group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfparamsLinkAggregationGroup POST path
// Create a new itfparams/link_aggregation_group object
func (*ItfparamsLinkAggregationGroup) PostPath() string {
	return "/api/objects/itfparams/link_aggregation_group/"
}

// PutPath implements sophos.RestObject and returns the ItfparamsLinkAggregationGroup PUT path
// Creates or updates the complete object link_aggregation_group
func (*ItfparamsLinkAggregationGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/link_aggregation_group/%s", ref)
}

// Type implements sophos.Object
func (i *ItfparamsLinkAggregationGroup) GetType() string { return i._type }

// ItfparamsPrimary is an Sophos Endpoint subType and implements sophos.RestObject
type ItfparamsPrimarys []ItfparamsPrimary
type ItfparamsPrimary struct {
	Locked                 string `json:"_locked"`
	Reference              string `json:"_ref"`
	_type                  string `json:"_type"`
	Address                string `json:"address"`
	Address6               string `json:"address6"`
	Comment                string `json:"comment"`
	DefaultGatewayAddress  string `json:"default_gateway_address"`
	DefaultGatewayAddress6 string `json:"default_gateway_address6"`
	DefaultGatewayStatus   bool   `json:"default_gateway_status"`
	DefaultGatewayStatus6  bool   `json:"default_gateway_status6"`
	Dhcpv6RapidCommit      bool   `json:"dhcpv6_rapid_commit"`
	DNSServer1             string `json:"dns_server_1"`
	DNSServer2             string `json:"dns_server_2"`
	DNSServer3             string `json:"dns_server_3"`
	DNSServer4             string `json:"dns_server_4"`
	GatewayType            string `json:"gateway_type"`
	GatewayType6           string `json:"gateway_type6"`
	Hostname               string `json:"hostname"`
	InterfaceAddress       string `json:"interface_address"`
	InterfaceBroadcast     string `json:"interface_broadcast"`
	InterfaceNetwork       string `json:"interface_network"`
	Name                   string `json:"name"`
	Netmask                int64  `json:"netmask"`
	Netmask6               int64  `json:"netmask6"`
	PdAddress6             string `json:"pd_address6"`
	PdNetmask6             int64  `json:"pd_netmask6"`
	PdResolved6            bool   `json:"pd_resolved6"`
	Resolved               bool   `json:"resolved"`
	Resolved6              bool   `json:"resolved6"`
	Six2four               bool   `json:"six2four"`
	Type                   string `json:"type"`
	Type6                  string `json:"type6"`
}

// GetPath implements sophos.RestObject and returns the ItfparamsPrimary GET path
// Returns all available itfparams/primary objects
func (*ItfparamsPrimary) GetPath() string { return "/api/objects/itfparams/primary/" }

// RefRequired implements sophos.RestObject
func (*ItfparamsPrimary) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfparamsPrimary DELETE path
// Creates or updates the complete object primary
func (*ItfparamsPrimary) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/primary/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfparamsPrimary PATCH path
// Changes to parts of the object primary types
func (*ItfparamsPrimary) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/primary/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfparamsPrimary POST path
// Create a new itfparams/primary object
func (*ItfparamsPrimary) PostPath() string {
	return "/api/objects/itfparams/primary/"
}

// PutPath implements sophos.RestObject and returns the ItfparamsPrimary PUT path
// Creates or updates the complete object primary
func (*ItfparamsPrimary) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/primary/%s", ref)
}

// ItfparamsSecondary is an Sophos Endpoint subType and implements sophos.RestObject
type ItfparamsSecondary []interface{}

// GetPath implements sophos.RestObject and returns the ItfparamsSecondary GET path
// Returns all available itfparams/secondary objects
func (*ItfparamsSecondary) GetPath() string { return "/api/objects/itfparams/secondary/" }

// RefRequired implements sophos.RestObject
func (*ItfparamsSecondary) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfparamsSecondary DELETE path
// Creates or updates the complete object secondary
func (*ItfparamsSecondary) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/secondary/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfparamsSecondary PATCH path
// Changes to parts of the object secondary types
func (*ItfparamsSecondary) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/secondary/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfparamsSecondary POST path
// Create a new itfparams/secondary object
func (*ItfparamsSecondary) PostPath() string {
	return "/api/objects/itfparams/secondary/"
}

// PutPath implements sophos.RestObject and returns the ItfparamsSecondary PUT path
// Creates or updates the complete object secondary
func (*ItfparamsSecondary) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/secondary/%s", ref)
}

// ItfparamsBridgePort is an Sophos Endpoint subType and implements sophos.RestObject
type ItfparamsBridgePort []interface{}

// GetPath implements sophos.RestObject and returns the ItfparamsBridgePort GET path
// Returns all available itfparams/bridge_port objects
func (*ItfparamsBridgePort) GetPath() string { return "/api/objects/itfparams/bridge_port/" }

// RefRequired implements sophos.RestObject
func (*ItfparamsBridgePort) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ItfparamsBridgePort DELETE path
// Creates or updates the complete object bridge_port
func (*ItfparamsBridgePort) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/bridge_port/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ItfparamsBridgePort PATCH path
// Changes to parts of the object bridge_port types
func (*ItfparamsBridgePort) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/bridge_port/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ItfparamsBridgePort POST path
// Create a new itfparams/bridge_port object
func (*ItfparamsBridgePort) PostPath() string {
	return "/api/objects/itfparams/bridge_port/"
}

// PutPath implements sophos.RestObject and returns the ItfparamsBridgePort PUT path
// Creates or updates the complete object bridge_port
func (*ItfparamsBridgePort) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/itfparams/bridge_port/%s", ref)
}

// MacList is a generated struct representing the Sophos MacList Endpoint
// GET /api/nodes/mac_list
type MacList struct {
	MacListGroup   MacListGroup   `json:"mac_list_group"`
	MacListMacList MacListMacList `json:"mac_list_mac_list"`
}

var defsMacList = map[string]sophos.RestObject{
	"MacListGroup":   &MacListGroup{},
	"MacListMacList": &MacListMacList{},
}

// RestObjects implements the sophos.Node interface and returns a map of MacList's Objects
func (MacList) RestObjects() map[string]sophos.RestObject {
	return defsMacList
}

// GetPath implements sophos.RestGetter
func (*MacList) GetPath() string { return "/api/nodes/mac_list" }

// RefRequired implements sophos.RestGetter
func (*MacList) RefRequired() (string, bool) { return "", false }

var defMacList = &sophos.Definition{Description: "mac_list", Name: "mac_list", Link: "/api/definitions/mac_list", Swag: map[string]sophos.MethodMap{"/objects/mac_list/mac_list/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/mac_list/group/": {"post": sophos.MethodDescriptions{Description: "Create a new mac_list/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/group that will be created", Type: "", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available mac_list/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/mac_list/group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/group that will be changes", Type: "", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/group that will be updated", Type: "", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/mac_list/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"mac_list/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/mac_list/mac_list/": {"get": sophos.MethodDescriptions{Description: "Returns all available mac_list/mac_list objects", Parameters: []sophos.Parameter(nil), Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new mac_list/mac_list object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/mac_list that will be created", Type: "", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/mac_list/mac_list/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object mac_list", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available mac_list types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object mac_list types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/mac_list that will be changes", Type: "", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object mac_list", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "mac_list/mac_list that will be updated", Type: "", Required: true}}, Tags: []string{"mac_list/mac_list"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}}}

// Definition returns the /api/definitions struct of MacList
func (MacList) Definition() sophos.Definition { return *defMacList }

// ApiRoutes returns all known MacList Paths
func (MacList) ApiRoutes() []string {
	return []string{
		"/api/objects/mac_list/group/",
		"/api/objects/mac_list/group/{ref}",
		"/api/objects/mac_list/group/{ref}/usedby",
		"/api/objects/mac_list/mac_list/",
		"/api/objects/mac_list/mac_list/{ref}",
		"/api/objects/mac_list/mac_list/{ref}/usedby",
	}
}

// References returns the MacList's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (MacList) References() []string {
	return []string{
		"REF_MacListGroup",
		"REF_MacListMacList",
	}
}

// MacListGroup is an Sophos Endpoint subType and implements sophos.RestObject
type MacListGroup []interface{}

// GetPath implements sophos.RestObject and returns the MacListGroup GET path
// Returns all available mac_list/group objects
func (*MacListGroup) GetPath() string { return "/api/objects/mac_list/group/" }

// RefRequired implements sophos.RestObject
func (*MacListGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the MacListGroup DELETE path
// Creates or updates the complete object group
func (*MacListGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the MacListGroup PATCH path
// Changes to parts of the object group types
func (*MacListGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the MacListGroup POST path
// Create a new mac_list/group object
func (*MacListGroup) PostPath() string {
	return "/api/objects/mac_list/group/"
}

// PutPath implements sophos.RestObject and returns the MacListGroup PUT path
// Creates or updates the complete object group
func (*MacListGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/group/%s", ref)
}

// MacListMacList is an Sophos Endpoint subType and implements sophos.RestObject
type MacListMacList []interface{}

// GetPath implements sophos.RestObject and returns the MacListMacList GET path
// Returns all available mac_list/mac_list objects
func (*MacListMacList) GetPath() string { return "/api/objects/mac_list/mac_list/" }

// RefRequired implements sophos.RestObject
func (*MacListMacList) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the MacListMacList DELETE path
// Creates or updates the complete object mac_list
func (*MacListMacList) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/mac_list/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the MacListMacList PATCH path
// Changes to parts of the object mac_list types
func (*MacListMacList) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/mac_list/%s", ref)
}

// PostPath implements sophos.RestObject and returns the MacListMacList POST path
// Create a new mac_list/mac_list object
func (*MacListMacList) PostPath() string {
	return "/api/objects/mac_list/mac_list/"
}

// PutPath implements sophos.RestObject and returns the MacListMacList PUT path
// Creates or updates the complete object mac_list
func (*MacListMacList) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/mac_list/mac_list/%s", ref)
}

// Network is a generated struct representing the Sophos Network Endpoint
// GET /api/nodes/network
type Network struct {
	NetworkInterfaceNetwork   NetworkInterfaceNetwork   `json:"network_interface_network"`
	NetworkMulticast          NetworkMulticast          `json:"network_multicast"`
	NetworkGroup              NetworkGroup              `json:"network_group"`
	NetworkHost               NetworkHost               `json:"network_host"`
	NetworkInterfaceAddress   NetworkInterfaceAddress   `json:"network_interface_address"`
	NetworkAny                NetworkAny                `json:"network_any"`
	NetworkDnsGroup           NetworkDnsGroup           `json:"network_dns_group"`
	NetworkDnsHost            NetworkDnsHost            `json:"network_dns_host"`
	NetworkInterfaceBroadcast NetworkInterfaceBroadcast `json:"network_interface_broadcast"`
	NetworkNetwork            NetworkNetwork            `json:"network_network"`
	NetworkRange              NetworkRange              `json:"network_range"`
	NetworkAaa                NetworkAaa                `json:"network_aaa"`
	NetworkAvailabilityGroup  NetworkAvailabilityGroup  `json:"network_availability_group"`
}

var defsNetwork = map[string]sophos.RestObject{
	"NetworkInterfaceNetwork":   &NetworkInterfaceNetwork{},
	"NetworkMulticast":          &NetworkMulticast{},
	"NetworkGroup":              &NetworkGroup{},
	"NetworkHost":               &NetworkHost{},
	"NetworkInterfaceAddress":   &NetworkInterfaceAddress{},
	"NetworkAny":                &NetworkAny{},
	"NetworkDnsGroup":           &NetworkDnsGroup{},
	"NetworkDnsHost":            &NetworkDnsHost{},
	"NetworkInterfaceBroadcast": &NetworkInterfaceBroadcast{},
	"NetworkNetwork":            &NetworkNetwork{},
	"NetworkRange":              &NetworkRange{},
	"NetworkAaa":                &NetworkAaa{},
	"NetworkAvailabilityGroup":  &NetworkAvailabilityGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Network's Objects
func (Network) RestObjects() map[string]sophos.RestObject {
	return defsNetwork
}

// GetPath implements sophos.RestGetter
func (*Network) GetPath() string { return "/api/nodes/network" }

// RefRequired implements sophos.RestGetter
func (*Network) RefRequired() (string, bool) { return "", false }

var defNetwork = &sophos.Definition{Description: "network", Name: "network", Link: "/api/definitions/network", Swag: map[string]sophos.MethodMap{"/objects/network/interface_address/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface_address", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/interface_address that will be updated", Type: "", Required: true}}, Tags: []string{"network/interface_address"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface_address", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/interface_address"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available interface_address types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/interface_address"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object interface_address types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/interface_address that will be changes", Type: "", Required: true}}, Tags: []string{"network/interface_address"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/network/interface_network/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface_network", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/interface_network"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available interface_network types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/interface_network"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object interface_network types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/interface_network that will be changes", Type: "", Required: true}}, Tags: []string{"network/interface_network"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface_network", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/interface_network that will be updated", Type: "", Required: true}}, Tags: []string{"network/interface_network"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/network/multicast/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/multicast objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/multicast"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/multicast object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/multicast that will be created", Type: "", Required: true}}, Tags: []string{"network/multicast"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/network/host/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/host"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/dns_group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/dns_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/group that will be created", Type: "", Required: true}}, Tags: []string{"network/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/group that will be changes", Type: "", Required: true}}, Tags: []string{"network/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/group that will be updated", Type: "", Required: true}}, Tags: []string{"network/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/host/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object host types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/host that will be changes", Type: "", Required: true}}, Tags: []string{"network/host"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object host", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/host that will be updated", Type: "", Required: true}}, Tags: []string{"network/host"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object host", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/host"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available host types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/host"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/network/interface_network/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/interface_network objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/interface_network"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/interface_network object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/interface_network that will be created", Type: "", Required: true}}, Tags: []string{"network/interface_network"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/any/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/any objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/any"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/any object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/any that will be created", Type: "", Required: true}}, Tags: []string{"network/any"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/dns_group/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/dns_group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/dns_group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/dns_group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/dns_group that will be created", Type: "", Required: true}}, Tags: []string{"network/dns_group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/availability_group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/availability_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/dns_host/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object dns_host", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/dns_host"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available dns_host types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/dns_host"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object dns_host types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/dns_host that will be changes", Type: "", Required: true}}, Tags: []string{"network/dns_host"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object dns_host", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/dns_host that will be updated", Type: "", Required: true}}, Tags: []string{"network/dns_host"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/network/interface_address/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/interface_address"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/interface_broadcast/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface_broadcast", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/interface_broadcast"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available interface_broadcast types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/interface_broadcast"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object interface_broadcast types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/interface_broadcast that will be changes", Type: "", Required: true}}, Tags: []string{"network/interface_broadcast"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface_broadcast", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/interface_broadcast that will be updated", Type: "", Required: true}}, Tags: []string{"network/interface_broadcast"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/network/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/network objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/network"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/network object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/network that will be created", Type: "", Required: true}}, Tags: []string{"network/network"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/range/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object range", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/range"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available range types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/range"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object range types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/range that will be changes", Type: "", Required: true}}, Tags: []string{"network/range"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object range", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/range that will be updated", Type: "", Required: true}}, Tags: []string{"network/range"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/network/aaa/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object aaa", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/aaa"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available aaa types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/aaa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object aaa types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/aaa that will be changes", Type: "", Required: true}}, Tags: []string{"network/aaa"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object aaa", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/aaa that will be updated", Type: "", Required: true}}, Tags: []string{"network/aaa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/network/any/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object any", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/any"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available any types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/any"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object any types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/any that will be changes", Type: "", Required: true}}, Tags: []string{"network/any"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object any", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/any that will be updated", Type: "", Required: true}}, Tags: []string{"network/any"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/network/multicast/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/multicast"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/range/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/range objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/range"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/range object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/range that will be created", Type: "", Required: true}}, Tags: []string{"network/range"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/network/dns_group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object dns_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/dns_group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available dns_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/dns_group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object dns_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/dns_group that will be changes", Type: "", Required: true}}, Tags: []string{"network/dns_group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object dns_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/dns_group that will be updated", Type: "", Required: true}}, Tags: []string{"network/dns_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/network/interface_network/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/interface_network"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/dns_host/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/dns_host"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/interface_broadcast/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/interface_broadcast objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/interface_broadcast"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/interface_broadcast object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/interface_broadcast that will be created", Type: "", Required: true}}, Tags: []string{"network/interface_broadcast"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/network/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object network", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/network"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available network types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/network"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object network types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/network that will be changes", Type: "", Required: true}}, Tags: []string{"network/network"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object network", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/network that will be updated", Type: "", Required: true}}, Tags: []string{"network/network"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/network/aaa/": {"post": sophos.MethodDescriptions{Description: "Create a new network/aaa object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/aaa that will be created", Type: "", Required: true}}, Tags: []string{"network/aaa"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available network/aaa objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/aaa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/availability_group/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/availability_group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/availability_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/availability_group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/availability_group that will be created", Type: "", Required: true}}, Tags: []string{"network/availability_group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/availability_group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available availability_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/availability_group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object availability_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/availability_group that will be changes", Type: "", Required: true}}, Tags: []string{"network/availability_group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object availability_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/availability_group that will be updated", Type: "", Required: true}}, Tags: []string{"network/availability_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object availability_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/availability_group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/network/dns_host/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/dns_host objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/dns_host"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/dns_host object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/dns_host that will be created", Type: "", Required: true}}, Tags: []string{"network/dns_host"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/network/host/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/host objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/host"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/host object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/host that will be created", Type: "", Required: true}}, Tags: []string{"network/host"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/interface_address/": {"get": sophos.MethodDescriptions{Description: "Returns all available network/interface_address objects", Parameters: []sophos.Parameter(nil), Tags: []string{"network/interface_address"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new network/interface_address object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/interface_address that will be created", Type: "", Required: true}}, Tags: []string{"network/interface_address"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/network/interface_broadcast/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/interface_broadcast"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/multicast/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object multicast", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"network/multicast"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available multicast types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/multicast"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object multicast types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/multicast that will be changes", Type: "", Required: true}}, Tags: []string{"network/multicast"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object multicast", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "network/multicast that will be updated", Type: "", Required: true}}, Tags: []string{"network/multicast"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/network/aaa/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/aaa"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/network/any/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/any"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/network/network/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/network"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/network/range/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"network/range"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Network
func (Network) Definition() sophos.Definition { return *defNetwork }

// ApiRoutes returns all known Network Paths
func (Network) ApiRoutes() []string {
	return []string{
		"/api/objects/network/aaa/",
		"/api/objects/network/aaa/{ref}",
		"/api/objects/network/aaa/{ref}/usedby",
		"/api/objects/network/any/",
		"/api/objects/network/any/{ref}",
		"/api/objects/network/any/{ref}/usedby",
		"/api/objects/network/availability_group/",
		"/api/objects/network/availability_group/{ref}",
		"/api/objects/network/availability_group/{ref}/usedby",
		"/api/objects/network/dns_group/",
		"/api/objects/network/dns_group/{ref}",
		"/api/objects/network/dns_group/{ref}/usedby",
		"/api/objects/network/dns_host/",
		"/api/objects/network/dns_host/{ref}",
		"/api/objects/network/dns_host/{ref}/usedby",
		"/api/objects/network/group/",
		"/api/objects/network/group/{ref}",
		"/api/objects/network/group/{ref}/usedby",
		"/api/objects/network/host/",
		"/api/objects/network/host/{ref}",
		"/api/objects/network/host/{ref}/usedby",
		"/api/objects/network/interface_address/",
		"/api/objects/network/interface_address/{ref}",
		"/api/objects/network/interface_address/{ref}/usedby",
		"/api/objects/network/interface_broadcast/",
		"/api/objects/network/interface_broadcast/{ref}",
		"/api/objects/network/interface_broadcast/{ref}/usedby",
		"/api/objects/network/interface_network/",
		"/api/objects/network/interface_network/{ref}",
		"/api/objects/network/interface_network/{ref}/usedby",
		"/api/objects/network/multicast/",
		"/api/objects/network/multicast/{ref}",
		"/api/objects/network/multicast/{ref}/usedby",
		"/api/objects/network/network/",
		"/api/objects/network/network/{ref}",
		"/api/objects/network/network/{ref}/usedby",
		"/api/objects/network/range/",
		"/api/objects/network/range/{ref}",
		"/api/objects/network/range/{ref}/usedby",
	}
}

// References returns the Network's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Network) References() []string {
	return []string{
		"REF_NetworkAaa",
		"REF_NetworkAny",
		"REF_NetworkAvailabilityGroup",
		"REF_NetworkDnsGroup",
		"REF_NetworkDnsHost",
		"REF_NetworkGroup",
		"REF_NetworkHost",
		"REF_NetworkInterfaceAddress",
		"REF_NetworkInterfaceBroadcast",
		"REF_NetworkInterfaceNetwork",
		"REF_NetworkMulticast",
		"REF_NetworkNetwork",
		"REF_NetworkRange",
	}
}

// NetworkInterfaceNetwork is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkInterfaceNetworks []NetworkInterfaceNetwork
type NetworkInterfaceNetwork struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Netmask   int64  `json:"netmask"`
	Netmask6  int64  `json:"netmask6"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
}

// GetPath implements sophos.RestObject and returns the NetworkInterfaceNetwork GET path
// Returns all available network/interface_network objects
func (*NetworkInterfaceNetwork) GetPath() string { return "/api/objects/network/interface_network/" }

// RefRequired implements sophos.RestObject
func (*NetworkInterfaceNetwork) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkInterfaceNetwork DELETE path
// Creates or updates the complete object interface_network
func (*NetworkInterfaceNetwork) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/interface_network/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkInterfaceNetwork PATCH path
// Changes to parts of the object interface_network types
func (*NetworkInterfaceNetwork) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/interface_network/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkInterfaceNetwork POST path
// Create a new network/interface_network object
func (*NetworkInterfaceNetwork) PostPath() string {
	return "/api/objects/network/interface_network/"
}

// PutPath implements sophos.RestObject and returns the NetworkInterfaceNetwork PUT path
// Creates or updates the complete object interface_network
func (*NetworkInterfaceNetwork) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/interface_network/%s", ref)
}

// NetworkMulticast is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkMulticast []interface{}

// GetPath implements sophos.RestObject and returns the NetworkMulticast GET path
// Returns all available network/multicast objects
func (*NetworkMulticast) GetPath() string { return "/api/objects/network/multicast/" }

// RefRequired implements sophos.RestObject
func (*NetworkMulticast) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkMulticast DELETE path
// Creates or updates the complete object multicast
func (*NetworkMulticast) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/multicast/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkMulticast PATCH path
// Changes to parts of the object multicast types
func (*NetworkMulticast) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/multicast/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkMulticast POST path
// Create a new network/multicast object
func (*NetworkMulticast) PostPath() string {
	return "/api/objects/network/multicast/"
}

// PutPath implements sophos.RestObject and returns the NetworkMulticast PUT path
// Creates or updates the complete object multicast
func (*NetworkMulticast) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/multicast/%s", ref)
}

// NetworkGroup is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkGroups []NetworkGroup
type NetworkGroup struct {
	Locked    string   `json:"_locked"`
	Reference string   `json:"_ref"`
	_type     string   `json:"_type"`
	Comment   string   `json:"comment"`
	Members   []string `json:"members"`
	Name      string   `json:"name"`
	Types     []string `json:"types"`
}

// GetPath implements sophos.RestObject and returns the NetworkGroup GET path
// Returns all available network/group objects
func (*NetworkGroup) GetPath() string { return "/api/objects/network/group/" }

// RefRequired implements sophos.RestObject
func (*NetworkGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkGroup DELETE path
// Creates or updates the complete object group
func (*NetworkGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkGroup PATCH path
// Changes to parts of the object group types
func (*NetworkGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkGroup POST path
// Create a new network/group object
func (*NetworkGroup) PostPath() string {
	return "/api/objects/network/group/"
}

// PutPath implements sophos.RestObject and returns the NetworkGroup PUT path
// Creates or updates the complete object group
func (*NetworkGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/group/%s", ref)
}

// NetworkHost is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkHosts []NetworkHost
type NetworkHost struct {
	Locked     string        `json:"_locked"`
	Reference  string        `json:"_ref"`
	_type      string        `json:"_type"`
	Address    string        `json:"address"`
	Address6   string        `json:"address6"`
	Comment    string        `json:"comment"`
	Duids      []interface{} `json:"duids"`
	Hostnames  []string      `json:"hostnames"`
	Interface  string        `json:"interface"`
	Macs       []interface{} `json:"macs"`
	Name       string        `json:"name"`
	Resolved   bool          `json:"resolved"`
	Resolved6  bool          `json:"resolved6"`
	ReverseDNS bool          `json:"reverse_dns"`
}

// GetPath implements sophos.RestObject and returns the NetworkHost GET path
// Returns all available network/host objects
func (*NetworkHost) GetPath() string { return "/api/objects/network/host/" }

// RefRequired implements sophos.RestObject
func (*NetworkHost) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkHost DELETE path
// Creates or updates the complete object host
func (*NetworkHost) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/host/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkHost PATCH path
// Changes to parts of the object host types
func (*NetworkHost) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/host/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkHost POST path
// Create a new network/host object
func (*NetworkHost) PostPath() string {
	return "/api/objects/network/host/"
}

// PutPath implements sophos.RestObject and returns the NetworkHost PUT path
// Creates or updates the complete object host
func (*NetworkHost) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/host/%s", ref)
}

// NetworkInterfaceAddress is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkInterfaceAddresss []NetworkInterfaceAddress
type NetworkInterfaceAddress struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
}

// GetPath implements sophos.RestObject and returns the NetworkInterfaceAddress GET path
// Returns all available network/interface_address objects
func (*NetworkInterfaceAddress) GetPath() string { return "/api/objects/network/interface_address/" }

// RefRequired implements sophos.RestObject
func (*NetworkInterfaceAddress) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkInterfaceAddress DELETE path
// Creates or updates the complete object interface_address
func (*NetworkInterfaceAddress) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/interface_address/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkInterfaceAddress PATCH path
// Changes to parts of the object interface_address types
func (*NetworkInterfaceAddress) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/interface_address/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkInterfaceAddress POST path
// Create a new network/interface_address object
func (*NetworkInterfaceAddress) PostPath() string {
	return "/api/objects/network/interface_address/"
}

// PutPath implements sophos.RestObject and returns the NetworkInterfaceAddress PUT path
// Creates or updates the complete object interface_address
func (*NetworkInterfaceAddress) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/interface_address/%s", ref)
}

// NetworkAny is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkAnys []NetworkAny
type NetworkAny struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Interface string `json:"interface"`
	Name      string `json:"name"`
	Netmask   int64  `json:"netmask"`
	Netmask6  int64  `json:"netmask6"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
}

// GetPath implements sophos.RestObject and returns the NetworkAnys GET path
// Returns all available network/any objects
func (*NetworkAnys) GetPath() string { return "/api/objects/network/any/" }

// RefRequired implements sophos.RestObject
func (*NetworkAnys) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the NetworkAnys GET path
// Returns all available any types
func (n *NetworkAny) GetPath() string { return fmt.Sprintf("/api/objects/network/any/%s", n.Reference) }

// RefRequired implements sophos.RestObject
func (n *NetworkAny) RefRequired() (string, bool) { return n.Reference, true }

// DeletePath implements sophos.RestObject and returns the NetworkAny DELETE path
// Creates or updates the complete object any
func (*NetworkAny) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/any/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkAny PATCH path
// Changes to parts of the object any types
func (*NetworkAny) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/any/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkAny POST path
// Create a new network/any object
func (*NetworkAny) PostPath() string {
	return "/api/objects/network/any/"
}

// PutPath implements sophos.RestObject and returns the NetworkAny PUT path
// Creates or updates the complete object any
func (*NetworkAny) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/any/%s", ref)
}

// Type implements sophos.Object
func (n *NetworkAny) GetType() string { return n._type }

// NetworkDnsGroup is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkDnsGroups []NetworkDnsGroup
type NetworkDnsGroup struct {
	Locked     string        `json:"_locked"`
	Reference  string        `json:"_ref"`
	_type      string        `json:"_type"`
	Addresses  []string      `json:"addresses"`
	Addresses6 []interface{} `json:"addresses6"`
	Comment    string        `json:"comment"`
	Hostname   string        `json:"hostname"`
	Interface  string        `json:"interface"`
	Name       string        `json:"name"`
	Resolved   bool          `json:"resolved"`
	Resolved6  bool          `json:"resolved6"`
	Timeout    int64         `json:"timeout"`
}

// GetPath implements sophos.RestObject and returns the NetworkDnsGroups GET path
// Returns all available network/dns_group objects
func (*NetworkDnsGroups) GetPath() string { return "/api/objects/network/dns_group/" }

// RefRequired implements sophos.RestObject
func (*NetworkDnsGroups) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the NetworkDnsGroups GET path
// Returns all available dns_group types
func (n *NetworkDnsGroup) GetPath() string {
	return fmt.Sprintf("/api/objects/network/dns_group/%s", n.Reference)
}

// RefRequired implements sophos.RestObject
func (n *NetworkDnsGroup) RefRequired() (string, bool) { return n.Reference, true }

// DeletePath implements sophos.RestObject and returns the NetworkDnsGroup DELETE path
// Creates or updates the complete object dns_group
func (*NetworkDnsGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/dns_group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkDnsGroup PATCH path
// Changes to parts of the object dns_group types
func (*NetworkDnsGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/dns_group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkDnsGroup POST path
// Create a new network/dns_group object
func (*NetworkDnsGroup) PostPath() string {
	return "/api/objects/network/dns_group/"
}

// PutPath implements sophos.RestObject and returns the NetworkDnsGroup PUT path
// Creates or updates the complete object dns_group
func (*NetworkDnsGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/dns_group/%s", ref)
}

// Type implements sophos.Object
func (n *NetworkDnsGroup) GetType() string { return n._type }

// NetworkDnsHost is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkDnsHosts []NetworkDnsHost
type NetworkDnsHost struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Hostname  string `json:"hostname"`
	Interface string `json:"interface"`
	Name      string `json:"name"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
	Timeout   int64  `json:"timeout"`
}

// GetPath implements sophos.RestObject and returns the NetworkDnsHost GET path
// Returns all available network/dns_host objects
func (*NetworkDnsHost) GetPath() string { return "/api/objects/network/dns_host/" }

// RefRequired implements sophos.RestObject
func (*NetworkDnsHost) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkDnsHost DELETE path
// Creates or updates the complete object dns_host
func (*NetworkDnsHost) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/dns_host/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkDnsHost PATCH path
// Changes to parts of the object dns_host types
func (*NetworkDnsHost) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/dns_host/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkDnsHost POST path
// Create a new network/dns_host object
func (*NetworkDnsHost) PostPath() string {
	return "/api/objects/network/dns_host/"
}

// PutPath implements sophos.RestObject and returns the NetworkDnsHost PUT path
// Creates or updates the complete object dns_host
func (*NetworkDnsHost) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/dns_host/%s", ref)
}

// NetworkInterfaceBroadcast is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkInterfaceBroadcasts []NetworkInterfaceBroadcast
type NetworkInterfaceBroadcast struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Address   string `json:"address"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Resolved  bool   `json:"resolved"`
}

// GetPath implements sophos.RestObject and returns the NetworkInterfaceBroadcast GET path
// Returns all available network/interface_broadcast objects
func (*NetworkInterfaceBroadcast) GetPath() string { return "/api/objects/network/interface_broadcast/" }

// RefRequired implements sophos.RestObject
func (*NetworkInterfaceBroadcast) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkInterfaceBroadcast DELETE path
// Creates or updates the complete object interface_broadcast
func (*NetworkInterfaceBroadcast) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/interface_broadcast/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkInterfaceBroadcast PATCH path
// Changes to parts of the object interface_broadcast types
func (*NetworkInterfaceBroadcast) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/interface_broadcast/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkInterfaceBroadcast POST path
// Create a new network/interface_broadcast object
func (*NetworkInterfaceBroadcast) PostPath() string {
	return "/api/objects/network/interface_broadcast/"
}

// PutPath implements sophos.RestObject and returns the NetworkInterfaceBroadcast PUT path
// Creates or updates the complete object interface_broadcast
func (*NetworkInterfaceBroadcast) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/interface_broadcast/%s", ref)
}

// NetworkNetwork is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkNetworks []NetworkNetwork
type NetworkNetwork struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Interface string `json:"interface"`
	Name      string `json:"name"`
	Netmask   int64  `json:"netmask"`
	Netmask6  int64  `json:"netmask6"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
}

// GetPath implements sophos.RestObject and returns the NetworkNetwork GET path
// Returns all available network/network objects
func (*NetworkNetwork) GetPath() string { return "/api/objects/network/network/" }

// RefRequired implements sophos.RestObject
func (*NetworkNetwork) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkNetwork DELETE path
// Creates or updates the complete object network
func (*NetworkNetwork) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/network/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkNetwork PATCH path
// Changes to parts of the object network types
func (*NetworkNetwork) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/network/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkNetwork POST path
// Create a new network/network object
func (*NetworkNetwork) PostPath() string {
	return "/api/objects/network/network/"
}

// PutPath implements sophos.RestObject and returns the NetworkNetwork PUT path
// Creates or updates the complete object network
func (*NetworkNetwork) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/network/%s", ref)
}

// NetworkRange is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkRanges []NetworkRange
type NetworkRange struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Comment   string `json:"comment"`
	From      string `json:"from"`
	From6     string `json:"from6"`
	Interface string `json:"interface"`
	Name      string `json:"name"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
	To        string `json:"to"`
	To6       string `json:"to6"`
}

// GetPath implements sophos.RestObject and returns the NetworkRange GET path
// Returns all available network/range objects
func (*NetworkRange) GetPath() string { return "/api/objects/network/range/" }

// RefRequired implements sophos.RestObject
func (*NetworkRange) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkRange DELETE path
// Creates or updates the complete object range
func (*NetworkRange) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/range/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkRange PATCH path
// Changes to parts of the object range types
func (*NetworkRange) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/range/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkRange POST path
// Create a new network/range object
func (*NetworkRange) PostPath() string {
	return "/api/objects/network/range/"
}

// PutPath implements sophos.RestObject and returns the NetworkRange PUT path
// Creates or updates the complete object range
func (*NetworkRange) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/range/%s", ref)
}

// NetworkAaa is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkAaas []NetworkAaa
type NetworkAaa struct {
	Locked     string        `json:"_locked"`
	Reference  string        `json:"_ref"`
	_type      string        `json:"_type"`
	Addresses  []interface{} `json:"addresses"`
	Addresses6 []interface{} `json:"addresses6"`
	Comment    string        `json:"comment"`
	Name       string        `json:"name"`
	Resolved   bool          `json:"resolved"`
	Resolved6  bool          `json:"resolved6"`
}

// GetPath implements sophos.RestObject and returns the NetworkAaa GET path
// Returns all available network/aaa objects
func (*NetworkAaa) GetPath() string { return "/api/objects/network/aaa/" }

// RefRequired implements sophos.RestObject
func (*NetworkAaa) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkAaa DELETE path
// Creates or updates the complete object aaa
func (*NetworkAaa) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/aaa/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkAaa PATCH path
// Changes to parts of the object aaa types
func (*NetworkAaa) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/aaa/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkAaa POST path
// Create a new network/aaa object
func (*NetworkAaa) PostPath() string {
	return "/api/objects/network/aaa/"
}

// PutPath implements sophos.RestObject and returns the NetworkAaa PUT path
// Creates or updates the complete object aaa
func (*NetworkAaa) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/aaa/%s", ref)
}

// NetworkAvailabilityGroup is an Sophos Endpoint subType and implements sophos.RestObject
type NetworkAvailabilityGroup []interface{}

// GetPath implements sophos.RestObject and returns the NetworkAvailabilityGroup GET path
// Returns all available network/availability_group objects
func (*NetworkAvailabilityGroup) GetPath() string { return "/api/objects/network/availability_group/" }

// RefRequired implements sophos.RestObject
func (*NetworkAvailabilityGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NetworkAvailabilityGroup DELETE path
// Creates or updates the complete object availability_group
func (*NetworkAvailabilityGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/network/availability_group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NetworkAvailabilityGroup PATCH path
// Changes to parts of the object availability_group types
func (*NetworkAvailabilityGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/availability_group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NetworkAvailabilityGroup POST path
// Create a new network/availability_group object
func (*NetworkAvailabilityGroup) PostPath() string {
	return "/api/objects/network/availability_group/"
}

// PutPath implements sophos.RestObject and returns the NetworkAvailabilityGroup PUT path
// Creates or updates the complete object availability_group
func (*NetworkAvailabilityGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/network/availability_group/%s", ref)
}

// Notification is a generated struct representing the Sophos Notification Endpoint
// GET /api/nodes/notification
type Notification struct {
	NotificationGroup        NotificationGroup        `json:"notification_group"`
	NotificationNotification NotificationNotification `json:"notification_notification"`
}

var defsNotification = map[string]sophos.RestObject{
	"NotificationGroup":        &NotificationGroup{},
	"NotificationNotification": &NotificationNotification{},
}

// RestObjects implements the sophos.Node interface and returns a map of Notification's Objects
func (Notification) RestObjects() map[string]sophos.RestObject {
	return defsNotification
}

// GetPath implements sophos.RestGetter
func (*Notification) GetPath() string { return "/api/nodes/notification" }

// RefRequired implements sophos.RestGetter
func (*Notification) RefRequired() (string, bool) { return "", false }

var defNotification = &sophos.Definition{Description: "notification", Name: "notification", Link: "/api/definitions/notification", Swag: map[string]sophos.MethodMap{"/objects/notification/notification/": {"get": sophos.MethodDescriptions{Description: "Returns all available notification/notification objects", Parameters: []sophos.Parameter(nil), Tags: []string{"notification/notification"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new notification/notification object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "notification/notification that will be created", Type: "", Required: true}}, Tags: []string{"notification/notification"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/notification/notification/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object notification", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"notification/notification"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available notification types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"notification/notification"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object notification types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "notification/notification that will be changes", Type: "", Required: true}}, Tags: []string{"notification/notification"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object notification", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "notification/notification that will be updated", Type: "", Required: true}}, Tags: []string{"notification/notification"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/notification/notification/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"notification/notification"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/notification/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available notification/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"notification/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new notification/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "notification/group that will be created", Type: "", Required: true}}, Tags: []string{"notification/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/notification/group/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "notification/group that will be changes", Type: "", Required: true}}, Tags: []string{"notification/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "notification/group that will be updated", Type: "", Required: true}}, Tags: []string{"notification/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"notification/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"notification/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/notification/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"notification/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Notification
func (Notification) Definition() sophos.Definition { return *defNotification }

// ApiRoutes returns all known Notification Paths
func (Notification) ApiRoutes() []string {
	return []string{
		"/api/objects/notification/group/",
		"/api/objects/notification/group/{ref}",
		"/api/objects/notification/group/{ref}/usedby",
		"/api/objects/notification/notification/",
		"/api/objects/notification/notification/{ref}",
		"/api/objects/notification/notification/{ref}/usedby",
	}
}

// References returns the Notification's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Notification) References() []string {
	return []string{
		"REF_NotificationGroup",
		"REF_NotificationNotification",
	}
}

// NotificationGroup is an Sophos Endpoint subType and implements sophos.RestObject
type NotificationGroup []interface{}

// GetPath implements sophos.RestObject and returns the NotificationGroup GET path
// Returns all available notification/group objects
func (*NotificationGroup) GetPath() string { return "/api/objects/notification/group/" }

// RefRequired implements sophos.RestObject
func (*NotificationGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NotificationGroup DELETE path
// Creates or updates the complete object group
func (*NotificationGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/notification/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NotificationGroup PATCH path
// Changes to parts of the object group types
func (*NotificationGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/notification/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NotificationGroup POST path
// Create a new notification/group object
func (*NotificationGroup) PostPath() string {
	return "/api/objects/notification/group/"
}

// PutPath implements sophos.RestObject and returns the NotificationGroup PUT path
// Creates or updates the complete object group
func (*NotificationGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/notification/group/%s", ref)
}

// NotificationNotification is an Sophos Endpoint subType and implements sophos.RestObject
type NotificationNotification []interface{}

// GetPath implements sophos.RestObject and returns the NotificationNotification GET path
// Returns all available notification/notification objects
func (*NotificationNotification) GetPath() string { return "/api/objects/notification/notification/" }

// RefRequired implements sophos.RestObject
func (*NotificationNotification) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the NotificationNotification DELETE path
// Creates or updates the complete object notification
func (*NotificationNotification) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/notification/notification/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the NotificationNotification PATCH path
// Changes to parts of the object notification types
func (*NotificationNotification) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/notification/notification/%s", ref)
}

// PostPath implements sophos.RestObject and returns the NotificationNotification POST path
// Create a new notification/notification object
func (*NotificationNotification) PostPath() string {
	return "/api/objects/notification/notification/"
}

// PutPath implements sophos.RestObject and returns the NotificationNotification PUT path
// Creates or updates the complete object notification
func (*NotificationNotification) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/notification/notification/%s", ref)
}

// Ospf is a generated struct representing the Sophos Ospf Endpoint
// GET /api/nodes/ospf
type Ospf struct {
	OspfInterface        OspfInterface        `json:"ospf_interface"`
	OspfMessageDigestKey OspfMessageDigestKey `json:"ospf_message_digest_key"`
	OspfArea             OspfArea             `json:"ospf_area"`
	OspfGroup            OspfGroup            `json:"ospf_group"`
}

var defsOspf = map[string]sophos.RestObject{
	"OspfInterface":        &OspfInterface{},
	"OspfMessageDigestKey": &OspfMessageDigestKey{},
	"OspfArea":             &OspfArea{},
	"OspfGroup":            &OspfGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Ospf's Objects
func (Ospf) RestObjects() map[string]sophos.RestObject {
	return defsOspf
}

// GetPath implements sophos.RestGetter
func (*Ospf) GetPath() string { return "/api/nodes/ospf" }

// RefRequired implements sophos.RestGetter
func (*Ospf) RefRequired() (string, bool) { return "", false }

var defOspf = &sophos.Definition{Description: "ospf", Name: "ospf", Link: "/api/definitions/ospf", Swag: map[string]sophos.MethodMap{"/objects/ospf/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ospf/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ospf/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/group that will be changes", Type: "", Required: true}}, Tags: []string{"ospf/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/group that will be updated", Type: "", Required: true}}, Tags: []string{"ospf/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/ospf/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ospf/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/ospf/interface/": {"post": sophos.MethodDescriptions{Description: "Create a new ospf/interface object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/interface that will be created", Type: "", Required: true}}, Tags: []string{"ospf/interface"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ospf/interface objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ospf/interface"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ospf/interface/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ospf/interface"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ospf/message_digest_key/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ospf/message_digest_key"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ospf/message_digest_key/": {"get": sophos.MethodDescriptions{Description: "Returns all available ospf/message_digest_key objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ospf/message_digest_key"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ospf/message_digest_key object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/message_digest_key that will be created", Type: "", Required: true}}, Tags: []string{"ospf/message_digest_key"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/ospf/message_digest_key/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available message_digest_key types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ospf/message_digest_key"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object message_digest_key types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/message_digest_key that will be changes", Type: "", Required: true}}, Tags: []string{"ospf/message_digest_key"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object message_digest_key", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/message_digest_key that will be updated", Type: "", Required: true}}, Tags: []string{"ospf/message_digest_key"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object message_digest_key", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ospf/message_digest_key"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ospf/area/": {"get": sophos.MethodDescriptions{Description: "Returns all available ospf/area objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ospf/area"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ospf/area object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/area that will be created", Type: "", Required: true}}, Tags: []string{"ospf/area"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ospf/area/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object area types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/area that will be changes", Type: "", Required: true}}, Tags: []string{"ospf/area"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object area", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/area that will be updated", Type: "", Required: true}}, Tags: []string{"ospf/area"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object area", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ospf/area"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available area types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ospf/area"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ospf/area/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ospf/area"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ospf/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ospf/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ospf/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ospf/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/group that will be created", Type: "", Required: true}}, Tags: []string{"ospf/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ospf/interface/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available interface types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ospf/interface"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object interface types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/interface that will be changes", Type: "", Required: true}}, Tags: []string{"ospf/interface"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ospf/interface that will be updated", Type: "", Required: true}}, Tags: []string{"ospf/interface"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ospf/interface"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}}}}

// Definition returns the /api/definitions struct of Ospf
func (Ospf) Definition() sophos.Definition { return *defOspf }

// ApiRoutes returns all known Ospf Paths
func (Ospf) ApiRoutes() []string {
	return []string{
		"/api/objects/ospf/area/",
		"/api/objects/ospf/area/{ref}",
		"/api/objects/ospf/area/{ref}/usedby",
		"/api/objects/ospf/group/",
		"/api/objects/ospf/group/{ref}",
		"/api/objects/ospf/group/{ref}/usedby",
		"/api/objects/ospf/interface/",
		"/api/objects/ospf/interface/{ref}",
		"/api/objects/ospf/interface/{ref}/usedby",
		"/api/objects/ospf/message_digest_key/",
		"/api/objects/ospf/message_digest_key/{ref}",
		"/api/objects/ospf/message_digest_key/{ref}/usedby",
	}
}

// References returns the Ospf's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Ospf) References() []string {
	return []string{
		"REF_OspfArea",
		"REF_OspfGroup",
		"REF_OspfInterface",
		"REF_OspfMessageDigestKey",
	}
}

// OspfInterface is an Sophos Endpoint subType and implements sophos.RestObject
type OspfInterface []interface{}

// GetPath implements sophos.RestObject and returns the OspfInterface GET path
// Returns all available ospf/interface objects
func (*OspfInterface) GetPath() string { return "/api/objects/ospf/interface/" }

// RefRequired implements sophos.RestObject
func (*OspfInterface) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the OspfInterface DELETE path
// Creates or updates the complete object interface
func (*OspfInterface) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/interface/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the OspfInterface PATCH path
// Changes to parts of the object interface types
func (*OspfInterface) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/interface/%s", ref)
}

// PostPath implements sophos.RestObject and returns the OspfInterface POST path
// Create a new ospf/interface object
func (*OspfInterface) PostPath() string {
	return "/api/objects/ospf/interface/"
}

// PutPath implements sophos.RestObject and returns the OspfInterface PUT path
// Creates or updates the complete object interface
func (*OspfInterface) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/interface/%s", ref)
}

// OspfMessageDigestKey is an Sophos Endpoint subType and implements sophos.RestObject
type OspfMessageDigestKey []interface{}

// GetPath implements sophos.RestObject and returns the OspfMessageDigestKey GET path
// Returns all available ospf/message_digest_key objects
func (*OspfMessageDigestKey) GetPath() string { return "/api/objects/ospf/message_digest_key/" }

// RefRequired implements sophos.RestObject
func (*OspfMessageDigestKey) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the OspfMessageDigestKey DELETE path
// Creates or updates the complete object message_digest_key
func (*OspfMessageDigestKey) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/message_digest_key/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the OspfMessageDigestKey PATCH path
// Changes to parts of the object message_digest_key types
func (*OspfMessageDigestKey) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/message_digest_key/%s", ref)
}

// PostPath implements sophos.RestObject and returns the OspfMessageDigestKey POST path
// Create a new ospf/message_digest_key object
func (*OspfMessageDigestKey) PostPath() string {
	return "/api/objects/ospf/message_digest_key/"
}

// PutPath implements sophos.RestObject and returns the OspfMessageDigestKey PUT path
// Creates or updates the complete object message_digest_key
func (*OspfMessageDigestKey) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/message_digest_key/%s", ref)
}

// OspfArea is an Sophos Endpoint subType and implements sophos.RestObject
type OspfArea []interface{}

// GetPath implements sophos.RestObject and returns the OspfArea GET path
// Returns all available ospf/area objects
func (*OspfArea) GetPath() string { return "/api/objects/ospf/area/" }

// RefRequired implements sophos.RestObject
func (*OspfArea) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the OspfArea DELETE path
// Creates or updates the complete object area
func (*OspfArea) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/area/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the OspfArea PATCH path
// Changes to parts of the object area types
func (*OspfArea) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/area/%s", ref)
}

// PostPath implements sophos.RestObject and returns the OspfArea POST path
// Create a new ospf/area object
func (*OspfArea) PostPath() string {
	return "/api/objects/ospf/area/"
}

// PutPath implements sophos.RestObject and returns the OspfArea PUT path
// Creates or updates the complete object area
func (*OspfArea) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/area/%s", ref)
}

// OspfGroup is an Sophos Endpoint subType and implements sophos.RestObject
type OspfGroup []interface{}

// GetPath implements sophos.RestObject and returns the OspfGroup GET path
// Returns all available ospf/group objects
func (*OspfGroup) GetPath() string { return "/api/objects/ospf/group/" }

// RefRequired implements sophos.RestObject
func (*OspfGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the OspfGroup DELETE path
// Creates or updates the complete object group
func (*OspfGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the OspfGroup PATCH path
// Changes to parts of the object group types
func (*OspfGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the OspfGroup POST path
// Create a new ospf/group object
func (*OspfGroup) PostPath() string {
	return "/api/objects/ospf/group/"
}

// PutPath implements sophos.RestObject and returns the OspfGroup PUT path
// Creates or updates the complete object group
func (*OspfGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ospf/group/%s", ref)
}

// Override is a generated struct representing the Sophos Override Endpoint
// GET /api/nodes/override
type Override struct {
	OverrideObjref OverrideObjref `json:"override_objref"`
	OverrideGroup  OverrideGroup  `json:"override_group"`
}

var defsOverride = map[string]sophos.RestObject{
	"OverrideObjref": &OverrideObjref{},
	"OverrideGroup":  &OverrideGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Override's Objects
func (Override) RestObjects() map[string]sophos.RestObject {
	return defsOverride
}

// GetPath implements sophos.RestGetter
func (*Override) GetPath() string { return "/api/nodes/override" }

// RefRequired implements sophos.RestGetter
func (*Override) RefRequired() (string, bool) { return "", false }

var defOverride = &sophos.Definition{Description: "override", Name: "override", Link: "/api/definitions/override", Swag: map[string]sophos.MethodMap{"/objects/override/objref/": {"post": sophos.MethodDescriptions{Description: "Create a new override/objref object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "override/objref that will be created", Type: "", Required: true}}, Tags: []string{"override/objref"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available override/objref objects", Parameters: []sophos.Parameter(nil), Tags: []string{"override/objref"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/override/objref/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object objref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "override/objref that will be updated", Type: "", Required: true}}, Tags: []string{"override/objref"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object objref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"override/objref"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available objref types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"override/objref"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object objref types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "override/objref that will be changes", Type: "", Required: true}}, Tags: []string{"override/objref"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/override/objref/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"override/objref"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/override/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available override/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"override/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new override/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "override/group that will be created", Type: "", Required: true}}, Tags: []string{"override/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/override/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"override/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"override/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "override/group that will be changes", Type: "", Required: true}}, Tags: []string{"override/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "override/group that will be updated", Type: "", Required: true}}, Tags: []string{"override/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/override/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"override/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Override
func (Override) Definition() sophos.Definition { return *defOverride }

// ApiRoutes returns all known Override Paths
func (Override) ApiRoutes() []string {
	return []string{
		"/api/objects/override/group/",
		"/api/objects/override/group/{ref}",
		"/api/objects/override/group/{ref}/usedby",
		"/api/objects/override/objref/",
		"/api/objects/override/objref/{ref}",
		"/api/objects/override/objref/{ref}/usedby",
	}
}

// References returns the Override's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Override) References() []string {
	return []string{
		"REF_OverrideGroup",
		"REF_OverrideObjref",
	}
}

// OverrideObjref is an Sophos Endpoint subType and implements sophos.RestObject
type OverrideObjref []interface{}

// GetPath implements sophos.RestObject and returns the OverrideObjref GET path
// Returns all available override/objref objects
func (*OverrideObjref) GetPath() string { return "/api/objects/override/objref/" }

// RefRequired implements sophos.RestObject
func (*OverrideObjref) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the OverrideObjref DELETE path
// Creates or updates the complete object objref
func (*OverrideObjref) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/override/objref/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the OverrideObjref PATCH path
// Changes to parts of the object objref types
func (*OverrideObjref) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/override/objref/%s", ref)
}

// PostPath implements sophos.RestObject and returns the OverrideObjref POST path
// Create a new override/objref object
func (*OverrideObjref) PostPath() string {
	return "/api/objects/override/objref/"
}

// PutPath implements sophos.RestObject and returns the OverrideObjref PUT path
// Creates or updates the complete object objref
func (*OverrideObjref) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/override/objref/%s", ref)
}

// OverrideGroup is an Sophos Endpoint subType and implements sophos.RestObject
type OverrideGroup []interface{}

// GetPath implements sophos.RestObject and returns the OverrideGroup GET path
// Returns all available override/group objects
func (*OverrideGroup) GetPath() string { return "/api/objects/override/group/" }

// RefRequired implements sophos.RestObject
func (*OverrideGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the OverrideGroup DELETE path
// Creates or updates the complete object group
func (*OverrideGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/override/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the OverrideGroup PATCH path
// Changes to parts of the object group types
func (*OverrideGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/override/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the OverrideGroup POST path
// Create a new override/group object
func (*OverrideGroup) PostPath() string {
	return "/api/objects/override/group/"
}

// PutPath implements sophos.RestObject and returns the OverrideGroup PUT path
// Creates or updates the complete object group
func (*OverrideGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/override/group/%s", ref)
}

// Packetfilter is a generated struct representing the Sophos Packetfilter Endpoint
// GET /api/nodes/packetfilter
type Packetfilter struct {
	Advanced struct {
		BlockInvalidCtPackets int64    `json:"block_invalid_ct_packets"`
		CheckPacketLength     int64    `json:"check_packet_length"`
		ConntrackHelpers      []string `json:"conntrack_helpers"`
		FtpPorts              []int64  `json:"ftp_ports"`
		LogBroadcasts         int64    `json:"log_broadcasts"`
		LogDNSRequests        int64    `json:"log_dns_requests"`
		LogFtpData            int64    `json:"log_ftp_data"`
		LogInvalid            int64    `json:"log_invalid"`
		LogMcast              int64    `json:"log_mcast"`
		LogStrictTcpState     string   `json:"log_strict_tcp_state"`
		NoErrorReplay         int64    `json:"no_error_replay"`
		Optimize              struct {
			Ipset string `json:"ipset"`
			Ports int64  `json:"ports"`
		} `json:"optimize"`
		SpoofProtection  string `json:"spoof_protection"`
		StrictTcpState   int64  `json:"strict_tcp_state"`
		TcpMaxRetrans    int64  `json:"tcp_max_retrans"`
		TcpWindowScaling int64  `json:"tcp_window_scaling"`
	} `json:"advanced"`
	Rules      []string `json:"rules"`
	RulesAuto  []string `json:"rules_auto"`
	RulesBack  string   `json:"rules_back"`
	RulesFront string   `json:"rules_front"`
	Timeouts   struct {
		IPConntrackGenericTimeout        int64 `json:"ip_conntrack_generic_timeout"`
		IPConntrackIcmpTimeout           int64 `json:"ip_conntrack_icmp_timeout"`
		IPConntrackTcpTimeoutClose       int64 `json:"ip_conntrack_tcp_timeout_close"`
		IPConntrackTcpTimeoutCloseWait   int64 `json:"ip_conntrack_tcp_timeout_close_wait"`
		IPConntrackTcpTimeoutEstablished int64 `json:"ip_conntrack_tcp_timeout_established"`
		IPConntrackTcpTimeoutFinWait     int64 `json:"ip_conntrack_tcp_timeout_fin_wait"`
		IPConntrackTcpTimeoutLastAck     int64 `json:"ip_conntrack_tcp_timeout_last_ack"`
		IPConntrackTcpTimeoutMaxRetrans  int64 `json:"ip_conntrack_tcp_timeout_max_retrans"`
		IPConntrackTcpTimeoutSynRecv     int64 `json:"ip_conntrack_tcp_timeout_syn_recv"`
		IPConntrackTcpTimeoutSynSent     int64 `json:"ip_conntrack_tcp_timeout_syn_sent"`
		IPConntrackTcpTimeoutTimeWait    int64 `json:"ip_conntrack_tcp_timeout_time_wait"`
		IPConntrackUdpTimeout            int64 `json:"ip_conntrack_udp_timeout"`
		IPConntrackUdpTimeoutStream      int64 `json:"ip_conntrack_udp_timeout_stream"`
	} `json:"timeouts"`
}

var defsPacketfilter = map[string]sophos.RestObject{
	"PacketfilterPacketfilter": &PacketfilterPacketfilter{},
	"Packetfilter1to1Nat":      &Packetfilter1to1Nat{},
	"PacketfilterGroup":        &PacketfilterGroup{},
	"PacketfilterLoadbalance":  &PacketfilterLoadbalance{},
	"PacketfilterRuleset":      &PacketfilterRuleset{},
	"PacketfilterGenericProxy": &PacketfilterGenericProxy{},
	"PacketfilterMasq":         &PacketfilterMasq{},
	"PacketfilterMangle":       &PacketfilterMangle{},
	"PacketfilterNat":          &PacketfilterNat{},
}

// RestObjects implements the sophos.Node interface and returns a map of Packetfilter's Objects
func (Packetfilter) RestObjects() map[string]sophos.RestObject {
	return defsPacketfilter
}

// GetPath implements sophos.RestGetter
func (*Packetfilter) GetPath() string { return "/api/nodes/packetfilter" }

// RefRequired implements sophos.RestGetter
func (*Packetfilter) RefRequired() (string, bool) { return "", false }

var defPacketfilter = &sophos.Definition{Description: "packetfilter", Name: "packetfilter", Link: "/api/definitions/packetfilter", Swag: map[string]sophos.MethodMap{"/objects/packetfilter/ruleset/": {"get": sophos.MethodDescriptions{Description: "Returns all available packetfilter/ruleset objects", Parameters: []sophos.Parameter(nil), Tags: []string{"packetfilter/ruleset"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new packetfilter/ruleset object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/ruleset that will be created", Type: "", Required: true}}, Tags: []string{"packetfilter/ruleset"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/1to1nat/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/1to1nat"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/generic_proxy/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/generic_proxy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available packetfilter/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"packetfilter/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new packetfilter/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/group that will be created", Type: "", Required: true}}, Tags: []string{"packetfilter/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/loadbalance/": {"get": sophos.MethodDescriptions{Description: "Returns all available packetfilter/loadbalance objects", Parameters: []sophos.Parameter(nil), Tags: []string{"packetfilter/loadbalance"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new packetfilter/loadbalance object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/loadbalance that will be created", Type: "", Required: true}}, Tags: []string{"packetfilter/loadbalance"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/masq/": {"get": sophos.MethodDescriptions{Description: "Returns all available packetfilter/masq objects", Parameters: []sophos.Parameter(nil), Tags: []string{"packetfilter/masq"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new packetfilter/masq object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/masq that will be created", Type: "", Required: true}}, Tags: []string{"packetfilter/masq"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/ruleset/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/ruleset"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/mangle/": {"get": sophos.MethodDescriptions{Description: "Returns all available packetfilter/mangle objects", Parameters: []sophos.Parameter(nil), Tags: []string{"packetfilter/mangle"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new packetfilter/mangle object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/mangle that will be created", Type: "", Required: true}}, Tags: []string{"packetfilter/mangle"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/masq/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object masq", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"packetfilter/masq"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available masq types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/masq"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object masq types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/masq that will be changes", Type: "", Required: true}}, Tags: []string{"packetfilter/masq"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object masq", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/masq that will be updated", Type: "", Required: true}}, Tags: []string{"packetfilter/masq"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/packetfilter/masq/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/masq"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/nat/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/nat"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/nat/": {"post": sophos.MethodDescriptions{Description: "Create a new packetfilter/nat object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/nat that will be created", Type: "", Required: true}}, Tags: []string{"packetfilter/nat"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available packetfilter/nat objects", Parameters: []sophos.Parameter(nil), Tags: []string{"packetfilter/nat"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/ruleset/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ruleset", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"packetfilter/ruleset"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ruleset types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/ruleset"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ruleset types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/ruleset that will be changes", Type: "", Required: true}}, Tags: []string{"packetfilter/ruleset"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ruleset", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/ruleset that will be updated", Type: "", Required: true}}, Tags: []string{"packetfilter/ruleset"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/generic_proxy/": {"get": sophos.MethodDescriptions{Description: "Returns all available packetfilter/generic_proxy objects", Parameters: []sophos.Parameter(nil), Tags: []string{"packetfilter/generic_proxy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new packetfilter/generic_proxy object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/generic_proxy that will be created", Type: "", Required: true}}, Tags: []string{"packetfilter/generic_proxy"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/packetfilter/loadbalance/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/loadbalance"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/mangle/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object mangle", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"packetfilter/mangle"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available mangle types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/mangle"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object mangle types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/mangle that will be changes", Type: "", Required: true}}, Tags: []string{"packetfilter/mangle"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object mangle", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/mangle that will be updated", Type: "", Required: true}}, Tags: []string{"packetfilter/mangle"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/packetfilter/1to1nat/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object 1to1nat types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/1to1nat that will be changes", Type: "", Required: true}}, Tags: []string{"packetfilter/1to1nat"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object 1to1nat", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/1to1nat that will be updated", Type: "", Required: true}}, Tags: []string{"packetfilter/1to1nat"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object 1to1nat", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"packetfilter/1to1nat"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available 1to1nat types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/1to1nat"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/generic_proxy/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object generic_proxy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/generic_proxy that will be changes", Type: "", Required: true}}, Tags: []string{"packetfilter/generic_proxy"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object generic_proxy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/generic_proxy that will be updated", Type: "", Required: true}}, Tags: []string{"packetfilter/generic_proxy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object generic_proxy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"packetfilter/generic_proxy"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available generic_proxy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/generic_proxy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/packetfilter/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/mangle/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/mangle"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/packetfilter/": {"get": sophos.MethodDescriptions{Description: "Returns all available packetfilter/packetfilter objects", Parameters: []sophos.Parameter(nil), Tags: []string{"packetfilter/packetfilter"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new packetfilter/packetfilter object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/packetfilter that will be created", Type: "", Required: true}}, Tags: []string{"packetfilter/packetfilter"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/nat/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available nat types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/nat"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object nat types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/nat that will be changes", Type: "", Required: true}}, Tags: []string{"packetfilter/nat"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object nat", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/nat that will be updated", Type: "", Required: true}}, Tags: []string{"packetfilter/nat"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object nat", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"packetfilter/nat"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/packetfilter/packetfilter/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object packetfilter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"packetfilter/packetfilter"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available packetfilter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/packetfilter"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object packetfilter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/packetfilter that will be changes", Type: "", Required: true}}, Tags: []string{"packetfilter/packetfilter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object packetfilter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/packetfilter that will be updated", Type: "", Required: true}}, Tags: []string{"packetfilter/packetfilter"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/packetfilter/packetfilter/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/packetfilter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/packetfilter/1to1nat/": {"get": sophos.MethodDescriptions{Description: "Returns all available packetfilter/1to1nat objects", Parameters: []sophos.Parameter(nil), Tags: []string{"packetfilter/1to1nat"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new packetfilter/1to1nat object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/1to1nat that will be created", Type: "", Required: true}}, Tags: []string{"packetfilter/1to1nat"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/packetfilter/group/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/group that will be updated", Type: "", Required: true}}, Tags: []string{"packetfilter/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"packetfilter/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/group that will be changes", Type: "", Required: true}}, Tags: []string{"packetfilter/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/packetfilter/loadbalance/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object loadbalance", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/loadbalance that will be updated", Type: "", Required: true}}, Tags: []string{"packetfilter/loadbalance"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object loadbalance", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"packetfilter/loadbalance"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available loadbalance types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"packetfilter/loadbalance"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object loadbalance types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "packetfilter/loadbalance that will be changes", Type: "", Required: true}}, Tags: []string{"packetfilter/loadbalance"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}}}

// Definition returns the /api/definitions struct of Packetfilter
func (Packetfilter) Definition() sophos.Definition { return *defPacketfilter }

// ApiRoutes returns all known Packetfilter Paths
func (Packetfilter) ApiRoutes() []string {
	return []string{
		"/api/objects/packetfilter/1to1nat/",
		"/api/objects/packetfilter/1to1nat/{ref}",
		"/api/objects/packetfilter/1to1nat/{ref}/usedby",
		"/api/objects/packetfilter/generic_proxy/",
		"/api/objects/packetfilter/generic_proxy/{ref}",
		"/api/objects/packetfilter/generic_proxy/{ref}/usedby",
		"/api/objects/packetfilter/group/",
		"/api/objects/packetfilter/group/{ref}",
		"/api/objects/packetfilter/group/{ref}/usedby",
		"/api/objects/packetfilter/loadbalance/",
		"/api/objects/packetfilter/loadbalance/{ref}",
		"/api/objects/packetfilter/loadbalance/{ref}/usedby",
		"/api/objects/packetfilter/mangle/",
		"/api/objects/packetfilter/mangle/{ref}",
		"/api/objects/packetfilter/mangle/{ref}/usedby",
		"/api/objects/packetfilter/masq/",
		"/api/objects/packetfilter/masq/{ref}",
		"/api/objects/packetfilter/masq/{ref}/usedby",
		"/api/objects/packetfilter/nat/",
		"/api/objects/packetfilter/nat/{ref}",
		"/api/objects/packetfilter/nat/{ref}/usedby",
		"/api/objects/packetfilter/packetfilter/",
		"/api/objects/packetfilter/packetfilter/{ref}",
		"/api/objects/packetfilter/packetfilter/{ref}/usedby",
		"/api/objects/packetfilter/ruleset/",
		"/api/objects/packetfilter/ruleset/{ref}",
		"/api/objects/packetfilter/ruleset/{ref}/usedby",
	}
}

// References returns the Packetfilter's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Packetfilter) References() []string {
	return []string{
		"REF_Packetfilter1to1Nat",
		"REF_PacketfilterGenericProxy",
		"REF_PacketfilterGroup",
		"REF_PacketfilterLoadbalance",
		"REF_PacketfilterMangle",
		"REF_PacketfilterMasq",
		"REF_PacketfilterNat",
		"REF_PacketfilterPacketfilter",
		"REF_PacketfilterRuleset",
	}
}

// PacketfilterPacketfilter is an Sophos Endpoint subType and implements sophos.RestObject
type PacketfilterPacketfilters []PacketfilterPacketfilter
type PacketfilterPacketfilter struct {
	Locked             string   `json:"_locked"`
	Reference          string   `json:"_ref"`
	_type              string   `json:"_type"`
	Action             string   `json:"action"`
	Auto               bool     `json:"auto"`
	AutoType           string   `json:"auto_type"`
	Comment            string   `json:"comment"`
	Destinations       []string `json:"destinations"`
	Direction          string   `json:"direction"`
	Group              string   `json:"group"`
	Interface          string   `json:"interface"`
	Log                bool     `json:"log"`
	Name               string   `json:"name"`
	Services           []string `json:"services"`
	SourceMacAddresses string   `json:"source_mac_addresses"`
	Sources            []string `json:"sources"`
	Status             bool     `json:"status"`
	Time               string   `json:"time"`
}

// GetPath implements sophos.RestObject and returns the PacketfilterPacketfilter GET path
// Returns all available packetfilter/packetfilter objects
func (*PacketfilterPacketfilter) GetPath() string { return "/api/objects/packetfilter/packetfilter/" }

// RefRequired implements sophos.RestObject
func (*PacketfilterPacketfilter) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PacketfilterPacketfilter DELETE path
// Creates or updates the complete object packetfilter
func (*PacketfilterPacketfilter) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/packetfilter/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PacketfilterPacketfilter PATCH path
// Changes to parts of the object packetfilter types
func (*PacketfilterPacketfilter) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/packetfilter/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PacketfilterPacketfilter POST path
// Create a new packetfilter/packetfilter object
func (*PacketfilterPacketfilter) PostPath() string {
	return "/api/objects/packetfilter/packetfilter/"
}

// PutPath implements sophos.RestObject and returns the PacketfilterPacketfilter PUT path
// Creates or updates the complete object packetfilter
func (*PacketfilterPacketfilter) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/packetfilter/%s", ref)
}

// Packetfilter1to1Nat is an Sophos Endpoint subType and implements sophos.RestObject
type Packetfilter1to1Nat []interface{}

// GetPath implements sophos.RestObject and returns the Packetfilter1to1Nat GET path
// Returns all available packetfilter/1to1nat objects
func (*Packetfilter1to1Nat) GetPath() string { return "/api/objects/packetfilter/1to1nat/" }

// RefRequired implements sophos.RestObject
func (*Packetfilter1to1Nat) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the Packetfilter1to1Nat DELETE path
// Creates or updates the complete object 1to1nat
func (*Packetfilter1to1Nat) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/1to1nat/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the Packetfilter1to1Nat PATCH path
// Changes to parts of the object 1to1nat types
func (*Packetfilter1to1Nat) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/1to1nat/%s", ref)
}

// PostPath implements sophos.RestObject and returns the Packetfilter1to1Nat POST path
// Create a new packetfilter/1to1nat object
func (*Packetfilter1to1Nat) PostPath() string {
	return "/api/objects/packetfilter/1to1nat/"
}

// PutPath implements sophos.RestObject and returns the Packetfilter1to1Nat PUT path
// Creates or updates the complete object 1to1nat
func (*Packetfilter1to1Nat) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/1to1nat/%s", ref)
}

// PacketfilterGroup is an Sophos Endpoint subType and implements sophos.RestObject
type PacketfilterGroup []interface{}

// GetPath implements sophos.RestObject and returns the PacketfilterGroup GET path
// Returns all available packetfilter/group objects
func (*PacketfilterGroup) GetPath() string { return "/api/objects/packetfilter/group/" }

// RefRequired implements sophos.RestObject
func (*PacketfilterGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PacketfilterGroup DELETE path
// Creates or updates the complete object group
func (*PacketfilterGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PacketfilterGroup PATCH path
// Changes to parts of the object group types
func (*PacketfilterGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PacketfilterGroup POST path
// Create a new packetfilter/group object
func (*PacketfilterGroup) PostPath() string {
	return "/api/objects/packetfilter/group/"
}

// PutPath implements sophos.RestObject and returns the PacketfilterGroup PUT path
// Creates or updates the complete object group
func (*PacketfilterGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/group/%s", ref)
}

// PacketfilterLoadbalance is an Sophos Endpoint subType and implements sophos.RestObject
type PacketfilterLoadbalance []interface{}

// GetPath implements sophos.RestObject and returns the PacketfilterLoadbalance GET path
// Returns all available packetfilter/loadbalance objects
func (*PacketfilterLoadbalance) GetPath() string { return "/api/objects/packetfilter/loadbalance/" }

// RefRequired implements sophos.RestObject
func (*PacketfilterLoadbalance) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PacketfilterLoadbalance DELETE path
// Creates or updates the complete object loadbalance
func (*PacketfilterLoadbalance) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/loadbalance/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PacketfilterLoadbalance PATCH path
// Changes to parts of the object loadbalance types
func (*PacketfilterLoadbalance) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/loadbalance/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PacketfilterLoadbalance POST path
// Create a new packetfilter/loadbalance object
func (*PacketfilterLoadbalance) PostPath() string {
	return "/api/objects/packetfilter/loadbalance/"
}

// PutPath implements sophos.RestObject and returns the PacketfilterLoadbalance PUT path
// Creates or updates the complete object loadbalance
func (*PacketfilterLoadbalance) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/loadbalance/%s", ref)
}

// PacketfilterRuleset is an Sophos Endpoint subType and implements sophos.RestObject
type PacketfilterRuleset []interface{}

// GetPath implements sophos.RestObject and returns the PacketfilterRuleset GET path
// Returns all available packetfilter/ruleset objects
func (*PacketfilterRuleset) GetPath() string { return "/api/objects/packetfilter/ruleset/" }

// RefRequired implements sophos.RestObject
func (*PacketfilterRuleset) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PacketfilterRuleset DELETE path
// Creates or updates the complete object ruleset
func (*PacketfilterRuleset) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/ruleset/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PacketfilterRuleset PATCH path
// Changes to parts of the object ruleset types
func (*PacketfilterRuleset) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/ruleset/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PacketfilterRuleset POST path
// Create a new packetfilter/ruleset object
func (*PacketfilterRuleset) PostPath() string {
	return "/api/objects/packetfilter/ruleset/"
}

// PutPath implements sophos.RestObject and returns the PacketfilterRuleset PUT path
// Creates or updates the complete object ruleset
func (*PacketfilterRuleset) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/ruleset/%s", ref)
}

// PacketfilterGenericProxy is an Sophos Endpoint subType and implements sophos.RestObject
type PacketfilterGenericProxy []interface{}

// GetPath implements sophos.RestObject and returns the PacketfilterGenericProxy GET path
// Returns all available packetfilter/generic_proxy objects
func (*PacketfilterGenericProxy) GetPath() string { return "/api/objects/packetfilter/generic_proxy/" }

// RefRequired implements sophos.RestObject
func (*PacketfilterGenericProxy) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PacketfilterGenericProxy DELETE path
// Creates or updates the complete object generic_proxy
func (*PacketfilterGenericProxy) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/generic_proxy/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PacketfilterGenericProxy PATCH path
// Changes to parts of the object generic_proxy types
func (*PacketfilterGenericProxy) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/generic_proxy/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PacketfilterGenericProxy POST path
// Create a new packetfilter/generic_proxy object
func (*PacketfilterGenericProxy) PostPath() string {
	return "/api/objects/packetfilter/generic_proxy/"
}

// PutPath implements sophos.RestObject and returns the PacketfilterGenericProxy PUT path
// Creates or updates the complete object generic_proxy
func (*PacketfilterGenericProxy) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/generic_proxy/%s", ref)
}

// PacketfilterMasq is an Sophos Endpoint subType and implements sophos.RestObject
type PacketfilterMasqs []PacketfilterMasq
type PacketfilterMasq struct {
	Locked                   string `json:"_locked"`
	Reference                string `json:"_ref"`
	_type                    string `json:"_type"`
	AdditionalAddress        string `json:"additional_address"`
	AdditionalAddressRestore string `json:"additional_address_restore"`
	Comment                  string `json:"comment"`
	Name                     string `json:"name"`
	Source                   string `json:"source"`
	SourceNatInterface       string `json:"source_nat_interface"`
	Status                   bool   `json:"status"`
}

// GetPath implements sophos.RestObject and returns the PacketfilterMasqs GET path
// Returns all available packetfilter/masq objects
func (*PacketfilterMasqs) GetPath() string { return "/api/objects/packetfilter/masq/" }

// RefRequired implements sophos.RestObject
func (*PacketfilterMasqs) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the PacketfilterMasqs GET path
// Returns all available masq types
func (p *PacketfilterMasq) GetPath() string {
	return fmt.Sprintf("/api/objects/packetfilter/masq/%s", p.Reference)
}

// RefRequired implements sophos.RestObject
func (p *PacketfilterMasq) RefRequired() (string, bool) { return p.Reference, true }

// DeletePath implements sophos.RestObject and returns the PacketfilterMasq DELETE path
// Creates or updates the complete object masq
func (*PacketfilterMasq) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/masq/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PacketfilterMasq PATCH path
// Changes to parts of the object masq types
func (*PacketfilterMasq) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/masq/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PacketfilterMasq POST path
// Create a new packetfilter/masq object
func (*PacketfilterMasq) PostPath() string {
	return "/api/objects/packetfilter/masq/"
}

// PutPath implements sophos.RestObject and returns the PacketfilterMasq PUT path
// Creates or updates the complete object masq
func (*PacketfilterMasq) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/masq/%s", ref)
}

// Type implements sophos.Object
func (p *PacketfilterMasq) GetType() string { return p._type }

// PacketfilterMangle is an Sophos Endpoint subType and implements sophos.RestObject
type PacketfilterMangle []interface{}

// GetPath implements sophos.RestObject and returns the PacketfilterMangle GET path
// Returns all available packetfilter/mangle objects
func (*PacketfilterMangle) GetPath() string { return "/api/objects/packetfilter/mangle/" }

// RefRequired implements sophos.RestObject
func (*PacketfilterMangle) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PacketfilterMangle DELETE path
// Creates or updates the complete object mangle
func (*PacketfilterMangle) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/mangle/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PacketfilterMangle PATCH path
// Changes to parts of the object mangle types
func (*PacketfilterMangle) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/mangle/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PacketfilterMangle POST path
// Create a new packetfilter/mangle object
func (*PacketfilterMangle) PostPath() string {
	return "/api/objects/packetfilter/mangle/"
}

// PutPath implements sophos.RestObject and returns the PacketfilterMangle PUT path
// Creates or updates the complete object mangle
func (*PacketfilterMangle) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/mangle/%s", ref)
}

// PacketfilterNat is an Sophos Endpoint subType and implements sophos.RestObject
type PacketfilterNats []PacketfilterNat
type PacketfilterNat struct {
	Locked                string `json:"_locked"`
	Reference             string `json:"_ref"`
	_type                 string `json:"_type"`
	AutoPfIn              string `json:"auto_pf_in"`
	AutoPfrule            bool   `json:"auto_pfrule"`
	Comment               string `json:"comment"`
	Destination           string `json:"destination"`
	DestinationNatAddress string `json:"destination_nat_address"`
	DestinationNatService string `json:"destination_nat_service"`
	Group                 string `json:"group"`
	Ipsec                 bool   `json:"ipsec"`
	Log                   bool   `json:"log"`
	Mode                  string `json:"mode"`
	Name                  string `json:"name"`
	Service               string `json:"service"`
	Source                string `json:"source"`
	SourceNatAddress      string `json:"source_nat_address"`
	SourceNatService      string `json:"source_nat_service"`
	Status                bool   `json:"status"`
}

// GetPath implements sophos.RestObject and returns the PacketfilterNat GET path
// Returns all available packetfilter/nat objects
func (*PacketfilterNat) GetPath() string { return "/api/objects/packetfilter/nat/" }

// RefRequired implements sophos.RestObject
func (*PacketfilterNat) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PacketfilterNat DELETE path
// Creates or updates the complete object nat
func (*PacketfilterNat) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/nat/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PacketfilterNat PATCH path
// Changes to parts of the object nat types
func (*PacketfilterNat) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/nat/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PacketfilterNat POST path
// Create a new packetfilter/nat object
func (*PacketfilterNat) PostPath() string {
	return "/api/objects/packetfilter/nat/"
}

// PutPath implements sophos.RestObject and returns the PacketfilterNat PUT path
// Creates or updates the complete object nat
func (*PacketfilterNat) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/packetfilter/nat/%s", ref)
}

// PimSm is a generated struct representing the Sophos PimSm Endpoint
// GET /api/nodes/pim_sm
type PimSm struct {
	AutoPfOut       string        `json:"auto_pf_out"`
	AutoPfrule      int64         `json:"auto_pfrule"`
	Debug           int64         `json:"debug"`
	Interfaces      []interface{} `json:"interfaces"`
	RpRouters       []interface{} `json:"rp_routers"`
	SptSwitchBytes  int64         `json:"spt_switch_bytes"`
	SptSwitchStatus int64         `json:"spt_switch_status"`
	Status          int64         `json:"status"`
}

var defsPimSm = map[string]sophos.RestObject{
	"PimSmRpRouter":  &PimSmRpRouter{},
	"PimSmGroup":     &PimSmGroup{},
	"PimSmInterface": &PimSmInterface{},
	"PimSmRoute":     &PimSmRoute{},
}

// RestObjects implements the sophos.Node interface and returns a map of PimSm's Objects
func (PimSm) RestObjects() map[string]sophos.RestObject {
	return defsPimSm
}

// GetPath implements sophos.RestGetter
func (*PimSm) GetPath() string { return "/api/nodes/pim_sm" }

// RefRequired implements sophos.RestGetter
func (*PimSm) RefRequired() (string, bool) { return "", false }

var defPimSm = &sophos.Definition{Description: "pim_sm", Name: "pim_sm", Link: "/api/definitions/pim_sm", Swag: map[string]sophos.MethodMap{"/objects/pim_sm/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available pim_sm/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"pim_sm/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new pim_sm/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/group that will be created", Type: "", Required: true}}, Tags: []string{"pim_sm/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/pim_sm/interface/": {"get": sophos.MethodDescriptions{Description: "Returns all available pim_sm/interface objects", Parameters: []sophos.Parameter(nil), Tags: []string{"pim_sm/interface"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new pim_sm/interface object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/interface that will be created", Type: "", Required: true}}, Tags: []string{"pim_sm/interface"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pim_sm/interface/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"pim_sm/interface"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available interface types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pim_sm/interface"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object interface types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/interface that will be changes", Type: "", Required: true}}, Tags: []string{"pim_sm/interface"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/interface that will be updated", Type: "", Required: true}}, Tags: []string{"pim_sm/interface"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/pim_sm/route/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pim_sm/route"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pim_sm/rp_router/": {"get": sophos.MethodDescriptions{Description: "Returns all available pim_sm/rp_router objects", Parameters: []sophos.Parameter(nil), Tags: []string{"pim_sm/rp_router"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new pim_sm/rp_router object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/rp_router that will be created", Type: "", Required: true}}, Tags: []string{"pim_sm/rp_router"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pim_sm/rp_router/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object rp_router", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"pim_sm/rp_router"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available rp_router types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pim_sm/rp_router"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object rp_router types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/rp_router that will be changes", Type: "", Required: true}}, Tags: []string{"pim_sm/rp_router"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object rp_router", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/rp_router that will be updated", Type: "", Required: true}}, Tags: []string{"pim_sm/rp_router"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/pim_sm/rp_router/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pim_sm/rp_router"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/pim_sm/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"pim_sm/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pim_sm/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/group that will be changes", Type: "", Required: true}}, Tags: []string{"pim_sm/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/group that will be updated", Type: "", Required: true}}, Tags: []string{"pim_sm/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/pim_sm/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pim_sm/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pim_sm/interface/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pim_sm/interface"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pim_sm/route/": {"get": sophos.MethodDescriptions{Description: "Returns all available pim_sm/route objects", Parameters: []sophos.Parameter(nil), Tags: []string{"pim_sm/route"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new pim_sm/route object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/route that will be created", Type: "", Required: true}}, Tags: []string{"pim_sm/route"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/pim_sm/route/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object route", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"pim_sm/route"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available route types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pim_sm/route"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object route types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/route that will be changes", Type: "", Required: true}}, Tags: []string{"pim_sm/route"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object route", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pim_sm/route that will be updated", Type: "", Required: true}}, Tags: []string{"pim_sm/route"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}}}

// Definition returns the /api/definitions struct of PimSm
func (PimSm) Definition() sophos.Definition { return *defPimSm }

// ApiRoutes returns all known PimSm Paths
func (PimSm) ApiRoutes() []string {
	return []string{
		"/api/objects/pim_sm/group/",
		"/api/objects/pim_sm/group/{ref}",
		"/api/objects/pim_sm/group/{ref}/usedby",
		"/api/objects/pim_sm/interface/",
		"/api/objects/pim_sm/interface/{ref}",
		"/api/objects/pim_sm/interface/{ref}/usedby",
		"/api/objects/pim_sm/route/",
		"/api/objects/pim_sm/route/{ref}",
		"/api/objects/pim_sm/route/{ref}/usedby",
		"/api/objects/pim_sm/rp_router/",
		"/api/objects/pim_sm/rp_router/{ref}",
		"/api/objects/pim_sm/rp_router/{ref}/usedby",
	}
}

// References returns the PimSm's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (PimSm) References() []string {
	return []string{
		"REF_PimSmGroup",
		"REF_PimSmInterface",
		"REF_PimSmRoute",
		"REF_PimSmRpRouter",
	}
}

// PimSmRpRouter is an Sophos Endpoint subType and implements sophos.RestObject
type PimSmRpRouter []interface{}

// GetPath implements sophos.RestObject and returns the PimSmRpRouter GET path
// Returns all available pim_sm/rp_router objects
func (*PimSmRpRouter) GetPath() string { return "/api/objects/pim_sm/rp_router/" }

// RefRequired implements sophos.RestObject
func (*PimSmRpRouter) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PimSmRpRouter DELETE path
// Creates or updates the complete object rp_router
func (*PimSmRpRouter) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/rp_router/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PimSmRpRouter PATCH path
// Changes to parts of the object rp_router types
func (*PimSmRpRouter) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/rp_router/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PimSmRpRouter POST path
// Create a new pim_sm/rp_router object
func (*PimSmRpRouter) PostPath() string {
	return "/api/objects/pim_sm/rp_router/"
}

// PutPath implements sophos.RestObject and returns the PimSmRpRouter PUT path
// Creates or updates the complete object rp_router
func (*PimSmRpRouter) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/rp_router/%s", ref)
}

// PimSmGroup is an Sophos Endpoint subType and implements sophos.RestObject
type PimSmGroup []interface{}

// GetPath implements sophos.RestObject and returns the PimSmGroup GET path
// Returns all available pim_sm/group objects
func (*PimSmGroup) GetPath() string { return "/api/objects/pim_sm/group/" }

// RefRequired implements sophos.RestObject
func (*PimSmGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PimSmGroup DELETE path
// Creates or updates the complete object group
func (*PimSmGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PimSmGroup PATCH path
// Changes to parts of the object group types
func (*PimSmGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PimSmGroup POST path
// Create a new pim_sm/group object
func (*PimSmGroup) PostPath() string {
	return "/api/objects/pim_sm/group/"
}

// PutPath implements sophos.RestObject and returns the PimSmGroup PUT path
// Creates or updates the complete object group
func (*PimSmGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/group/%s", ref)
}

// PimSmInterface is an Sophos Endpoint subType and implements sophos.RestObject
type PimSmInterface []interface{}

// GetPath implements sophos.RestObject and returns the PimSmInterface GET path
// Returns all available pim_sm/interface objects
func (*PimSmInterface) GetPath() string { return "/api/objects/pim_sm/interface/" }

// RefRequired implements sophos.RestObject
func (*PimSmInterface) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PimSmInterface DELETE path
// Creates or updates the complete object interface
func (*PimSmInterface) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/interface/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PimSmInterface PATCH path
// Changes to parts of the object interface types
func (*PimSmInterface) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/interface/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PimSmInterface POST path
// Create a new pim_sm/interface object
func (*PimSmInterface) PostPath() string {
	return "/api/objects/pim_sm/interface/"
}

// PutPath implements sophos.RestObject and returns the PimSmInterface PUT path
// Creates or updates the complete object interface
func (*PimSmInterface) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/interface/%s", ref)
}

// PimSmRoute is an Sophos Endpoint subType and implements sophos.RestObject
type PimSmRoute []interface{}

// GetPath implements sophos.RestObject and returns the PimSmRoute GET path
// Returns all available pim_sm/route objects
func (*PimSmRoute) GetPath() string { return "/api/objects/pim_sm/route/" }

// RefRequired implements sophos.RestObject
func (*PimSmRoute) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the PimSmRoute DELETE path
// Creates or updates the complete object route
func (*PimSmRoute) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/route/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the PimSmRoute PATCH path
// Changes to parts of the object route types
func (*PimSmRoute) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/route/%s", ref)
}

// PostPath implements sophos.RestObject and returns the PimSmRoute POST path
// Create a new pim_sm/route object
func (*PimSmRoute) PostPath() string {
	return "/api/objects/pim_sm/route/"
}

// PutPath implements sophos.RestObject and returns the PimSmRoute PUT path
// Creates or updates the complete object route
func (*PimSmRoute) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/pim_sm/route/%s", ref)
}

// Pop3 is a generated struct representing the Sophos Pop3 Endpoint
// GET /api/nodes/pop3
type Pop3 struct {
	AllowedClients            []interface{} `json:"allowed_clients"`
	AllowedServers            []string      `json:"allowed_servers"`
	CffAsMarker               string        `json:"cff_as_marker"`
	CffAv                     int64         `json:"cff_av"`
	CffAvAction               string        `json:"cff_av_action"`
	CffAvEngines              string        `json:"cff_av_engines"`
	CffFileExtensions         []string      `json:"cff_file_extensions"`
	DirectlyDeleteQuarantined int64         `json:"directly_delete_quarantined"`
	Exceptions                []interface{} `json:"exceptions"`
	KnownServers              []interface{} `json:"known_servers"`
	MaxMessageSize            int64         `json:"max_message_size"`
	Prefetching               struct {
		Interval           int64 `json:"interval"`
		OptimizeStorage    int64 `json:"optimize_storage"`
		Status             int64 `json:"status"`
		StorageMinHoldDays int64 `json:"storage_min_hold_days"`
	} `json:"prefetching"`
	QuarantineUnscannable int64         `json:"quarantine_unscannable"`
	SandboxMaxFilesizeMb  int64         `json:"sandbox_max_filesize_mb"`
	SandboxScanStatus     int64         `json:"sandbox_scan_status"`
	ScanTLS               int64         `json:"scan_tls"`
	SenderBlacklist       []interface{} `json:"sender_blacklist"`
	Spam                  string        `json:"spam"`
	SpamExpressions       []interface{} `json:"spam_expressions"`
	Spamplus              string        `json:"spamplus"`
	Spamstatus            int64         `json:"spamstatus"`
	Status                int64         `json:"status"`
	TLSCert               string        `json:"tls_cert"`
	TransparentSkip       []interface{} `json:"transparent_skip"`
	TransparentSkipAutoPf int64         `json:"transparent_skip_auto_pf"`
	UserCharset           string        `json:"user_charset"`
}

var defsPop3 = map[string]sophos.RestObject{
	"Pop3Account":   &Pop3Account{},
	"Pop3Exception": &Pop3Exception{},
	"Pop3Group":     &Pop3Group{},
	"Pop3Server":    &Pop3Server{},
}

// RestObjects implements the sophos.Node interface and returns a map of Pop3's Objects
func (Pop3) RestObjects() map[string]sophos.RestObject {
	return defsPop3
}

// GetPath implements sophos.RestGetter
func (*Pop3) GetPath() string { return "/api/nodes/pop3" }

// RefRequired implements sophos.RestGetter
func (*Pop3) RefRequired() (string, bool) { return "", false }

var defPop3 = &sophos.Definition{Description: "pop3", Name: "pop3", Link: "/api/definitions/pop3", Swag: map[string]sophos.MethodMap{"/objects/pop3/account/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available account types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pop3/account"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object account types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/account that will be changes", Type: "", Required: true}}, Tags: []string{"pop3/account"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object account", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/account that will be updated", Type: "", Required: true}}, Tags: []string{"pop3/account"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object account", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"pop3/account"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pop3/account/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pop3/account"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pop3/exception/": {"get": sophos.MethodDescriptions{Description: "Returns all available pop3/exception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"pop3/exception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new pop3/exception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/exception that will be created", Type: "", Required: true}}, Tags: []string{"pop3/exception"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/pop3/exception/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"pop3/exception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pop3/exception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/exception that will be changes", Type: "", Required: true}}, Tags: []string{"pop3/exception"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/exception that will be updated", Type: "", Required: true}}, Tags: []string{"pop3/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/pop3/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available pop3/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"pop3/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new pop3/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/group that will be created", Type: "", Required: true}}, Tags: []string{"pop3/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/pop3/server/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object server", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"pop3/server"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available server types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pop3/server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object server types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/server that will be changes", Type: "", Required: true}}, Tags: []string{"pop3/server"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object server", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/server that will be updated", Type: "", Required: true}}, Tags: []string{"pop3/server"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pop3/account/": {"post": sophos.MethodDescriptions{Description: "Create a new pop3/account object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/account that will be created", Type: "", Required: true}}, Tags: []string{"pop3/account"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available pop3/account objects", Parameters: []sophos.Parameter(nil), Tags: []string{"pop3/account"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/pop3/exception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pop3/exception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/pop3/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"pop3/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pop3/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/group that will be changes", Type: "", Required: true}}, Tags: []string{"pop3/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/group that will be updated", Type: "", Required: true}}, Tags: []string{"pop3/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/pop3/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pop3/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pop3/server/": {"get": sophos.MethodDescriptions{Description: "Returns all available pop3/server objects", Parameters: []sophos.Parameter(nil), Tags: []string{"pop3/server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new pop3/server object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "pop3/server that will be created", Type: "", Required: true}}, Tags: []string{"pop3/server"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/pop3/server/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"pop3/server"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}}}

// Definition returns the /api/definitions struct of Pop3
func (Pop3) Definition() sophos.Definition { return *defPop3 }

// ApiRoutes returns all known Pop3 Paths
func (Pop3) ApiRoutes() []string {
	return []string{
		"/api/objects/pop3/account/",
		"/api/objects/pop3/account/{ref}",
		"/api/objects/pop3/account/{ref}/usedby",
		"/api/objects/pop3/exception/",
		"/api/objects/pop3/exception/{ref}",
		"/api/objects/pop3/exception/{ref}/usedby",
		"/api/objects/pop3/group/",
		"/api/objects/pop3/group/{ref}",
		"/api/objects/pop3/group/{ref}/usedby",
		"/api/objects/pop3/server/",
		"/api/objects/pop3/server/{ref}",
		"/api/objects/pop3/server/{ref}/usedby",
	}
}

// References returns the Pop3's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Pop3) References() []string {
	return []string{
		"REF_Pop3Account",
		"REF_Pop3Exception",
		"REF_Pop3Group",
		"REF_Pop3Server",
	}
}

// Pop3Account is an Sophos Endpoint subType and implements sophos.RestObject
type Pop3Account []interface{}

// GetPath implements sophos.RestObject and returns the Pop3Account GET path
// Returns all available pop3/account objects
func (*Pop3Account) GetPath() string { return "/api/objects/pop3/account/" }

// RefRequired implements sophos.RestObject
func (*Pop3Account) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the Pop3Account DELETE path
// Creates or updates the complete object account
func (*Pop3Account) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/account/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the Pop3Account PATCH path
// Changes to parts of the object account types
func (*Pop3Account) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/account/%s", ref)
}

// PostPath implements sophos.RestObject and returns the Pop3Account POST path
// Create a new pop3/account object
func (*Pop3Account) PostPath() string {
	return "/api/objects/pop3/account/"
}

// PutPath implements sophos.RestObject and returns the Pop3Account PUT path
// Creates or updates the complete object account
func (*Pop3Account) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/account/%s", ref)
}

// Pop3Exception is an Sophos Endpoint subType and implements sophos.RestObject
type Pop3Exception []interface{}

// GetPath implements sophos.RestObject and returns the Pop3Exception GET path
// Returns all available pop3/exception objects
func (*Pop3Exception) GetPath() string { return "/api/objects/pop3/exception/" }

// RefRequired implements sophos.RestObject
func (*Pop3Exception) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the Pop3Exception DELETE path
// Creates or updates the complete object exception
func (*Pop3Exception) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/exception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the Pop3Exception PATCH path
// Changes to parts of the object exception types
func (*Pop3Exception) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/exception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the Pop3Exception POST path
// Create a new pop3/exception object
func (*Pop3Exception) PostPath() string {
	return "/api/objects/pop3/exception/"
}

// PutPath implements sophos.RestObject and returns the Pop3Exception PUT path
// Creates or updates the complete object exception
func (*Pop3Exception) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/exception/%s", ref)
}

// Pop3Group is an Sophos Endpoint subType and implements sophos.RestObject
type Pop3Group []interface{}

// GetPath implements sophos.RestObject and returns the Pop3Group GET path
// Returns all available pop3/group objects
func (*Pop3Group) GetPath() string { return "/api/objects/pop3/group/" }

// RefRequired implements sophos.RestObject
func (*Pop3Group) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the Pop3Group DELETE path
// Creates or updates the complete object group
func (*Pop3Group) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the Pop3Group PATCH path
// Changes to parts of the object group types
func (*Pop3Group) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the Pop3Group POST path
// Create a new pop3/group object
func (*Pop3Group) PostPath() string {
	return "/api/objects/pop3/group/"
}

// PutPath implements sophos.RestObject and returns the Pop3Group PUT path
// Creates or updates the complete object group
func (*Pop3Group) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/group/%s", ref)
}

// Pop3Server is an Sophos Endpoint subType and implements sophos.RestObject
type Pop3Server []interface{}

// GetPath implements sophos.RestObject and returns the Pop3Server GET path
// Returns all available pop3/server objects
func (*Pop3Server) GetPath() string { return "/api/objects/pop3/server/" }

// RefRequired implements sophos.RestObject
func (*Pop3Server) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the Pop3Server DELETE path
// Creates or updates the complete object server
func (*Pop3Server) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/server/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the Pop3Server PATCH path
// Changes to parts of the object server types
func (*Pop3Server) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/server/%s", ref)
}

// PostPath implements sophos.RestObject and returns the Pop3Server POST path
// Create a new pop3/server object
func (*Pop3Server) PostPath() string {
	return "/api/objects/pop3/server/"
}

// PutPath implements sophos.RestObject and returns the Pop3Server PUT path
// Creates or updates the complete object server
func (*Pop3Server) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/pop3/server/%s", ref)
}

// Qos is a generated struct representing the Sophos Qos Endpoint
// GET /api/nodes/qos
type Qos struct {
	Advanced struct {
		Ecn                 int64 `json:"ecn"`
		KeepClassAfterEncap int64 `json:"keep_class_after_encap"`
	} `json:"advanced"`
	Interfaces []string `json:"interfaces"`
}

var defsQos = map[string]sophos.RestObject{
	"QosApplicationSelector":  &QosApplicationSelector{},
	"QosGroup":                &QosGroup{},
	"QosRule":                 &QosRule{},
	"QosTrafficSelector":      &QosTrafficSelector{},
	"QosIngressRule":          &QosIngressRule{},
	"QosInterface":            &QosInterface{},
	"QosTrafficSelectorGroup": &QosTrafficSelectorGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Qos's Objects
func (Qos) RestObjects() map[string]sophos.RestObject {
	return defsQos
}

// GetPath implements sophos.RestGetter
func (*Qos) GetPath() string { return "/api/nodes/qos" }

// RefRequired implements sophos.RestGetter
func (*Qos) RefRequired() (string, bool) { return "", false }

var defQos = &sophos.Definition{Description: "qos", Name: "qos", Link: "/api/definitions/qos", Swag: map[string]sophos.MethodMap{"/objects/qos/application_selector/": {"get": sophos.MethodDescriptions{Description: "Returns all available qos/application_selector objects", Parameters: []sophos.Parameter(nil), Tags: []string{"qos/application_selector"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new qos/application_selector object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/application_selector that will be created", Type: "", Required: true}}, Tags: []string{"qos/application_selector"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/qos/application_selector/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/application_selector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/ingress_rule/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/ingress_rule"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/qos/interface/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/interface"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/rule/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"qos/rule"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/rule"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/rule that will be changes", Type: "", Required: true}}, Tags: []string{"qos/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/rule that will be updated", Type: "", Required: true}}, Tags: []string{"qos/rule"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/qos/traffic_selector_group/": {"get": sophos.MethodDescriptions{Description: "Returns all available qos/traffic_selector_group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"qos/traffic_selector_group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new qos/traffic_selector_group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/traffic_selector_group that will be created", Type: "", Required: true}}, Tags: []string{"qos/traffic_selector_group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/traffic_selector_group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/traffic_selector_group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/qos/group/": {"post": sophos.MethodDescriptions{Description: "Create a new qos/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/group that will be created", Type: "", Required: true}}, Tags: []string{"qos/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available qos/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"qos/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/ingress_rule/": {"get": sophos.MethodDescriptions{Description: "Returns all available qos/ingress_rule objects", Parameters: []sophos.Parameter(nil), Tags: []string{"qos/ingress_rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new qos/ingress_rule object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/ingress_rule that will be created", Type: "", Required: true}}, Tags: []string{"qos/ingress_rule"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/interface/": {"get": sophos.MethodDescriptions{Description: "Returns all available qos/interface objects", Parameters: []sophos.Parameter(nil), Tags: []string{"qos/interface"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new qos/interface object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/interface that will be created", Type: "", Required: true}}, Tags: []string{"qos/interface"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/interface/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available interface types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/interface"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object interface types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/interface that will be changes", Type: "", Required: true}}, Tags: []string{"qos/interface"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/interface that will be updated", Type: "", Required: true}}, Tags: []string{"qos/interface"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object interface", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"qos/interface"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/traffic_selector/": {"get": sophos.MethodDescriptions{Description: "Returns all available qos/traffic_selector objects", Parameters: []sophos.Parameter(nil), Tags: []string{"qos/traffic_selector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new qos/traffic_selector object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/traffic_selector that will be created", Type: "", Required: true}}, Tags: []string{"qos/traffic_selector"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/traffic_selector_group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object traffic_selector_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"qos/traffic_selector_group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available traffic_selector_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/traffic_selector_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object traffic_selector_group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/traffic_selector_group that will be changes", Type: "", Required: true}}, Tags: []string{"qos/traffic_selector_group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object traffic_selector_group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/traffic_selector_group that will be updated", Type: "", Required: true}}, Tags: []string{"qos/traffic_selector_group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/qos/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/ingress_rule/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ingress_rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"qos/ingress_rule"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ingress_rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/ingress_rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ingress_rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/ingress_rule that will be changes", Type: "", Required: true}}, Tags: []string{"qos/ingress_rule"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ingress_rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/ingress_rule that will be updated", Type: "", Required: true}}, Tags: []string{"qos/ingress_rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/qos/traffic_selector/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object traffic_selector", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/traffic_selector that will be updated", Type: "", Required: true}}, Tags: []string{"qos/traffic_selector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object traffic_selector", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"qos/traffic_selector"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available traffic_selector types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/traffic_selector"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object traffic_selector types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/traffic_selector that will be changes", Type: "", Required: true}}, Tags: []string{"qos/traffic_selector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/qos/application_selector/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object application_selector", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"qos/application_selector"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available application_selector types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/application_selector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object application_selector types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/application_selector that will be changes", Type: "", Required: true}}, Tags: []string{"qos/application_selector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object application_selector", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/application_selector that will be updated", Type: "", Required: true}}, Tags: []string{"qos/application_selector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/qos/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"qos/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/group that will be changes", Type: "", Required: true}}, Tags: []string{"qos/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/group that will be updated", Type: "", Required: true}}, Tags: []string{"qos/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/qos/rule/": {"get": sophos.MethodDescriptions{Description: "Returns all available qos/rule objects", Parameters: []sophos.Parameter(nil), Tags: []string{"qos/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new qos/rule object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "qos/rule that will be created", Type: "", Required: true}}, Tags: []string{"qos/rule"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/qos/rule/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/rule"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/qos/traffic_selector/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"qos/traffic_selector"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}}}

// Definition returns the /api/definitions struct of Qos
func (Qos) Definition() sophos.Definition { return *defQos }

// ApiRoutes returns all known Qos Paths
func (Qos) ApiRoutes() []string {
	return []string{
		"/api/objects/qos/application_selector/",
		"/api/objects/qos/application_selector/{ref}",
		"/api/objects/qos/application_selector/{ref}/usedby",
		"/api/objects/qos/group/",
		"/api/objects/qos/group/{ref}",
		"/api/objects/qos/group/{ref}/usedby",
		"/api/objects/qos/ingress_rule/",
		"/api/objects/qos/ingress_rule/{ref}",
		"/api/objects/qos/ingress_rule/{ref}/usedby",
		"/api/objects/qos/interface/",
		"/api/objects/qos/interface/{ref}",
		"/api/objects/qos/interface/{ref}/usedby",
		"/api/objects/qos/rule/",
		"/api/objects/qos/rule/{ref}",
		"/api/objects/qos/rule/{ref}/usedby",
		"/api/objects/qos/traffic_selector/",
		"/api/objects/qos/traffic_selector/{ref}",
		"/api/objects/qos/traffic_selector/{ref}/usedby",
		"/api/objects/qos/traffic_selector_group/",
		"/api/objects/qos/traffic_selector_group/{ref}",
		"/api/objects/qos/traffic_selector_group/{ref}/usedby",
	}
}

// References returns the Qos's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Qos) References() []string {
	return []string{
		"REF_QosApplicationSelector",
		"REF_QosGroup",
		"REF_QosIngressRule",
		"REF_QosInterface",
		"REF_QosRule",
		"REF_QosTrafficSelector",
		"REF_QosTrafficSelectorGroup",
	}
}

// QosApplicationSelector is an Sophos Endpoint subType and implements sophos.RestObject
type QosApplicationSelector []interface{}

// GetPath implements sophos.RestObject and returns the QosApplicationSelector GET path
// Returns all available qos/application_selector objects
func (*QosApplicationSelector) GetPath() string { return "/api/objects/qos/application_selector/" }

// RefRequired implements sophos.RestObject
func (*QosApplicationSelector) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the QosApplicationSelector DELETE path
// Creates or updates the complete object application_selector
func (*QosApplicationSelector) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/application_selector/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the QosApplicationSelector PATCH path
// Changes to parts of the object application_selector types
func (*QosApplicationSelector) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/application_selector/%s", ref)
}

// PostPath implements sophos.RestObject and returns the QosApplicationSelector POST path
// Create a new qos/application_selector object
func (*QosApplicationSelector) PostPath() string {
	return "/api/objects/qos/application_selector/"
}

// PutPath implements sophos.RestObject and returns the QosApplicationSelector PUT path
// Creates or updates the complete object application_selector
func (*QosApplicationSelector) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/application_selector/%s", ref)
}

// QosGroup is an Sophos Endpoint subType and implements sophos.RestObject
type QosGroup []interface{}

// GetPath implements sophos.RestObject and returns the QosGroup GET path
// Returns all available qos/group objects
func (*QosGroup) GetPath() string { return "/api/objects/qos/group/" }

// RefRequired implements sophos.RestObject
func (*QosGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the QosGroup DELETE path
// Creates or updates the complete object group
func (*QosGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the QosGroup PATCH path
// Changes to parts of the object group types
func (*QosGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the QosGroup POST path
// Create a new qos/group object
func (*QosGroup) PostPath() string {
	return "/api/objects/qos/group/"
}

// PutPath implements sophos.RestObject and returns the QosGroup PUT path
// Creates or updates the complete object group
func (*QosGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/group/%s", ref)
}

// QosRule is an Sophos Endpoint subType and implements sophos.RestObject
type QosRule []interface{}

// GetPath implements sophos.RestObject and returns the QosRule GET path
// Returns all available qos/rule objects
func (*QosRule) GetPath() string { return "/api/objects/qos/rule/" }

// RefRequired implements sophos.RestObject
func (*QosRule) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the QosRule DELETE path
// Creates or updates the complete object rule
func (*QosRule) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/rule/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the QosRule PATCH path
// Changes to parts of the object rule types
func (*QosRule) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/rule/%s", ref)
}

// PostPath implements sophos.RestObject and returns the QosRule POST path
// Create a new qos/rule object
func (*QosRule) PostPath() string {
	return "/api/objects/qos/rule/"
}

// PutPath implements sophos.RestObject and returns the QosRule PUT path
// Creates or updates the complete object rule
func (*QosRule) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/rule/%s", ref)
}

// QosTrafficSelector is an Sophos Endpoint subType and implements sophos.RestObject
type QosTrafficSelector []interface{}

// GetPath implements sophos.RestObject and returns the QosTrafficSelector GET path
// Returns all available qos/traffic_selector objects
func (*QosTrafficSelector) GetPath() string { return "/api/objects/qos/traffic_selector/" }

// RefRequired implements sophos.RestObject
func (*QosTrafficSelector) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the QosTrafficSelector DELETE path
// Creates or updates the complete object traffic_selector
func (*QosTrafficSelector) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/traffic_selector/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the QosTrafficSelector PATCH path
// Changes to parts of the object traffic_selector types
func (*QosTrafficSelector) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/traffic_selector/%s", ref)
}

// PostPath implements sophos.RestObject and returns the QosTrafficSelector POST path
// Create a new qos/traffic_selector object
func (*QosTrafficSelector) PostPath() string {
	return "/api/objects/qos/traffic_selector/"
}

// PutPath implements sophos.RestObject and returns the QosTrafficSelector PUT path
// Creates or updates the complete object traffic_selector
func (*QosTrafficSelector) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/traffic_selector/%s", ref)
}

// QosIngressRule is an Sophos Endpoint subType and implements sophos.RestObject
type QosIngressRule []interface{}

// GetPath implements sophos.RestObject and returns the QosIngressRule GET path
// Returns all available qos/ingress_rule objects
func (*QosIngressRule) GetPath() string { return "/api/objects/qos/ingress_rule/" }

// RefRequired implements sophos.RestObject
func (*QosIngressRule) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the QosIngressRule DELETE path
// Creates or updates the complete object ingress_rule
func (*QosIngressRule) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/ingress_rule/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the QosIngressRule PATCH path
// Changes to parts of the object ingress_rule types
func (*QosIngressRule) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/ingress_rule/%s", ref)
}

// PostPath implements sophos.RestObject and returns the QosIngressRule POST path
// Create a new qos/ingress_rule object
func (*QosIngressRule) PostPath() string {
	return "/api/objects/qos/ingress_rule/"
}

// PutPath implements sophos.RestObject and returns the QosIngressRule PUT path
// Creates or updates the complete object ingress_rule
func (*QosIngressRule) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/ingress_rule/%s", ref)
}

// QosInterface is an Sophos Endpoint subType and implements sophos.RestObject
type QosInterfaces []QosInterface
type QosInterface struct {
	Locked            string        `json:"_locked"`
	Reference         string        `json:"_ref"`
	_type             string        `json:"_type"`
	Comment           string        `json:"comment"`
	Downlink          int64         `json:"downlink"`
	DownlinkOptimizer bool          `json:"downlink_optimizer"`
	IngressRules      []interface{} `json:"ingress_rules"`
	Interface         string        `json:"interface"`
	Name              string        `json:"name"`
	Rules             []interface{} `json:"rules"`
	Status            bool          `json:"status"`
	Uplink            int64         `json:"uplink"`
	UplinkLimit       bool          `json:"uplink_limit"`
	UplinkOptimizer   bool          `json:"uplink_optimizer"`
}

// GetPath implements sophos.RestObject and returns the QosInterface GET path
// Returns all available qos/interface objects
func (*QosInterface) GetPath() string { return "/api/objects/qos/interface/" }

// RefRequired implements sophos.RestObject
func (*QosInterface) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the QosInterface DELETE path
// Creates or updates the complete object interface
func (*QosInterface) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/interface/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the QosInterface PATCH path
// Changes to parts of the object interface types
func (*QosInterface) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/interface/%s", ref)
}

// PostPath implements sophos.RestObject and returns the QosInterface POST path
// Create a new qos/interface object
func (*QosInterface) PostPath() string {
	return "/api/objects/qos/interface/"
}

// PutPath implements sophos.RestObject and returns the QosInterface PUT path
// Creates or updates the complete object interface
func (*QosInterface) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/interface/%s", ref)
}

// QosTrafficSelectorGroup is an Sophos Endpoint subType and implements sophos.RestObject
type QosTrafficSelectorGroup []interface{}

// GetPath implements sophos.RestObject and returns the QosTrafficSelectorGroup GET path
// Returns all available qos/traffic_selector_group objects
func (*QosTrafficSelectorGroup) GetPath() string { return "/api/objects/qos/traffic_selector_group/" }

// RefRequired implements sophos.RestObject
func (*QosTrafficSelectorGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the QosTrafficSelectorGroup DELETE path
// Creates or updates the complete object traffic_selector_group
func (*QosTrafficSelectorGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/traffic_selector_group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the QosTrafficSelectorGroup PATCH path
// Changes to parts of the object traffic_selector_group types
func (*QosTrafficSelectorGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/traffic_selector_group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the QosTrafficSelectorGroup POST path
// Create a new qos/traffic_selector_group object
func (*QosTrafficSelectorGroup) PostPath() string {
	return "/api/objects/qos/traffic_selector_group/"
}

// PutPath implements sophos.RestObject and returns the QosTrafficSelectorGroup PUT path
// Creates or updates the complete object traffic_selector_group
func (*QosTrafficSelectorGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/qos/traffic_selector_group/%s", ref)
}

// RemoteSyslog is a generated struct representing the Sophos RemoteSyslog Endpoint
// GET /api/nodes/remote_syslog
type RemoteSyslog struct {
	Buffer int64         `json:"buffer"`
	Logs   []interface{} `json:"logs"`
	Status int64         `json:"status"`
	Target []interface{} `json:"target"`
}

var defsRemoteSyslog = map[string]sophos.RestObject{
	"RemoteSyslogServer": &RemoteSyslogServer{},
	"RemoteSyslogGroup":  &RemoteSyslogGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of RemoteSyslog's Objects
func (RemoteSyslog) RestObjects() map[string]sophos.RestObject {
	return defsRemoteSyslog
}

// GetPath implements sophos.RestGetter
func (*RemoteSyslog) GetPath() string { return "/api/nodes/remote_syslog" }

// RefRequired implements sophos.RestGetter
func (*RemoteSyslog) RefRequired() (string, bool) { return "", false }

var defRemoteSyslog = &sophos.Definition{Description: "remote_syslog", Name: "remote_syslog", Link: "/api/definitions/remote_syslog", Swag: map[string]sophos.MethodMap{"/objects/remote_syslog/server/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object server", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"remote_syslog/server"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available server types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"remote_syslog/server"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object server types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "remote_syslog/server that will be changes", Type: "", Required: true}}, Tags: []string{"remote_syslog/server"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object server", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "remote_syslog/server that will be updated", Type: "", Required: true}}, Tags: []string{"remote_syslog/server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/remote_syslog/server/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"remote_syslog/server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/remote_syslog/group/": {"post": sophos.MethodDescriptions{Description: "Create a new remote_syslog/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "remote_syslog/group that will be created", Type: "", Required: true}}, Tags: []string{"remote_syslog/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available remote_syslog/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"remote_syslog/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/remote_syslog/group/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "remote_syslog/group that will be updated", Type: "", Required: true}}, Tags: []string{"remote_syslog/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"remote_syslog/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"remote_syslog/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "remote_syslog/group that will be changes", Type: "", Required: true}}, Tags: []string{"remote_syslog/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/remote_syslog/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"remote_syslog/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/remote_syslog/server/": {"get": sophos.MethodDescriptions{Description: "Returns all available remote_syslog/server objects", Parameters: []sophos.Parameter(nil), Tags: []string{"remote_syslog/server"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new remote_syslog/server object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "remote_syslog/server that will be created", Type: "", Required: true}}, Tags: []string{"remote_syslog/server"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}}}

// Definition returns the /api/definitions struct of RemoteSyslog
func (RemoteSyslog) Definition() sophos.Definition { return *defRemoteSyslog }

// ApiRoutes returns all known RemoteSyslog Paths
func (RemoteSyslog) ApiRoutes() []string {
	return []string{
		"/api/objects/remote_syslog/group/",
		"/api/objects/remote_syslog/group/{ref}",
		"/api/objects/remote_syslog/group/{ref}/usedby",
		"/api/objects/remote_syslog/server/",
		"/api/objects/remote_syslog/server/{ref}",
		"/api/objects/remote_syslog/server/{ref}/usedby",
	}
}

// References returns the RemoteSyslog's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (RemoteSyslog) References() []string {
	return []string{
		"REF_RemoteSyslogGroup",
		"REF_RemoteSyslogServer",
	}
}

// RemoteSyslogServer is an Sophos Endpoint subType and implements sophos.RestObject
type RemoteSyslogServer []interface{}

// GetPath implements sophos.RestObject and returns the RemoteSyslogServer GET path
// Returns all available remote_syslog/server objects
func (*RemoteSyslogServer) GetPath() string { return "/api/objects/remote_syslog/server/" }

// RefRequired implements sophos.RestObject
func (*RemoteSyslogServer) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the RemoteSyslogServer DELETE path
// Creates or updates the complete object server
func (*RemoteSyslogServer) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/remote_syslog/server/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the RemoteSyslogServer PATCH path
// Changes to parts of the object server types
func (*RemoteSyslogServer) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/remote_syslog/server/%s", ref)
}

// PostPath implements sophos.RestObject and returns the RemoteSyslogServer POST path
// Create a new remote_syslog/server object
func (*RemoteSyslogServer) PostPath() string {
	return "/api/objects/remote_syslog/server/"
}

// PutPath implements sophos.RestObject and returns the RemoteSyslogServer PUT path
// Creates or updates the complete object server
func (*RemoteSyslogServer) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/remote_syslog/server/%s", ref)
}

// RemoteSyslogGroup is an Sophos Endpoint subType and implements sophos.RestObject
type RemoteSyslogGroup []interface{}

// GetPath implements sophos.RestObject and returns the RemoteSyslogGroup GET path
// Returns all available remote_syslog/group objects
func (*RemoteSyslogGroup) GetPath() string { return "/api/objects/remote_syslog/group/" }

// RefRequired implements sophos.RestObject
func (*RemoteSyslogGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the RemoteSyslogGroup DELETE path
// Creates or updates the complete object group
func (*RemoteSyslogGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/remote_syslog/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the RemoteSyslogGroup PATCH path
// Changes to parts of the object group types
func (*RemoteSyslogGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/remote_syslog/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the RemoteSyslogGroup POST path
// Create a new remote_syslog/group object
func (*RemoteSyslogGroup) PostPath() string {
	return "/api/objects/remote_syslog/group/"
}

// PutPath implements sophos.RestObject and returns the RemoteSyslogGroup PUT path
// Creates or updates the complete object group
func (*RemoteSyslogGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/remote_syslog/group/%s", ref)
}

// Reporting is a generated struct representing the Sophos Reporting Endpoint
// GET /api/nodes/reporting
type Reporting struct {
	AccountingKeepdays     int64         `json:"accounting_keepdays"`
	AccountingStatus       int64         `json:"accounting_status"`
	Anonymizing            int64         `json:"anonymizing"`
	AppctrlKeepdays        int64         `json:"appctrl_keepdays"`
	AppctrlStatus          int64         `json:"appctrl_status"`
	AtpKeepdays            int64         `json:"atp_keepdays"`
	AtpReset               int64         `json:"atp_reset"`
	AtpStatus              int64         `json:"atp_status"`
	AuthenticationKeepdays int64         `json:"authentication_keepdays"`
	AuthenticationStatus   int64         `json:"authentication_status"`
	CsvSeparator           string        `json:"csv_separator"`
	EmailsecurityImport    []interface{} `json:"emailsecurity_import"`
	EmailsecurityKeepdays  int64         `json:"emailsecurity_keepdays"`
	EmailsecurityStatus    int64         `json:"emailsecurity_status"`
	EnableVpnAccounting    int64         `json:"enable_vpn_accounting"`
	HideAccountingips      []interface{} `json:"hide_accountingips"`
	HideMailaddresses      []interface{} `json:"hide_mailaddresses"`
	HideMaildomains        []interface{} `json:"hide_maildomains"`
	HideNetsecips          []interface{} `json:"hide_netsecips"`
	HideWebdomains         []interface{} `json:"hide_webdomains"`
	IpsImport              []interface{} `json:"ips_import"`
	IpsKeepdays            int64         `json:"ips_keepdays"`
	IpsStatus              int64         `json:"ips_status"`
	PacketfilterImport     []interface{} `json:"packetfilter_import"`
	PacketfilterKeepdays   int64         `json:"packetfilter_keepdays"`
	PacketfilterStatus     int64         `json:"packetfilter_status"`
	Password1              string        `json:"password1"`
	Password2              string        `json:"password2"`
	SandboxKeepdays        int64         `json:"sandbox_keepdays"`
	UserlogFromLogs        int64         `json:"userlog_from_logs"`
	VpnKeepdays            int64         `json:"vpn_keepdays"`
	VpnStatus              int64         `json:"vpn_status"`
	WafKeepdays            int64         `json:"waf_keepdays"`
	WafStatus              int64         `json:"waf_status"`
	WebsecurityDetail      int64         `json:"websecurity_detail"`
	WebsecurityImport      []interface{} `json:"websecurity_import"`
	WebsecurityKeepdays    int64         `json:"websecurity_keepdays"`
	WebsecurityStatus      int64         `json:"websecurity_status"`
}

var defsReporting = map[string]sophos.RestObject{
	"ReportingGroup":      &ReportingGroup{},
	"ReportingMail":       &ReportingMail{},
	"ReportingDepartment": &ReportingDepartment{},
	"ReportingFilter":     &ReportingFilter{},
}

// RestObjects implements the sophos.Node interface and returns a map of Reporting's Objects
func (Reporting) RestObjects() map[string]sophos.RestObject {
	return defsReporting
}

// GetPath implements sophos.RestGetter
func (*Reporting) GetPath() string { return "/api/nodes/reporting" }

// RefRequired implements sophos.RestGetter
func (*Reporting) RefRequired() (string, bool) { return "", false }

var defReporting = &sophos.Definition{Description: "reporting", Name: "reporting", Link: "/api/definitions/reporting", Swag: map[string]sophos.MethodMap{"/objects/reporting/filter/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object filter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/filter that will be changes", Type: "", Required: true}}, Tags: []string{"reporting/filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object filter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/filter that will be updated", Type: "", Required: true}}, Tags: []string{"reporting/filter"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object filter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reporting/filter"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available filter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reporting/filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reporting/filter/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reporting/filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reporting/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reporting/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reporting/mail/": {"get": sophos.MethodDescriptions{Description: "Returns all available reporting/mail objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reporting/mail"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reporting/mail object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/mail that will be created", Type: "", Required: true}}, Tags: []string{"reporting/mail"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/reporting/mail/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reporting/mail"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reporting/department/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object department", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reporting/department"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available department types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reporting/department"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object department types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/department that will be changes", Type: "", Required: true}}, Tags: []string{"reporting/department"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object department", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/department that will be updated", Type: "", Required: true}}, Tags: []string{"reporting/department"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reporting/department/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reporting/department"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reporting/filter/": {"post": sophos.MethodDescriptions{Description: "Create a new reporting/filter object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/filter that will be created", Type: "", Required: true}}, Tags: []string{"reporting/filter"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available reporting/filter objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reporting/filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reporting/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available reporting/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reporting/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reporting/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/group that will be created", Type: "", Required: true}}, Tags: []string{"reporting/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/reporting/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reporting/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reporting/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/group that will be changes", Type: "", Required: true}}, Tags: []string{"reporting/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/group that will be updated", Type: "", Required: true}}, Tags: []string{"reporting/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reporting/mail/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object mail", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reporting/mail"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available mail types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reporting/mail"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object mail types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/mail that will be changes", Type: "", Required: true}}, Tags: []string{"reporting/mail"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object mail", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/mail that will be updated", Type: "", Required: true}}, Tags: []string{"reporting/mail"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reporting/department/": {"get": sophos.MethodDescriptions{Description: "Returns all available reporting/department objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reporting/department"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reporting/department object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reporting/department that will be created", Type: "", Required: true}}, Tags: []string{"reporting/department"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Reporting
func (Reporting) Definition() sophos.Definition { return *defReporting }

// ApiRoutes returns all known Reporting Paths
func (Reporting) ApiRoutes() []string {
	return []string{
		"/api/objects/reporting/department/",
		"/api/objects/reporting/department/{ref}",
		"/api/objects/reporting/department/{ref}/usedby",
		"/api/objects/reporting/filter/",
		"/api/objects/reporting/filter/{ref}",
		"/api/objects/reporting/filter/{ref}/usedby",
		"/api/objects/reporting/group/",
		"/api/objects/reporting/group/{ref}",
		"/api/objects/reporting/group/{ref}/usedby",
		"/api/objects/reporting/mail/",
		"/api/objects/reporting/mail/{ref}",
		"/api/objects/reporting/mail/{ref}/usedby",
	}
}

// References returns the Reporting's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Reporting) References() []string {
	return []string{
		"REF_ReportingDepartment",
		"REF_ReportingFilter",
		"REF_ReportingGroup",
		"REF_ReportingMail",
	}
}

// ReportingGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ReportingGroup []interface{}

// GetPath implements sophos.RestObject and returns the ReportingGroup GET path
// Returns all available reporting/group objects
func (*ReportingGroup) GetPath() string { return "/api/objects/reporting/group/" }

// RefRequired implements sophos.RestObject
func (*ReportingGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReportingGroup DELETE path
// Creates or updates the complete object group
func (*ReportingGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReportingGroup PATCH path
// Changes to parts of the object group types
func (*ReportingGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReportingGroup POST path
// Create a new reporting/group object
func (*ReportingGroup) PostPath() string {
	return "/api/objects/reporting/group/"
}

// PutPath implements sophos.RestObject and returns the ReportingGroup PUT path
// Creates or updates the complete object group
func (*ReportingGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/group/%s", ref)
}

// ReportingMail is an Sophos Endpoint subType and implements sophos.RestObject
type ReportingMail []interface{}

// GetPath implements sophos.RestObject and returns the ReportingMail GET path
// Returns all available reporting/mail objects
func (*ReportingMail) GetPath() string { return "/api/objects/reporting/mail/" }

// RefRequired implements sophos.RestObject
func (*ReportingMail) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReportingMail DELETE path
// Creates or updates the complete object mail
func (*ReportingMail) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/mail/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReportingMail PATCH path
// Changes to parts of the object mail types
func (*ReportingMail) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/mail/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReportingMail POST path
// Create a new reporting/mail object
func (*ReportingMail) PostPath() string {
	return "/api/objects/reporting/mail/"
}

// PutPath implements sophos.RestObject and returns the ReportingMail PUT path
// Creates or updates the complete object mail
func (*ReportingMail) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/mail/%s", ref)
}

// ReportingDepartment is an Sophos Endpoint subType and implements sophos.RestObject
type ReportingDepartment []interface{}

// GetPath implements sophos.RestObject and returns the ReportingDepartment GET path
// Returns all available reporting/department objects
func (*ReportingDepartment) GetPath() string { return "/api/objects/reporting/department/" }

// RefRequired implements sophos.RestObject
func (*ReportingDepartment) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReportingDepartment DELETE path
// Creates or updates the complete object department
func (*ReportingDepartment) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/department/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReportingDepartment PATCH path
// Changes to parts of the object department types
func (*ReportingDepartment) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/department/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReportingDepartment POST path
// Create a new reporting/department object
func (*ReportingDepartment) PostPath() string {
	return "/api/objects/reporting/department/"
}

// PutPath implements sophos.RestObject and returns the ReportingDepartment PUT path
// Creates or updates the complete object department
func (*ReportingDepartment) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/department/%s", ref)
}

// ReportingFilter is an Sophos Endpoint subType and implements sophos.RestObject
type ReportingFilters []ReportingFilter
type ReportingFilter struct {
	Locked     string `json:"_locked"`
	Reference  string `json:"_ref"`
	_type      string `json:"_type"`
	Callname   string `json:"callname"`
	Comment    string `json:"comment"`
	Department string `json:"department"`
	Filter     struct {
		Action string `json:"action"`
		Info   string `json:"info"`
	} `json:"filter"`
	Name      string `json:"name"`
	SortBy    string `json:"sort_by"`
	SortDir   string `json:"sort_dir"`
	Subsystem string `json:"subsystem"`
	Timeframe string `json:"timeframe"`
	Top       int64  `json:"top"`
}

// GetPath implements sophos.RestObject and returns the ReportingFilters GET path
// Returns all available reporting/filter objects
func (*ReportingFilters) GetPath() string { return "/api/objects/reporting/filter/" }

// RefRequired implements sophos.RestObject
func (*ReportingFilters) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ReportingFilters GET path
// Returns all available filter types
func (r *ReportingFilter) GetPath() string {
	return fmt.Sprintf("/api/objects/reporting/filter/%s", r.Reference)
}

// RefRequired implements sophos.RestObject
func (r *ReportingFilter) RefRequired() (string, bool) { return r.Reference, true }

// DeletePath implements sophos.RestObject and returns the ReportingFilter DELETE path
// Creates or updates the complete object filter
func (*ReportingFilter) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/filter/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReportingFilter PATCH path
// Changes to parts of the object filter types
func (*ReportingFilter) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/filter/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReportingFilter POST path
// Create a new reporting/filter object
func (*ReportingFilter) PostPath() string {
	return "/api/objects/reporting/filter/"
}

// PutPath implements sophos.RestObject and returns the ReportingFilter PUT path
// Creates or updates the complete object filter
func (*ReportingFilter) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reporting/filter/%s", ref)
}

// Type implements sophos.Object
func (r *ReportingFilter) GetType() string { return r._type }

// ReverseProxy is a generated struct representing the Sophos ReverseProxy Endpoint
// GET /api/nodes/reverse_proxy
type ReverseProxy struct {
	AuaRefreshEnabled  int64 `json:"aua_refresh_enabled"`
	AuaRefreshInterval int64 `json:"aua_refresh_interval"`
	Blacklist          struct {
		DnsrblZones []string `json:"dnsrbl_zones"`
		GeoipCodes  []string `json:"geoip_codes"`
	} `json:"blacklist"`
	Cookiesignkey                       string        `json:"cookiesignkey"`
	CssdHostname                        string        `json:"cssd_hostname"`
	CssdPort                            int64         `json:"cssd_port"`
	CustomThreatFiltersEnabled          int64         `json:"custom_threat_filters_enabled"`
	FormhardeningSecret                 string        `json:"formhardening_secret"`
	Keepalive                           int64         `json:"keepalive"`
	Manualmode                          int64         `json:"manualmode"`
	MaxConnectionsPerChild              int64         `json:"max_connections_per_child"`
	MaxPreforkProcesses                 int64         `json:"max_prefork_processes"`
	MaxProcesses                        int64         `json:"max_processes"`
	MaxSessionFiles                     int64         `json:"max_session_files"`
	MaxSpareProcesses                   int64         `json:"max_spare_processes"`
	MaxSpareThreads                     int64         `json:"max_spare_threads"`
	MaxThreadsPerProcess                int64         `json:"max_threads_per_process"`
	MinSpareProcesses                   int64         `json:"min_spare_processes"`
	MinSpareThreads                     int64         `json:"min_spare_threads"`
	MinTLS                              string        `json:"min_tls"`
	ModsecurityBeta                     int64         `json:"modsecurity_beta"`
	MpmMode                             string        `json:"mpm_mode"`
	Patternversion                      string        `json:"patternversion"`
	Port                                int64         `json:"port"`
	Proxyprotocol                       int64         `json:"proxyprotocol"`
	RequestLineLimit                    int64         `json:"request_line_limit"`
	SlowhttpExceptions                  []interface{} `json:"slowhttp_exceptions"`
	SlowhttpRequestHeaderTimeoutBase    int64         `json:"slowhttp_request_header_timeout_base"`
	SlowhttpRequestHeaderTimeoutEnabled int64         `json:"slowhttp_request_header_timeout_enabled"`
	SlowhttpRequestHeaderTimeoutMax     int64         `json:"slowhttp_request_header_timeout_max"`
	SlowhttpRequestHeaderTimeoutRate    int64         `json:"slowhttp_request_header_timeout_rate"`
	Status                              int64         `json:"status"`
	TraceEnabled                        int64         `json:"trace_enabled"`
	Urlhardeningsignkey                 string        `json:"urlhardeningsignkey"`
	Whatkilledus                        int64         `json:"whatkilledus"`
}

var defsReverseProxy = map[string]sophos.RestObject{
	"ReverseProxyAuthProfile":   &ReverseProxyAuthProfile{},
	"ReverseProxyFilter":        &ReverseProxyFilter{},
	"ReverseProxyFormTemplate":  &ReverseProxyFormTemplate{},
	"ReverseProxyRedirection":   &ReverseProxyRedirection{},
	"ReverseProxyBackend":       &ReverseProxyBackend{},
	"ReverseProxyException":     &ReverseProxyException{},
	"ReverseProxyLocation":      &ReverseProxyLocation{},
	"ReverseProxyThreatsFilter": &ReverseProxyThreatsFilter{},
	"ReverseProxyFrontend":      &ReverseProxyFrontend{},
	"ReverseProxyGroup":         &ReverseProxyGroup{},
	"ReverseProxyProfile":       &ReverseProxyProfile{},
}

// RestObjects implements the sophos.Node interface and returns a map of ReverseProxy's Objects
func (ReverseProxy) RestObjects() map[string]sophos.RestObject {
	return defsReverseProxy
}

// GetPath implements sophos.RestGetter
func (*ReverseProxy) GetPath() string { return "/api/nodes/reverse_proxy" }

// RefRequired implements sophos.RestGetter
func (*ReverseProxy) RefRequired() (string, bool) { return "", false }

var defReverseProxy = &sophos.Definition{Description: "reverse_proxy", Name: "reverse_proxy", Link: "/api/definitions/reverse_proxy", Swag: map[string]sophos.MethodMap{"/objects/reverse_proxy/location/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/location"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/backend/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/backend objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/backend"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/backend object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/backend that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/backend"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/exception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/filter/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/backend/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object backend", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/backend"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available backend types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/backend"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object backend types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/backend that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/backend"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object backend", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/backend that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/backend"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/location/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/location objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/location"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/location object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/location that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/location"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/threats_filter/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object threats_filter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/threats_filter that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/threats_filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object threats_filter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/threats_filter"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available threats_filter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/threats_filter"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object threats_filter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/threats_filter that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/threats_filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reverse_proxy/form_template/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object form_template", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/form_template"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available form_template types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/form_template"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object form_template types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/form_template that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/form_template"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object form_template", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/form_template that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/form_template"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/reverse_proxy/form_template/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/form_template"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/frontend/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/frontend"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/reverse_proxy/group/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/group that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/group that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reverse_proxy/threats_filter/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/threats_filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/auth_profile/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/auth_profile objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/auth_profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/auth_profile object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/auth_profile that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/auth_profile"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/auth_profile/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/auth_profile"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/reverse_proxy/backend/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/backend"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/location/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object location", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/location"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available location types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/location"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object location types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/location that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/location"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object location", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/location that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/location"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reverse_proxy/profile/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/profile that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/profile"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/profile that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/profile"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reverse_proxy/frontend/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/frontend objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/frontend"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/frontend object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/frontend that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/frontend"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/reverse_proxy/frontend/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object frontend", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/frontend"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available frontend types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/frontend"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object frontend types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/frontend that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/frontend"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object frontend", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/frontend that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/frontend"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reverse_proxy/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/group that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/profile/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/profile"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/reverse_proxy/redirection/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/redirection objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/redirection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/redirection object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/redirection that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/redirection"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/threats_filter/": {"post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/threats_filter object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/threats_filter that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/threats_filter"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/threats_filter objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/threats_filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/exception/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/exception that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/exception"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/exception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/exception"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/exception that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/exception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/reverse_proxy/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/profile/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/profile objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/profile object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/profile that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/profile"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/exception/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/exception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/exception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/exception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/exception that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/exception"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/reverse_proxy/filter/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object filter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/filter"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available filter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/filter"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object filter types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/filter that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/filter"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object filter", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/filter that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/filter"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reverse_proxy/redirection/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object redirection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/redirection that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/redirection"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object redirection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/redirection that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/redirection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object redirection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/redirection"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available redirection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/redirection"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/redirection/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/redirection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/auth_profile/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object auth_profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/auth_profile that will be updated", Type: "", Required: true}}, Tags: []string{"reverse_proxy/auth_profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object auth_profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"reverse_proxy/auth_profile"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available auth_profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"reverse_proxy/auth_profile"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object auth_profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/auth_profile that will be changes", Type: "", Required: true}}, Tags: []string{"reverse_proxy/auth_profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/reverse_proxy/filter/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/filter objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/filter"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/filter object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/filter that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/filter"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/reverse_proxy/form_template/": {"get": sophos.MethodDescriptions{Description: "Returns all available reverse_proxy/form_template objects", Parameters: []sophos.Parameter(nil), Tags: []string{"reverse_proxy/form_template"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new reverse_proxy/form_template object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "reverse_proxy/form_template that will be created", Type: "", Required: true}}, Tags: []string{"reverse_proxy/form_template"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of ReverseProxy
func (ReverseProxy) Definition() sophos.Definition { return *defReverseProxy }

// ApiRoutes returns all known ReverseProxy Paths
func (ReverseProxy) ApiRoutes() []string {
	return []string{
		"/api/objects/reverse_proxy/auth_profile/",
		"/api/objects/reverse_proxy/auth_profile/{ref}",
		"/api/objects/reverse_proxy/auth_profile/{ref}/usedby",
		"/api/objects/reverse_proxy/backend/",
		"/api/objects/reverse_proxy/backend/{ref}",
		"/api/objects/reverse_proxy/backend/{ref}/usedby",
		"/api/objects/reverse_proxy/exception/",
		"/api/objects/reverse_proxy/exception/{ref}",
		"/api/objects/reverse_proxy/exception/{ref}/usedby",
		"/api/objects/reverse_proxy/filter/",
		"/api/objects/reverse_proxy/filter/{ref}",
		"/api/objects/reverse_proxy/filter/{ref}/usedby",
		"/api/objects/reverse_proxy/form_template/",
		"/api/objects/reverse_proxy/form_template/{ref}",
		"/api/objects/reverse_proxy/form_template/{ref}/usedby",
		"/api/objects/reverse_proxy/frontend/",
		"/api/objects/reverse_proxy/frontend/{ref}",
		"/api/objects/reverse_proxy/frontend/{ref}/usedby",
		"/api/objects/reverse_proxy/group/",
		"/api/objects/reverse_proxy/group/{ref}",
		"/api/objects/reverse_proxy/group/{ref}/usedby",
		"/api/objects/reverse_proxy/location/",
		"/api/objects/reverse_proxy/location/{ref}",
		"/api/objects/reverse_proxy/location/{ref}/usedby",
		"/api/objects/reverse_proxy/profile/",
		"/api/objects/reverse_proxy/profile/{ref}",
		"/api/objects/reverse_proxy/profile/{ref}/usedby",
		"/api/objects/reverse_proxy/redirection/",
		"/api/objects/reverse_proxy/redirection/{ref}",
		"/api/objects/reverse_proxy/redirection/{ref}/usedby",
		"/api/objects/reverse_proxy/threats_filter/",
		"/api/objects/reverse_proxy/threats_filter/{ref}",
		"/api/objects/reverse_proxy/threats_filter/{ref}/usedby",
	}
}

// References returns the ReverseProxy's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (ReverseProxy) References() []string {
	return []string{
		"REF_ReverseProxyAuthProfile",
		"REF_ReverseProxyBackend",
		"REF_ReverseProxyException",
		"REF_ReverseProxyFilter",
		"REF_ReverseProxyFormTemplate",
		"REF_ReverseProxyFrontend",
		"REF_ReverseProxyGroup",
		"REF_ReverseProxyLocation",
		"REF_ReverseProxyProfile",
		"REF_ReverseProxyRedirection",
		"REF_ReverseProxyThreatsFilter",
	}
}

// ReverseProxyAuthProfile is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyAuthProfiles []ReverseProxyAuthProfile
type ReverseProxyAuthProfile struct {
	Locked                          string        `json:"_locked"`
	Reference                       string        `json:"_ref"`
	_type                           string        `json:"_type"`
	Aaa                             []string      `json:"aaa"`
	BackendMode                     string        `json:"backend_mode"`
	BackendStripBasicAuth           bool          `json:"backend_strip_basic_auth"`
	BackendUserPrefix               string        `json:"backend_user_prefix"`
	BackendUserSuffix               string        `json:"backend_user_suffix"`
	BasicPrompt                     string        `json:"basic_prompt"`
	Comment                         string        `json:"comment"`
	FrontendCookie                  string        `json:"frontend_cookie"`
	FrontendCookieSecret            string        `json:"frontend_cookie_secret"`
	FrontendForm                    string        `json:"frontend_form"`
	FrontendFormTemplate            string        `json:"frontend_form_template"`
	FrontendLogin                   string        `json:"frontend_login"`
	FrontendLogout                  string        `json:"frontend_logout"`
	FrontendMode                    string        `json:"frontend_mode"`
	FrontendRealm                   string        `json:"frontend_realm"`
	FrontendSessionAllowPersistency bool          `json:"frontend_session_allow_persistency"`
	FrontendSessionLifetime         int64         `json:"frontend_session_lifetime"`
	FrontendSessionLifetimeLimited  bool          `json:"frontend_session_lifetime_limited"`
	FrontendSessionLifetimeScope    string        `json:"frontend_session_lifetime_scope"`
	FrontendSessionTimeout          int64         `json:"frontend_session_timeout"`
	FrontendSessionTimeoutEnabled   bool          `json:"frontend_session_timeout_enabled"`
	FrontendSessionTimeoutScope     string        `json:"frontend_session_timeout_scope"`
	LogoutDelegationUrls            []interface{} `json:"logout_delegation_urls"`
	LogoutMode                      string        `json:"logout_mode"`
	Name                            string        `json:"name"`
	RedirectToRequestedURL          bool          `json:"redirect_to_requested_url"`
}

// GetPath implements sophos.RestObject and returns the ReverseProxyAuthProfile GET path
// Returns all available reverse_proxy/auth_profile objects
func (*ReverseProxyAuthProfile) GetPath() string { return "/api/objects/reverse_proxy/auth_profile/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyAuthProfile) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReverseProxyAuthProfile DELETE path
// Creates or updates the complete object auth_profile
func (*ReverseProxyAuthProfile) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/auth_profile/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyAuthProfile PATCH path
// Changes to parts of the object auth_profile types
func (*ReverseProxyAuthProfile) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/auth_profile/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyAuthProfile POST path
// Create a new reverse_proxy/auth_profile object
func (*ReverseProxyAuthProfile) PostPath() string {
	return "/api/objects/reverse_proxy/auth_profile/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyAuthProfile PUT path
// Creates or updates the complete object auth_profile
func (*ReverseProxyAuthProfile) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/auth_profile/%s", ref)
}

// ReverseProxyFilter is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyFilter []interface{}

// GetPath implements sophos.RestObject and returns the ReverseProxyFilter GET path
// Returns all available reverse_proxy/filter objects
func (*ReverseProxyFilter) GetPath() string { return "/api/objects/reverse_proxy/filter/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyFilter) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReverseProxyFilter DELETE path
// Creates or updates the complete object filter
func (*ReverseProxyFilter) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/filter/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyFilter PATCH path
// Changes to parts of the object filter types
func (*ReverseProxyFilter) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/filter/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyFilter POST path
// Create a new reverse_proxy/filter object
func (*ReverseProxyFilter) PostPath() string {
	return "/api/objects/reverse_proxy/filter/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyFilter PUT path
// Creates or updates the complete object filter
func (*ReverseProxyFilter) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/filter/%s", ref)
}

// ReverseProxyFormTemplate is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyFormTemplates []ReverseProxyFormTemplate
type ReverseProxyFormTemplate struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Assets    struct {
		DefaultStylesheet_css string `json:"default_stylesheet.css"`
	} `json:"assets"`
	Comment  string `json:"comment"`
	Filename string `json:"filename"`
	Name     string `json:"name"`
	Template string `json:"template"`
}

// GetPath implements sophos.RestObject and returns the ReverseProxyFormTemplates GET path
// Returns all available reverse_proxy/form_template objects
func (*ReverseProxyFormTemplates) GetPath() string { return "/api/objects/reverse_proxy/form_template/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyFormTemplates) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ReverseProxyFormTemplates GET path
// Returns all available form_template types
func (r *ReverseProxyFormTemplate) GetPath() string {
	return fmt.Sprintf("/api/objects/reverse_proxy/form_template/%s", r.Reference)
}

// RefRequired implements sophos.RestObject
func (r *ReverseProxyFormTemplate) RefRequired() (string, bool) { return r.Reference, true }

// DeletePath implements sophos.RestObject and returns the ReverseProxyFormTemplate DELETE path
// Creates or updates the complete object form_template
func (*ReverseProxyFormTemplate) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/form_template/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyFormTemplate PATCH path
// Changes to parts of the object form_template types
func (*ReverseProxyFormTemplate) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/form_template/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyFormTemplate POST path
// Create a new reverse_proxy/form_template object
func (*ReverseProxyFormTemplate) PostPath() string {
	return "/api/objects/reverse_proxy/form_template/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyFormTemplate PUT path
// Creates or updates the complete object form_template
func (*ReverseProxyFormTemplate) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/form_template/%s", ref)
}

// Type implements sophos.Object
func (r *ReverseProxyFormTemplate) GetType() string { return r._type }

// ReverseProxyRedirection is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyRedirection []interface{}

// GetPath implements sophos.RestObject and returns the ReverseProxyRedirection GET path
// Returns all available reverse_proxy/redirection objects
func (*ReverseProxyRedirection) GetPath() string { return "/api/objects/reverse_proxy/redirection/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyRedirection) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReverseProxyRedirection DELETE path
// Creates or updates the complete object redirection
func (*ReverseProxyRedirection) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/redirection/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyRedirection PATCH path
// Changes to parts of the object redirection types
func (*ReverseProxyRedirection) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/redirection/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyRedirection POST path
// Create a new reverse_proxy/redirection object
func (*ReverseProxyRedirection) PostPath() string {
	return "/api/objects/reverse_proxy/redirection/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyRedirection PUT path
// Creates or updates the complete object redirection
func (*ReverseProxyRedirection) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/redirection/%s", ref)
}

// ReverseProxyBackend is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyBackends []ReverseProxyBackend
type ReverseProxyBackend struct {
	Locked                          string `json:"_locked"`
	Reference                       string `json:"_ref"`
	_type                           string `json:"_type"`
	Comment                         string `json:"comment"`
	DisableBackendConnectionPooling bool   `json:"disable_backend_connection_pooling"`
	Host                            string `json:"host"`
	Keepalive                       bool   `json:"keepalive"`
	Name                            string `json:"name"`
	Path                            string `json:"path"`
	Port                            int64  `json:"port"`
	Ssl                             bool   `json:"ssl"`
	Status                          bool   `json:"status"`
	Timeout                         int64  `json:"timeout"`
}

// GetPath implements sophos.RestObject and returns the ReverseProxyBackends GET path
// Returns all available reverse_proxy/backend objects
func (*ReverseProxyBackends) GetPath() string { return "/api/objects/reverse_proxy/backend/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyBackends) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ReverseProxyBackends GET path
// Returns all available backend types
func (r *ReverseProxyBackend) GetPath() string {
	return fmt.Sprintf("/api/objects/reverse_proxy/backend/%s", r.Reference)
}

// RefRequired implements sophos.RestObject
func (r *ReverseProxyBackend) RefRequired() (string, bool) { return r.Reference, true }

// DeletePath implements sophos.RestObject and returns the ReverseProxyBackend DELETE path
// Creates or updates the complete object backend
func (*ReverseProxyBackend) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/backend/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyBackend PATCH path
// Changes to parts of the object backend types
func (*ReverseProxyBackend) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/backend/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyBackend POST path
// Create a new reverse_proxy/backend object
func (*ReverseProxyBackend) PostPath() string {
	return "/api/objects/reverse_proxy/backend/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyBackend PUT path
// Creates or updates the complete object backend
func (*ReverseProxyBackend) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/backend/%s", ref)
}

// Type implements sophos.Object
func (r *ReverseProxyBackend) GetType() string { return r._type }

// ReverseProxyException is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyException []interface{}

// GetPath implements sophos.RestObject and returns the ReverseProxyException GET path
// Returns all available reverse_proxy/exception objects
func (*ReverseProxyException) GetPath() string { return "/api/objects/reverse_proxy/exception/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyException) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReverseProxyException DELETE path
// Creates or updates the complete object exception
func (*ReverseProxyException) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/exception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyException PATCH path
// Changes to parts of the object exception types
func (*ReverseProxyException) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/exception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyException POST path
// Create a new reverse_proxy/exception object
func (*ReverseProxyException) PostPath() string {
	return "/api/objects/reverse_proxy/exception/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyException PUT path
// Creates or updates the complete object exception
func (*ReverseProxyException) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/exception/%s", ref)
}

// ReverseProxyLocation is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyLocations []ReverseProxyLocation
type ReverseProxyLocation struct {
	Locked               string        `json:"_locked"`
	Reference            string        `json:"_ref"`
	_type                string        `json:"_type"`
	AccessControl        string        `json:"access_control"`
	AllowedNetworks      []string      `json:"allowed_networks"`
	AuthProfile          string        `json:"auth_profile"`
	Backend              []string      `json:"backend"`
	BePath               string        `json:"be_path"`
	Comment              string        `json:"comment"`
	DeniedNetworks       []interface{} `json:"denied_networks"`
	HotStandby           bool          `json:"hot_standby"`
	Name                 string        `json:"name"`
	Path                 string        `json:"path"`
	Status               bool          `json:"status"`
	StickysessionID      string        `json:"stickysession_id"`
	StickysessionStatus  bool          `json:"stickysession_status"`
	WebsocketPassthrough bool          `json:"websocket_passthrough"`
}

// GetPath implements sophos.RestObject and returns the ReverseProxyLocation GET path
// Returns all available reverse_proxy/location objects
func (*ReverseProxyLocation) GetPath() string { return "/api/objects/reverse_proxy/location/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyLocation) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReverseProxyLocation DELETE path
// Creates or updates the complete object location
func (*ReverseProxyLocation) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/location/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyLocation PATCH path
// Changes to parts of the object location types
func (*ReverseProxyLocation) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/location/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyLocation POST path
// Create a new reverse_proxy/location object
func (*ReverseProxyLocation) PostPath() string {
	return "/api/objects/reverse_proxy/location/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyLocation PUT path
// Creates or updates the complete object location
func (*ReverseProxyLocation) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/location/%s", ref)
}

// ReverseProxyThreatsFilter is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyThreatsFilter []interface{}

// GetPath implements sophos.RestObject and returns the ReverseProxyThreatsFilter GET path
// Returns all available reverse_proxy/threats_filter objects
func (*ReverseProxyThreatsFilter) GetPath() string {
	return "/api/objects/reverse_proxy/threats_filter/"
}

// RefRequired implements sophos.RestObject
func (*ReverseProxyThreatsFilter) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReverseProxyThreatsFilter DELETE path
// Creates or updates the complete object threats_filter
func (*ReverseProxyThreatsFilter) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/threats_filter/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyThreatsFilter PATCH path
// Changes to parts of the object threats_filter types
func (*ReverseProxyThreatsFilter) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/threats_filter/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyThreatsFilter POST path
// Create a new reverse_proxy/threats_filter object
func (*ReverseProxyThreatsFilter) PostPath() string {
	return "/api/objects/reverse_proxy/threats_filter/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyThreatsFilter PUT path
// Creates or updates the complete object threats_filter
func (*ReverseProxyThreatsFilter) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/threats_filter/%s", ref)
}

// ReverseProxyFrontend is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyFrontends []ReverseProxyFrontend
type ReverseProxyFrontend struct {
	Locked               string        `json:"_locked"`
	Reference            string        `json:"_ref"`
	_type                string        `json:"_type"`
	AddContentTypeHeader bool          `json:"add_content_type_header"`
	Address              string        `json:"address"`
	AllowedNetworks      []string      `json:"allowed_networks"`
	Certificate          string        `json:"certificate"`
	Comment              string        `json:"comment"`
	DisableCompression   bool          `json:"disable_compression"`
	Domain               []string      `json:"domain"`
	Exceptions           []interface{} `json:"exceptions"`
	Htmlrewrite          bool          `json:"htmlrewrite"`
	HtmlrewriteCookies   bool          `json:"htmlrewrite_cookies"`
	Implicitredirect     bool          `json:"implicitredirect"`
	Lbmethod             string        `json:"lbmethod"`
	Locations            []string      `json:"locations"`
	Name                 string        `json:"name"`
	Port                 int64         `json:"port"`
	Preservehost         bool          `json:"preservehost"`
	Profile              string        `json:"profile"`
	Status               bool          `json:"status"`
	Type                 string        `json:"type"`
	Xheaders             bool          `json:"xheaders"`
}

// GetPath implements sophos.RestObject and returns the ReverseProxyFrontend GET path
// Returns all available reverse_proxy/frontend objects
func (*ReverseProxyFrontend) GetPath() string { return "/api/objects/reverse_proxy/frontend/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyFrontend) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReverseProxyFrontend DELETE path
// Creates or updates the complete object frontend
func (*ReverseProxyFrontend) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/frontend/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyFrontend PATCH path
// Changes to parts of the object frontend types
func (*ReverseProxyFrontend) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/frontend/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyFrontend POST path
// Create a new reverse_proxy/frontend object
func (*ReverseProxyFrontend) PostPath() string {
	return "/api/objects/reverse_proxy/frontend/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyFrontend PUT path
// Creates or updates the complete object frontend
func (*ReverseProxyFrontend) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/frontend/%s", ref)
}

// ReverseProxyGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyGroup []interface{}

// GetPath implements sophos.RestObject and returns the ReverseProxyGroup GET path
// Returns all available reverse_proxy/group objects
func (*ReverseProxyGroup) GetPath() string { return "/api/objects/reverse_proxy/group/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReverseProxyGroup DELETE path
// Creates or updates the complete object group
func (*ReverseProxyGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyGroup PATCH path
// Changes to parts of the object group types
func (*ReverseProxyGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyGroup POST path
// Create a new reverse_proxy/group object
func (*ReverseProxyGroup) PostPath() string {
	return "/api/objects/reverse_proxy/group/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyGroup PUT path
// Creates or updates the complete object group
func (*ReverseProxyGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/group/%s", ref)
}

// ReverseProxyProfile is an Sophos Endpoint subType and implements sophos.RestObject
type ReverseProxyProfiles []ReverseProxyProfile
type ReverseProxyProfile struct {
	Locked                       string        `json:"_locked"`
	Reference                    string        `json:"_ref"`
	_type                        string        `json:"_type"`
	Av                           bool          `json:"av"`
	AvBlockUnscannable           bool          `json:"av_block_unscannable"`
	AvDirections                 string        `json:"av_directions"`
	AvEngines                    string        `json:"av_engines"`
	AvSizeLimit                  int64         `json:"av_size_limit"`
	AvTimeout                    int64         `json:"av_timeout"`
	BadClients                   bool          `json:"bad_clients"`
	BadClientsNoDnslookup        bool          `json:"bad_clients_no_dnslookup"`
	Comment                      string        `json:"comment"`
	Cookiesign                   bool          `json:"cookiesign"`
	CookiesignDropUnsigned       bool          `json:"cookiesign_drop_unsigned"`
	CustomThreatsFilters         []interface{} `json:"custom_threats_filters"`
	Extensions                   []interface{} `json:"extensions"`
	Filter                       []interface{} `json:"filter"`
	FilterMode                   string        `json:"filter_mode"`
	Formhardening                bool          `json:"formhardening"`
	Name                         string        `json:"name"`
	Outlookanywhere              bool          `json:"outlookanywhere"`
	SecRequestBodyNoFilesLimit   int64         `json:"sec_request_body_no_files_limit"`
	Skipwafrules                 []int64       `json:"skipwafrules"`
	Tft                          bool          `json:"tft"`
	TftBlockUnscannable          bool          `json:"tft_block_unscannable"`
	TftBlockedMimeTypes          []interface{} `json:"tft_blocked_mime_types"`
	ThreatsFilter                bool          `json:"threats_filter"`
	ThreatsFilterCategories      []string      `json:"threats_filter_categories"`
	ThreatsFilterRigid           bool          `json:"threats_filter_rigid"`
	Urlhardening                 bool          `json:"urlhardening"`
	UrlhardeningEntrypages       []string      `json:"urlhardening_entrypages"`
	UrlhardeningEntrypagesSource string        `json:"urlhardening_entrypages_source"`
	UrlhardeningSitemapUpdate    int64         `json:"urlhardening_sitemap_update"`
	UrlhardeningSitemapURL       string        `json:"urlhardening_sitemap_url"`
	Waf                          bool          `json:"waf"`
	Wafmode                      string        `json:"wafmode"`
	Wafparanoia                  bool          `json:"wafparanoia"`
}

// GetPath implements sophos.RestObject and returns the ReverseProxyProfile GET path
// Returns all available reverse_proxy/profile objects
func (*ReverseProxyProfile) GetPath() string { return "/api/objects/reverse_proxy/profile/" }

// RefRequired implements sophos.RestObject
func (*ReverseProxyProfile) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ReverseProxyProfile DELETE path
// Creates or updates the complete object profile
func (*ReverseProxyProfile) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/profile/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ReverseProxyProfile PATCH path
// Changes to parts of the object profile types
func (*ReverseProxyProfile) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/profile/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ReverseProxyProfile POST path
// Create a new reverse_proxy/profile object
func (*ReverseProxyProfile) PostPath() string {
	return "/api/objects/reverse_proxy/profile/"
}

// PutPath implements sophos.RestObject and returns the ReverseProxyProfile PUT path
// Creates or updates the complete object profile
func (*ReverseProxyProfile) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/reverse_proxy/profile/%s", ref)
}

// Right is a generated struct representing the Sophos Right Endpoint
// GET /api/nodes/right
type Right struct {
	RightRight RightRight `json:"right_right"`
	RightGroup RightGroup `json:"right_group"`
}

var defsRight = map[string]sophos.RestObject{
	"RightRight": &RightRight{},
	"RightGroup": &RightGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Right's Objects
func (Right) RestObjects() map[string]sophos.RestObject {
	return defsRight
}

// GetPath implements sophos.RestGetter
func (*Right) GetPath() string { return "/api/nodes/right" }

// RefRequired implements sophos.RestGetter
func (*Right) RefRequired() (string, bool) { return "", false }

var defRight = &sophos.Definition{Description: "right", Name: "right", Link: "/api/definitions/right", Swag: map[string]sophos.MethodMap{"/objects/right/right/": {"get": sophos.MethodDescriptions{Description: "Returns all available right/right objects", Parameters: []sophos.Parameter(nil), Tags: []string{"right/right"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new right/right object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "right/right that will be created", Type: "", Required: true}}, Tags: []string{"right/right"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/right/right/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available right types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"right/right"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object right types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "right/right that will be changes", Type: "", Required: true}}, Tags: []string{"right/right"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object right", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "right/right that will be updated", Type: "", Required: true}}, Tags: []string{"right/right"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object right", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"right/right"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/right/right/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"right/right"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/right/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available right/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"right/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new right/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "right/group that will be created", Type: "", Required: true}}, Tags: []string{"right/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/right/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"right/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"right/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "right/group that will be changes", Type: "", Required: true}}, Tags: []string{"right/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "right/group that will be updated", Type: "", Required: true}}, Tags: []string{"right/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/right/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"right/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Right
func (Right) Definition() sophos.Definition { return *defRight }

// ApiRoutes returns all known Right Paths
func (Right) ApiRoutes() []string {
	return []string{
		"/api/objects/right/group/",
		"/api/objects/right/group/{ref}",
		"/api/objects/right/group/{ref}/usedby",
		"/api/objects/right/right/",
		"/api/objects/right/right/{ref}",
		"/api/objects/right/right/{ref}/usedby",
	}
}

// References returns the Right's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Right) References() []string {
	return []string{
		"REF_RightGroup",
		"REF_RightRight",
	}
}

// RightRight is an Sophos Endpoint subType and implements sophos.RestObject
type RightRights []RightRight
type RightRight struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
}

// GetPath implements sophos.RestObject and returns the RightRights GET path
// Returns all available right/right objects
func (*RightRights) GetPath() string { return "/api/objects/right/right/" }

// RefRequired implements sophos.RestObject
func (*RightRights) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the RightRights GET path
// Returns all available right types
func (r *RightRight) GetPath() string { return fmt.Sprintf("/api/objects/right/right/%s", r.Reference) }

// RefRequired implements sophos.RestObject
func (r *RightRight) RefRequired() (string, bool) { return r.Reference, true }

// DeletePath implements sophos.RestObject and returns the RightRight DELETE path
// Creates or updates the complete object right
func (*RightRight) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/right/right/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the RightRight PATCH path
// Changes to parts of the object right types
func (*RightRight) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/right/right/%s", ref)
}

// PostPath implements sophos.RestObject and returns the RightRight POST path
// Create a new right/right object
func (*RightRight) PostPath() string {
	return "/api/objects/right/right/"
}

// PutPath implements sophos.RestObject and returns the RightRight PUT path
// Creates or updates the complete object right
func (*RightRight) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/right/right/%s", ref)
}

// Type implements sophos.Object
func (r *RightRight) GetType() string { return r._type }

// RightGroup is an Sophos Endpoint subType and implements sophos.RestObject
type RightGroup []interface{}

// GetPath implements sophos.RestObject and returns the RightGroup GET path
// Returns all available right/group objects
func (*RightGroup) GetPath() string { return "/api/objects/right/group/" }

// RefRequired implements sophos.RestObject
func (*RightGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the RightGroup DELETE path
// Creates or updates the complete object group
func (*RightGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/right/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the RightGroup PATCH path
// Changes to parts of the object group types
func (*RightGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/right/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the RightGroup POST path
// Create a new right/group object
func (*RightGroup) PostPath() string {
	return "/api/objects/right/group/"
}

// PutPath implements sophos.RestObject and returns the RightGroup PUT path
// Creates or updates the complete object group
func (*RightGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/right/group/%s", ref)
}

// Role is a generated struct representing the Sophos Role Endpoint
// GET /api/nodes/role
type Role struct {
	RoleGroup RoleGroup `json:"role_group"`
	RoleRole  RoleRole  `json:"role_role"`
}

var defsRole = map[string]sophos.RestObject{
	"RoleGroup": &RoleGroup{},
	"RoleRole":  &RoleRole{},
}

// RestObjects implements the sophos.Node interface and returns a map of Role's Objects
func (Role) RestObjects() map[string]sophos.RestObject {
	return defsRole
}

// GetPath implements sophos.RestGetter
func (*Role) GetPath() string { return "/api/nodes/role" }

// RefRequired implements sophos.RestGetter
func (*Role) RefRequired() (string, bool) { return "", false }

var defRole = &sophos.Definition{Description: "role", Name: "role", Link: "/api/definitions/role", Swag: map[string]sophos.MethodMap{"/objects/role/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available role/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"role/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new role/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "role/group that will be created", Type: "", Required: true}}, Tags: []string{"role/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/role/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"role/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"role/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "role/group that will be changes", Type: "", Required: true}}, Tags: []string{"role/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "role/group that will be updated", Type: "", Required: true}}, Tags: []string{"role/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/role/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"role/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/role/role/": {"get": sophos.MethodDescriptions{Description: "Returns all available role/role objects", Parameters: []sophos.Parameter(nil), Tags: []string{"role/role"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new role/role object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "role/role that will be created", Type: "", Required: true}}, Tags: []string{"role/role"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/role/role/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object role", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"role/role"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available role types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"role/role"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object role types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "role/role that will be changes", Type: "", Required: true}}, Tags: []string{"role/role"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object role", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "role/role that will be updated", Type: "", Required: true}}, Tags: []string{"role/role"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/role/role/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"role/role"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Role
func (Role) Definition() sophos.Definition { return *defRole }

// ApiRoutes returns all known Role Paths
func (Role) ApiRoutes() []string {
	return []string{
		"/api/objects/role/group/",
		"/api/objects/role/group/{ref}",
		"/api/objects/role/group/{ref}/usedby",
		"/api/objects/role/role/",
		"/api/objects/role/role/{ref}",
		"/api/objects/role/role/{ref}/usedby",
	}
}

// References returns the Role's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Role) References() []string {
	return []string{
		"REF_RoleGroup",
		"REF_RoleRole",
	}
}

// RoleGroup is an Sophos Endpoint subType and implements sophos.RestObject
type RoleGroup []interface{}

// GetPath implements sophos.RestObject and returns the RoleGroup GET path
// Returns all available role/group objects
func (*RoleGroup) GetPath() string { return "/api/objects/role/group/" }

// RefRequired implements sophos.RestObject
func (*RoleGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the RoleGroup DELETE path
// Creates or updates the complete object group
func (*RoleGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/role/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the RoleGroup PATCH path
// Changes to parts of the object group types
func (*RoleGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/role/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the RoleGroup POST path
// Create a new role/group object
func (*RoleGroup) PostPath() string {
	return "/api/objects/role/group/"
}

// PutPath implements sophos.RestObject and returns the RoleGroup PUT path
// Creates or updates the complete object group
func (*RoleGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/role/group/%s", ref)
}

// RoleRole is an Sophos Endpoint subType and implements sophos.RestObject
type RoleRoles []RoleRole
type RoleRole struct {
	Locked         string   `json:"_locked"`
	Reference      string   `json:"_ref"`
	_type          string   `json:"_type"`
	Comment        string   `json:"comment"`
	Members        []string `json:"members"`
	Name           string   `json:"name"`
	Rights         []string `json:"rights"`
	WebadminAccess bool     `json:"webadmin_access"`
}

// GetPath implements sophos.RestObject and returns the RoleRoles GET path
// Returns all available role/role objects
func (*RoleRoles) GetPath() string { return "/api/objects/role/role/" }

// RefRequired implements sophos.RestObject
func (*RoleRoles) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the RoleRoles GET path
// Returns all available role types
func (r *RoleRole) GetPath() string { return fmt.Sprintf("/api/objects/role/role/%s", r.Reference) }

// RefRequired implements sophos.RestObject
func (r *RoleRole) RefRequired() (string, bool) { return r.Reference, true }

// DeletePath implements sophos.RestObject and returns the RoleRole DELETE path
// Creates or updates the complete object role
func (*RoleRole) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/role/role/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the RoleRole PATCH path
// Changes to parts of the object role types
func (*RoleRole) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/role/role/%s", ref)
}

// PostPath implements sophos.RestObject and returns the RoleRole POST path
// Create a new role/role object
func (*RoleRole) PostPath() string {
	return "/api/objects/role/role/"
}

// PutPath implements sophos.RestObject and returns the RoleRole PUT path
// Creates or updates the complete object role
func (*RoleRole) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/role/role/%s", ref)
}

// Type implements sophos.Object
func (r *RoleRole) GetType() string { return r._type }

// Route is a generated struct representing the Sophos Route Endpoint
// GET /api/nodes/route
type Route struct {
	RouteGroup  RouteGroup  `json:"route_group"`
	RoutePolicy RoutePolicy `json:"route_policy"`
	RouteStatic RouteStatic `json:"route_static"`
}

var defsRoute = map[string]sophos.RestObject{
	"RouteGroup":  &RouteGroup{},
	"RoutePolicy": &RoutePolicy{},
	"RouteStatic": &RouteStatic{},
}

// RestObjects implements the sophos.Node interface and returns a map of Route's Objects
func (Route) RestObjects() map[string]sophos.RestObject {
	return defsRoute
}

// GetPath implements sophos.RestGetter
func (*Route) GetPath() string { return "/api/nodes/route" }

// RefRequired implements sophos.RestGetter
func (*Route) RefRequired() (string, bool) { return "", false }

var defRoute = &sophos.Definition{Description: "route", Name: "route", Link: "/api/definitions/route", Swag: map[string]sophos.MethodMap{"/objects/route/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"route/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/route/policy/": {"get": sophos.MethodDescriptions{Description: "Returns all available route/policy objects", Parameters: []sophos.Parameter(nil), Tags: []string{"route/policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new route/policy object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "route/policy that will be created", Type: "", Required: true}}, Tags: []string{"route/policy"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/route/static/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object static", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"route/static"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available static types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"route/static"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object static types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "route/static that will be changes", Type: "", Required: true}}, Tags: []string{"route/static"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object static", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "route/static that will be updated", Type: "", Required: true}}, Tags: []string{"route/static"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/route/static/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"route/static"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/route/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available route/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"route/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new route/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "route/group that will be created", Type: "", Required: true}}, Tags: []string{"route/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/route/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"route/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"route/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "route/group that will be changes", Type: "", Required: true}}, Tags: []string{"route/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "route/group that will be updated", Type: "", Required: true}}, Tags: []string{"route/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/route/policy/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object policy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"route/policy"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available policy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"route/policy"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object policy types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "route/policy that will be changes", Type: "", Required: true}}, Tags: []string{"route/policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object policy", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "route/policy that will be updated", Type: "", Required: true}}, Tags: []string{"route/policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/route/policy/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"route/policy"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/route/static/": {"get": sophos.MethodDescriptions{Description: "Returns all available route/static objects", Parameters: []sophos.Parameter(nil), Tags: []string{"route/static"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new route/static object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "route/static that will be created", Type: "", Required: true}}, Tags: []string{"route/static"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Route
func (Route) Definition() sophos.Definition { return *defRoute }

// ApiRoutes returns all known Route Paths
func (Route) ApiRoutes() []string {
	return []string{
		"/api/objects/route/group/",
		"/api/objects/route/group/{ref}",
		"/api/objects/route/group/{ref}/usedby",
		"/api/objects/route/policy/",
		"/api/objects/route/policy/{ref}",
		"/api/objects/route/policy/{ref}/usedby",
		"/api/objects/route/static/",
		"/api/objects/route/static/{ref}",
		"/api/objects/route/static/{ref}/usedby",
	}
}

// References returns the Route's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Route) References() []string {
	return []string{
		"REF_RouteGroup",
		"REF_RoutePolicy",
		"REF_RouteStatic",
	}
}

// RouteGroup is an Sophos Endpoint subType and implements sophos.RestObject
type RouteGroup []interface{}

// GetPath implements sophos.RestObject and returns the RouteGroup GET path
// Returns all available route/group objects
func (*RouteGroup) GetPath() string { return "/api/objects/route/group/" }

// RefRequired implements sophos.RestObject
func (*RouteGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the RouteGroup DELETE path
// Creates or updates the complete object group
func (*RouteGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/route/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the RouteGroup PATCH path
// Changes to parts of the object group types
func (*RouteGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/route/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the RouteGroup POST path
// Create a new route/group object
func (*RouteGroup) PostPath() string {
	return "/api/objects/route/group/"
}

// PutPath implements sophos.RestObject and returns the RouteGroup PUT path
// Creates or updates the complete object group
func (*RouteGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/route/group/%s", ref)
}

// RoutePolicy is an Sophos Endpoint subType and implements sophos.RestObject
type RoutePolicy []interface{}

// GetPath implements sophos.RestObject and returns the RoutePolicy GET path
// Returns all available route/policy objects
func (*RoutePolicy) GetPath() string { return "/api/objects/route/policy/" }

// RefRequired implements sophos.RestObject
func (*RoutePolicy) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the RoutePolicy DELETE path
// Creates or updates the complete object policy
func (*RoutePolicy) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/route/policy/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the RoutePolicy PATCH path
// Changes to parts of the object policy types
func (*RoutePolicy) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/route/policy/%s", ref)
}

// PostPath implements sophos.RestObject and returns the RoutePolicy POST path
// Create a new route/policy object
func (*RoutePolicy) PostPath() string {
	return "/api/objects/route/policy/"
}

// PutPath implements sophos.RestObject and returns the RoutePolicy PUT path
// Creates or updates the complete object policy
func (*RoutePolicy) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/route/policy/%s", ref)
}

// RouteStatic is an Sophos Endpoint subType and implements sophos.RestObject
type RouteStatics []RouteStatic
type RouteStatic struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Comment   string `json:"comment"`
	Metric    int64  `json:"metric"`
	Name      string `json:"name"`
	Network   string `json:"network"`
	Status    bool   `json:"status"`
	Target    string `json:"target"`
	Type      string `json:"type"`
}

// GetPath implements sophos.RestObject and returns the RouteStatics GET path
// Returns all available route/static objects
func (*RouteStatics) GetPath() string { return "/api/objects/route/static/" }

// RefRequired implements sophos.RestObject
func (*RouteStatics) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the RouteStatics GET path
// Returns all available static types
func (r *RouteStatic) GetPath() string {
	return fmt.Sprintf("/api/objects/route/static/%s", r.Reference)
}

// RefRequired implements sophos.RestObject
func (r *RouteStatic) RefRequired() (string, bool) { return r.Reference, true }

// DeletePath implements sophos.RestObject and returns the RouteStatic DELETE path
// Creates or updates the complete object static
func (*RouteStatic) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/route/static/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the RouteStatic PATCH path
// Changes to parts of the object static types
func (*RouteStatic) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/route/static/%s", ref)
}

// PostPath implements sophos.RestObject and returns the RouteStatic POST path
// Create a new route/static object
func (*RouteStatic) PostPath() string {
	return "/api/objects/route/static/"
}

// PutPath implements sophos.RestObject and returns the RouteStatic PUT path
// Creates or updates the complete object static
func (*RouteStatic) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/route/static/%s", ref)
}

// Type implements sophos.Object
func (r *RouteStatic) GetType() string { return r._type }

// Scheduler is a generated struct representing the Sophos Scheduler Endpoint
// GET /api/nodes/scheduler
type Scheduler struct {
	SchedulerLoadbalance SchedulerLoadbalance `json:"scheduler_loadbalance"`
	SchedulerRule        SchedulerRule        `json:"scheduler_rule"`
	SchedulerGroup       SchedulerGroup       `json:"scheduler_group"`
}

var defsScheduler = map[string]sophos.RestObject{
	"SchedulerLoadbalance": &SchedulerLoadbalance{},
	"SchedulerRule":        &SchedulerRule{},
	"SchedulerGroup":       &SchedulerGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Scheduler's Objects
func (Scheduler) RestObjects() map[string]sophos.RestObject {
	return defsScheduler
}

// GetPath implements sophos.RestGetter
func (*Scheduler) GetPath() string { return "/api/nodes/scheduler" }

// RefRequired implements sophos.RestGetter
func (*Scheduler) RefRequired() (string, bool) { return "", false }

var defScheduler = &sophos.Definition{Description: "scheduler", Name: "scheduler", Link: "/api/definitions/scheduler", Swag: map[string]sophos.MethodMap{"/objects/scheduler/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available scheduler/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"scheduler/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new scheduler/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "scheduler/group that will be created", Type: "", Required: true}}, Tags: []string{"scheduler/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/scheduler/group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"scheduler/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "scheduler/group that will be changes", Type: "", Required: true}}, Tags: []string{"scheduler/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "scheduler/group that will be updated", Type: "", Required: true}}, Tags: []string{"scheduler/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"scheduler/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/scheduler/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"scheduler/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/scheduler/loadbalance/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object loadbalance", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"scheduler/loadbalance"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available loadbalance types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"scheduler/loadbalance"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object loadbalance types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "scheduler/loadbalance that will be changes", Type: "", Required: true}}, Tags: []string{"scheduler/loadbalance"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object loadbalance", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "scheduler/loadbalance that will be updated", Type: "", Required: true}}, Tags: []string{"scheduler/loadbalance"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/scheduler/rule/": {"get": sophos.MethodDescriptions{Description: "Returns all available scheduler/rule objects", Parameters: []sophos.Parameter(nil), Tags: []string{"scheduler/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new scheduler/rule object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "scheduler/rule that will be created", Type: "", Required: true}}, Tags: []string{"scheduler/rule"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/scheduler/loadbalance/": {"get": sophos.MethodDescriptions{Description: "Returns all available scheduler/loadbalance objects", Parameters: []sophos.Parameter(nil), Tags: []string{"scheduler/loadbalance"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new scheduler/loadbalance object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "scheduler/loadbalance that will be created", Type: "", Required: true}}, Tags: []string{"scheduler/loadbalance"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/scheduler/loadbalance/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"scheduler/loadbalance"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/scheduler/rule/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"scheduler/rule"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"scheduler/rule"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object rule types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "scheduler/rule that will be changes", Type: "", Required: true}}, Tags: []string{"scheduler/rule"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object rule", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "scheduler/rule that will be updated", Type: "", Required: true}}, Tags: []string{"scheduler/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/scheduler/rule/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"scheduler/rule"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Scheduler
func (Scheduler) Definition() sophos.Definition { return *defScheduler }

// ApiRoutes returns all known Scheduler Paths
func (Scheduler) ApiRoutes() []string {
	return []string{
		"/api/objects/scheduler/group/",
		"/api/objects/scheduler/group/{ref}",
		"/api/objects/scheduler/group/{ref}/usedby",
		"/api/objects/scheduler/loadbalance/",
		"/api/objects/scheduler/loadbalance/{ref}",
		"/api/objects/scheduler/loadbalance/{ref}/usedby",
		"/api/objects/scheduler/rule/",
		"/api/objects/scheduler/rule/{ref}",
		"/api/objects/scheduler/rule/{ref}/usedby",
	}
}

// References returns the Scheduler's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Scheduler) References() []string {
	return []string{
		"REF_SchedulerGroup",
		"REF_SchedulerLoadbalance",
		"REF_SchedulerRule",
	}
}

// SchedulerLoadbalance is an Sophos Endpoint subType and implements sophos.RestObject
type SchedulerLoadbalances []SchedulerLoadbalance
type SchedulerLoadbalance struct {
	Locked          string        `json:"_locked"`
	Reference       string        `json:"_ref"`
	_type           string        `json:"_type"`
	Algorithm       string        `json:"algorithm"`
	CheckData       string        `json:"check_data"`
	CheckHosts      []interface{} `json:"check_hosts"`
	CheckInterval   int64         `json:"check_interval"`
	CheckPort       int64         `json:"check_port"`
	CheckTimeout    int64         `json:"check_timeout"`
	CheckType       string        `json:"check_type"`
	Comment         string        `json:"comment"`
	Name            string        `json:"name"`
	Persistence     bool          `json:"persistence"`
	PersistenceHash string        `json:"persistence_hash"`
	PersistenceSize int64         `json:"persistence_size"`
	PersistenceTime int64         `json:"persistence_time"`
	Weight          struct{}      `json:"weight"`
}

// GetPath implements sophos.RestObject and returns the SchedulerLoadbalances GET path
// Returns all available scheduler/loadbalance objects
func (*SchedulerLoadbalances) GetPath() string { return "/api/objects/scheduler/loadbalance/" }

// RefRequired implements sophos.RestObject
func (*SchedulerLoadbalances) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the SchedulerLoadbalances GET path
// Returns all available loadbalance types
func (s *SchedulerLoadbalance) GetPath() string {
	return fmt.Sprintf("/api/objects/scheduler/loadbalance/%s", s.Reference)
}

// RefRequired implements sophos.RestObject
func (s *SchedulerLoadbalance) RefRequired() (string, bool) { return s.Reference, true }

// DeletePath implements sophos.RestObject and returns the SchedulerLoadbalance DELETE path
// Creates or updates the complete object loadbalance
func (*SchedulerLoadbalance) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/scheduler/loadbalance/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SchedulerLoadbalance PATCH path
// Changes to parts of the object loadbalance types
func (*SchedulerLoadbalance) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/scheduler/loadbalance/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SchedulerLoadbalance POST path
// Create a new scheduler/loadbalance object
func (*SchedulerLoadbalance) PostPath() string {
	return "/api/objects/scheduler/loadbalance/"
}

// PutPath implements sophos.RestObject and returns the SchedulerLoadbalance PUT path
// Creates or updates the complete object loadbalance
func (*SchedulerLoadbalance) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/scheduler/loadbalance/%s", ref)
}

// Type implements sophos.Object
func (s *SchedulerLoadbalance) GetType() string { return s._type }

// SchedulerRule is an Sophos Endpoint subType and implements sophos.RestObject
type SchedulerRules []SchedulerRule
type SchedulerRule struct {
	Locked          string `json:"_locked"`
	Reference       string `json:"_ref"`
	_type           string `json:"_type"`
	Comment         string `json:"comment"`
	Destination     string `json:"destination"`
	Interface       string `json:"interface"`
	InterfaceGroup  string `json:"interface_group"`
	Name            string `json:"name"`
	Persistence     bool   `json:"persistence"`
	PersistenceHash string `json:"persistence_hash"`
	Service         string `json:"service"`
	SkipOnError     bool   `json:"skip_on_error"`
	Source          string `json:"source"`
	Status          bool   `json:"status"`
}

// GetPath implements sophos.RestObject and returns the SchedulerRule GET path
// Returns all available scheduler/rule objects
func (*SchedulerRule) GetPath() string { return "/api/objects/scheduler/rule/" }

// RefRequired implements sophos.RestObject
func (*SchedulerRule) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SchedulerRule DELETE path
// Creates or updates the complete object rule
func (*SchedulerRule) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/scheduler/rule/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SchedulerRule PATCH path
// Changes to parts of the object rule types
func (*SchedulerRule) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/scheduler/rule/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SchedulerRule POST path
// Create a new scheduler/rule object
func (*SchedulerRule) PostPath() string {
	return "/api/objects/scheduler/rule/"
}

// PutPath implements sophos.RestObject and returns the SchedulerRule PUT path
// Creates or updates the complete object rule
func (*SchedulerRule) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/scheduler/rule/%s", ref)
}

// SchedulerGroup is an Sophos Endpoint subType and implements sophos.RestObject
type SchedulerGroup []interface{}

// GetPath implements sophos.RestObject and returns the SchedulerGroup GET path
// Returns all available scheduler/group objects
func (*SchedulerGroup) GetPath() string { return "/api/objects/scheduler/group/" }

// RefRequired implements sophos.RestObject
func (*SchedulerGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SchedulerGroup DELETE path
// Creates or updates the complete object group
func (*SchedulerGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/scheduler/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SchedulerGroup PATCH path
// Changes to parts of the object group types
func (*SchedulerGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/scheduler/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SchedulerGroup POST path
// Create a new scheduler/group object
func (*SchedulerGroup) PostPath() string {
	return "/api/objects/scheduler/group/"
}

// PutPath implements sophos.RestObject and returns the SchedulerGroup PUT path
// Creates or updates the complete object group
func (*SchedulerGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/scheduler/group/%s", ref)
}

// Service is a generated struct representing the Sophos Service Endpoint
// GET /api/nodes/service
type Service struct {
	ServiceAh     ServiceAh     `json:"service_ah"`
	ServiceGroup  ServiceGroup  `json:"service_group"`
	ServiceAny    ServiceAny    `json:"service_any"`
	ServiceIcmp   ServiceIcmp   `json:"service_icmp"`
	ServiceIcmpv6 ServiceIcmpv6 `json:"service_icmpv6"`
	ServiceTcpudp ServiceTcpudp `json:"service_tcpudp"`
	ServiceEsp    ServiceEsp    `json:"service_esp"`
	ServiceIp     ServiceIp     `json:"service_ip"`
	ServiceTcp    ServiceTcp    `json:"service_tcp"`
	ServiceUdp    ServiceUdp    `json:"service_udp"`
}

var defsService = map[string]sophos.RestObject{
	"ServiceAh":     &ServiceAh{},
	"ServiceGroup":  &ServiceGroup{},
	"ServiceAny":    &ServiceAny{},
	"ServiceIcmp":   &ServiceIcmp{},
	"ServiceIcmpv6": &ServiceIcmpv6{},
	"ServiceTcpudp": &ServiceTcpudp{},
	"ServiceEsp":    &ServiceEsp{},
	"ServiceIp":     &ServiceIp{},
	"ServiceTcp":    &ServiceTcp{},
	"ServiceUdp":    &ServiceUdp{},
}

// RestObjects implements the sophos.Node interface and returns a map of Service's Objects
func (Service) RestObjects() map[string]sophos.RestObject {
	return defsService
}

// GetPath implements sophos.RestGetter
func (*Service) GetPath() string { return "/api/nodes/service" }

// RefRequired implements sophos.RestGetter
func (*Service) RefRequired() (string, bool) { return "", false }

var defService = &sophos.Definition{Description: "service", Name: "service", Link: "/api/definitions/service", Swag: map[string]sophos.MethodMap{"/objects/service/ip/": {"get": sophos.MethodDescriptions{Description: "Returns all available service/ip objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/ip"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new service/ip object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/ip that will be created", Type: "", Required: true}}, Tags: []string{"service/ip"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/tcp/": {"get": sophos.MethodDescriptions{Description: "Returns all available service/tcp objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/tcp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new service/tcp object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/tcp that will be created", Type: "", Required: true}}, Tags: []string{"service/tcp"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/tcp/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/tcp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/udp/": {"get": sophos.MethodDescriptions{Description: "Returns all available service/udp objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/udp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new service/udp object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/udp that will be created", Type: "", Required: true}}, Tags: []string{"service/udp"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/any/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object any", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/any"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available any types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/any"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object any types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/any that will be changes", Type: "", Required: true}}, Tags: []string{"service/any"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object any", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/any that will be updated", Type: "", Required: true}}, Tags: []string{"service/any"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/service/any/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/any"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/tcp/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object tcp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/tcp that will be changes", Type: "", Required: true}}, Tags: []string{"service/tcp"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object tcp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/tcp that will be updated", Type: "", Required: true}}, Tags: []string{"service/tcp"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object tcp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/tcp"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available tcp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/tcp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/service/udp/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object udp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/udp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available udp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/udp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object udp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/udp that will be changes", Type: "", Required: true}}, Tags: []string{"service/udp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object udp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/udp that will be updated", Type: "", Required: true}}, Tags: []string{"service/udp"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/udp/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/udp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/icmp/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object icmp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/icmp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available icmp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/icmp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object icmp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/icmp that will be changes", Type: "", Required: true}}, Tags: []string{"service/icmp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object icmp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/icmp that will be updated", Type: "", Required: true}}, Tags: []string{"service/icmp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/service/esp/": {"get": sophos.MethodDescriptions{Description: "Returns all available service/esp objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/esp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new service/esp object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/esp that will be created", Type: "", Required: true}}, Tags: []string{"service/esp"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/group/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/group that will be changes", Type: "", Required: true}}, Tags: []string{"service/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/group that will be updated", Type: "", Required: true}}, Tags: []string{"service/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/tcpudp/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/tcpudp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/ah/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/ah"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/service/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available service/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new service/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/group that will be created", Type: "", Required: true}}, Tags: []string{"service/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/service/any/": {"post": sophos.MethodDescriptions{Description: "Create a new service/any object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/any that will be created", Type: "", Required: true}}, Tags: []string{"service/any"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available service/any objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/any"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/icmp/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/icmp"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/service/icmpv6/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available icmpv6 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/icmpv6"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object icmpv6 types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/icmpv6 that will be changes", Type: "", Required: true}}, Tags: []string{"service/icmpv6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object icmpv6", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/icmpv6 that will be updated", Type: "", Required: true}}, Tags: []string{"service/icmpv6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object icmpv6", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/icmpv6"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/icmpv6/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/icmpv6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/tcpudp/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available tcpudp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/tcpudp"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object tcpudp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/tcpudp that will be changes", Type: "", Required: true}}, Tags: []string{"service/tcpudp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object tcpudp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/tcpudp that will be updated", Type: "", Required: true}}, Tags: []string{"service/tcpudp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object tcpudp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/tcpudp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/service/ah/": {"get": sophos.MethodDescriptions{Description: "Returns all available service/ah objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/ah"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new service/ah object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/ah that will be created", Type: "", Required: true}}, Tags: []string{"service/ah"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/ah/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ah", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/ah"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ah types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/ah"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ah types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/ah that will be changes", Type: "", Required: true}}, Tags: []string{"service/ah"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ah", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/ah that will be updated", Type: "", Required: true}}, Tags: []string{"service/ah"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/service/tcpudp/": {"get": sophos.MethodDescriptions{Description: "Returns all available service/tcpudp objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/tcpudp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new service/tcpudp object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/tcpudp that will be created", Type: "", Required: true}}, Tags: []string{"service/tcpudp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/service/esp/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object esp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/esp"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available esp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/esp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object esp types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/esp that will be changes", Type: "", Required: true}}, Tags: []string{"service/esp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object esp", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/esp that will be updated", Type: "", Required: true}}, Tags: []string{"service/esp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/service/ip/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/ip"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/icmpv6/": {"get": sophos.MethodDescriptions{Description: "Returns all available service/icmpv6 objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/icmpv6"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new service/icmpv6 object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/icmpv6 that will be created", Type: "", Required: true}}, Tags: []string{"service/icmpv6"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/ip/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object ip types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/ip that will be changes", Type: "", Required: true}}, Tags: []string{"service/ip"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object ip", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/ip that will be updated", Type: "", Required: true}}, Tags: []string{"service/ip"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object ip", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"service/ip"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available ip types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/ip"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/service/esp/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"service/esp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/service/icmp/": {"get": sophos.MethodDescriptions{Description: "Returns all available service/icmp objects", Parameters: []sophos.Parameter(nil), Tags: []string{"service/icmp"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new service/icmp object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "service/icmp that will be created", Type: "", Required: true}}, Tags: []string{"service/icmp"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}}}

// Definition returns the /api/definitions struct of Service
func (Service) Definition() sophos.Definition { return *defService }

// ApiRoutes returns all known Service Paths
func (Service) ApiRoutes() []string {
	return []string{
		"/api/objects/service/ah/",
		"/api/objects/service/ah/{ref}",
		"/api/objects/service/ah/{ref}/usedby",
		"/api/objects/service/any/",
		"/api/objects/service/any/{ref}",
		"/api/objects/service/any/{ref}/usedby",
		"/api/objects/service/esp/",
		"/api/objects/service/esp/{ref}",
		"/api/objects/service/esp/{ref}/usedby",
		"/api/objects/service/group/",
		"/api/objects/service/group/{ref}",
		"/api/objects/service/group/{ref}/usedby",
		"/api/objects/service/icmp/",
		"/api/objects/service/icmp/{ref}",
		"/api/objects/service/icmp/{ref}/usedby",
		"/api/objects/service/icmpv6/",
		"/api/objects/service/icmpv6/{ref}",
		"/api/objects/service/icmpv6/{ref}/usedby",
		"/api/objects/service/ip/",
		"/api/objects/service/ip/{ref}",
		"/api/objects/service/ip/{ref}/usedby",
		"/api/objects/service/tcp/",
		"/api/objects/service/tcp/{ref}",
		"/api/objects/service/tcp/{ref}/usedby",
		"/api/objects/service/tcpudp/",
		"/api/objects/service/tcpudp/{ref}",
		"/api/objects/service/tcpudp/{ref}/usedby",
		"/api/objects/service/udp/",
		"/api/objects/service/udp/{ref}",
		"/api/objects/service/udp/{ref}/usedby",
	}
}

// References returns the Service's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Service) References() []string {
	return []string{
		"REF_ServiceAh",
		"REF_ServiceAny",
		"REF_ServiceEsp",
		"REF_ServiceGroup",
		"REF_ServiceIcmp",
		"REF_ServiceIcmpv6",
		"REF_ServiceIp",
		"REF_ServiceTcp",
		"REF_ServiceTcpudp",
		"REF_ServiceUdp",
	}
}

// ServiceAh is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceAh []interface{}

// GetPath implements sophos.RestObject and returns the ServiceAh GET path
// Returns all available service/ah objects
func (*ServiceAh) GetPath() string { return "/api/objects/service/ah/" }

// RefRequired implements sophos.RestObject
func (*ServiceAh) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ServiceAh DELETE path
// Creates or updates the complete object ah
func (*ServiceAh) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/ah/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceAh PATCH path
// Changes to parts of the object ah types
func (*ServiceAh) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/ah/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceAh POST path
// Create a new service/ah object
func (*ServiceAh) PostPath() string {
	return "/api/objects/service/ah/"
}

// PutPath implements sophos.RestObject and returns the ServiceAh PUT path
// Creates or updates the complete object ah
func (*ServiceAh) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/ah/%s", ref)
}

// ServiceGroup is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceGroups []ServiceGroup
type ServiceGroup struct {
	Locked    string   `json:"_locked"`
	Reference string   `json:"_ref"`
	_type     string   `json:"_type"`
	Comment   string   `json:"comment"`
	Members   []string `json:"members"`
	Name      string   `json:"name"`
	Types     []string `json:"types"`
}

// GetPath implements sophos.RestObject and returns the ServiceGroups GET path
// Returns all available service/group objects
func (*ServiceGroups) GetPath() string { return "/api/objects/service/group/" }

// RefRequired implements sophos.RestObject
func (*ServiceGroups) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ServiceGroups GET path
// Returns all available group types
func (s *ServiceGroup) GetPath() string {
	return fmt.Sprintf("/api/objects/service/group/%s", s.Reference)
}

// RefRequired implements sophos.RestObject
func (s *ServiceGroup) RefRequired() (string, bool) { return s.Reference, true }

// DeletePath implements sophos.RestObject and returns the ServiceGroup DELETE path
// Creates or updates the complete object group
func (*ServiceGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceGroup PATCH path
// Changes to parts of the object group types
func (*ServiceGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceGroup POST path
// Create a new service/group object
func (*ServiceGroup) PostPath() string {
	return "/api/objects/service/group/"
}

// PutPath implements sophos.RestObject and returns the ServiceGroup PUT path
// Creates or updates the complete object group
func (*ServiceGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/group/%s", ref)
}

// Type implements sophos.Object
func (s *ServiceGroup) GetType() string { return s._type }

// ServiceAny is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceAnys []ServiceAny
type ServiceAny struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
}

// GetPath implements sophos.RestObject and returns the ServiceAnys GET path
// Returns all available service/any objects
func (*ServiceAnys) GetPath() string { return "/api/objects/service/any/" }

// RefRequired implements sophos.RestObject
func (*ServiceAnys) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ServiceAnys GET path
// Returns all available any types
func (s *ServiceAny) GetPath() string { return fmt.Sprintf("/api/objects/service/any/%s", s.Reference) }

// RefRequired implements sophos.RestObject
func (s *ServiceAny) RefRequired() (string, bool) { return s.Reference, true }

// DeletePath implements sophos.RestObject and returns the ServiceAny DELETE path
// Creates or updates the complete object any
func (*ServiceAny) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/any/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceAny PATCH path
// Changes to parts of the object any types
func (*ServiceAny) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/any/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceAny POST path
// Create a new service/any object
func (*ServiceAny) PostPath() string {
	return "/api/objects/service/any/"
}

// PutPath implements sophos.RestObject and returns the ServiceAny PUT path
// Creates or updates the complete object any
func (*ServiceAny) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/any/%s", ref)
}

// Type implements sophos.Object
func (s *ServiceAny) GetType() string { return s._type }

// ServiceIcmp is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceIcmps []ServiceIcmp
type ServiceIcmp struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Code      int64  `json:"code"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Type      int64  `json:"type"`
}

// GetPath implements sophos.RestObject and returns the ServiceIcmp GET path
// Returns all available service/icmp objects
func (*ServiceIcmp) GetPath() string { return "/api/objects/service/icmp/" }

// RefRequired implements sophos.RestObject
func (*ServiceIcmp) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ServiceIcmp DELETE path
// Creates or updates the complete object icmp
func (*ServiceIcmp) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/icmp/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceIcmp PATCH path
// Changes to parts of the object icmp types
func (*ServiceIcmp) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/icmp/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceIcmp POST path
// Create a new service/icmp object
func (*ServiceIcmp) PostPath() string {
	return "/api/objects/service/icmp/"
}

// PutPath implements sophos.RestObject and returns the ServiceIcmp PUT path
// Creates or updates the complete object icmp
func (*ServiceIcmp) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/icmp/%s", ref)
}

// ServiceIcmpv6 is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceIcmpv6 []interface{}

// GetPath implements sophos.RestObject and returns the ServiceIcmpv6 GET path
// Returns all available service/icmpv6 objects
func (*ServiceIcmpv6) GetPath() string { return "/api/objects/service/icmpv6/" }

// RefRequired implements sophos.RestObject
func (*ServiceIcmpv6) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ServiceIcmpv6 DELETE path
// Creates or updates the complete object icmpv6
func (*ServiceIcmpv6) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/icmpv6/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceIcmpv6 PATCH path
// Changes to parts of the object icmpv6 types
func (*ServiceIcmpv6) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/icmpv6/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceIcmpv6 POST path
// Create a new service/icmpv6 object
func (*ServiceIcmpv6) PostPath() string {
	return "/api/objects/service/icmpv6/"
}

// PutPath implements sophos.RestObject and returns the ServiceIcmpv6 PUT path
// Creates or updates the complete object icmpv6
func (*ServiceIcmpv6) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/icmpv6/%s", ref)
}

// ServiceTcpudp is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceTcpudps []ServiceTcpudp
type ServiceTcpudp struct {
	Locked       string `json:"_locked"`
	Reference    string `json:"_ref"`
	_type        string `json:"_type"`
	AutoPfSvcDst string `json:"auto_pf_svc_dst"`
	AutoPfSvcSrc string `json:"auto_pf_svc_src"`
	Comment      string `json:"comment"`
	DstHigh      int64  `json:"dst_high"`
	DstLow       int64  `json:"dst_low"`
	Name         string `json:"name"`
	SrcHigh      int64  `json:"src_high"`
	SrcLow       int64  `json:"src_low"`
}

// GetPath implements sophos.RestObject and returns the ServiceTcpudp GET path
// Returns all available service/tcpudp objects
func (*ServiceTcpudp) GetPath() string { return "/api/objects/service/tcpudp/" }

// RefRequired implements sophos.RestObject
func (*ServiceTcpudp) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ServiceTcpudp DELETE path
// Creates or updates the complete object tcpudp
func (*ServiceTcpudp) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/tcpudp/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceTcpudp PATCH path
// Changes to parts of the object tcpudp types
func (*ServiceTcpudp) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/tcpudp/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceTcpudp POST path
// Create a new service/tcpudp object
func (*ServiceTcpudp) PostPath() string {
	return "/api/objects/service/tcpudp/"
}

// PutPath implements sophos.RestObject and returns the ServiceTcpudp PUT path
// Creates or updates the complete object tcpudp
func (*ServiceTcpudp) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/tcpudp/%s", ref)
}

// ServiceEsp is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceEsp []interface{}

// GetPath implements sophos.RestObject and returns the ServiceEsp GET path
// Returns all available service/esp objects
func (*ServiceEsp) GetPath() string { return "/api/objects/service/esp/" }

// RefRequired implements sophos.RestObject
func (*ServiceEsp) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ServiceEsp DELETE path
// Creates or updates the complete object esp
func (*ServiceEsp) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/esp/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceEsp PATCH path
// Changes to parts of the object esp types
func (*ServiceEsp) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/esp/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceEsp POST path
// Create a new service/esp object
func (*ServiceEsp) PostPath() string {
	return "/api/objects/service/esp/"
}

// PutPath implements sophos.RestObject and returns the ServiceEsp PUT path
// Creates or updates the complete object esp
func (*ServiceEsp) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/esp/%s", ref)
}

// ServiceIp is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceIps []ServiceIp
type ServiceIp struct {
	Locked    string `json:"_locked"`
	Reference string `json:"_ref"`
	_type     string `json:"_type"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Proto     int64  `json:"proto"`
}

// GetPath implements sophos.RestObject and returns the ServiceIp GET path
// Returns all available service/ip objects
func (*ServiceIp) GetPath() string { return "/api/objects/service/ip/" }

// RefRequired implements sophos.RestObject
func (*ServiceIp) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ServiceIp DELETE path
// Creates or updates the complete object ip
func (*ServiceIp) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/ip/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceIp PATCH path
// Changes to parts of the object ip types
func (*ServiceIp) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/ip/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceIp POST path
// Create a new service/ip object
func (*ServiceIp) PostPath() string {
	return "/api/objects/service/ip/"
}

// PutPath implements sophos.RestObject and returns the ServiceIp PUT path
// Creates or updates the complete object ip
func (*ServiceIp) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/ip/%s", ref)
}

// ServiceTcp is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceTcps []ServiceTcp
type ServiceTcp struct {
	Locked       string `json:"_locked"`
	Reference    string `json:"_ref"`
	_type        string `json:"_type"`
	AutoPfSvcDst string `json:"auto_pf_svc_dst"`
	AutoPfSvcSrc string `json:"auto_pf_svc_src"`
	Comment      string `json:"comment"`
	DstHigh      int64  `json:"dst_high"`
	DstLow       int64  `json:"dst_low"`
	Name         string `json:"name"`
	SrcHigh      int64  `json:"src_high"`
	SrcLow       int64  `json:"src_low"`
}

// GetPath implements sophos.RestObject and returns the ServiceTcp GET path
// Returns all available service/tcp objects
func (*ServiceTcp) GetPath() string { return "/api/objects/service/tcp/" }

// RefRequired implements sophos.RestObject
func (*ServiceTcp) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the ServiceTcp DELETE path
// Creates or updates the complete object tcp
func (*ServiceTcp) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/tcp/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceTcp PATCH path
// Changes to parts of the object tcp types
func (*ServiceTcp) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/tcp/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceTcp POST path
// Create a new service/tcp object
func (*ServiceTcp) PostPath() string {
	return "/api/objects/service/tcp/"
}

// PutPath implements sophos.RestObject and returns the ServiceTcp PUT path
// Creates or updates the complete object tcp
func (*ServiceTcp) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/tcp/%s", ref)
}

// ServiceUdp is an Sophos Endpoint subType and implements sophos.RestObject
type ServiceUdps []ServiceUdp
type ServiceUdp struct {
	Locked       string `json:"_locked"`
	Reference    string `json:"_ref"`
	_type        string `json:"_type"`
	AutoPfSvcDst string `json:"auto_pf_svc_dst"`
	AutoPfSvcSrc string `json:"auto_pf_svc_src"`
	Comment      string `json:"comment"`
	DstHigh      int64  `json:"dst_high"`
	DstLow       int64  `json:"dst_low"`
	Name         string `json:"name"`
	SrcHigh      int64  `json:"src_high"`
	SrcLow       int64  `json:"src_low"`
}

// GetPath implements sophos.RestObject and returns the ServiceUdps GET path
// Returns all available service/udp objects
func (*ServiceUdps) GetPath() string { return "/api/objects/service/udp/" }

// RefRequired implements sophos.RestObject
func (*ServiceUdps) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the ServiceUdps GET path
// Returns all available udp types
func (s *ServiceUdp) GetPath() string { return fmt.Sprintf("/api/objects/service/udp/%s", s.Reference) }

// RefRequired implements sophos.RestObject
func (s *ServiceUdp) RefRequired() (string, bool) { return s.Reference, true }

// DeletePath implements sophos.RestObject and returns the ServiceUdp DELETE path
// Creates or updates the complete object udp
func (*ServiceUdp) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/service/udp/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the ServiceUdp PATCH path
// Changes to parts of the object udp types
func (*ServiceUdp) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/udp/%s", ref)
}

// PostPath implements sophos.RestObject and returns the ServiceUdp POST path
// Create a new service/udp object
func (*ServiceUdp) PostPath() string {
	return "/api/objects/service/udp/"
}

// PutPath implements sophos.RestObject and returns the ServiceUdp PUT path
// Creates or updates the complete object udp
func (*ServiceUdp) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/service/udp/%s", ref)
}

// Type implements sophos.Object
func (s *ServiceUdp) GetType() string { return s._type }

// Smtp is a generated struct representing the Sophos Smtp Endpoint
// GET /api/nodes/smtp
type Smtp struct {
	AuthAaa                   []interface{} `json:"auth_aaa"`
	AuthStatus                int64         `json:"auth_status"`
	AvFooter                  string        `json:"av_footer"`
	AvFooterStatus            int64         `json:"av_footer_status"`
	BatvSecret                string        `json:"batv_secret"`
	BlockerService            string        `json:"blocker_service"`
	CffAsMarker               string        `json:"cff_as_marker"`
	DkimDomains               []interface{} `json:"dkim_domains"`
	DkimPrivateKey            string        `json:"dkim_private_key"`
	DkimSelector              string        `json:"dkim_selector"`
	EnableOldExpressionFilter int64         `json:"enable_old_expression_filter"`
	EncryptionUtility         string        `json:"encryption_utility"`
	Exceptions                []interface{} `json:"exceptions"`
	FootersMode               string        `json:"footers_mode"`
	GlobalAsReject            string        `json:"global_as_reject"`
	GlobalAvReject            int64         `json:"global_av_reject"`
	GlobalProfile             string        `json:"global_profile"`
	HostBlacklist             []interface{} `json:"host_blacklist"`
	Hostname                  string        `json:"hostname"`
	MaxMessageSize            int64         `json:"max_message_size"`
	Mode                      string        `json:"mode"`
	ParentProxyAuthPass       string        `json:"parent_proxy_auth_pass"`
	ParentProxyAuthStatus     int64         `json:"parent_proxy_auth_status"`
	ParentProxyAuthUser       string        `json:"parent_proxy_auth_user"`
	ParentProxyHost           string        `json:"parent_proxy_host"`
	ParentProxyPort           int64         `json:"parent_proxy_port"`
	ParentProxyStatus         int64         `json:"parent_proxy_status"`
	Postmaster                string        `json:"postmaster"`
	Profiles                  []interface{} `json:"profiles"`
	RecipientsMax             int64         `json:"recipients_max"`
	Relays                    []interface{} `json:"relays"`
	ScanOutgoingEmails        int64         `json:"scan_outgoing_emails"`
	ScannerPool               struct {
		MaxPool    int64   `json:"max_pool"`
		Thresholds []int64 `json:"thresholds"`
	} `json:"scanner_pool"`
	ScannerTimeout             int64         `json:"scanner_timeout"`
	SmarthostAuth              int64         `json:"smarthost_auth"`
	SmarthostHostname          string        `json:"smarthost_hostname"`
	SmarthostPass              string        `json:"smarthost_pass"`
	SmarthostPort              int64         `json:"smarthost_port"`
	SmarthostStatus            int64         `json:"smarthost_status"`
	SmarthostUser              string        `json:"smarthost_user"`
	SMTPAcceptMax              int64         `json:"smtp_accept_max"`
	SMTPAcceptPerConnectionMax int64         `json:"smtp_accept_per_connection_max"`
	SMTPAcceptPerHostMax       int64         `json:"smtp_accept_per_host_max"`
	Status                     int64         `json:"status"`
	TLSAvoid                   []interface{} `json:"tls_avoid"`
	TLSCert                    string        `json:"tls_cert"`
	TLSRequire                 []interface{} `json:"tls_require"`
	TLSRequireSenderDomains    []interface{} `json:"tls_require_sender_domains"`
	Transparent                int64         `json:"transparent"`
	TransparentSkip            []interface{} `json:"transparent_skip"`
	TransparentSkipAutoPf      int64         `json:"transparent_skip_auto_pf"`
	UpstreamHosts              []interface{} `json:"upstream_hosts"`
	UpstreamHostsOnly          int64         `json:"upstream_hosts_only"`
}

var defsSmtp = map[string]sophos.RestObject{
	"SmtpHeaderOperation": &SmtpHeaderOperation{},
	"SmtpProfile":         &SmtpProfile{},
	"SmtpException":       &SmtpException{},
	"SmtpGroup":           &SmtpGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Smtp's Objects
func (Smtp) RestObjects() map[string]sophos.RestObject {
	return defsSmtp
}

// GetPath implements sophos.RestGetter
func (*Smtp) GetPath() string { return "/api/nodes/smtp" }

// RefRequired implements sophos.RestGetter
func (*Smtp) RefRequired() (string, bool) { return "", false }

var defSmtp = &sophos.Definition{Description: "smtp", Name: "smtp", Link: "/api/definitions/smtp", Swag: map[string]sophos.MethodMap{"/objects/smtp/exception/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"smtp/exception"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"smtp/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object exception types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/exception that will be changes", Type: "", Required: true}}, Tags: []string{"smtp/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object exception", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/exception that will be updated", Type: "", Required: true}}, Tags: []string{"smtp/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/smtp/group/": {"post": sophos.MethodDescriptions{Description: "Create a new smtp/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/group that will be created", Type: "", Required: true}}, Tags: []string{"smtp/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available smtp/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"smtp/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/smtp/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"smtp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/smtp/header_operation/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"smtp/header_operation"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/smtp/profile/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"smtp/profile"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"smtp/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/profile that will be changes", Type: "", Required: true}}, Tags: []string{"smtp/profile"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/profile that will be updated", Type: "", Required: true}}, Tags: []string{"smtp/profile"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/smtp/profile/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"smtp/profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/smtp/exception/": {"get": sophos.MethodDescriptions{Description: "Returns all available smtp/exception objects", Parameters: []sophos.Parameter(nil), Tags: []string{"smtp/exception"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new smtp/exception object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/exception that will be created", Type: "", Required: true}}, Tags: []string{"smtp/exception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/smtp/exception/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"smtp/exception"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/smtp/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"smtp/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"smtp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/group that will be changes", Type: "", Required: true}}, Tags: []string{"smtp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/group that will be updated", Type: "", Required: true}}, Tags: []string{"smtp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/smtp/header_operation/": {"post": sophos.MethodDescriptions{Description: "Create a new smtp/header_operation object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/header_operation that will be created", Type: "", Required: true}}, Tags: []string{"smtp/header_operation"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available smtp/header_operation objects", Parameters: []sophos.Parameter(nil), Tags: []string{"smtp/header_operation"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/smtp/header_operation/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object header_operation", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/header_operation that will be updated", Type: "", Required: true}}, Tags: []string{"smtp/header_operation"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object header_operation", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"smtp/header_operation"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available header_operation types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"smtp/header_operation"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object header_operation types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/header_operation that will be changes", Type: "", Required: true}}, Tags: []string{"smtp/header_operation"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/smtp/profile/": {"get": sophos.MethodDescriptions{Description: "Returns all available smtp/profile objects", Parameters: []sophos.Parameter(nil), Tags: []string{"smtp/profile"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new smtp/profile object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "smtp/profile that will be created", Type: "", Required: true}}, Tags: []string{"smtp/profile"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Smtp
func (Smtp) Definition() sophos.Definition { return *defSmtp }

// ApiRoutes returns all known Smtp Paths
func (Smtp) ApiRoutes() []string {
	return []string{
		"/api/objects/smtp/exception/",
		"/api/objects/smtp/exception/{ref}",
		"/api/objects/smtp/exception/{ref}/usedby",
		"/api/objects/smtp/group/",
		"/api/objects/smtp/group/{ref}",
		"/api/objects/smtp/group/{ref}/usedby",
		"/api/objects/smtp/header_operation/",
		"/api/objects/smtp/header_operation/{ref}",
		"/api/objects/smtp/header_operation/{ref}/usedby",
		"/api/objects/smtp/profile/",
		"/api/objects/smtp/profile/{ref}",
		"/api/objects/smtp/profile/{ref}/usedby",
	}
}

// References returns the Smtp's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Smtp) References() []string {
	return []string{
		"REF_SmtpException",
		"REF_SmtpGroup",
		"REF_SmtpHeaderOperation",
		"REF_SmtpProfile",
	}
}

// SmtpHeaderOperation is an Sophos Endpoint subType and implements sophos.RestObject
type SmtpHeaderOperation []interface{}

// GetPath implements sophos.RestObject and returns the SmtpHeaderOperation GET path
// Returns all available smtp/header_operation objects
func (*SmtpHeaderOperation) GetPath() string { return "/api/objects/smtp/header_operation/" }

// RefRequired implements sophos.RestObject
func (*SmtpHeaderOperation) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SmtpHeaderOperation DELETE path
// Creates or updates the complete object header_operation
func (*SmtpHeaderOperation) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/header_operation/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SmtpHeaderOperation PATCH path
// Changes to parts of the object header_operation types
func (*SmtpHeaderOperation) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/header_operation/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SmtpHeaderOperation POST path
// Create a new smtp/header_operation object
func (*SmtpHeaderOperation) PostPath() string {
	return "/api/objects/smtp/header_operation/"
}

// PutPath implements sophos.RestObject and returns the SmtpHeaderOperation PUT path
// Creates or updates the complete object header_operation
func (*SmtpHeaderOperation) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/header_operation/%s", ref)
}

// SmtpProfile is an Sophos Endpoint subType and implements sophos.RestObject
type SmtpProfiles []SmtpProfile
type SmtpProfile struct {
	Locked                      string        `json:"_locked"`
	Reference                   string        `json:"_ref"`
	_type                       string        `json:"_type"`
	AdBaseDn                    string        `json:"ad_base_dn"`
	Batv                        bool          `json:"batv"`
	CffAv                       string        `json:"cff_av"`
	CffAvEngines                string        `json:"cff_av_engines"`
	CffFileExtensions           []string      `json:"cff_file_extensions"`
	Comment                     string        `json:"comment"`
	ConfidentialFooter          string        `json:"confidential_footer"`
	ConfidentialFooterStatus    bool          `json:"confidential_footer_status"`
	DlpAction                   string        `json:"dlp_action"`
	DlpCclRules                 []interface{} `json:"dlp_ccl_rules"`
	DlpCustomExpressions        []interface{} `json:"dlp_custom_expressions"`
	DlpNotificationAdmin        bool          `json:"dlp_notification_admin"`
	DlpNotificationOther        bool          `json:"dlp_notification_other"`
	DlpNotificationOtherAddress string        `json:"dlp_notification_other_address"`
	DlpNotificationSender       bool          `json:"dlp_notification_sender"`
	DlpScanAttachments          bool          `json:"dlp_scan_attachments"`
	Domains                     []interface{} `json:"domains"`
	GlobalAdd                   []interface{} `json:"global_add"`
	GlobalCopy                  []interface{} `json:"global_copy"`
	Greylisting                 bool          `json:"greylisting"`
	HeaderModification          []interface{} `json:"header_modification"`
	MimeAudio                   bool          `json:"mime_audio"`
	MimeBlacklist               []interface{} `json:"mime_blacklist"`
	MimeExecutable              bool          `json:"mime_executable"`
	MimeVideo                   bool          `json:"mime_video"`
	MimeWhitelist               []interface{} `json:"mime_whitelist"`
	Name                        string        `json:"name"`
	Rbl                         bool          `json:"rbl"`
	RblExtra                    []interface{} `json:"rbl_extra"`
	RcptAdServer                string        `json:"rcpt_ad_server"`
	RcptVerify                  string        `json:"rcpt_verify"`
	RdnsReject                  bool          `json:"rdns_reject"`
	RdnsRejectStrict            bool          `json:"rdns_reject_strict"`
	RouteList                   []interface{} `json:"route_list"`
	RouteTarget                 string        `json:"route_target"`
	RouteTargetPort             int64         `json:"route_target_port"`
	RouteTargetType             string        `json:"route_target_type"`
	SandboxMaxFilesizeMb        int64         `json:"sandbox_max_filesize_mb"`
	SandboxScanStatus           bool          `json:"sandbox_scan_status"`
	SenderBlacklist             []interface{} `json:"sender_blacklist"`
	Spam                        string        `json:"spam"`
	SpamExpressions             []interface{} `json:"spam_expressions"`
	Spamplus                    string        `json:"spamplus"`
	Spf                         bool          `json:"spf"`
	SpxTemplate                 string        `json:"spx_template"`
	Status                      bool          `json:"status"`
	Unscannable                 string        `json:"unscannable"`
}

// GetPath implements sophos.RestObject and returns the SmtpProfiles GET path
// Returns all available smtp/profile objects
func (*SmtpProfiles) GetPath() string { return "/api/objects/smtp/profile/" }

// RefRequired implements sophos.RestObject
func (*SmtpProfiles) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the SmtpProfiles GET path
// Returns all available profile types
func (s *SmtpProfile) GetPath() string {
	return fmt.Sprintf("/api/objects/smtp/profile/%s", s.Reference)
}

// RefRequired implements sophos.RestObject
func (s *SmtpProfile) RefRequired() (string, bool) { return s.Reference, true }

// DeletePath implements sophos.RestObject and returns the SmtpProfile DELETE path
// Creates or updates the complete object profile
func (*SmtpProfile) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/profile/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SmtpProfile PATCH path
// Changes to parts of the object profile types
func (*SmtpProfile) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/profile/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SmtpProfile POST path
// Create a new smtp/profile object
func (*SmtpProfile) PostPath() string {
	return "/api/objects/smtp/profile/"
}

// PutPath implements sophos.RestObject and returns the SmtpProfile PUT path
// Creates or updates the complete object profile
func (*SmtpProfile) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/profile/%s", ref)
}

// Type implements sophos.Object
func (s *SmtpProfile) GetType() string { return s._type }

// SmtpException is an Sophos Endpoint subType and implements sophos.RestObject
type SmtpException []interface{}

// GetPath implements sophos.RestObject and returns the SmtpException GET path
// Returns all available smtp/exception objects
func (*SmtpException) GetPath() string { return "/api/objects/smtp/exception/" }

// RefRequired implements sophos.RestObject
func (*SmtpException) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SmtpException DELETE path
// Creates or updates the complete object exception
func (*SmtpException) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/exception/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SmtpException PATCH path
// Changes to parts of the object exception types
func (*SmtpException) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/exception/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SmtpException POST path
// Create a new smtp/exception object
func (*SmtpException) PostPath() string {
	return "/api/objects/smtp/exception/"
}

// PutPath implements sophos.RestObject and returns the SmtpException PUT path
// Creates or updates the complete object exception
func (*SmtpException) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/exception/%s", ref)
}

// SmtpGroup is an Sophos Endpoint subType and implements sophos.RestObject
type SmtpGroup []interface{}

// GetPath implements sophos.RestObject and returns the SmtpGroup GET path
// Returns all available smtp/group objects
func (*SmtpGroup) GetPath() string { return "/api/objects/smtp/group/" }

// RefRequired implements sophos.RestObject
func (*SmtpGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SmtpGroup DELETE path
// Creates or updates the complete object group
func (*SmtpGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SmtpGroup PATCH path
// Changes to parts of the object group types
func (*SmtpGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SmtpGroup POST path
// Create a new smtp/group object
func (*SmtpGroup) PostPath() string {
	return "/api/objects/smtp/group/"
}

// PutPath implements sophos.RestObject and returns the SmtpGroup PUT path
// Creates or updates the complete object group
func (*SmtpGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/smtp/group/%s", ref)
}

// Snmp is a generated struct representing the Sophos Snmp Endpoint
// GET /api/nodes/snmp
type Snmp struct {
	AllowedNetworks []interface{} `json:"allowed_networks"`
	AuthPassword    string        `json:"auth_password"`
	AuthType        string        `json:"auth_type"`
	Community       string        `json:"community"`
	DeviceAdmin     string        `json:"device_admin"`
	DeviceLocation  string        `json:"device_location"`
	DeviceName      string        `json:"device_name"`
	EncryptPassword string        `json:"encrypt_password"`
	EncryptType     string        `json:"encrypt_type"`
	Status          int64         `json:"status"`
	Traps           []interface{} `json:"traps"`
	TrapsUseOldOids int64         `json:"traps_use_old_oids"`
	Username        string        `json:"username"`
	Version         string        `json:"version"`
}

var defsSnmp = map[string]sophos.RestObject{
	"SnmpGroup": &SnmpGroup{},
	"SnmpTrap":  &SnmpTrap{},
}

// RestObjects implements the sophos.Node interface and returns a map of Snmp's Objects
func (Snmp) RestObjects() map[string]sophos.RestObject {
	return defsSnmp
}

// GetPath implements sophos.RestGetter
func (*Snmp) GetPath() string { return "/api/nodes/snmp" }

// RefRequired implements sophos.RestGetter
func (*Snmp) RefRequired() (string, bool) { return "", false }

var defSnmp = &sophos.Definition{Description: "snmp", Name: "snmp", Link: "/api/definitions/snmp", Swag: map[string]sophos.MethodMap{"/objects/snmp/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available snmp/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"snmp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new snmp/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "snmp/group that will be created", Type: "", Required: true}}, Tags: []string{"snmp/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/snmp/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"snmp/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"snmp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "snmp/group that will be changes", Type: "", Required: true}}, Tags: []string{"snmp/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "snmp/group that will be updated", Type: "", Required: true}}, Tags: []string{"snmp/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/snmp/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"snmp/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/snmp/trap/": {"get": sophos.MethodDescriptions{Description: "Returns all available snmp/trap objects", Parameters: []sophos.Parameter(nil), Tags: []string{"snmp/trap"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new snmp/trap object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "snmp/trap that will be created", Type: "", Required: true}}, Tags: []string{"snmp/trap"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/snmp/trap/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object trap", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "snmp/trap that will be updated", Type: "", Required: true}}, Tags: []string{"snmp/trap"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object trap", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"snmp/trap"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available trap types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"snmp/trap"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object trap types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "snmp/trap that will be changes", Type: "", Required: true}}, Tags: []string{"snmp/trap"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/snmp/trap/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"snmp/trap"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}}}

// Definition returns the /api/definitions struct of Snmp
func (Snmp) Definition() sophos.Definition { return *defSnmp }

// ApiRoutes returns all known Snmp Paths
func (Snmp) ApiRoutes() []string {
	return []string{
		"/api/objects/snmp/group/",
		"/api/objects/snmp/group/{ref}",
		"/api/objects/snmp/group/{ref}/usedby",
		"/api/objects/snmp/trap/",
		"/api/objects/snmp/trap/{ref}",
		"/api/objects/snmp/trap/{ref}/usedby",
	}
}

// References returns the Snmp's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Snmp) References() []string {
	return []string{
		"REF_SnmpGroup",
		"REF_SnmpTrap",
	}
}

// SnmpGroup is an Sophos Endpoint subType and implements sophos.RestObject
type SnmpGroup []interface{}

// GetPath implements sophos.RestObject and returns the SnmpGroup GET path
// Returns all available snmp/group objects
func (*SnmpGroup) GetPath() string { return "/api/objects/snmp/group/" }

// RefRequired implements sophos.RestObject
func (*SnmpGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SnmpGroup DELETE path
// Creates or updates the complete object group
func (*SnmpGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/snmp/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SnmpGroup PATCH path
// Changes to parts of the object group types
func (*SnmpGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/snmp/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SnmpGroup POST path
// Create a new snmp/group object
func (*SnmpGroup) PostPath() string {
	return "/api/objects/snmp/group/"
}

// PutPath implements sophos.RestObject and returns the SnmpGroup PUT path
// Creates or updates the complete object group
func (*SnmpGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/snmp/group/%s", ref)
}

// SnmpTrap is an Sophos Endpoint subType and implements sophos.RestObject
type SnmpTrap []interface{}

// GetPath implements sophos.RestObject and returns the SnmpTrap GET path
// Returns all available snmp/trap objects
func (*SnmpTrap) GetPath() string { return "/api/objects/snmp/trap/" }

// RefRequired implements sophos.RestObject
func (*SnmpTrap) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SnmpTrap DELETE path
// Creates or updates the complete object trap
func (*SnmpTrap) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/snmp/trap/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SnmpTrap PATCH path
// Changes to parts of the object trap types
func (*SnmpTrap) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/snmp/trap/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SnmpTrap POST path
// Create a new snmp/trap object
func (*SnmpTrap) PostPath() string {
	return "/api/objects/snmp/trap/"
}

// PutPath implements sophos.RestObject and returns the SnmpTrap PUT path
// Creates or updates the complete object trap
func (*SnmpTrap) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/snmp/trap/%s", ref)
}

// Spx is a generated struct representing the Sophos Spx Endpoint
// GET /api/nodes/spx
type Spx struct {
	Global struct {
		ErrorNotificationTarget string `json:"error_notification_target"`
		ExpirySettings          struct {
			AllowSecureReplyDays     int64 `json:"allow_secure_reply_days"`
			KeepDelayedMailDays      int64 `json:"keep_delayed_mail_days"`
			KeepUnusedPwdDays        int64 `json:"keep_unused_pwd_days"`
			RegistrationReminderDays int64 `json:"registration_reminder_days"`
		} `json:"expiry_settings"`
		PasswordStrength struct {
			MinLength        int64 `json:"min_length"`
			RequireSpecChars int64 `json:"require_spec_chars"`
		} `json:"password_strength"`
		PortalSettings struct {
			AllowedNetworks  []interface{} `json:"allowed_networks"`
			Hostname         string        `json:"hostname"`
			InterfaceAddress string        `json:"interface_address"`
			Port             int64         `json:"port"`
		} `json:"portal_settings"`
		PoweredByLogo string `json:"powered_by_logo"`
		SpxPriority   int64  `json:"spx_priority"`
		Status        int64  `json:"status"`
	} `json:"global"`
	SpxAuth struct {
		Password string `json:"password"`
		Port     int64  `json:"port"`
		Server   string `json:"server"`
		URL      string `json:"url"`
	} `json:"spx_auth"`
	Templates []string `json:"templates"`
}

var defsSpx = map[string]sophos.RestObject{
	"SpxTemplate": &SpxTemplate{},
	"SpxGroup":    &SpxGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of Spx's Objects
func (Spx) RestObjects() map[string]sophos.RestObject {
	return defsSpx
}

// GetPath implements sophos.RestGetter
func (*Spx) GetPath() string { return "/api/nodes/spx" }

// RefRequired implements sophos.RestGetter
func (*Spx) RefRequired() (string, bool) { return "", false }

var defSpx = &sophos.Definition{Description: "spx", Name: "spx", Link: "/api/definitions/spx", Swag: map[string]sophos.MethodMap{"/objects/spx/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available spx/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"spx/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new spx/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "spx/group that will be created", Type: "", Required: true}}, Tags: []string{"spx/group"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/spx/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"spx/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"spx/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "spx/group that will be changes", Type: "", Required: true}}, Tags: []string{"spx/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "spx/group that will be updated", Type: "", Required: true}}, Tags: []string{"spx/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/spx/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"spx/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/spx/template/": {"get": sophos.MethodDescriptions{Description: "Returns all available spx/template objects", Parameters: []sophos.Parameter(nil), Tags: []string{"spx/template"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new spx/template object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "spx/template that will be created", Type: "", Required: true}}, Tags: []string{"spx/template"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/spx/template/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available template types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"spx/template"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object template types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "spx/template that will be changes", Type: "", Required: true}}, Tags: []string{"spx/template"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object template", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "spx/template that will be updated", Type: "", Required: true}}, Tags: []string{"spx/template"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object template", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"spx/template"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/spx/template/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"spx/template"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Spx
func (Spx) Definition() sophos.Definition { return *defSpx }

// ApiRoutes returns all known Spx Paths
func (Spx) ApiRoutes() []string {
	return []string{
		"/api/objects/spx/group/",
		"/api/objects/spx/group/{ref}",
		"/api/objects/spx/group/{ref}/usedby",
		"/api/objects/spx/template/",
		"/api/objects/spx/template/{ref}",
		"/api/objects/spx/template/{ref}/usedby",
	}
}

// References returns the Spx's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Spx) References() []string {
	return []string{
		"REF_SpxGroup",
		"REF_SpxTemplate",
	}
}

// SpxTemplate is an Sophos Endpoint subType and implements sophos.RestObject
type SpxTemplates []SpxTemplate
type SpxTemplate struct {
	Locked                         string `json:"_locked"`
	Reference                      string `json:"_ref"`
	_type                          string `json:"_type"`
	Comment                        string `json:"comment"`
	Name                           string `json:"name"`
	OrgName                        string `json:"org_name"`
	PdfCoverPage                   string `json:"pdf_cover_page"`
	PdfCoverPageExt                string `json:"pdf_cover_page_ext"`
	PdfCoverPageFile               string `json:"pdf_cover_page_file"`
	PdfEncryption                  string `json:"pdf_encryption"`
	PdfLanguage                    string `json:"pdf_language"`
	PdfPageSize                    string `json:"pdf_page_size"`
	PortalAuthRequired             bool   `json:"portal_auth_required"`
	PortalFooterImage              string `json:"portal_footer_image"`
	PortalFooterImageExt           string `json:"portal_footer_image_ext"`
	PortalFooterImageFile          string `json:"portal_footer_image_file"`
	PortalHeaderImage              string `json:"portal_header_image"`
	PortalHeaderImageExt           string `json:"portal_header_image_ext"`
	PortalHeaderImageFile          string `json:"portal_header_image_file"`
	PortalIncludeOriginalBody      bool   `json:"portal_include_original_body"`
	PortalReplyAllButton           bool   `json:"portal_reply_all_button"`
	PortalSecureReplyEnabled       bool   `json:"portal_secure_reply_enabled"`
	PwdChallengeQuestionNumber     string `json:"pwd_challenge_question_number"`
	PwdFunctionChange              bool   `json:"pwd_function_change"`
	PwdFunctionRecover             bool   `json:"pwd_function_recover"`
	PwdFunctionReset               bool   `json:"pwd_function_reset"`
	PwdNotificationBody            string `json:"pwd_notification_body"`
	PwdNotificationFooterImage     string `json:"pwd_notification_footer_image"`
	PwdNotificationFooterImageExt  string `json:"pwd_notification_footer_image_ext"`
	PwdNotificationFooterImageFile string `json:"pwd_notification_footer_image_file"`
	PwdNotificationHeaderImage     string `json:"pwd_notification_header_image"`
	PwdNotificationHeaderImageExt  string `json:"pwd_notification_header_image_ext"`
	PwdNotificationHeaderImageFile string `json:"pwd_notification_header_image_file"`
	PwdNotificationSubject         string `json:"pwd_notification_subject"`
	PwdRcptNotificationBody        string `json:"pwd_rcpt_notification_body"`
	PwdRcptNotificationSubject     string `json:"pwd_rcpt_notification_subject"`
	PwdType                        string `json:"pwd_type"`
	RcptFooterImage                string `json:"rcpt_footer_image"`
	RcptFooterImageExt             string `json:"rcpt_footer_image_ext"`
	RcptFooterImageFile            string `json:"rcpt_footer_image_file"`
	RcptHeaderImage                string `json:"rcpt_header_image"`
	RcptHeaderImageExt             string `json:"rcpt_header_image_ext"`
	RcptHeaderImageFile            string `json:"rcpt_header_image_file"`
	RcptInstructions               string `json:"rcpt_instructions"`
	RemoveSophosLogo               bool   `json:"remove_sophos_logo"`
}

// GetPath implements sophos.RestObject and returns the SpxTemplate GET path
// Returns all available spx/template objects
func (*SpxTemplate) GetPath() string { return "/api/objects/spx/template/" }

// RefRequired implements sophos.RestObject
func (*SpxTemplate) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SpxTemplate DELETE path
// Creates or updates the complete object template
func (*SpxTemplate) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/template/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SpxTemplate PATCH path
// Changes to parts of the object template types
func (*SpxTemplate) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/template/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SpxTemplate POST path
// Create a new spx/template object
func (*SpxTemplate) PostPath() string {
	return "/api/objects/spx/template/"
}

// PutPath implements sophos.RestObject and returns the SpxTemplate PUT path
// Creates or updates the complete object template
func (*SpxTemplate) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/template/%s", ref)
}

// SpxGroup is an Sophos Endpoint subType and implements sophos.RestObject
type SpxGroup []interface{}

// GetPath implements sophos.RestObject and returns the SpxGroup GET path
// Returns all available spx/group objects
func (*SpxGroup) GetPath() string { return "/api/objects/spx/group/" }

// RefRequired implements sophos.RestObject
func (*SpxGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SpxGroup DELETE path
// Creates or updates the complete object group
func (*SpxGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SpxGroup PATCH path
// Changes to parts of the object group types
func (*SpxGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SpxGroup POST path
// Create a new spx/group object
func (*SpxGroup) PostPath() string {
	return "/api/objects/spx/group/"
}

// PutPath implements sophos.RestObject and returns the SpxGroup PUT path
// Creates or updates the complete object group
func (*SpxGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/group/%s", ref)
}

// SslVpn is a generated struct representing the Sophos SslVpn Endpoint
// GET /api/nodes/ssl_vpn
type SslVpn struct {
	AuthenticationAlgorithm string `json:"authentication_algorithm"`
	Certificate             string `json:"certificate"`
	Compression             int64  `json:"compression"`
	DatachannelKeyLifetime  int64  `json:"datachannel_key_lifetime"`
	Debug                   int64  `json:"debug"`
	DhKeySize               string `json:"dh_key_size"`
	DuplicateCn             int64  `json:"duplicate_cn"`
	EncryptionAlgorithm     string `json:"encryption_algorithm"`
	Hostname                string `json:"hostname"`
	Interface               string `json:"interface"`
	InterfaceAddress        string `json:"interface_address"`
	IPAssignmentPool        string `json:"ip_assignment_pool"`
	Port                    int64  `json:"port"`
	Protocol                string `json:"protocol"`
	UserAuthOptional        int64  `json:"user_auth_optional"`
}

var defsSslVpn = map[string]sophos.RestObject{
	"SslVpnRemoteAccessProfile": &SslVpnRemoteAccessProfile{},
	"SslVpnServerConnection":    &SslVpnServerConnection{},
	"SslVpnClientConnection":    &SslVpnClientConnection{},
	"SslVpnGroup":               &SslVpnGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of SslVpn's Objects
func (SslVpn) RestObjects() map[string]sophos.RestObject {
	return defsSslVpn
}

// GetPath implements sophos.RestGetter
func (*SslVpn) GetPath() string { return "/api/nodes/ssl_vpn" }

// RefRequired implements sophos.RestGetter
func (*SslVpn) RefRequired() (string, bool) { return "", false }

var defSslVpn = &sophos.Definition{Description: "ssl_vpn", Name: "ssl_vpn", Link: "/api/definitions/ssl_vpn", Swag: map[string]sophos.MethodMap{"/objects/ssl_vpn/client_connection/": {"get": sophos.MethodDescriptions{Description: "Returns all available ssl_vpn/client_connection objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ssl_vpn/client_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ssl_vpn/client_connection object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/client_connection that will be created", Type: "", Required: true}}, Tags: []string{"ssl_vpn/client_connection"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ssl_vpn/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ssl_vpn/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ssl_vpn/remote_access_profile/": {"get": sophos.MethodDescriptions{Description: "Returns all available ssl_vpn/remote_access_profile objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ssl_vpn/remote_access_profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ssl_vpn/remote_access_profile object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/remote_access_profile that will be created", Type: "", Required: true}}, Tags: []string{"ssl_vpn/remote_access_profile"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/ssl_vpn/remote_access_profile/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ssl_vpn/remote_access_profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ssl_vpn/server_connection/": {"get": sophos.MethodDescriptions{Description: "Returns all available ssl_vpn/server_connection objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ssl_vpn/server_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ssl_vpn/server_connection object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/server_connection that will be created", Type: "", Required: true}}, Tags: []string{"ssl_vpn/server_connection"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/ssl_vpn/server_connection/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object server_connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ssl_vpn/server_connection"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available server_connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ssl_vpn/server_connection"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object server_connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/server_connection that will be changes", Type: "", Required: true}}, Tags: []string{"ssl_vpn/server_connection"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object server_connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/server_connection that will be updated", Type: "", Required: true}}, Tags: []string{"ssl_vpn/server_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ssl_vpn/client_connection/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object client_connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ssl_vpn/client_connection"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available client_connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ssl_vpn/client_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object client_connection types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/client_connection that will be changes", Type: "", Required: true}}, Tags: []string{"ssl_vpn/client_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object client_connection", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/client_connection that will be updated", Type: "", Required: true}}, Tags: []string{"ssl_vpn/client_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ssl_vpn/client_connection/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ssl_vpn/client_connection"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/ssl_vpn/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available ssl_vpn/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"ssl_vpn/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}, "post": sophos.MethodDescriptions{Description: "Create a new ssl_vpn/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/group that will be created", Type: "", Required: true}}, Tags: []string{"ssl_vpn/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}, "/objects/ssl_vpn/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ssl_vpn/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ssl_vpn/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/group that will be changes", Type: "", Required: true}}, Tags: []string{"ssl_vpn/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/group that will be updated", Type: "", Required: true}}, Tags: []string{"ssl_vpn/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/ssl_vpn/remote_access_profile/{ref}": {"get": sophos.MethodDescriptions{Description: "Returns all available remote_access_profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ssl_vpn/remote_access_profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object remote_access_profile types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/remote_access_profile that will be changes", Type: "", Required: true}}, Tags: []string{"ssl_vpn/remote_access_profile"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object remote_access_profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "ssl_vpn/remote_access_profile that will be updated", Type: "", Required: true}}, Tags: []string{"ssl_vpn/remote_access_profile"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object remote_access_profile", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"ssl_vpn/remote_access_profile"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}}}}, "/objects/ssl_vpn/server_connection/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"ssl_vpn/server_connection"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}}}

// Definition returns the /api/definitions struct of SslVpn
func (SslVpn) Definition() sophos.Definition { return *defSslVpn }

// ApiRoutes returns all known SslVpn Paths
func (SslVpn) ApiRoutes() []string {
	return []string{
		"/api/objects/ssl_vpn/client_connection/",
		"/api/objects/ssl_vpn/client_connection/{ref}",
		"/api/objects/ssl_vpn/client_connection/{ref}/usedby",
		"/api/objects/ssl_vpn/group/",
		"/api/objects/ssl_vpn/group/{ref}",
		"/api/objects/ssl_vpn/group/{ref}/usedby",
		"/api/objects/ssl_vpn/remote_access_profile/",
		"/api/objects/ssl_vpn/remote_access_profile/{ref}",
		"/api/objects/ssl_vpn/remote_access_profile/{ref}/usedby",
		"/api/objects/ssl_vpn/server_connection/",
		"/api/objects/ssl_vpn/server_connection/{ref}",
		"/api/objects/ssl_vpn/server_connection/{ref}/usedby",
	}
}

// References returns the SslVpn's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (SslVpn) References() []string {
	return []string{
		"REF_SslVpnClientConnection",
		"REF_SslVpnGroup",
		"REF_SslVpnRemoteAccessProfile",
		"REF_SslVpnServerConnection",
	}
}

// SslVpnRemoteAccessProfile is an Sophos Endpoint subType and implements sophos.RestObject
type SslVpnRemoteAccessProfiles []SslVpnRemoteAccessProfile
type SslVpnRemoteAccessProfile struct {
	Locked     string   `json:"_locked"`
	Reference  string   `json:"_ref"`
	_type      string   `json:"_type"`
	Aaa        []string `json:"aaa"`
	AutoPfIn   string   `json:"auto_pf_in"`
	AutoPfrule bool     `json:"auto_pfrule"`
	Comment    string   `json:"comment"`
	Name       string   `json:"name"`
	Networks   []string `json:"networks"`
	Status     bool     `json:"status"`
}

// GetPath implements sophos.RestObject and returns the SslVpnRemoteAccessProfile GET path
// Returns all available ssl_vpn/remote_access_profile objects
func (*SslVpnRemoteAccessProfile) GetPath() string {
	return "/api/objects/ssl_vpn/remote_access_profile/"
}

// RefRequired implements sophos.RestObject
func (*SslVpnRemoteAccessProfile) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SslVpnRemoteAccessProfile DELETE path
// Creates or updates the complete object remote_access_profile
func (*SslVpnRemoteAccessProfile) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/remote_access_profile/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SslVpnRemoteAccessProfile PATCH path
// Changes to parts of the object remote_access_profile types
func (*SslVpnRemoteAccessProfile) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/remote_access_profile/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SslVpnRemoteAccessProfile POST path
// Create a new ssl_vpn/remote_access_profile object
func (*SslVpnRemoteAccessProfile) PostPath() string {
	return "/api/objects/ssl_vpn/remote_access_profile/"
}

// PutPath implements sophos.RestObject and returns the SslVpnRemoteAccessProfile PUT path
// Creates or updates the complete object remote_access_profile
func (*SslVpnRemoteAccessProfile) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/remote_access_profile/%s", ref)
}

// SslVpnServerConnection is an Sophos Endpoint subType and implements sophos.RestObject
type SslVpnServerConnection []interface{}

// GetPath implements sophos.RestObject and returns the SslVpnServerConnection GET path
// Returns all available ssl_vpn/server_connection objects
func (*SslVpnServerConnection) GetPath() string { return "/api/objects/ssl_vpn/server_connection/" }

// RefRequired implements sophos.RestObject
func (*SslVpnServerConnection) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SslVpnServerConnection DELETE path
// Creates or updates the complete object server_connection
func (*SslVpnServerConnection) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/server_connection/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SslVpnServerConnection PATCH path
// Changes to parts of the object server_connection types
func (*SslVpnServerConnection) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/server_connection/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SslVpnServerConnection POST path
// Create a new ssl_vpn/server_connection object
func (*SslVpnServerConnection) PostPath() string {
	return "/api/objects/ssl_vpn/server_connection/"
}

// PutPath implements sophos.RestObject and returns the SslVpnServerConnection PUT path
// Creates or updates the complete object server_connection
func (*SslVpnServerConnection) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/server_connection/%s", ref)
}

// SslVpnClientConnection is an Sophos Endpoint subType and implements sophos.RestObject
type SslVpnClientConnections []SslVpnClientConnection
type SslVpnClientConnection struct {
	Locked                  string   `json:"_locked"`
	Reference               string   `json:"_ref"`
	_type                   string   `json:"_type"`
	AuthenticationAlgorithm string   `json:"authentication_algorithm"`
	AutoPfIn                string   `json:"auto_pf_in"`
	AutoPfOut               string   `json:"auto_pf_out"`
	AutoPfrule              bool     `json:"auto_pfrule"`
	CaCert                  string   `json:"ca_cert"`
	Certificate             string   `json:"certificate"`
	Comment                 string   `json:"comment"`
	Compression             bool     `json:"compression"`
	EncryptionAlgorithm     string   `json:"encryption_algorithm"`
	Engine                  string   `json:"engine"`
	Interface               string   `json:"interface"`
	Key                     string   `json:"key"`
	LocalNetworks           []string `json:"local_networks"`
	Name                    string   `json:"name"`
	Password                string   `json:"password"`
	PlainServerAddress      string   `json:"plain_server_address"`
	Protocol                string   `json:"protocol"`
	ProxyAuthPass           string   `json:"proxy_auth_pass"`
	ProxyAuthStatus         bool     `json:"proxy_auth_status"`
	ProxyAuthUser           string   `json:"proxy_auth_user"`
	ProxyHost               string   `json:"proxy_host"`
	ProxyPort               int64    `json:"proxy_port"`
	ProxyStatus             bool     `json:"proxy_status"`
	RemoteNetworks          []string `json:"remote_networks"`
	ServerAddress           string   `json:"server_address"`
	ServerDn                string   `json:"server_dn"`
	ServerOverrideHostname  string   `json:"server_override_hostname"`
	ServerOverrideStatus    bool     `json:"server_override_status"`
	ServerPort              int64    `json:"server_port"`
	Status                  bool     `json:"status"`
	Username                string   `json:"username"`
}

// GetPath implements sophos.RestObject and returns the SslVpnClientConnection GET path
// Returns all available ssl_vpn/client_connection objects
func (*SslVpnClientConnection) GetPath() string { return "/api/objects/ssl_vpn/client_connection/" }

// RefRequired implements sophos.RestObject
func (*SslVpnClientConnection) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SslVpnClientConnection DELETE path
// Creates or updates the complete object client_connection
func (*SslVpnClientConnection) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/client_connection/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SslVpnClientConnection PATCH path
// Changes to parts of the object client_connection types
func (*SslVpnClientConnection) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/client_connection/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SslVpnClientConnection POST path
// Create a new ssl_vpn/client_connection object
func (*SslVpnClientConnection) PostPath() string {
	return "/api/objects/ssl_vpn/client_connection/"
}

// PutPath implements sophos.RestObject and returns the SslVpnClientConnection PUT path
// Creates or updates the complete object client_connection
func (*SslVpnClientConnection) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/client_connection/%s", ref)
}

// SslVpnGroup is an Sophos Endpoint subType and implements sophos.RestObject
type SslVpnGroup []interface{}

// GetPath implements sophos.RestObject and returns the SslVpnGroup GET path
// Returns all available ssl_vpn/group objects
func (*SslVpnGroup) GetPath() string { return "/api/objects/ssl_vpn/group/" }

// RefRequired implements sophos.RestObject
func (*SslVpnGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the SslVpnGroup DELETE path
// Creates or updates the complete object group
func (*SslVpnGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SslVpnGroup PATCH path
// Changes to parts of the object group types
func (*SslVpnGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SslVpnGroup POST path
// Create a new ssl_vpn/group object
func (*SslVpnGroup) PostPath() string {
	return "/api/objects/ssl_vpn/group/"
}

// PutPath implements sophos.RestObject and returns the SslVpnGroup PUT path
// Creates or updates the complete object group
func (*SslVpnGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/ssl_vpn/group/%s", ref)
}

// Stas is a generated struct representing the Sophos Stas Endpoint
// GET /api/nodes/stas
type Stas struct {
	StasGroup     StasGroup     `json:"stas_group"`
	StasCollector StasCollector `json:"stas_collector"`
}

var defsStas = map[string]sophos.RestObject{
	"StasGroup":     &StasGroup{},
	"StasCollector": &StasCollector{},
}

// RestObjects implements the sophos.Node interface and returns a map of Stas's Objects
func (Stas) RestObjects() map[string]sophos.RestObject {
	return defsStas
}

// GetPath implements sophos.RestGetter
func (*Stas) GetPath() string { return "/api/nodes/stas" }

// RefRequired implements sophos.RestGetter
func (*Stas) RefRequired() (string, bool) { return "", false }

var defStas = &sophos.Definition{Description: "stas", Name: "stas", Link: "/api/definitions/stas", Swag: map[string]sophos.MethodMap{"/objects/stas/collector/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object collector", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available collector types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object collector types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/collector that will be changes", Type: "", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object collector", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/collector that will be updated", Type: "", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/stas/collector/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}}}}, "/objects/stas/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available stas/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "post": sophos.MethodDescriptions{Description: "Create a new stas/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/group that will be created", Type: "", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}}, "/objects/stas/group/{ref}": {"patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/group that will be changes", Type: "", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/group that will be updated", Type: "", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/stas/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"stas/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/stas/collector/": {"post": sophos.MethodDescriptions{Description: "Create a new stas/collector object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "stas/collector that will be created", Type: "", Required: true}}, Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available stas/collector objects", Parameters: []sophos.Parameter(nil), Tags: []string{"stas/collector"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of Stas
func (Stas) Definition() sophos.Definition { return *defStas }

// ApiRoutes returns all known Stas Paths
func (Stas) ApiRoutes() []string {
	return []string{
		"/api/objects/stas/collector/",
		"/api/objects/stas/collector/{ref}",
		"/api/objects/stas/collector/{ref}/usedby",
		"/api/objects/stas/group/",
		"/api/objects/stas/group/{ref}",
		"/api/objects/stas/group/{ref}/usedby",
	}
}

// References returns the Stas's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Stas) References() []string {
	return []string{
		"REF_StasCollector",
		"REF_StasGroup",
	}
}

// StasGroup is an Sophos Endpoint subType and implements sophos.RestObject
type StasGroup []interface{}

// GetPath implements sophos.RestObject and returns the StasGroup GET path
// Returns all available stas/group objects
func (*StasGroup) GetPath() string { return "/api/objects/stas/group/" }

// RefRequired implements sophos.RestObject
func (*StasGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the StasGroup DELETE path
// Creates or updates the complete object group
func (*StasGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the StasGroup PATCH path
// Changes to parts of the object group types
func (*StasGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the StasGroup POST path
// Create a new stas/group object
func (*StasGroup) PostPath() string {
	return "/api/objects/stas/group/"
}

// PutPath implements sophos.RestObject and returns the StasGroup PUT path
// Creates or updates the complete object group
func (*StasGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/group/%s", ref)
}

// StasCollector is an Sophos Endpoint subType and implements sophos.RestObject
type StasCollector []interface{}

// GetPath implements sophos.RestObject and returns the StasCollector GET path
// Returns all available stas/collector objects
func (*StasCollector) GetPath() string { return "/api/objects/stas/collector/" }

// RefRequired implements sophos.RestObject
func (*StasCollector) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the StasCollector DELETE path
// Creates or updates the complete object collector
func (*StasCollector) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/collector/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the StasCollector PATCH path
// Changes to parts of the object collector types
func (*StasCollector) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/collector/%s", ref)
}

// PostPath implements sophos.RestObject and returns the StasCollector POST path
// Create a new stas/collector object
func (*StasCollector) PostPath() string {
	return "/api/objects/stas/collector/"
}

// PutPath implements sophos.RestObject and returns the StasCollector PUT path
// Creates or updates the complete object collector
func (*StasCollector) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/stas/collector/%s", ref)
}

// Time is a generated struct representing the Sophos Time Endpoint
// GET /api/nodes/time
type Time struct {
	TimeGroup     TimeGroup     `json:"time_group"`
	TimeSingle    TimeSingle    `json:"time_single"`
	TimeRecurring TimeRecurring `json:"time_recurring"`
}

var defsTime = map[string]sophos.RestObject{
	"TimeGroup":     &TimeGroup{},
	"TimeSingle":    &TimeSingle{},
	"TimeRecurring": &TimeRecurring{},
}

// RestObjects implements the sophos.Node interface and returns a map of Time's Objects
func (Time) RestObjects() map[string]sophos.RestObject {
	return defsTime
}

// GetPath implements sophos.RestGetter
func (*Time) GetPath() string { return "/api/nodes/time" }

// RefRequired implements sophos.RestGetter
func (*Time) RefRequired() (string, bool) { return "", false }

var defTime = &sophos.Definition{Description: "time", Name: "time", Link: "/api/definitions/time", Swag: map[string]sophos.MethodMap{"/objects/time/group/": {"post": sophos.MethodDescriptions{Description: "Create a new time/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "time/group that will be created", Type: "", Required: true}}, Tags: []string{"time/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available time/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"time/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/time/recurring/": {"get": sophos.MethodDescriptions{Description: "Returns all available time/recurring objects", Parameters: []sophos.Parameter(nil), Tags: []string{"time/recurring"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new time/recurring object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "time/recurring that will be created", Type: "", Required: true}}, Tags: []string{"time/recurring"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/time/recurring/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object recurring", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"time/recurring"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available recurring types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"time/recurring"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object recurring types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "time/recurring that will be changes", Type: "", Required: true}}, Tags: []string{"time/recurring"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object recurring", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "time/recurring that will be updated", Type: "", Required: true}}, Tags: []string{"time/recurring"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}}, "/objects/time/recurring/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"time/recurring"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/time/single/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object single", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "time/single that will be updated", Type: "", Required: true}}, Tags: []string{"time/single"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object single", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"time/single"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available single types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"time/single"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object single types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "time/single that will be changes", Type: "", Required: true}}, Tags: []string{"time/single"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/time/single/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"time/single"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/time/group/{ref}": {"put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "time/group that will be updated", Type: "", Required: true}}, Tags: []string{"time/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"time/group"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"time/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "time/group that will be changes", Type: "", Required: true}}, Tags: []string{"time/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/time/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"time/group"}, Responses: map[int]struct{ Description string }{403: {Description: "Forbidden"}, 200: {Description: "OK"}, 401: {Description: "Unauthorized"}}}}, "/objects/time/single/": {"get": sophos.MethodDescriptions{Description: "Returns all available time/single objects", Parameters: []sophos.Parameter(nil), Tags: []string{"time/single"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new time/single object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "time/single that will be created", Type: "", Required: true}}, Tags: []string{"time/single"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}}}}}}

// Definition returns the /api/definitions struct of Time
func (Time) Definition() sophos.Definition { return *defTime }

// ApiRoutes returns all known Time Paths
func (Time) ApiRoutes() []string {
	return []string{
		"/api/objects/time/group/",
		"/api/objects/time/group/{ref}",
		"/api/objects/time/group/{ref}/usedby",
		"/api/objects/time/recurring/",
		"/api/objects/time/recurring/{ref}",
		"/api/objects/time/recurring/{ref}/usedby",
		"/api/objects/time/single/",
		"/api/objects/time/single/{ref}",
		"/api/objects/time/single/{ref}/usedby",
	}
}

// References returns the Time's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Time) References() []string {
	return []string{
		"REF_TimeGroup",
		"REF_TimeRecurring",
		"REF_TimeSingle",
	}
}

// TimeGroup is an Sophos Endpoint subType and implements sophos.RestObject
type TimeGroup []interface{}

// GetPath implements sophos.RestObject and returns the TimeGroup GET path
// Returns all available time/group objects
func (*TimeGroup) GetPath() string { return "/api/objects/time/group/" }

// RefRequired implements sophos.RestObject
func (*TimeGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the TimeGroup DELETE path
// Creates or updates the complete object group
func (*TimeGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/time/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the TimeGroup PATCH path
// Changes to parts of the object group types
func (*TimeGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/time/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the TimeGroup POST path
// Create a new time/group object
func (*TimeGroup) PostPath() string {
	return "/api/objects/time/group/"
}

// PutPath implements sophos.RestObject and returns the TimeGroup PUT path
// Creates or updates the complete object group
func (*TimeGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/time/group/%s", ref)
}

// TimeSingle is an Sophos Endpoint subType and implements sophos.RestObject
type TimeSingle []interface{}

// GetPath implements sophos.RestObject and returns the TimeSingle GET path
// Returns all available time/single objects
func (*TimeSingle) GetPath() string { return "/api/objects/time/single/" }

// RefRequired implements sophos.RestObject
func (*TimeSingle) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the TimeSingle DELETE path
// Creates or updates the complete object single
func (*TimeSingle) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/time/single/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the TimeSingle PATCH path
// Changes to parts of the object single types
func (*TimeSingle) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/time/single/%s", ref)
}

// PostPath implements sophos.RestObject and returns the TimeSingle POST path
// Create a new time/single object
func (*TimeSingle) PostPath() string {
	return "/api/objects/time/single/"
}

// PutPath implements sophos.RestObject and returns the TimeSingle PUT path
// Creates or updates the complete object single
func (*TimeSingle) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/time/single/%s", ref)
}

// TimeRecurring is an Sophos Endpoint subType and implements sophos.RestObject
type TimeRecurrings []TimeRecurring
type TimeRecurring struct {
	Locked    string   `json:"_locked"`
	Reference string   `json:"_ref"`
	_type     string   `json:"_type"`
	Comment   string   `json:"comment"`
	EndTime   string   `json:"end_time"`
	Name      string   `json:"name"`
	StartTime string   `json:"start_time"`
	Weekdays  []string `json:"weekdays"`
}

// GetPath implements sophos.RestObject and returns the TimeRecurring GET path
// Returns all available time/recurring objects
func (*TimeRecurring) GetPath() string { return "/api/objects/time/recurring/" }

// RefRequired implements sophos.RestObject
func (*TimeRecurring) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the TimeRecurring DELETE path
// Creates or updates the complete object recurring
func (*TimeRecurring) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/time/recurring/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the TimeRecurring PATCH path
// Changes to parts of the object recurring types
func (*TimeRecurring) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/time/recurring/%s", ref)
}

// PostPath implements sophos.RestObject and returns the TimeRecurring POST path
// Create a new time/recurring object
func (*TimeRecurring) PostPath() string {
	return "/api/objects/time/recurring/"
}

// PutPath implements sophos.RestObject and returns the TimeRecurring PUT path
// Creates or updates the complete object recurring
func (*TimeRecurring) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/time/recurring/%s", ref)
}

// UserPreferences is a generated struct representing the Sophos UserPreferences Endpoint
// GET /api/nodes/user_preferences
type UserPreferences struct {
	UserPreferencesWebadmin UserPreferencesWebadmin `json:"user_preferences_webadmin"`
	UserPreferencesGroup    UserPreferencesGroup    `json:"user_preferences_group"`
}

var defsUserPreferences = map[string]sophos.RestObject{
	"UserPreferencesWebadmin": &UserPreferencesWebadmin{},
	"UserPreferencesGroup":    &UserPreferencesGroup{},
}

// RestObjects implements the sophos.Node interface and returns a map of UserPreferences's Objects
func (UserPreferences) RestObjects() map[string]sophos.RestObject {
	return defsUserPreferences
}

// GetPath implements sophos.RestGetter
func (*UserPreferences) GetPath() string { return "/api/nodes/user_preferences" }

// RefRequired implements sophos.RestGetter
func (*UserPreferences) RefRequired() (string, bool) { return "", false }

var defUserPreferences = &sophos.Definition{Description: "user_preferences", Name: "user_preferences", Link: "/api/definitions/user_preferences", Swag: map[string]sophos.MethodMap{"/objects/user_preferences/group/": {"get": sophos.MethodDescriptions{Description: "Returns all available user_preferences/group objects", Parameters: []sophos.Parameter(nil), Tags: []string{"user_preferences/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "post": sophos.MethodDescriptions{Description: "Create a new user_preferences/group object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "user_preferences/group that will be created", Type: "", Required: true}}, Tags: []string{"user_preferences/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 201: {Description: "OK"}, 400: {Description: "BadRequest"}}}}, "/objects/user_preferences/group/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"user_preferences/group"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 204: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"user_preferences/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object group types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "user_preferences/group that will be changes", Type: "", Required: true}}, Tags: []string{"user_preferences/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object group", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "user_preferences/group that will be updated", Type: "", Required: true}}, Tags: []string{"user_preferences/group"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/user_preferences/group/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"user_preferences/group"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/user_preferences/webadmin/": {"get": sophos.MethodDescriptions{Description: "Returns all available user_preferences/webadmin objects", Parameters: []sophos.Parameter(nil), Tags: []string{"user_preferences/webadmin"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "post": sophos.MethodDescriptions{Description: "Create a new user_preferences/webadmin object", Parameters: []sophos.Parameter{{Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "user_preferences/webadmin that will be created", Type: "", Required: true}}, Tags: []string{"user_preferences/webadmin"}, Responses: map[int]struct{ Description string }{201: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}, "/objects/user_preferences/webadmin/{ref}": {"delete": sophos.MethodDescriptions{Description: "Creates or updates the complete object webadmin", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}}, Tags: []string{"user_preferences/webadmin"}, Responses: map[int]struct{ Description string }{204: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "get": sophos.MethodDescriptions{Description: "Returns all available webadmin types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"user_preferences/webadmin"}, Responses: map[int]struct{ Description string }{401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}}}, "patch": sophos.MethodDescriptions{Description: "Changes to parts of the object webadmin types", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "body", In: "body", Description: "user_preferences/webadmin that will be changes", Type: "", Required: true}}, Tags: []string{"user_preferences/webadmin"}, Responses: map[int]struct{ Description string }{404: {Description: "NotFound"}, 200: {Description: "OK"}, 400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}, "put": sophos.MethodDescriptions{Description: "Creates or updates the complete object webadmin", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}, {Name: "X-Restd-Err-Ack", In: "header", Description: "Acknowledge confd errors (required for DELETE calls).", Type: "string", Required: false}, {Name: "X-Restd-Lock-Override", In: "header", Description: "Override confd lock (required to perform action on {'_locked': 'user'} objects).", Type: "string", Required: false}, {Name: "X-Restd-Insert", In: "header", Description: "Path and position (optional for arrays, required for hashes, not used for strings) of a node, where to insert the newly created object, format 'node-path [index]', e.g. array: 'packetfilter.rules 2', string: 'ha.aws.cloudwatch.profile', hash: 'auth.api_tokens myToken123'", Type: "string", Required: false}, {Name: "body", In: "body", Description: "user_preferences/webadmin that will be updated", Type: "", Required: true}}, Tags: []string{"user_preferences/webadmin"}, Responses: map[int]struct{ Description string }{400: {Description: "BadRequest"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}, 404: {Description: "NotFound"}, 200: {Description: "OK"}}}}, "/objects/user_preferences/webadmin/{ref}/usedby": {"get": sophos.MethodDescriptions{Description: "Returns the objects and the nodes that use the object with the given ref", Parameters: []sophos.Parameter{{Name: "ref", In: "path", Description: "id of the object", Type: "string", Required: true}}, Tags: []string{"user_preferences/webadmin"}, Responses: map[int]struct{ Description string }{200: {Description: "OK"}, 401: {Description: "Unauthorized"}, 403: {Description: "Forbidden"}}}}}}

// Definition returns the /api/definitions struct of UserPreferences
func (UserPreferences) Definition() sophos.Definition { return *defUserPreferences }

// ApiRoutes returns all known UserPreferences Paths
func (UserPreferences) ApiRoutes() []string {
	return []string{
		"/api/objects/user_preferences/group/",
		"/api/objects/user_preferences/group/{ref}",
		"/api/objects/user_preferences/group/{ref}/usedby",
		"/api/objects/user_preferences/webadmin/",
		"/api/objects/user_preferences/webadmin/{ref}",
		"/api/objects/user_preferences/webadmin/{ref}/usedby",
	}
}

// References returns the UserPreferences's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (UserPreferences) References() []string {
	return []string{
		"REF_UserPreferencesGroup",
		"REF_UserPreferencesWebadmin",
	}
}

// UserPreferencesWebadmin is an Sophos Endpoint subType and implements sophos.RestObject
type UserPreferencesWebadmins []UserPreferencesWebadmin
type UserPreferencesWebadmin struct {
	Locked               string   `json:"_locked"`
	Reference            string   `json:"_ref"`
	_type                string   `json:"_type"`
	BrowserTitle         string   `json:"browser_title"`
	Comment              string   `json:"comment"`
	DashboardAutogroup   bool     `json:"dashboard_autogroup"`
	DashboardLeftcolumn  []string `json:"dashboard_leftcolumn"`
	DashboardRightcolumn []string `json:"dashboard_rightcolumn"`
	ItemsPerPage         string   `json:"items_per_page"`
	Language             string   `json:"language"`
	MarketingWindow      bool     `json:"marketing_window"`
	Name                 string   `json:"name"`
	Shortcuts            struct {
		Aaa       []string `json:"aaa"`
		Epp       []string `json:"epp"`
		Interface []string `json:"interface"`
		Network   []string `json:"network"`
		Searchbox []string `json:"searchbox"`
		Service   []string `json:"service"`
	} `json:"shortcuts"`
	SkipTermsOfUse bool `json:"skip_terms_of_use"`
}

// GetPath implements sophos.RestObject and returns the UserPreferencesWebadmin GET path
// Returns all available user_preferences/webadmin objects
func (*UserPreferencesWebadmin) GetPath() string { return "/api/objects/user_preferences/webadmin/" }

// RefRequired implements sophos.RestObject
func (*UserPreferencesWebadmin) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the UserPreferencesWebadmin DELETE path
// Creates or updates the complete object webadmin
func (*UserPreferencesWebadmin) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/user_preferences/webadmin/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the UserPreferencesWebadmin PATCH path
// Changes to parts of the object webadmin types
func (*UserPreferencesWebadmin) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/user_preferences/webadmin/%s", ref)
}

// PostPath implements sophos.RestObject and returns the UserPreferencesWebadmin POST path
// Create a new user_preferences/webadmin object
func (*UserPreferencesWebadmin) PostPath() string {
	return "/api/objects/user_preferences/webadmin/"
}

// PutPath implements sophos.RestObject and returns the UserPreferencesWebadmin PUT path
// Creates or updates the complete object webadmin
func (*UserPreferencesWebadmin) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/user_preferences/webadmin/%s", ref)
}

// UserPreferencesGroup is an Sophos Endpoint subType and implements sophos.RestObject
type UserPreferencesGroup []interface{}

// GetPath implements sophos.RestObject and returns the UserPreferencesGroup GET path
// Returns all available user_preferences/group objects
func (*UserPreferencesGroup) GetPath() string { return "/api/objects/user_preferences/group/" }

// RefRequired implements sophos.RestObject
func (*UserPreferencesGroup) RefRequired() (string, bool) { return "", false }

// DeletePath implements sophos.RestObject and returns the UserPreferencesGroup DELETE path
// Creates or updates the complete object group
func (*UserPreferencesGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/user_preferences/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the UserPreferencesGroup PATCH path
// Changes to parts of the object group types
func (*UserPreferencesGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/user_preferences/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the UserPreferencesGroup POST path
// Create a new user_preferences/group object
func (*UserPreferencesGroup) PostPath() string {
	return "/api/objects/user_preferences/group/"
}

// PutPath implements sophos.RestObject and returns the UserPreferencesGroup PUT path
// Creates or updates the complete object group
func (*UserPreferencesGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/user_preferences/group/%s", ref)
}
