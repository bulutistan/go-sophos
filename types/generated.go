// Package types contains the generated Sophos types
//
// This file was generated by bin/gen.go! DO NOT EDIT!
package types

import "github.com/esurdam/go-sophos"

// Resource is an interface representing an endpoint (Sophos Definition)
type Resource interface {
	// Definitions returns the Resource's sophos.Object
	Definitions() map[string]sophos.Object
}

type Nodes struct {
	Acc_server1_auth_secret                           string            `json:"acc.server1.auth.secret"`
	Acc_server1_auth_status                           bool              `json:"acc.server1.auth.status"`
	Acc_server1_port                                  int64             `json:"acc.server1.port"`
	Acc_server1_roles                                 []string          `json:"acc.server1.roles"`
	Acc_server1_server                                string            `json:"acc.server1.server"`
	Acc_server2_auth_secret                           string            `json:"acc.server2.auth.secret"`
	Acc_server2_auth_status                           bool              `json:"acc.server2.auth.status"`
	Acc_server2_port                                  int64             `json:"acc.server2.port"`
	Acc_server2_roles                                 []string          `json:"acc.server2.roles"`
	Acc_server2_server                                string            `json:"acc.server2.server"`
	Acc_server2_status                                bool              `json:"acc.server2.status"`
	Acc_ssoAdminGroup                                 string            `json:"acc.sso_admin_group"`
	Acc_ssoAuditorGroup                               string            `json:"acc.sso_auditor_group"`
	Acc_status                                        bool              `json:"acc.status"`
	Accd_access_allowedAdmins                         []interface{}     `json:"accd.access.allowed_admins"`
	Accd_access_allowedNetworks                       []interface{}     `json:"accd.access.allowed_networks"`
	Accd_access_allowedUsers                          []interface{}     `json:"accd.access.allowed_users"`
	Accd_access_cert                                  string            `json:"accd.access.cert"`
	Accd_access_port                                  int64             `json:"accd.access.port"`
	Accd_devices_allowedNetworks                      []interface{}     `json:"accd.devices.allowed_networks"`
	Accd_devices_auth_auto                            bool              `json:"accd.devices.auth.auto"`
	Accd_devices_auth_secret                          string            `json:"accd.devices.auth.secret"`
	Accd_devices_auth_status                          bool              `json:"accd.devices.auth.status"`
	Accd_devices_cert                                 string            `json:"accd.devices.cert"`
	Accd_devices_port                                 int64             `json:"accd.devices.port"`
	Accd_general_allowedNetworks                      []interface{}     `json:"accd.general.allowed_networks"`
	Accd_general_cert                                 string            `json:"accd.general.cert"`
	Accd_general_language                             string            `json:"accd.general.language"`
	Accd_general_port                                 int64             `json:"accd.general.port"`
	Accd_general_timeout                              int64             `json:"accd.general.timeout"`
	Accounting_ipfix_connections                      []interface{}     `json:"accounting.ipfix.connections"`
	Accounting_ipfix_status                           bool              `json:"accounting.ipfix.status"`
	Afc_controlledNetworks                            []string          `json:"afc.controlled_networks"`
	Afc_hiddenSkip                                    []string          `json:"afc.hidden_skip"`
	Afc_httpRedirectURL                               string            `json:"afc.http_redirect_url"`
	Afc_log                                           string            `json:"afc.log"`
	Afc_nfqueueLength                                 int64             `json:"afc.nfqueue_length"`
	Afc_numQueues                                     struct{}          `json:"afc.num_queues"`
	Afc_rules                                         []string          `json:"afc.rules"`
	Afc_status                                        bool              `json:"afc.status"`
	Afc_submitUnknownTrafficData                      bool              `json:"afc.submit_unknown_traffic_data"`
	Afc_transparentSkip                               []interface{}     `json:"afc.transparent_skip"`
	AmazonVpc_autoPfrule                              bool              `json:"amazon_vpc.auto_pfrule"`
	AmazonVpc_connections                             []string          `json:"amazon_vpc.connections"`
	AmazonVpc_networks                                []string          `json:"amazon_vpc.networks"`
	AmazonVpc_status                                  bool              `json:"amazon_vpc.status"`
	Aptp_policy                                       string            `json:"aptp.policy"`
	Aptp_ruleModifiers                                []interface{}     `json:"aptp.rule_modifiers"`
	Aptp_status                                       bool              `json:"aptp.status"`
	Aptp_transparentSkip                              []interface{}     `json:"aptp.transparent_skip"`
	Arm_licensedIP                                    string            `json:"arm.licensed_ip"`
	Arm_remote_host                                   string            `json:"arm.remote.host"`
	Arm_remote_method                                 string            `json:"arm.remote.method"`
	Arm_remote_smbPassword                            string            `json:"arm.remote.smb_password"`
	Arm_remote_smbShare                               string            `json:"arm.remote.smb_share"`
	Arm_remote_smbUser                                string            `json:"arm.remote.smb_user"`
	Arm_remote_status                                 bool              `json:"arm.remote.status"`
	Arm_remote_syslogService                          string            `json:"arm.remote.syslog_service"`
	Arm_status                                        bool              `json:"arm.status"`
	Auth_adSso_forceUtf8Sync                          bool              `json:"auth.ad_sso.force_utf8_sync"`
	Auth_adSso_joinresult                             string            `json:"auth.ad_sso.joinresult"`
	Auth_adSso_loadbalancerFqdn                       string            `json:"auth.ad_sso.loadbalancer_fqdn"`
	Auth_adSso_ntlmv2Auth                             bool              `json:"auth.ad_sso.ntlmv2_auth"`
	Auth_adSso_secrets                                string            `json:"auth.ad_sso.secrets"`
	Auth_adSso_smbconf                                string            `json:"auth.ad_sso.smbconf"`
	Auth_adSso_ssoDomain                              string            `json:"auth.ad_sso.sso_domain"`
	Auth_adSso_ssoNetbiosDomain                       string            `json:"auth.ad_sso.sso_netbios_domain"`
	Auth_adSso_ssoNetbiosHost                         string            `json:"auth.ad_sso.sso_netbios_host"`
	Auth_adSso_ssoPassword                            string            `json:"auth.ad_sso.sso_password"`
	Auth_adSso_ssoServer                              string            `json:"auth.ad_sso.sso_server"`
	Auth_adSso_ssoStatus                              bool              `json:"auth.ad_sso.sso_status"`
	Auth_adSso_ssoSync                                bool              `json:"auth.ad_sso.sso_sync"`
	Auth_adSso_ssoUsername                            string            `json:"auth.ad_sso.sso_username"`
	Auth_apiTokens                                    map[string]string `json:"auth.api_tokens"`
	Auth_autoAddToFacility                            []string          `json:"auth.auto_add_to_facility"`
	Auth_autoAddUsers                                 bool              `json:"auth.auto_add_users"`
	Auth_block_attempts                               int64             `json:"auth.block.attempts"`
	Auth_block_facilities                             []string          `json:"auth.block.facilities"`
	Auth_block_lockout                                bool              `json:"auth.block.lockout"`
	Auth_block_never                                  []interface{}     `json:"auth.block.never"`
	Auth_block_seconds                                int64             `json:"auth.block.seconds"`
	Auth_cacheLifetime                                int64             `json:"auth.cache_lifetime"`
	Auth_edirSso_emConflict                           string            `json:"auth.edir_sso.em_conflict"`
	Auth_edirSso_emSocketTimeout                      int64             `json:"auth.edir_sso.em_socket_timeout"`
	Auth_edirSso_emVerifyLogout                       bool              `json:"auth.edir_sso.em_verify_logout"`
	Auth_edirSso_ssoAuaSearchIP                       bool              `json:"auth.edir_sso.sso_aua_search_ip"`
	Auth_edirSso_ssoMode                              string            `json:"auth.edir_sso.sso_mode"`
	Auth_edirSso_ssoServer                            string            `json:"auth.edir_sso.sso_server"`
	Auth_edirSso_syncInterval                         int64             `json:"auth.edir_sso.sync_interval"`
	Auth_otp_autoCreateToken                          bool              `json:"auth.otp.auto_create_token"`
	Auth_otp_autoTokenDigest                          string            `json:"auth.otp.auto_token_digest"`
	Auth_otp_defaultTimestep                          int64             `json:"auth.otp.default_timestep"`
	Auth_otp_facilities                               []string          `json:"auth.otp.facilities"`
	Auth_otp_maxInitTimestepDiff                      int64             `json:"auth.otp.max_init_timestep_diff"`
	Auth_otp_maxTimestepDiff                          int64             `json:"auth.otp.max_timestep_diff"`
	Auth_otp_requireAllUsers                          bool              `json:"auth.otp.require_all_users"`
	Auth_otp_requiredUsers                            []interface{}     `json:"auth.otp.required_users"`
	Auth_otp_status                                   bool              `json:"auth.otp.status"`
	Auth_servers                                      []interface{}     `json:"auth.servers"`
	Auth_updateBackendGroupMembers_debug              bool              `json:"auth.update_backend_group_members.debug"`
	Auth_updateBackendGroupMembers_status             bool              `json:"auth.update_backend_group_members.status"`
	Awe_allowedInterfaces                             []interface{}     `json:"awe.allowed_interfaces"`
	Awe_clients                                       []interface{}     `json:"awe.clients"`
	Awe_devices                                       []interface{}     `json:"awe.devices"`
	Awe_global_apAutoaccept                           bool              `json:"awe.global.ap_autoaccept"`
	Awe_global_apDebuglevel                           struct{}          `json:"awe.global.ap_debuglevel"`
	Awe_global_apSoftlimit                            int64             `json:"awe.global.ap_softlimit"`
	Awe_global_apVlantag                              int64             `json:"awe.global.ap_vlantag"`
	Awe_global_aweStatus                              struct{}          `json:"awe.global.awe_status"`
	Awe_global_bridgeUpdateKickout                    bool              `json:"awe.global.bridge_update_kickout"`
	Awe_global_initialSetup                           bool              `json:"awe.global.initial_setup"`
	Awe_global_logLevel                               int64             `json:"awe.global.log_level"`
	Awe_global_magicIP                                string            `json:"awe.global.magic_ip"`
	Awe_global_notificationTimeout                    int64             `json:"awe.global.notification_timeout"`
	Awe_global_radiusConf                             string            `json:"awe.global.radius_conf"`
	Awe_global_rootpw                                 string            `json:"awe.global.rootpw"`
	Awe_global_stayOnline                             bool              `json:"awe.global.stay_online"`
	Awe_global_storeBssStats                          bool              `json:"awe.global.store_bss_stats"`
	Awe_global_tunnelIDOffset                         int64             `json:"awe.global.tunnel_id_offset"`
	Awe_global_vlantagging                            bool              `json:"awe.global.vlantagging"`
	Awe_networks                                      []string          `json:"awe.networks"`
	Awscli_profiles                                   []interface{}     `json:"awscli.profiles"`
	Backup_encryption                                 bool              `json:"backup.encryption"`
	Backup_interval                                   string            `json:"backup.interval"`
	Backup_maxBackups                                 int64             `json:"backup.max_backups"`
	Backup_password                                   string            `json:"backup.password"`
	Backup_recipients                                 []string          `json:"backup.recipients"`
	Backup_status                                     bool              `json:"backup.status"`
	Ca_caGost                                         string            `json:"ca.ca_gost"`
	Ca_caIpsec                                        string            `json:"ca.ca_ipsec"`
	Ca_caProxies                                      string            `json:"ca.ca_proxies"`
	Ca_caRed                                          string            `json:"ca.ca_red"`
	Ca_defKeysize                                     int64             `json:"ca.def_keysize"`
	Ca_globalCas_emailEncryption_trustNewCas          bool              `json:"ca.global_cas.email_encryption.trust_new_cas"`
	Ca_globalCas_emailEncryption_trusted              []interface{}     `json:"ca.global_cas.email_encryption.trusted"`
	Ca_globalCas_emailEncryption_untrusted            []interface{}     `json:"ca.global_cas.email_encryption.untrusted"`
	Ca_globalCas_httpProxy_trustNewCas                bool              `json:"ca.global_cas.http_proxy.trust_new_cas"`
	Ca_globalCas_httpProxy_trusted                    []interface{}     `json:"ca.global_cas.http_proxy.trusted"`
	Ca_globalCas_httpProxy_untrusted                  []interface{}     `json:"ca.global_cas.http_proxy.untrusted"`
	Crls_crls                                         []interface{}     `json:"crls.crls"`
	CSS_avPrimaryEngine                               string            `json:"css.av_primary_engine"`
	CSS_sxlLiveprotection                             bool              `json:"css.sxl_liveprotection"`
	CSS_sxlSampleSubmit                               bool              `json:"css.sxl_sample_submit"`
	Customization_epp_lastUpdated                     int64             `json:"customization.epp.last_updated"`
	Customization_epp_resourcesRoot                   string            `json:"customization.epp.resources_root"`
	Customization_http_customAssets                   struct{}          `json:"customization.http.custom_assets"`
	Customization_http_customTemplates                struct{}          `json:"customization.http.custom_templates"`
	Customization_http_lastUpdated                    int64             `json:"customization.http.last_updated"`
	Debugmode_crashReport                             bool              `json:"debugmode.crash_report"`
	Debugmode_enabled                                 bool              `json:"debugmode.enabled"`
	Dhcp_relay_dhcpServer                             string            `json:"dhcp.relay.dhcp_server"`
	Dhcp_relay_interfaces                             []interface{}     `json:"dhcp.relay.interfaces"`
	Dhcp_relay_status                                 bool              `json:"dhcp.relay.status"`
	Dhcp_relay6_itfsFacingClients                     []interface{}     `json:"dhcp.relay6.itfs_facing_clients"`
	Dhcp_relay6_itfsFacingServer6                     []interface{}     `json:"dhcp.relay6.itfs_facing_server6"`
	Dhcp_relay6_status                                bool              `json:"dhcp.relay6.status"`
	Dhcp_server_custom4                               string            `json:"dhcp.server.custom4"`
	Dhcp_server_custom6                               string            `json:"dhcp.server.custom6"`
	Dhcp_server_servers                               []string          `json:"dhcp.server.servers"`
	Digest_allowedNetworks                            []interface{}     `json:"digest.allowed_networks"`
	Digest_customText                                 string            `json:"digest.custom_text"`
	Digest_domains                                    []string          `json:"digest.domains"`
	Digest_hostname                                   string            `json:"digest.hostname"`
	Digest_mailinglists                               []interface{}     `json:"digest.mailinglists"`
	Digest_port                                       int64             `json:"digest.port"`
	Digest_sendTimeOne                                string            `json:"digest.send_time_one"`
	Digest_sendTimeTwo                                string            `json:"digest.send_time_two"`
	Digest_skiplist                                   []interface{}     `json:"digest.skiplist"`
	Digest_status                                     bool              `json:"digest.status"`
	Digest_userRelease                                []string          `json:"digest.user_release"`
	DNS_allowedNetworks                               []string          `json:"dns.allowed_networks"`
	DNS_axfr                                          []interface{}     `json:"dns.axfr"`
	DNS_dnssec                                        bool              `json:"dns.dnssec"`
	DNS_email                                         string            `json:"dns.email"`
	DNS_emptyZones                                    string            `json:"dns.empty_zones"`
	DNS_fwdDynamic                                    bool              `json:"dns.fwd_dynamic"`
	DNS_fwdStatic                                     []string          `json:"dns.fwd_static"`
	DNS_recheckInterval                               int64             `json:"dns.recheck_interval"`
	DNS_routes                                        []string          `json:"dns.routes"`
	Dyndns_rules                                      []interface{}     `json:"dyndns.rules"`
	Emailpki_authority_cert                           string            `json:"emailpki.authority.cert"`
	Emailpki_authority_fingerprint                    string            `json:"emailpki.authority.fingerprint"`
	Emailpki_authority_key                            string            `json:"emailpki.authority.key"`
	Emailpki_authority_postmasterFingerprint          string            `json:"emailpki.authority.postmaster_fingerprint"`
	Emailpki_authority_postmasterPrivkey              string            `json:"emailpki.authority.postmaster_privkey"`
	Emailpki_authority_postmasterPubkey               string            `json:"emailpki.authority.postmaster_pubkey"`
	Emailpki_global_city                              string            `json:"emailpki.global.city"`
	Emailpki_global_country                           string            `json:"emailpki.global.country"`
	Emailpki_global_organization                      string            `json:"emailpki.global.organization"`
	Emailpki_global_postmaster                        string            `json:"emailpki.global.postmaster"`
	Emailpki_global_status                            bool              `json:"emailpki.global.status"`
	Emailpki_objects_cas                              []string          `json:"emailpki.objects.cas"`
	Emailpki_objects_openpgp                          []interface{}     `json:"emailpki.objects.openpgp"`
	Emailpki_objects_smime                            []interface{}     `json:"emailpki.objects.smime"`
	Emailpki_objects_users                            []interface{}     `json:"emailpki.objects.users"`
	Emailpki_openpgp_mainKeysize                      int64             `json:"emailpki.openpgp.main_keysize"`
	Emailpki_openpgp_subKeysize                       int64             `json:"emailpki.openpgp.sub_keysize"`
	Emailpki_options_externalAuto                     bool              `json:"emailpki.options.external_auto"`
	Emailpki_options_keyserver                        string            `json:"emailpki.options.keyserver"`
	Emailpki_options_policyDecryption                 bool              `json:"emailpki.options.policy_decryption"`
	Emailpki_options_policyEncryption                 bool              `json:"emailpki.options.policy_encryption"`
	Emailpki_options_policySign                       bool              `json:"emailpki.options.policy_sign"`
	Emailpki_options_policyVerify                     bool              `json:"emailpki.options.policy_verify"`
	Endpoint_aac_allowedNetworks                      []string          `json:"endpoint.aac.allowed_networks"`
	Endpoint_aac_allowedUsers                         []string          `json:"endpoint.aac.allowed_users"`
	Endpoint_aac_ca                                   string            `json:"endpoint.aac.ca"`
	Endpoint_aac_cert                                 string            `json:"endpoint.aac.cert"`
	Endpoint_aac_magicIP                              string            `json:"endpoint.aac.magic_ip"`
	Endpoint_aac_maxUserLogins                        int64             `json:"endpoint.aac.max_user_logins"`
	Endpoint_aac_status                               bool              `json:"endpoint.aac.status"`
	Endpoint_stas_collectors                          []interface{}     `json:"endpoint.stas.collectors"`
	Endpoint_stas_status                              bool              `json:"endpoint.stas.status"`
	EnduserMessages_companyLogo                       string            `json:"enduser_messages.company_logo"`
	EnduserMessages_companyText                       string            `json:"enduser_messages.company_text"`
	EnduserMessages_dlp_blackholePart                 string            `json:"enduser_messages.dlp.blackhole_part"`
	EnduserMessages_dlp_footerPart                    string            `json:"enduser_messages.dlp.footer_part"`
	EnduserMessages_dlp_headerPart                    string            `json:"enduser_messages.dlp.header_part"`
	EnduserMessages_dlp_originalPart                  string            `json:"enduser_messages.dlp.original_part"`
	EnduserMessages_dlp_spxPart                       string            `json:"enduser_messages.dlp.spx_part"`
	EnduserMessages_dlp_subject                       string            `json:"enduser_messages.dlp.subject"`
	EnduserMessages_http_appDesc                      string            `json:"enduser_messages.http.app_desc"`
	EnduserMessages_http_appSubject                   string            `json:"enduser_messages.http.app_subject"`
	EnduserMessages_http_blacklistDesc                string            `json:"enduser_messages.http.blacklist_desc"`
	EnduserMessages_http_blacklistSubject             string            `json:"enduser_messages.http.blacklist_subject"`
	EnduserMessages_http_certfailSubject              string            `json:"enduser_messages.http.certfail_subject"`
	EnduserMessages_http_cffOverrideDesc              string            `json:"enduser_messages.http.cff_override_desc"`
	EnduserMessages_http_cffOverrideSubject           string            `json:"enduser_messages.http.cff_override_subject"`
	EnduserMessages_http_cffOverrideTerms             string            `json:"enduser_messages.http.cff_override_terms"`
	EnduserMessages_http_downloadCompleteDesc         string            `json:"enduser_messages.http.download_complete_desc"`
	EnduserMessages_http_downloadCompleteSubject      string            `json:"enduser_messages.http.download_complete_subject"`
	EnduserMessages_http_downloadDesc                 string            `json:"enduser_messages.http.download_desc"`
	EnduserMessages_http_downloadSubject              string            `json:"enduser_messages.http.download_subject"`
	EnduserMessages_http_errorDesc                    string            `json:"enduser_messages.http.error_desc"`
	EnduserMessages_http_errorSubject                 string            `json:"enduser_messages.http.error_subject"`
	EnduserMessages_http_fileextensionDesc            string            `json:"enduser_messages.http.fileextension_desc"`
	EnduserMessages_http_fileextensionSubject         string            `json:"enduser_messages.http.fileextension_subject"`
	EnduserMessages_http_fileextensionWarnDesc        string            `json:"enduser_messages.http.fileextension_warn_desc"`
	EnduserMessages_http_fileextensionWarnSubject     string            `json:"enduser_messages.http.fileextension_warn_subject"`
	EnduserMessages_http_filesizeDesc                 string            `json:"enduser_messages.http.filesize_desc"`
	EnduserMessages_http_filesizeSubject              string            `json:"enduser_messages.http.filesize_subject"`
	EnduserMessages_http_geoipDesc                    string            `json:"enduser_messages.http.geoip_desc"`
	EnduserMessages_http_geoipSubject                 string            `json:"enduser_messages.http.geoip_subject"`
	EnduserMessages_http_mimetypeDesc                 string            `json:"enduser_messages.http.mimetype_desc"`
	EnduserMessages_http_mimetypeSubject              string            `json:"enduser_messages.http.mimetype_subject"`
	EnduserMessages_http_mimetypeWarnDesc             string            `json:"enduser_messages.http.mimetype_warn_desc"`
	EnduserMessages_http_mimetypeWarnSubject          string            `json:"enduser_messages.http.mimetype_warn_subject"`
	EnduserMessages_http_puaDesc                      string            `json:"enduser_messages.http.pua_desc"`
	EnduserMessages_http_puaSubject                   string            `json:"enduser_messages.http.pua_subject"`
	EnduserMessages_http_quotaBlockDesc               string            `json:"enduser_messages.http.quota_block_desc"`
	EnduserMessages_http_quotaBlockSubject            string            `json:"enduser_messages.http.quota_block_subject"`
	EnduserMessages_http_quotaWarnDesc                string            `json:"enduser_messages.http.quota_warn_desc"`
	EnduserMessages_http_quotaWarnSubject             string            `json:"enduser_messages.http.quota_warn_subject"`
	EnduserMessages_http_spDesc                       string            `json:"enduser_messages.http.sp_desc"`
	EnduserMessages_http_spFrameSubject               string            `json:"enduser_messages.http.sp_frame_subject"`
	EnduserMessages_http_spSubject                    string            `json:"enduser_messages.http.sp_subject"`
	EnduserMessages_http_spWarnDesc                   string            `json:"enduser_messages.http.sp_warn_desc"`
	EnduserMessages_http_spWarnSubject                string            `json:"enduser_messages.http.sp_warn_subject"`
	EnduserMessages_http_sslCertraw                   string            `json:"enduser_messages.http.ssl_certraw"`
	EnduserMessages_http_sslCertstatus                string            `json:"enduser_messages.http.ssl_certstatus"`
	EnduserMessages_http_sslIssuer                    string            `json:"enduser_messages.http.ssl_issuer"`
	EnduserMessages_http_sslMd5fp                     string            `json:"enduser_messages.http.ssl_md5fp"`
	EnduserMessages_http_sslSha1fp                    string            `json:"enduser_messages.http.ssl_sha1fp"`
	EnduserMessages_http_sslSubject                   string            `json:"enduser_messages.http.ssl_subject"`
	EnduserMessages_http_sslValidfrom                 string            `json:"enduser_messages.http.ssl_validfrom"`
	EnduserMessages_http_sslValiduntil                string            `json:"enduser_messages.http.ssl_validuntil"`
	EnduserMessages_http_threatDesc                   string            `json:"enduser_messages.http.threat_desc"`
	EnduserMessages_http_threatSubject                string            `json:"enduser_messages.http.threat_subject"`
	EnduserMessages_http_transparentAuthDesc          string            `json:"enduser_messages.http.transparent_auth_desc"`
	EnduserMessages_http_transparentAuthSubject       string            `json:"enduser_messages.http.transparent_auth_subject"`
	EnduserMessages_http_transparentAuthTerms         string            `json:"enduser_messages.http.transparent_auth_terms"`
	EnduserMessages_http_virusDesc                    string            `json:"enduser_messages.http.virus_desc"`
	EnduserMessages_http_virusSubject                 string            `json:"enduser_messages.http.virus_subject"`
	EnduserMessages_http_virusscanDesc                string            `json:"enduser_messages.http.virusscan_desc"`
	EnduserMessages_http_virusscanSubject             string            `json:"enduser_messages.http.virusscan_subject"`
	EnduserMessages_mail_releaseErrDesc               string            `json:"enduser_messages.mail.release_err_desc"`
	EnduserMessages_mail_releaseErrSubject            string            `json:"enduser_messages.mail.release_err_subject"`
	EnduserMessages_mail_releasedDesc                 string            `json:"enduser_messages.mail.released_desc"`
	EnduserMessages_mail_releasedSubject              string            `json:"enduser_messages.mail.released_subject"`
	EnduserMessages_pop3_blockedDesc                  string            `json:"enduser_messages.pop3.blocked_desc"`
	EnduserMessages_pop3_blockedSubject               string            `json:"enduser_messages.pop3.blocked_subject"`
	EnduserMessages_spx_internalError_body            string            `json:"enduser_messages.spx.internal_error.body"`
	EnduserMessages_spx_internalError_subject         string            `json:"enduser_messages.spx.internal_error.subject"`
	EnduserMessages_spx_internalErrorSender_body      string            `json:"enduser_messages.spx.internal_error_sender.body"`
	EnduserMessages_spx_internalErrorSender_subject   string            `json:"enduser_messages.spx.internal_error_sender.subject"`
	EnduserMessages_spx_passwordNoSpecChars_body      string            `json:"enduser_messages.spx.password_no_spec_chars.body"`
	EnduserMessages_spx_passwordNoSpecChars_subject   string            `json:"enduser_messages.spx.password_no_spec_chars.subject"`
	EnduserMessages_spx_passwordNotLongEnough_body    string            `json:"enduser_messages.spx.password_not_long_enough.body"`
	EnduserMessages_spx_passwordNotLongEnough_subject string            `json:"enduser_messages.spx.password_not_long_enough.subject"`
	EnduserMessages_spx_passwordNotPresented_body     string            `json:"enduser_messages.spx.password_not_presented.body"`
	EnduserMessages_spx_passwordNotPresented_subject  string            `json:"enduser_messages.spx.password_not_presented.subject"`
	EnduserMessages_spx_urlNotFound_message           string            `json:"enduser_messages.spx.url_not_found.message"`
	EnduserMessages_squid_cacheAdmin                  string            `json:"enduser_messages.squid.cache_admin"`
	EnduserMessages_squid_cacheAdminMessage           string            `json:"enduser_messages.squid.cache_admin_message"`
	Epp_allowedNetworks                               []string          `json:"epp.allowed_networks"`
	Epp_certificate                                   string            `json:"epp.certificate"`
	Epp_city                                          string            `json:"epp.city"`
	Epp_country                                       string            `json:"epp.country"`
	Epp_defaultEndpointsGroup                         string            `json:"epp.default_endpoints_group"`
	Epp_devices                                       []interface{}     `json:"epp.devices"`
	Epp_email                                         string            `json:"epp.email"`
	Epp_endpoints                                     []interface{}     `json:"epp.endpoints"`
	Epp_endpointsGroups                               []string          `json:"epp.endpoints_groups"`
	Epp_exceptions_av                                 []interface{}     `json:"epp.exceptions.av"`
	Epp_exceptions_dc                                 []interface{}     `json:"epp.exceptions.dc"`
	Epp_fallbackURL                                   string            `json:"epp.fallback_url"`
	Epp_magnetPassword                                string            `json:"epp.magnet_password"`
	Epp_magnetUsername                                string            `json:"epp.magnet_username"`
	Epp_organization                                  string            `json:"epp.organization"`
	Epp_parentProxyHost                               string            `json:"epp.parent_proxy_host"`
	Epp_parentProxyPort                               int64             `json:"epp.parent_proxy_port"`
	Epp_parentProxyStatus                             bool              `json:"epp.parent_proxy_status"`
	Epp_policies_av                                   []string          `json:"epp.policies.av"`
	Epp_policies_dc                                   []string          `json:"epp.policies.dc"`
	Epp_port                                          int64             `json:"epp.port"`
	Epp_privateKey                                    string            `json:"epp.private_key"`
	Epp_registrationToken                             string            `json:"epp.registration_token"`
	Epp_status_av                                     bool              `json:"epp.status.av"`
	Epp_status_broker                                 bool              `json:"epp.status.broker"`
	Epp_status_dc                                     bool              `json:"epp.status.dc"`
	Epp_status_epp                                    bool              `json:"epp.status.epp"`
	Epp_status_wc                                     bool              `json:"epp.status.wc"`
	Epp_tamperPassword                                string            `json:"epp.tamper_password"`
	Epp_version                                       string            `json:"epp.version"`
	Epp_wdxToken                                      string            `json:"epp.wdx_token"`
	ExecutiveReport_daily_archive                     bool              `json:"executive_report.daily.archive"`
	ExecutiveReport_daily_keep                        int64             `json:"executive_report.daily.keep"`
	ExecutiveReport_daily_pdfrecipients               []interface{}     `json:"executive_report.daily.pdfrecipients"`
	ExecutiveReport_daily_recipients                  []string          `json:"executive_report.daily.recipients"`
	ExecutiveReport_daily_status                      bool              `json:"executive_report.daily.status"`
	ExecutiveReport_monthly_archive                   bool              `json:"executive_report.monthly.archive"`
	ExecutiveReport_monthly_keep                      int64             `json:"executive_report.monthly.keep"`
	ExecutiveReport_monthly_pdfrecipients             []interface{}     `json:"executive_report.monthly.pdfrecipients"`
	ExecutiveReport_monthly_recipients                []interface{}     `json:"executive_report.monthly.recipients"`
	ExecutiveReport_monthly_status                    bool              `json:"executive_report.monthly.status"`
	ExecutiveReport_weekly_archive                    bool              `json:"executive_report.weekly.archive"`
	ExecutiveReport_weekly_firstDayOfWeek             struct{}          `json:"executive_report.weekly.first_day_of_week"`
	ExecutiveReport_weekly_keep                       int64             `json:"executive_report.weekly.keep"`
	ExecutiveReport_weekly_pdfrecipients              []interface{}     `json:"executive_report.weekly.pdfrecipients"`
	ExecutiveReport_weekly_recipients                 []interface{}     `json:"executive_report.weekly.recipients"`
	ExecutiveReport_weekly_status                     bool              `json:"executive_report.weekly.status"`
	FloodProtection_icmp_dstBurst                     int64             `json:"flood_protection.icmp.dst_burst"`
	FloodProtection_icmp_dstExpire                    int64             `json:"flood_protection.icmp.dst_expire"`
	FloodProtection_icmp_dstGcInterval                int64             `json:"flood_protection.icmp.dst_gc_interval"`
	FloodProtection_icmp_dstRate                      int64             `json:"flood_protection.icmp.dst_rate"`
	FloodProtection_icmp_log                          string            `json:"flood_protection.icmp.log"`
	FloodProtection_icmp_logLimitBurst                int64             `json:"flood_protection.icmp.log_limit_burst"`
	FloodProtection_icmp_logLimitRate                 int64             `json:"flood_protection.icmp.log_limit_rate"`
	FloodProtection_icmp_mode                         string            `json:"flood_protection.icmp.mode"`
	FloodProtection_icmp_srcBurst                     int64             `json:"flood_protection.icmp.src_burst"`
	FloodProtection_icmp_srcExpire                    int64             `json:"flood_protection.icmp.src_expire"`
	FloodProtection_icmp_srcGcInterval                int64             `json:"flood_protection.icmp.src_gc_interval"`
	FloodProtection_icmp_srcRate                      int64             `json:"flood_protection.icmp.src_rate"`
	FloodProtection_icmp_status                       bool              `json:"flood_protection.icmp.status"`
	FloodProtection_syn_dstBurst                      int64             `json:"flood_protection.syn.dst_burst"`
	FloodProtection_syn_dstExpire                     int64             `json:"flood_protection.syn.dst_expire"`
	FloodProtection_syn_dstGcInterval                 int64             `json:"flood_protection.syn.dst_gc_interval"`
	FloodProtection_syn_dstRate                       int64             `json:"flood_protection.syn.dst_rate"`
	FloodProtection_syn_log                           string            `json:"flood_protection.syn.log"`
	FloodProtection_syn_logLimitBurst                 int64             `json:"flood_protection.syn.log_limit_burst"`
	FloodProtection_syn_logLimitRate                  int64             `json:"flood_protection.syn.log_limit_rate"`
	FloodProtection_syn_mode                          string            `json:"flood_protection.syn.mode"`
	FloodProtection_syn_srcBurst                      int64             `json:"flood_protection.syn.src_burst"`
	FloodProtection_syn_srcExpire                     int64             `json:"flood_protection.syn.src_expire"`
	FloodProtection_syn_srcGcInterval                 int64             `json:"flood_protection.syn.src_gc_interval"`
	FloodProtection_syn_srcRate                       int64             `json:"flood_protection.syn.src_rate"`
	FloodProtection_syn_status                        bool              `json:"flood_protection.syn.status"`
	FloodProtection_udp_dstBurst                      int64             `json:"flood_protection.udp.dst_burst"`
	FloodProtection_udp_dstExpire                     int64             `json:"flood_protection.udp.dst_expire"`
	FloodProtection_udp_dstGcInterval                 int64             `json:"flood_protection.udp.dst_gc_interval"`
	FloodProtection_udp_dstRate                       int64             `json:"flood_protection.udp.dst_rate"`
	FloodProtection_udp_log                           string            `json:"flood_protection.udp.log"`
	FloodProtection_udp_logLimitBurst                 int64             `json:"flood_protection.udp.log_limit_burst"`
	FloodProtection_udp_logLimitRate                  int64             `json:"flood_protection.udp.log_limit_rate"`
	FloodProtection_udp_mode                          string            `json:"flood_protection.udp.mode"`
	FloodProtection_udp_srcBurst                      int64             `json:"flood_protection.udp.src_burst"`
	FloodProtection_udp_srcExpire                     int64             `json:"flood_protection.udp.src_expire"`
	FloodProtection_udp_srcGcInterval                 int64             `json:"flood_protection.udp.src_gc_interval"`
	FloodProtection_udp_srcRate                       int64             `json:"flood_protection.udp.src_rate"`
	FloodProtection_udp_status                        bool              `json:"flood_protection.udp.status"`
	Ftp_allowedClients                                []interface{}     `json:"ftp.allowed_clients"`
	Ftp_allowedServers                                []string          `json:"ftp.allowed_servers"`
	Ftp_cffAv                                         bool              `json:"ftp.cff_av"`
	Ftp_cffAvEngines                                  string            `json:"ftp.cff_av_engines"`
	Ftp_cffFileExtensions                             []interface{}     `json:"ftp.cff_file_extensions"`
	Ftp_exceptions                                    []interface{}     `json:"ftp.exceptions"`
	Ftp_maxFileSize                                   int64             `json:"ftp.max_file_size"`
	Ftp_msWinMode                                     bool              `json:"ftp.ms_win_mode"`
	Ftp_operationMode                                 string            `json:"ftp.operation_mode"`
	Ftp_restrictedServers                             []string          `json:"ftp.restricted_servers"`
	Ftp_status                                        bool              `json:"ftp.status"`
	Ftp_transparentSkip                               []interface{}     `json:"ftp.transparent_skip"`
	Ftp_transparentSkipAutoPf                         bool              `json:"ftp.transparent_skip_auto_pf"`
	GenericProxy_rules                                []interface{}     `json:"generic_proxy.rules"`
	Geoip_countriesDst                                []string          `json:"geoip.countries_dst"`
	Geoip_countriesSrc                                []string          `json:"geoip.countries_src"`
	Geoip_exceptions                                  []interface{}     `json:"geoip.exceptions"`
	Geoip_log                                         string            `json:"geoip.log"`
	Geoip_status                                      bool              `json:"geoip.status"`
	H323_allowedNetworks                              []interface{}     `json:"h323.allowed_networks"`
	H323_logRelated                                   bool              `json:"h323.log_related"`
	H323_servers                                      []interface{}     `json:"h323.servers"`
	H323_status                                       bool              `json:"h323.status"`
	Ha_advanced_autojoin                              bool              `json:"ha.advanced.autojoin"`
	Ha_advanced_coldRollback                          bool              `json:"ha.advanced.cold_rollback"`
	Ha_advanced_httpPersistenceTime                   struct{}          `json:"ha.advanced.http_persistence_time"`
	Ha_advanced_loadTakeover                          int64             `json:"ha.advanced.load_takeover"`
	Ha_advanced_loadWarn                              int64             `json:"ha.advanced.load_warn"`
	Ha_advanced_maxNodes                              int64             `json:"ha.advanced.max_nodes"`
	Ha_advanced_mtu                                   string            `json:"ha.advanced.mtu"`
	Ha_advanced_netconsole                            bool              `json:"ha.advanced.netconsole"`
	Ha_advanced_preempt                               string            `json:"ha.advanced.preempt"`
	Ha_advanced_uniqueID                              int64             `json:"ha.advanced.unique_id"`
	Ha_advanced_virtualMac                            bool              `json:"ha.advanced.virtual_mac"`
	Ha_aws_cloudwatch_profile                         string            `json:"ha.aws.cloudwatch.profile"`
	Ha_aws_cloudwatch_status                          bool              `json:"ha.aws.cloudwatch.status"`
	Ha_aws_confd_backup                               bool              `json:"ha.aws.confd.backup"`
	Ha_aws_confd_backupInterval                       int64             `json:"ha.aws.confd.backup_interval"`
	Ha_aws_confd_restore                              bool              `json:"ha.aws.confd.restore"`
	Ha_aws_confd_restoreDone                          bool              `json:"ha.aws.confd.restore_done"`
	Ha_aws_elasticIP                                  string            `json:"ha.aws.elastic_ip"`
	Ha_aws_postgres_archiveTimeout                    int64             `json:"ha.aws.postgres.archive_timeout"`
	Ha_aws_postgres_backup                            bool              `json:"ha.aws.postgres.backup"`
	Ha_aws_postgres_baseBackupInterval                int64             `json:"ha.aws.postgres.base_backup_interval"`
	Ha_aws_postgres_restore                           bool              `json:"ha.aws.postgres.restore"`
	Ha_aws_s3Bucket                                   string            `json:"ha.aws.s3_bucket"`
	Ha_aws_stackName                                  string            `json:"ha.aws.stack_name"`
	Ha_aws_syslog_backup                              bool              `json:"ha.aws.syslog.backup"`
	Ha_aws_syslog_restore                             bool              `json:"ha.aws.syslog.restore"`
	Ha_aws_syslog_restorePeriod                       int64             `json:"ha.aws.syslog.restore_period"`
	Ha_aws_trustedNetwork                             string            `json:"ha.aws.trusted_network"`
	Ha_cluster_ftp                                    []interface{}     `json:"ha.cluster.ftp"`
	Ha_cluster_http                                   []interface{}     `json:"ha.cluster.http"`
	Ha_cluster_ipsec                                  []interface{}     `json:"ha.cluster.ipsec"`
	Ha_cluster_pop3                                   []interface{}     `json:"ha.cluster.pop3"`
	Ha_cluster_smtp                                   []interface{}     `json:"ha.cluster.smtp"`
	Ha_cluster_snort                                  []interface{}     `json:"ha.cluster.snort"`
	Ha_cluster_waf                                    []interface{}     `json:"ha.cluster.waf"`
	Ha_deviceName                                     string            `json:"ha.device_name"`
	Ha_itfhw                                          string            `json:"ha.itfhw"`
	Ha_itfhwBackup                                    string            `json:"ha.itfhw_backup"`
	Ha_masterIP                                       string            `json:"ha.master_ip"`
	Ha_mode                                           string            `json:"ha.mode"`
	Ha_nodeID                                         struct{}          `json:"ha.node_id"`
	Ha_password                                       string            `json:"ha.password"`
	Ha_postgresSecret                                 string            `json:"ha.postgres_secret"`
	Ha_slaveIP                                        string            `json:"ha.slave_ip"`
	Ha_status                                         string            `json:"ha.status"`
	Ha_sync_conntrack                                 bool              `json:"ha.sync.conntrack"`
	Ha_sync_database                                  bool              `json:"ha.sync.database"`
	Ha_sync_files                                     bool              `json:"ha.sync.files"`
	Ha_sync_ipsec                                     bool              `json:"ha.sync.ipsec"`
	Ha_sync_syslog                                    bool              `json:"ha.sync.syslog"`
	Ha_times_deadTime                                 int64             `json:"ha.times.dead_time"`
	Ha_times_loadTime                                 int64             `json:"ha.times.load_time"`
	Hotspot_cert                                      string            `json:"hotspot.cert"`
	Hotspot_deleteDays                                int64             `json:"hotspot.delete_days"`
	Hotspot_sslPortal                                 bool              `json:"hotspot.ssl_portal"`
	Hotspot_status                                    bool              `json:"hotspot.status"`
	Hotspot_transparentSkip                           []interface{}     `json:"hotspot.transparent_skip"`
	HTTP_adSsoInterfaces                              []interface{}     `json:"http.ad_sso_interfaces"`
	HTTP_adssoRedirectUseHostname                     bool              `json:"http.adsso_redirect_use_hostname"`
	HTTP_allowSsl3                                    bool              `json:"http.allow_ssl3"`
	HTTP_allowTLS1_2                                  bool              `json:"http.allow_tls_1_2"`
	HTTP_allowedPuas                                  []interface{}     `json:"http.allowed_puas"`
	HTTP_allowedTargetServices                        []string          `json:"http.allowed_target_services"`
	HTTP_auaMaxconns                                  int64             `json:"http.aua_maxconns"`
	HTTP_auaTimeout                                   int64             `json:"http.aua_timeout"`
	HTTP_authCacheSize                                int64             `json:"http.auth_cache_size"`
	HTTP_authCacheTTL                                 int64             `json:"http.auth_cache_ttl"`
	HTTP_authRealm                                    string            `json:"http.auth_realm"`
	HTTP_authUsercacheTTL                             int64             `json:"http.auth_usercache_ttl"`
	HTTP_blockUnscannable                             bool              `json:"http.block_unscannable"`
	HTTP_bypassStreaming                              bool              `json:"http.bypass_streaming"`
	HTTP_caList                                       []interface{}     `json:"http.ca_list"`
	HTTP_cacheIgnoresCookies                          bool              `json:"http.cache_ignores_cookies"`
	HTTP_cachessl                                     bool              `json:"http.cachessl"`
	HTTP_caching                                      bool              `json:"http.caching"`
	HTTP_certcache                                    string            `json:"http.certcache"`
	HTTP_certstore                                    string            `json:"http.certstore"`
	HTTP_cffOverrideUsers                             []interface{}     `json:"http.cff_override_users"`
	HTTP_clientTimeout                                int64             `json:"http.client_timeout"`
	HTTP_confLockWorkaround                           bool              `json:"http.conf_lock_workaround"`
	HTTP_connectTimeout                               int64             `json:"http.connect_timeout"`
	HTTP_connectV6Timeout                             struct{}          `json:"http.connect_v6_timeout"`
	HTTP_connlimit                                    int64             `json:"http.connlimit"`
	HTTP_ctypeInspectBody                             bool              `json:"http.ctype_inspect_body"`
	HTTP_ctypeUnpackArchive                           bool              `json:"http.ctype_unpack_archive"`
	HTTP_debug                                        []interface{}     `json:"http.debug"`
	HTTP_defaultblockaction                           string            `json:"http.defaultblockaction"`
	HTTP_deferagents                                  []string          `json:"http.deferagents"`
	HTTP_deferlength                                  int64             `json:"http.deferlength"`
	HTTP_displayHTTPBlockpageExplicitMode             bool              `json:"http.display_http_blockpage_explicit_mode"`
	HTTP_displayIntro                                 bool              `json:"http.display_intro"`
	HTTP_downloadManagerDefaultCharset                string            `json:"http.download_manager_default_charset"`
	HTTP_edirDelayBasicAuth                           bool              `json:"http.edir_delay_basic_auth"`
	HTTP_enableOutInterface                           bool              `json:"http.enable_out_interface"`
	HTTP_eppQuotaAction                               string            `json:"http.epp_quota_action"`
	HTTP_exceptions                                   []string          `json:"http.exceptions"`
	HTTP_forcedCachingExtension                       []string          `json:"http.forced_caching_extension"`
	HTTP_forcedCachingNeverCachePrefix                []string          `json:"http.forced_caching_never_cache_prefix"`
	HTTP_forcedCachingStatus                          bool              `json:"http.forced_caching_status"`
	HTTP_forcedCachingTTL                             int64             `json:"http.forced_caching_ttl"`
	HTTP_forcedCachingUserAgentPrefix                 []string          `json:"http.forced_caching_user_agent_prefix"`
	HTTP_httpLoopbackDetect                           bool              `json:"http.http_loopback_detect"`
	HTTP_ieSslBlockpageWorkaround                     bool              `json:"http.ie_ssl_blockpage_workaround"`
	HTTP_limitAdSsoInterfaces                         bool              `json:"http.limit_ad_sso_interfaces"`
	HTTP_localSiteList                                []interface{}     `json:"http.local_site_list"`
	HTTP_maxContentEncoding                           int64             `json:"http.max_content_encoding"`
	HTTP_maxTempfileSize                              int64             `json:"http.max_tempfile_size"`
	HTTP_maxthreads                                   int64             `json:"http.maxthreads"`
	HTTP_maxthreadsUnused                             int64             `json:"http.maxthreads_unused"`
	HTTP_modulepath                                   string            `json:"http.modulepath"`
	HTTP_modules                                      []string          `json:"http.modules"`
	HTTP_noscancontent                                []string          `json:"http.noscancontent"`
	HTTP_opendirectoryKeytab                          string            `json:"http.opendirectory_keytab"`
	HTTP_pacFile                                      string            `json:"http.pac_file"`
	HTTP_parentProxyHost                              string            `json:"http.parent_proxy_host"`
	HTTP_parentProxyPort                              int64             `json:"http.parent_proxy_port"`
	HTTP_parentProxyStatus                            bool              `json:"http.parent_proxy_status"`
	HTTP_passthroughID                                string            `json:"http.passthrough_id"`
	HTTP_pharmingProtection                           bool              `json:"http.pharming_protection"`
	HTTP_port                                         int64             `json:"http.port"`
	HTTP_portalCert                                   string            `json:"http.portal_cert"`
	HTTP_portalCertChain                              []interface{}     `json:"http.portal_cert_chain"`
	HTTP_portalDomain                                 string            `json:"http.portal_domain"`
	HTTP_portalHosts                                  []interface{}     `json:"http.portal_hosts"`
	HTTP_portalUseCert                                bool              `json:"http.portal_use_cert"`
	HTTP_proceedCacheTimeout                          int64             `json:"http.proceed_cache_timeout"`
	HTTP_profiles                                     []string          `json:"http.profiles"`
	HTTP_quotaSliceTime                               int64             `json:"http.quota_slice_time"`
	HTTP_removeRequest                                []interface{}     `json:"http.remove_request"`
	HTTP_removeResponse                               []string          `json:"http.remove_response"`
	HTTP_responseTimeout                              int64             `json:"http.response_timeout"`
	HTTP_scLocalDB                                    string            `json:"http.sc_local_db"`
	HTTP_scanEppTraffic                               bool              `json:"http.scan_epp_traffic"`
	HTTP_searchdomain                                 string            `json:"http.searchdomain"`
	HTTP_strictHTTP                                   bool              `json:"http.strict_http"`
	HTTP_tlsciphersClient                             string            `json:"http.tlsciphers_client"`
	HTTP_tlsciphersServer                             string            `json:"http.tlsciphers_server"`
	HTTP_tmpfsUsageMinMemsize                         int64             `json:"http.tmpfs_usage_min_memsize"`
	HTTP_transparentAuthTimeout                       int64             `json:"http.transparent_auth_timeout"`
	HTTP_transparentDstSkip                           []interface{}     `json:"http.transparent_dst_skip"`
	HTTP_transparentSkipAutoPf                        bool              `json:"http.transparent_skip_auto_pf"`
	HTTP_transparentSrcSkip                           []interface{}     `json:"http.transparent_src_skip"`
	HTTP_tunnelTimeout                                int64             `json:"http.tunnel_timeout"`
	HTTP_tunnelV6Timeout                              struct{}          `json:"http.tunnel_v6_timeout"`
	HTTP_undefercontent                               []string          `json:"http.undefercontent"`
	HTTP_undeferextension                             []string          `json:"http.undeferextension"`
	HTTP_urlFilteringRedirectURL                      string            `json:"http.url_filtering_redirect_url"`
	HTTP_useDstaddrForGeopiplookup                    bool              `json:"http.use_dstaddr_for_geopiplookup"`
	HTTP_useKrb5Adsso                                 bool              `json:"http.use_krb5_adsso"`
	HTTP_useSni                                       bool              `json:"http.use_sni"`
	HTTP_useSxlUrid                                   bool              `json:"http.use_sxl_urid"`
	Icmp_forward                                      bool              `json:"icmp.forward"`
	Icmp_input                                        bool              `json:"icmp.input"`
	Icmp_logRedirect                                  bool              `json:"icmp.log_redirect"`
	Icmp_ping_forward                                 bool              `json:"icmp.ping.forward"`
	Icmp_ping_input                                   bool              `json:"icmp.ping.input"`
	Icmp_ping_output                                  bool              `json:"icmp.ping.output"`
	Icmp_secure                                       bool              `json:"icmp.secure"`
	Icmp_traceroute_forward                           bool              `json:"icmp.traceroute.forward"`
	Icmp_traceroute_input                             bool              `json:"icmp.traceroute.input"`
	Ident_forward                                     bool              `json:"ident.forward"`
	Ident_response                                    string            `json:"ident.response"`
	Ident_status                                      bool              `json:"ident.status"`
	Interfaces_advanced_arpAnnounce                   struct{}          `json:"interfaces.advanced.arp_announce"`
	Interfaces_advanced_arpIgnore                     struct{}          `json:"interfaces.advanced.arp_ignore"`
	Interfaces_advanced_defaultMetric                 int64             `json:"interfaces.advanced.default_metric"`
	Interfaces_interfaces                             []string          `json:"interfaces.interfaces"`
	Ips_dnsServers                                    []interface{}     `json:"ips.dns_servers"`
	Ips_engine                                        string            `json:"ips.engine"`
	Ips_exceptions                                    []string          `json:"ips.exceptions"`
	Ips_failopen                                      bool              `json:"ips.failopen"`
	Ips_fileBasedRules                                bool              `json:"ips.file_based_rules"`
	Ips_groups                                        []string          `json:"ips.groups"`
	Ips_httpServers                                   []interface{}     `json:"ips.http_servers"`
	Ips_ipsfb_alertInterval                           int64             `json:"ips.ipsfb.alert_interval"`
	Ips_ipsfb_configInterval                          int64             `json:"ips.ipsfb.config_interval"`
	Ips_ipsfb_debug                                   bool              `json:"ips.ipsfb.debug"`
	Ips_localNetworks                                 []string          `json:"ips.local_networks"`
	Ips_numInstances                                  struct{}          `json:"ips.num_instances"`
	Ips_patternChannel                                string            `json:"ips.pattern_channel"`
	Ips_policy                                        string            `json:"ips.policy"`
	Ips_queueLength                                   int64             `json:"ips.queue_length"`
	Ips_queueThreshold                                struct{}          `json:"ips.queue_threshold"`
	Ips_reloadMethod                                  string            `json:"ips.reload_method"`
	Ips_restartPolicy                                 string            `json:"ips.restart_policy"`
	Ips_ruleModifiers                                 []interface{}     `json:"ips.rule_modifiers"`
	Ips_rules                                         []interface{}     `json:"ips.rules"`
	Ips_skipAcks                                      bool              `json:"ips.skip_acks"`
	Ips_smtpServers                                   []interface{}     `json:"ips.smtp_servers"`
	Ips_snortsettings_maxQueuedBytes                  struct{}          `json:"ips.snortsettings.max_queued_bytes"`
	Ips_snortsettings_maxQueuedSegs                   struct{}          `json:"ips.snortsettings.max_queued_segs"`
	Ips_snortsettings_maxTcp                          struct{}          `json:"ips.snortsettings.max_tcp"`
	Ips_snortsettings_maxUdp                          struct{}          `json:"ips.snortsettings.max_udp"`
	Ips_snortsettings_memcap                          struct{}          `json:"ips.snortsettings.memcap"`
	Ips_snortsettings_searchMethod                    string            `json:"ips.snortsettings.search_method"`
	Ips_sqlServers                                    []interface{}     `json:"ips.sql_servers"`
	Ips_status                                        bool              `json:"ips.status"`
	Ipsec_advanced_crlAutoFetching                    bool              `json:"ipsec.advanced.crl_auto_fetching"`
	Ipsec_advanced_crlStrictPolicy                    bool              `json:"ipsec.advanced.crl_strict_policy"`
	Ipsec_advanced_deadPeerDetection                  bool              `json:"ipsec.advanced.dead_peer_detection"`
	Ipsec_advanced_ikeDebug                           []interface{}     `json:"ipsec.advanced.ike_debug"`
	Ipsec_advanced_ikePort                            int64             `json:"ipsec.advanced.ike_port"`
	Ipsec_advanced_metric                             struct{}          `json:"ipsec.advanced.metric"`
	Ipsec_advanced_natTraversal                       bool              `json:"ipsec.advanced.nat_traversal"`
	Ipsec_advanced_natTraversalKeepalive              int64             `json:"ipsec.advanced.nat_traversal_keepalive"`
	Ipsec_advanced_probePsk                           bool              `json:"ipsec.advanced.probe_psk"`
	Ipsec_advanced_pskVpnID                           string            `json:"ipsec.advanced.psk_vpn_id"`
	Ipsec_advanced_pskVpnIDType                       string            `json:"ipsec.advanced.psk_vpn_id_type"`
	Ipsec_connections                                 []string          `json:"ipsec.connections"`
	Ipsec_localRsa                                    string            `json:"ipsec.local_rsa"`
	Ipsec_localX509                                   string            `json:"ipsec.local_x509"`
	Ipsec_status                                      bool              `json:"ipsec.status"`
	Ipv6_advanced_hopLimit                            int64             `json:"ipv6.advanced.hop_limit"`
	Ipv6_advanced_maxInterval                         int64             `json:"ipv6.advanced.max_interval"`
	Ipv6_advanced_minInterval                         int64             `json:"ipv6.advanced.min_interval"`
	Ipv6_advanced_preference                          string            `json:"ipv6.advanced.preference"`
	Ipv6_advanced_reachableTime                       struct{}          `json:"ipv6.advanced.reachable_time"`
	Ipv6_advanced_retransTime                         struct{}          `json:"ipv6.advanced.retrans_time"`
	Ipv6_broker_authentication                        string            `json:"ipv6.broker.authentication"`
	Ipv6_broker_interface                             string            `json:"ipv6.broker.interface"`
	Ipv6_broker_password                              string            `json:"ipv6.broker.password"`
	Ipv6_broker_protocol                              string            `json:"ipv6.broker.protocol"`
	Ipv6_broker_server                                string            `json:"ipv6.broker.server"`
	Ipv6_broker_status                                bool              `json:"ipv6.broker.status"`
	Ipv6_broker_tunnelID                              string            `json:"ipv6.broker.tunnel_id"`
	Ipv6_broker_username                              string            `json:"ipv6.broker.username"`
	Ipv6_nat64_address                                string            `json:"ipv6.nat64.address"`
	Ipv6_nat64_dns64V6only                            bool              `json:"ipv6.nat64.dns64_v6only"`
	Ipv6_nat64_prefix                                 string            `json:"ipv6.nat64.prefix"`
	Ipv6_nat64_status                                 bool              `json:"ipv6.nat64.status"`
	Ipv6_prefer                                       bool              `json:"ipv6.prefer"`
	Ipv6_prefixes                                     []interface{}     `json:"ipv6.prefixes"`
	Ipv6_renumbering                                  bool              `json:"ipv6.renumbering"`
	Ipv6_six2four_interface                           string            `json:"ipv6.six2four.interface"`
	Ipv6_six2four_server                              string            `json:"ipv6.six2four.server"`
	Ipv6_six2four_status                              bool              `json:"ipv6.six2four.status"`
	Ipv6_status                                       bool              `json:"ipv6.status"`
	Licensing_activeIps                               []string          `json:"licensing.active_ips"`
	Licensing_license                                 string            `json:"licensing.license"`
	Licensing_userLimitExceeded                       struct{}          `json:"licensing.user_limit_exceeded"`
	LinkAggregation_groups                            []string          `json:"link_aggregation.groups"`
	Loadbalance_httpErrorCode                         int64             `json:"loadbalance.http_error_code"`
	Loadbalance_rules                                 []interface{}     `json:"loadbalance.rules"`
	Logfiles_local_actionOne                          string            `json:"logfiles.local.action_one"`
	Logfiles_local_actionThree                        string            `json:"logfiles.local.action_three"`
	Logfiles_local_actionTwo                          string            `json:"logfiles.local.action_two"`
	Logfiles_local_deleteAfterDays                    struct{}          `json:"logfiles.local.delete_after_days"`
	Logfiles_local_percentageOne                      int64             `json:"logfiles.local.percentage_one"`
	Logfiles_local_percentageThree                    int64             `json:"logfiles.local.percentage_three"`
	Logfiles_local_percentageTwo                      int64             `json:"logfiles.local.percentage_two"`
	Logfiles_local_status                             bool              `json:"logfiles.local.status"`
	Logfiles_remote_ftpService                        string            `json:"logfiles.remote.ftp_service"`
	Logfiles_remote_host                              string            `json:"logfiles.remote.host"`
	Logfiles_remote_pass                              string            `json:"logfiles.remote.pass"`
	Logfiles_remote_path                              string            `json:"logfiles.remote.path"`
	Logfiles_remote_smbWorkgroup                      string            `json:"logfiles.remote.smb_workgroup"`
	Logfiles_remote_smtpAddress                       string            `json:"logfiles.remote.smtp_address"`
	Logfiles_remote_status                            bool              `json:"logfiles.remote.status"`
	Logfiles_remote_type                              string            `json:"logfiles.remote.type"`
	Logfiles_remote_user                              string            `json:"logfiles.remote.user"`
	Masq_rules                                        []string          `json:"masq.rules"`
	Migration_accessToken                             string            `json:"migration.access_token"`
	Migration_localOverride                           bool              `json:"migration.local_override"`
	Migration_refreshToken                            string            `json:"migration.refresh_token"`
	Migration_tabVisibility                           string            `json:"migration.tab_visibility"`
	Migration_toolsetVersion                          string            `json:"migration.toolset_version"`
	Migration_utmVersion                              string            `json:"migration.utm_version"`
	MobileControl_ca                                  string            `json:"mobile_control.ca"`
	MobileControl_config_cisco                        bool              `json:"mobile_control.config.cisco"`
	MobileControl_config_eapMethod                    string            `json:"mobile_control.config.eap_method"`
	MobileControl_config_forcePush                    bool              `json:"mobile_control.config.force_push"`
	MobileControl_config_l2tp                         bool              `json:"mobile_control.config.l2tp"`
	MobileControl_config_wifiNetworks                 []interface{}     `json:"mobile_control.config.wifi_networks"`
	MobileControl_customer                            string            `json:"mobile_control.customer"`
	MobileControl_debug                               bool              `json:"mobile_control.debug"`
	MobileControl_nac_cisco                           bool              `json:"mobile_control.nac.cisco"`
	MobileControl_nac_denyAllVpn                      bool              `json:"mobile_control.nac.deny_all_vpn"`
	MobileControl_nac_l2tp                            bool              `json:"mobile_control.nac.l2tp"`
	MobileControl_nac_macsAllowed                     string            `json:"mobile_control.nac.macs_allowed"`
	MobileControl_nac_macsDenied                      string            `json:"mobile_control.nac.macs_denied"`
	MobileControl_nac_pollInterval                    int64             `json:"mobile_control.nac.poll_interval"`
	MobileControl_nac_usersDenied                     []interface{}     `json:"mobile_control.nac.users_denied"`
	MobileControl_nac_wifiNetworks                    []interface{}     `json:"mobile_control.nac.wifi_networks"`
	MobileControl_password                            string            `json:"mobile_control.password"`
	MobileControl_server                              string            `json:"mobile_control.server"`
	MobileControl_status                              bool              `json:"mobile_control.status"`
	MobileControl_username                            string            `json:"mobile_control.username"`
	Nat_rules                                         []string          `json:"nat.rules"`
	Notifications_deviceInfo                          string            `json:"notifications.device_info"`
	Notifications_limiting                            bool              `json:"notifications.limiting"`
	Notifications_overlay                             []interface{}     `json:"notifications.overlay"`
	Notifications_rebootReason                        struct {
		Zero string `json:"0"`
		One  string `json:"1"`
	} `json:"notifications.reboot_reason"`
	Notifications_recipients                               []string      `json:"notifications.recipients"`
	Notifications_sender                                   string        `json:"notifications.sender"`
	Notifications_smtp_authentication                      bool          `json:"notifications.smtp.authentication"`
	Notifications_smtp_password                            string        `json:"notifications.smtp.password"`
	Notifications_smtp_port                                int64         `json:"notifications.smtp.port"`
	Notifications_smtp_server                              string        `json:"notifications.smtp.server"`
	Notifications_smtp_status                              bool          `json:"notifications.smtp.status"`
	Notifications_smtp_tls                                 bool          `json:"notifications.smtp.tls"`
	Notifications_smtp_username                            string        `json:"notifications.smtp.username"`
	NTP_allowedNetworks                                    []string      `json:"ntp.allowed_networks"`
	NTP_servers                                            []string      `json:"ntp.servers"`
	NTP_status                                             bool          `json:"ntp.status"`
	Packetfilter_advanced_blockInvalidCtPackets            bool          `json:"packetfilter.advanced.block_invalid_ct_packets"`
	Packetfilter_advanced_checkPacketLength                bool          `json:"packetfilter.advanced.check_packet_length"`
	Packetfilter_advanced_conntrackHelpers                 []string      `json:"packetfilter.advanced.conntrack_helpers"`
	Packetfilter_advanced_ftpPorts                         []int64       `json:"packetfilter.advanced.ftp_ports"`
	Packetfilter_advanced_logBroadcasts                    bool          `json:"packetfilter.advanced.log_broadcasts"`
	Packetfilter_advanced_logDNSRequests                   bool          `json:"packetfilter.advanced.log_dns_requests"`
	Packetfilter_advanced_logFtpData                       bool          `json:"packetfilter.advanced.log_ftp_data"`
	Packetfilter_advanced_logInvalid                       struct{}      `json:"packetfilter.advanced.log_invalid"`
	Packetfilter_advanced_logMcast                         bool          `json:"packetfilter.advanced.log_mcast"`
	Packetfilter_advanced_logStrictTcpState                string        `json:"packetfilter.advanced.log_strict_tcp_state"`
	Packetfilter_advanced_noErrorReplay                    bool          `json:"packetfilter.advanced.no_error_replay"`
	Packetfilter_advanced_optimize_ipset                   string        `json:"packetfilter.advanced.optimize.ipset"`
	Packetfilter_advanced_optimize_ports                   bool          `json:"packetfilter.advanced.optimize.ports"`
	Packetfilter_advanced_spoofProtection                  string        `json:"packetfilter.advanced.spoof_protection"`
	Packetfilter_advanced_strictTcpState                   bool          `json:"packetfilter.advanced.strict_tcp_state"`
	Packetfilter_advanced_tcpMaxRetrans                    int64         `json:"packetfilter.advanced.tcp_max_retrans"`
	Packetfilter_advanced_tcpWindowScaling                 bool          `json:"packetfilter.advanced.tcp_window_scaling"`
	Packetfilter_rules                                     []string      `json:"packetfilter.rules"`
	Packetfilter_rulesAuto                                 []string      `json:"packetfilter.rules_auto"`
	Packetfilter_rulesBack                                 string        `json:"packetfilter.rules_back"`
	Packetfilter_rulesFront                                string        `json:"packetfilter.rules_front"`
	Packetfilter_timeouts_ipConntrackGenericTimeout        int64         `json:"packetfilter.timeouts.ip_conntrack_generic_timeout"`
	Packetfilter_timeouts_ipConntrackIcmpTimeout           int64         `json:"packetfilter.timeouts.ip_conntrack_icmp_timeout"`
	Packetfilter_timeouts_ipConntrackTcpTimeoutClose       int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_close"`
	Packetfilter_timeouts_ipConntrackTcpTimeoutCloseWait   int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_close_wait"`
	Packetfilter_timeouts_ipConntrackTcpTimeoutEstablished int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_established"`
	Packetfilter_timeouts_ipConntrackTcpTimeoutFinWait     int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_fin_wait"`
	Packetfilter_timeouts_ipConntrackTcpTimeoutLastAck     int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_last_ack"`
	Packetfilter_timeouts_ipConntrackTcpTimeoutMaxRetrans  int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_max_retrans"`
	Packetfilter_timeouts_ipConntrackTcpTimeoutSynRecv     int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_recv"`
	Packetfilter_timeouts_ipConntrackTcpTimeoutSynSent     int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_sent"`
	Packetfilter_timeouts_ipConntrackTcpTimeoutTimeWait    int64         `json:"packetfilter.timeouts.ip_conntrack_tcp_timeout_time_wait"`
	Packetfilter_timeouts_ipConntrackUdpTimeout            int64         `json:"packetfilter.timeouts.ip_conntrack_udp_timeout"`
	Packetfilter_timeouts_ipConntrackUdpTimeoutStream      int64         `json:"packetfilter.timeouts.ip_conntrack_udp_timeout_stream"`
	Passwd_loginuser_clearpass                             string        `json:"passwd.loginuser.clearpass"`
	Passwd_loginuser_cryptpass                             string        `json:"passwd.loginuser.cryptpass"`
	Passwd_root_clearpass                                  string        `json:"passwd.root.clearpass"`
	Passwd_root_cryptpass                                  string        `json:"passwd.root.cryptpass"`
	Pdf_paper                                              string        `json:"pdf.paper"`
	PimSm_autoPfOut                                        string        `json:"pim_sm.auto_pf_out"`
	PimSm_autoPfrule                                       bool          `json:"pim_sm.auto_pfrule"`
	PimSm_debug                                            bool          `json:"pim_sm.debug"`
	PimSm_interfaces                                       []interface{} `json:"pim_sm.interfaces"`
	PimSm_rpRouters                                        []interface{} `json:"pim_sm.rp_routers"`
	PimSm_sptSwitchBytes                                   int64         `json:"pim_sm.spt_switch_bytes"`
	PimSm_sptSwitchStatus                                  bool          `json:"pim_sm.spt_switch_status"`
	PimSm_status                                           bool          `json:"pim_sm.status"`
	Pop3_allowedClients                                    []interface{} `json:"pop3.allowed_clients"`
	Pop3_allowedServers                                    []string      `json:"pop3.allowed_servers"`
	Pop3_cffAsMarker                                       string        `json:"pop3.cff_as_marker"`
	Pop3_cffAv                                             bool          `json:"pop3.cff_av"`
	Pop3_cffAvAction                                       string        `json:"pop3.cff_av_action"`
	Pop3_cffAvEngines                                      string        `json:"pop3.cff_av_engines"`
	Pop3_cffFileExtensions                                 []string      `json:"pop3.cff_file_extensions"`
	Pop3_directlyDeleteQuarantined                         bool          `json:"pop3.directly_delete_quarantined"`
	Pop3_exceptions                                        []interface{} `json:"pop3.exceptions"`
	Pop3_knownServers                                      []interface{} `json:"pop3.known_servers"`
	Pop3_maxMessageSize                                    int64         `json:"pop3.max_message_size"`
	Pop3_prefetching_interval                              int64         `json:"pop3.prefetching.interval"`
	Pop3_prefetching_optimizeStorage                       bool          `json:"pop3.prefetching.optimize_storage"`
	Pop3_prefetching_status                                bool          `json:"pop3.prefetching.status"`
	Pop3_prefetching_storageMinHoldDays                    int64         `json:"pop3.prefetching.storage_min_hold_days"`
	Pop3_quarantineUnscannable                             bool          `json:"pop3.quarantine_unscannable"`
	Pop3_sandboxMaxFilesizeMb                              int64         `json:"pop3.sandbox_max_filesize_mb"`
	Pop3_sandboxScanStatus                                 bool          `json:"pop3.sandbox_scan_status"`
	Pop3_scanTLS                                           bool          `json:"pop3.scan_tls"`
	Pop3_senderBlacklist                                   []interface{} `json:"pop3.sender_blacklist"`
	Pop3_spam                                              string        `json:"pop3.spam"`
	Pop3_spamExpressions                                   []interface{} `json:"pop3.spam_expressions"`
	Pop3_spamplus                                          string        `json:"pop3.spamplus"`
	Pop3_spamstatus                                        bool          `json:"pop3.spamstatus"`
	Pop3_status                                            bool          `json:"pop3.status"`
	Pop3_tlsCert                                           string        `json:"pop3.tls_cert"`
	Pop3_transparentSkip                                   []interface{} `json:"pop3.transparent_skip"`
	Pop3_transparentSkipAutoPf                             bool          `json:"pop3.transparent_skip_auto_pf"`
	Pop3_userCharset                                       string        `json:"pop3.user_charset"`
	Portal_allowAnyUser                                    bool          `json:"portal.allow_any_user"`
	Portal_allowedNetworks                                 []string      `json:"portal.allowed_networks"`
	Portal_allowedUsers                                    []interface{} `json:"portal.allowed_users"`
	Portal_hideItems                                       []interface{} `json:"portal.hide_items"`
	Portal_hostname                                        string        `json:"portal.hostname"`
	Portal_interfaceAddress                                string        `json:"portal.interface_address"`
	Portal_language                                        string        `json:"portal.language"`
	Portal_persistentCookies                               bool          `json:"portal.persistent_cookies"`
	Portal_port                                            int64         `json:"portal.port"`
	Portal_status                                          bool          `json:"portal.status"`
	Portal_welcomeMsg                                      string        `json:"portal.welcome_msg"`
	Psd_action                                             string        `json:"psd.action"`
	Psd_delayThreshold                                     int64         `json:"psd.delay_threshold"`
	Psd_hiPortsWeight                                      int64         `json:"psd.hi_ports_weight"`
	Psd_loPortsWeight                                      int64         `json:"psd.lo_ports_weight"`
	Psd_logLimiter_burst                                   int64         `json:"psd.log_limiter.burst"`
	Psd_logLimiter_rate                                    int64         `json:"psd.log_limiter.rate"`
	Psd_logLimiter_status                                  bool          `json:"psd.log_limiter.status"`
	Psd_status                                             bool          `json:"psd.status"`
	Psd_weightThreshold                                    int64         `json:"psd.weight_threshold"`
	Qos_advanced_ecn                                       int64         `json:"qos.advanced.ecn"`
	Qos_advanced_keepClassAfterEncap                       bool          `json:"qos.advanced.keep_class_after_encap"`
	Qos_interfaces                                         []string      `json:"qos.interfaces"`
	Quarantine_keepDBLogDays                               int64         `json:"quarantine.keep_db_log_days"`
	Quarantine_keepQuarantineDays                          int64         `json:"quarantine.keep_quarantine_days"`
	Red_activateProvFw                                     bool          `json:"red.activate_prov_fw"`
	Red_authorization                                      bool          `json:"red.authorization"`
	Red_caSettings_city                                    string        `json:"red.ca_settings.city"`
	Red_caSettings_country                                 string        `json:"red.ca_settings.country"`
	Red_caSettings_email                                   string        `json:"red.ca_settings.email"`
	Red_caSettings_organization                            string        `json:"red.ca_settings.organization"`
	Red_clients                                            []interface{} `json:"red.clients"`
	Red_deauthTimeout                                      string        `json:"red.deauth_timeout"`
	Red_overlayFwEnabled                                   bool          `json:"red.overlay_fw_enabled"`
	Red_registryCert                                       string        `json:"red.registry_cert"`
	Red_registryID                                         string        `json:"red.registry_id"`
	Red_registryKey                                        string        `json:"red.registry_key"`
	Red_serverCert                                         string        `json:"red.server_cert"`
	Red_servers                                            []interface{} `json:"red.servers"`
	Red_status                                             bool          `json:"red.status"`
	Red_tls1_2Only                                         bool          `json:"red.tls_1_2_only"`
	RemoteAccess_advanced_msdns1                           string        `json:"remote_access.advanced.msdns1"`
	RemoteAccess_advanced_msdns2                           string        `json:"remote_access.advanced.msdns2"`
	RemoteAccess_advanced_msdomain                         string        `json:"remote_access.advanced.msdomain"`
	RemoteAccess_advanced_mswins1                          string        `json:"remote_access.advanced.mswins1"`
	RemoteAccess_advanced_mswins2                          string        `json:"remote_access.advanced.mswins2"`
	RemoteAccess_cisco                                     string        `json:"remote_access.cisco"`
	RemoteAccess_clientlessVpn_debug                       bool          `json:"remote_access.clientless_vpn.debug"`
	RemoteAccess_clientlessVpn_status                      bool          `json:"remote_access.clientless_vpn.status"`
	RemoteAccess_l2tp                                      string        `json:"remote_access.l2tp"`
	RemoteAccess_pptp_aaa                                  []string      `json:"remote_access.pptp.aaa"`
	RemoteAccess_pptp_authentication                       string        `json:"remote_access.pptp.authentication"`
	RemoteAccess_pptp_debug                                bool          `json:"remote_access.pptp.debug"`
	RemoteAccess_pptp_encryption                           string        `json:"remote_access.pptp.encryption"`
	RemoteAccess_pptp_ipAssignmentDhcp                     string        `json:"remote_access.pptp.ip_assignment_dhcp"`
	RemoteAccess_pptp_ipAssignmentDhcpInterface            string        `json:"remote_access.pptp.ip_assignment_dhcp_interface"`
	RemoteAccess_pptp_ipAssignmentMode                     string        `json:"remote_access.pptp.ip_assignment_mode"`
	RemoteAccess_pptp_ipAssignmentPool                     string        `json:"remote_access.pptp.ip_assignment_pool"`
	RemoteAccess_pptp_iphoneConnectionName                 string        `json:"remote_access.pptp.iphone_connection_name"`
	RemoteAccess_pptp_iphoneHostname                       string        `json:"remote_access.pptp.iphone_hostname"`
	RemoteAccess_pptp_iphoneStatus                         bool          `json:"remote_access.pptp.iphone_status"`
	RemoteAccess_pptp_mtu                                  int64         `json:"remote_access.pptp.mtu"`
	RemoteAccess_pptp_status                               bool          `json:"remote_access.pptp.status"`
	RemoteSyslog_buffer                                    int64         `json:"remote_syslog.buffer"`
	RemoteSyslog_logs                                      []interface{} `json:"remote_syslog.logs"`
	RemoteSyslog_status                                    bool          `json:"remote_syslog.status"`
	RemoteSyslog_target                                    []interface{} `json:"remote_syslog.target"`
	Reporting_accountingKeepdays                           int64         `json:"reporting.accounting_keepdays"`
	Reporting_accountingStatus                             bool          `json:"reporting.accounting_status"`
	Reporting_anonymizing                                  bool          `json:"reporting.anonymizing"`
	Reporting_appctrlKeepdays                              int64         `json:"reporting.appctrl_keepdays"`
	Reporting_appctrlStatus                                bool          `json:"reporting.appctrl_status"`
	Reporting_atpKeepdays                                  int64         `json:"reporting.atp_keepdays"`
	Reporting_atpReset                                     struct{}      `json:"reporting.atp_reset"`
	Reporting_atpStatus                                    bool          `json:"reporting.atp_status"`
	Reporting_authenticationKeepdays                       int64         `json:"reporting.authentication_keepdays"`
	Reporting_authenticationStatus                         bool          `json:"reporting.authentication_status"`
	Reporting_csvSeparator                                 string        `json:"reporting.csv_separator"`
	Reporting_emailsecurityImport                          []interface{} `json:"reporting.emailsecurity_import"`
	Reporting_emailsecurityKeepdays                        int64         `json:"reporting.emailsecurity_keepdays"`
	Reporting_emailsecurityStatus                          bool          `json:"reporting.emailsecurity_status"`
	Reporting_enableVpnAccounting                          bool          `json:"reporting.enable_vpn_accounting"`
	Reporting_hideAccountingips                            []interface{} `json:"reporting.hide_accountingips"`
	Reporting_hideMailaddresses                            []interface{} `json:"reporting.hide_mailaddresses"`
	Reporting_hideMaildomains                              []interface{} `json:"reporting.hide_maildomains"`
	Reporting_hideNetsecips                                []interface{} `json:"reporting.hide_netsecips"`
	Reporting_hideWebdomains                               []interface{} `json:"reporting.hide_webdomains"`
	Reporting_ipsImport                                    []interface{} `json:"reporting.ips_import"`
	Reporting_ipsKeepdays                                  int64         `json:"reporting.ips_keepdays"`
	Reporting_ipsStatus                                    bool          `json:"reporting.ips_status"`
	Reporting_packetfilterImport                           []interface{} `json:"reporting.packetfilter_import"`
	Reporting_packetfilterKeepdays                         int64         `json:"reporting.packetfilter_keepdays"`
	Reporting_packetfilterStatus                           bool          `json:"reporting.packetfilter_status"`
	Reporting_password1                                    string        `json:"reporting.password1"`
	Reporting_password2                                    string        `json:"reporting.password2"`
	Reporting_sandboxKeepdays                              int64         `json:"reporting.sandbox_keepdays"`
	Reporting_userlogFromLogs                              bool          `json:"reporting.userlog_from_logs"`
	Reporting_vpnKeepdays                                  int64         `json:"reporting.vpn_keepdays"`
	Reporting_vpnStatus                                    bool          `json:"reporting.vpn_status"`
	Reporting_wafKeepdays                                  int64         `json:"reporting.waf_keepdays"`
	Reporting_wafStatus                                    bool          `json:"reporting.waf_status"`
	Reporting_websecurityDetail                            struct{}      `json:"reporting.websecurity_detail"`
	Reporting_websecurityImport                            []interface{} `json:"reporting.websecurity_import"`
	Reporting_websecurityKeepdays                          int64         `json:"reporting.websecurity_keepdays"`
	Reporting_websecurityStatus                            bool          `json:"reporting.websecurity_status"`
	ReverseProxy_auaRefreshEnabled                         bool          `json:"reverse_proxy.aua_refresh_enabled"`
	ReverseProxy_auaRefreshInterval                        int64         `json:"reverse_proxy.aua_refresh_interval"`
	ReverseProxy_blacklist_dnsrblZones                     []string      `json:"reverse_proxy.blacklist.dnsrbl_zones"`
	ReverseProxy_blacklist_geoipCodes                      []string      `json:"reverse_proxy.blacklist.geoip_codes"`
	ReverseProxy_cookiesignkey                             string        `json:"reverse_proxy.cookiesignkey"`
	ReverseProxy_cssdHostname                              string        `json:"reverse_proxy.cssd_hostname"`
	ReverseProxy_cssdPort                                  struct{}      `json:"reverse_proxy.cssd_port"`
	ReverseProxy_customThreatFiltersEnabled                bool          `json:"reverse_proxy.custom_threat_filters_enabled"`
	ReverseProxy_formhardeningSecret                       string        `json:"reverse_proxy.formhardening_secret"`
	ReverseProxy_keepalive                                 bool          `json:"reverse_proxy.keepalive"`
	ReverseProxy_manualmode                                bool          `json:"reverse_proxy.manualmode"`
	ReverseProxy_maxConnectionsPerChild                    struct{}      `json:"reverse_proxy.max_connections_per_child"`
	ReverseProxy_maxPreforkProcesses                       int64         `json:"reverse_proxy.max_prefork_processes"`
	ReverseProxy_maxProcesses                              int64         `json:"reverse_proxy.max_processes"`
	ReverseProxy_maxSessionFiles                           int64         `json:"reverse_proxy.max_session_files"`
	ReverseProxy_maxSpareProcesses                         int64         `json:"reverse_proxy.max_spare_processes"`
	ReverseProxy_maxSpareThreads                           int64         `json:"reverse_proxy.max_spare_threads"`
	ReverseProxy_maxThreadsPerProcess                      int64         `json:"reverse_proxy.max_threads_per_process"`
	ReverseProxy_minSpareProcesses                         int64         `json:"reverse_proxy.min_spare_processes"`
	ReverseProxy_minSpareThreads                           int64         `json:"reverse_proxy.min_spare_threads"`
	ReverseProxy_minTLS                                    string        `json:"reverse_proxy.min_tls"`
	ReverseProxy_modsecurityBeta                           bool          `json:"reverse_proxy.modsecurity_beta"`
	ReverseProxy_mpmMode                                   string        `json:"reverse_proxy.mpm_mode"`
	ReverseProxy_patternversion                            string        `json:"reverse_proxy.patternversion"`
	ReverseProxy_port                                      int64         `json:"reverse_proxy.port"`
	ReverseProxy_proxyprotocol                             bool          `json:"reverse_proxy.proxyprotocol"`
	ReverseProxy_requestLineLimit                          struct{}      `json:"reverse_proxy.request_line_limit"`
	ReverseProxy_slowhttpExceptions                        []interface{} `json:"reverse_proxy.slowhttp_exceptions"`
	ReverseProxy_slowhttpRequestHeaderTimeoutBase          int64         `json:"reverse_proxy.slowhttp_request_header_timeout_base"`
	ReverseProxy_slowhttpRequestHeaderTimeoutEnabled       bool          `json:"reverse_proxy.slowhttp_request_header_timeout_enabled"`
	ReverseProxy_slowhttpRequestHeaderTimeoutMax           int64         `json:"reverse_proxy.slowhttp_request_header_timeout_max"`
	ReverseProxy_slowhttpRequestHeaderTimeoutRate          int64         `json:"reverse_proxy.slowhttp_request_header_timeout_rate"`
	ReverseProxy_status                                    bool          `json:"reverse_proxy.status"`
	ReverseProxy_traceEnabled                              bool          `json:"reverse_proxy.trace_enabled"`
	ReverseProxy_urlhardeningsignkey                       string        `json:"reverse_proxy.urlhardeningsignkey"`
	ReverseProxy_whatkilledus                              bool          `json:"reverse_proxy.whatkilledus"`
	Routes_policy                                          []interface{} `json:"routes.policy"`
	Routes_static                                          []string      `json:"routes.static"`
	Routing_bgp_maximumPaths                               struct{}      `json:"routing.bgp.maximum_paths"`
	Routing_bgp_maximumPathsIbgp                           struct{}      `json:"routing.bgp.maximum_paths_ibgp"`
	Routing_bgp_multipleAs                                 bool          `json:"routing.bgp.multiple_as"`
	Routing_bgp_status                                     bool          `json:"routing.bgp.status"`
	Routing_bgp_strictMatch                                bool          `json:"routing.bgp.strict_match"`
	Routing_bgp_systems                                    []interface{} `json:"routing.bgp.systems"`
	Routing_ospf_abrType                                   string        `json:"routing.ospf.abr_type"`
	Routing_ospf_areas                                     []interface{} `json:"routing.ospf.areas"`
	Routing_ospf_defaultInformation                        string        `json:"routing.ospf.default_information"`
	Routing_ospf_defaultRouteMetric                        int64         `json:"routing.ospf.default_route_metric"`
	Routing_ospf_redistribute_bgp_metric                   int64         `json:"routing.ospf.redistribute.bgp.metric"`
	Routing_ospf_redistribute_bgp_status                   bool          `json:"routing.ospf.redistribute.bgp.status"`
	Routing_ospf_redistribute_connected_metric             int64         `json:"routing.ospf.redistribute.connected.metric"`
	Routing_ospf_redistribute_connected_status             bool          `json:"routing.ospf.redistribute.connected.status"`
	Routing_ospf_redistribute_ipsec_status                 bool          `json:"routing.ospf.redistribute.ipsec.status"`
	Routing_ospf_redistribute_sslVpn_status                bool          `json:"routing.ospf.redistribute.ssl_vpn.status"`
	Routing_ospf_redistribute_static_metric                int64         `json:"routing.ospf.redistribute.static.metric"`
	Routing_ospf_redistribute_static_status                bool          `json:"routing.ospf.redistribute.static.status"`
	Routing_ospf_referenceBandwidth                        struct{}      `json:"routing.ospf.reference_bandwidth"`
	Routing_ospf_routerID                                  string        `json:"routing.ospf.router_id"`
	Routing_ospf_status                                    bool          `json:"routing.ospf.status"`
	Routing_quagga_allowedNetworks                         []interface{} `json:"routing.quagga.allowed_networks"`
	Routing_quagga_enablePassword                          string        `json:"routing.quagga.enable_password"`
	Routing_quagga_linkDetect                              bool          `json:"routing.quagga.link_detect"`
	Routing_quagga_password                                string        `json:"routing.quagga.password"`
	SandboxReportd_debug                                   string        `json:"sandbox_reportd.debug"`
	SandboxReportd_pollInterval                            int64         `json:"sandbox_reportd.poll_interval"`
	SandboxReportd_requestTimeout                          int64         `json:"sandbox_reportd.request_timeout"`
	SandboxReportd_retryTimes                              int64         `json:"sandbox_reportd.retry_times"`
	Sandboxd_bypassSandboxLimit                            int64         `json:"sandboxd.bypass_sandbox_limit"`
	Sandboxd_cacheExpire                                   int64         `json:"sandboxd.cache_expire"`
	Sandboxd_certstore                                     string        `json:"sandboxd.certstore"`
	Sandboxd_clientTimeout                                 int64         `json:"sandboxd.client_timeout"`
	Sandboxd_cloudPollInterval                             int64         `json:"sandboxd.cloud_poll_interval"`
	Sandboxd_cloudPollRequestMaximum                       int64         `json:"sandboxd.cloud_poll_request_maximum"`
	Sandboxd_cloudPollTimeout                              int64         `json:"sandboxd.cloud_poll_timeout"`
	Sandboxd_connectTimeout                                int64         `json:"sandboxd.connect_timeout"`
	Sandboxd_debug                                         struct{}      `json:"sandboxd.debug"`
	Sandboxd_dhparams2048                                  string        `json:"sandboxd.dhparams_2048"`
	Sandboxd_edgeServerCertValidation                      bool          `json:"sandboxd.edge_server_cert_validation"`
	Sandboxd_edgeServerHost                                string        `json:"sandboxd.edge_server_host"`
	Sandboxd_edgeServerPort                                int64         `json:"sandboxd.edge_server_port"`
	Sandboxd_filetypeSkiplist                              []interface{} `json:"sandboxd.filetype_skiplist"`
	Sandboxd_numOfEventThreads                             int64         `json:"sandboxd.num_of_event_threads"`
	Sandboxd_numOfWorkerThreads                            int64         `json:"sandboxd.num_of_worker_threads"`
	Sandboxd_responseTimeout                               int64         `json:"sandboxd.response_timeout"`
	Sandboxd_retryIntervals                                string        `json:"sandboxd.retry_intervals"`
	Sandboxd_sandboxEnabled                                bool          `json:"sandboxd.sandbox_enabled"`
	Sandboxd_sandboxdScoreThreshold                        int64         `json:"sandboxd.sandboxd_score_threshold"`
	Sandboxd_sbxVersion                                    int64         `json:"sandboxd.sbx_version"`
	Sandboxd_sqliteBusyTimeout                             int64         `json:"sandboxd.sqlite_busy_timeout"`
	Sandboxd_sslCertFile                                   string        `json:"sandboxd.ssl_cert_file"`
	Sandboxd_sslKeyFile                                    string        `json:"sandboxd.ssl_key_file"`
	Sandboxd_sslciphers                                    string        `json:"sandboxd.sslciphers"`
	Settings_adminEmail                                    string        `json:"settings.admin_email"`
	Settings_basicSetup                                    bool          `json:"settings.basic_setup"`
	Settings_ccMode                                        bool          `json:"settings.cc_mode"`
	Settings_city                                          string        `json:"settings.city"`
	Settings_country                                       string        `json:"settings.country"`
	Settings_extraSwap                                     struct{}      `json:"settings.extra_swap"`
	Settings_hostname                                      string        `json:"settings.hostname"`
	Settings_icsaMode                                      bool          `json:"settings.icsa_mode"`
	Settings_organization                                  string        `json:"settings.organization"`
	Settings_passwordComplexity_minDigits                  int64         `json:"settings.password_complexity.min_digits"`
	Settings_passwordComplexity_minLength                  int64         `json:"settings.password_complexity.min_length"`
	Settings_passwordComplexity_minLowerChars              int64         `json:"settings.password_complexity.min_lower_chars"`
	Settings_passwordComplexity_minSpecialChars            int64         `json:"settings.password_complexity.min_special_chars"`
	Settings_passwordComplexity_minUpperChars              int64         `json:"settings.password_complexity.min_upper_chars"`
	Settings_passwordComplexity_status                     bool          `json:"settings.password_complexity.status"`
	Settings_popularity                                    string        `json:"settings.popularity"`
	Settings_rasUpdate                                     string        `json:"settings.ras_update"`
	Settings_systemID                                      string        `json:"settings.system_id"`
	Settings_timezone                                      string        `json:"settings.timezone"`
	Sip_allowedNetworks                                    []string      `json:"sip.allowed_networks"`
	Sip_expectMode                                         string        `json:"sip.expect_mode"`
	Sip_logRelated                                         bool          `json:"sip.log_related"`
	Sip_servers                                            []string      `json:"sip.servers"`
	Sip_status                                             bool          `json:"sip.status"`
	SmsClient_hostname                                     string        `json:"sms_client.hostname"`
	SmsClient_name                                         string        `json:"sms_client.name"`
	SmsClient_password                                     string        `json:"sms_client.password"`
	SmsClient_port                                         struct{}      `json:"sms_client.port"`
	SmsClient_status                                       bool          `json:"sms_client.status"`
	SmsClient_username                                     string        `json:"sms_client.username"`
	SMTP_authAaa                                           []interface{} `json:"smtp.auth_aaa"`
	SMTP_authStatus                                        bool          `json:"smtp.auth_status"`
	SMTP_avFooter                                          string        `json:"smtp.av_footer"`
	SMTP_avFooterStatus                                    bool          `json:"smtp.av_footer_status"`
	SMTP_batvSecret                                        string        `json:"smtp.batv_secret"`
	SMTP_blockerService                                    string        `json:"smtp.blocker_service"`
	SMTP_cffAsMarker                                       string        `json:"smtp.cff_as_marker"`
	SMTP_dkimDomains                                       []interface{} `json:"smtp.dkim_domains"`
	SMTP_dkimPrivateKey                                    string        `json:"smtp.dkim_private_key"`
	SMTP_dkimSelector                                      string        `json:"smtp.dkim_selector"`
	SMTP_enableOldExpressionFilter                         bool          `json:"smtp.enable_old_expression_filter"`
	SMTP_encryptionUtility                                 string        `json:"smtp.encryption_utility"`
	SMTP_exceptions                                        []interface{} `json:"smtp.exceptions"`
	SMTP_footersMode                                       string        `json:"smtp.footers_mode"`
	SMTP_globalAsReject                                    string        `json:"smtp.global_as_reject"`
	SMTP_globalAvReject                                    bool          `json:"smtp.global_av_reject"`
	SMTP_globalProfile                                     string        `json:"smtp.global_profile"`
	SMTP_hostBlacklist                                     []interface{} `json:"smtp.host_blacklist"`
	SMTP_hostname                                          string        `json:"smtp.hostname"`
	SMTP_maxMessageSize                                    int64         `json:"smtp.max_message_size"`
	SMTP_mode                                              string        `json:"smtp.mode"`
	SMTP_parentProxyAuthPass                               string        `json:"smtp.parent_proxy_auth_pass"`
	SMTP_parentProxyAuthStatus                             bool          `json:"smtp.parent_proxy_auth_status"`
	SMTP_parentProxyAuthUser                               string        `json:"smtp.parent_proxy_auth_user"`
	SMTP_parentProxyHost                                   string        `json:"smtp.parent_proxy_host"`
	SMTP_parentProxyPort                                   int64         `json:"smtp.parent_proxy_port"`
	SMTP_parentProxyStatus                                 bool          `json:"smtp.parent_proxy_status"`
	SMTP_postmaster                                        string        `json:"smtp.postmaster"`
	SMTP_profiles                                          []interface{} `json:"smtp.profiles"`
	SMTP_recipientsMax                                     int64         `json:"smtp.recipients_max"`
	SMTP_relays                                            []interface{} `json:"smtp.relays"`
	SMTP_scanOutgoingEmails                                bool          `json:"smtp.scan_outgoing_emails"`
	SMTP_scannerPool_maxPool                               int64         `json:"smtp.scanner_pool.max_pool"`
	SMTP_scannerPool_thresholds                            []int64       `json:"smtp.scanner_pool.thresholds"`
	SMTP_scannerTimeout                                    int64         `json:"smtp.scanner_timeout"`
	SMTP_smarthostAuth                                     bool          `json:"smtp.smarthost_auth"`
	SMTP_smarthostHostname                                 string        `json:"smtp.smarthost_hostname"`
	SMTP_smarthostPass                                     string        `json:"smtp.smarthost_pass"`
	SMTP_smarthostPort                                     int64         `json:"smtp.smarthost_port"`
	SMTP_smarthostStatus                                   bool          `json:"smtp.smarthost_status"`
	SMTP_smarthostUser                                     string        `json:"smtp.smarthost_user"`
	SMTP_smtpAcceptMax                                     int64         `json:"smtp.smtp_accept_max"`
	SMTP_smtpAcceptPerConnectionMax                        int64         `json:"smtp.smtp_accept_per_connection_max"`
	SMTP_smtpAcceptPerHostMax                              int64         `json:"smtp.smtp_accept_per_host_max"`
	SMTP_status                                            bool          `json:"smtp.status"`
	SMTP_tlsAvoid                                          []interface{} `json:"smtp.tls_avoid"`
	SMTP_tlsCert                                           string        `json:"smtp.tls_cert"`
	SMTP_tlsRequire                                        []interface{} `json:"smtp.tls_require"`
	SMTP_tlsRequireSenderDomains                           []interface{} `json:"smtp.tls_require_sender_domains"`
	SMTP_transparent                                       bool          `json:"smtp.transparent"`
	SMTP_transparentSkip                                   []interface{} `json:"smtp.transparent_skip"`
	SMTP_transparentSkipAutoPf                             bool          `json:"smtp.transparent_skip_auto_pf"`
	SMTP_upstreamHosts                                     []interface{} `json:"smtp.upstream_hosts"`
	SMTP_upstreamHostsOnly                                 bool          `json:"smtp.upstream_hosts_only"`
	Snmp_allowedNetworks                                   []interface{} `json:"snmp.allowed_networks"`
	Snmp_authPassword                                      string        `json:"snmp.auth_password"`
	Snmp_authType                                          string        `json:"snmp.auth_type"`
	Snmp_community                                         string        `json:"snmp.community"`
	Snmp_deviceAdmin                                       string        `json:"snmp.device_admin"`
	Snmp_deviceLocation                                    string        `json:"snmp.device_location"`
	Snmp_deviceName                                        string        `json:"snmp.device_name"`
	Snmp_encryptPassword                                   string        `json:"snmp.encrypt_password"`
	Snmp_encryptType                                       string        `json:"snmp.encrypt_type"`
	Snmp_status                                            bool          `json:"snmp.status"`
	Snmp_traps                                             []interface{} `json:"snmp.traps"`
	Snmp_trapsUseOldOids                                   bool          `json:"snmp.traps_use_old_oids"`
	Snmp_username                                          string        `json:"snmp.username"`
	Snmp_version                                           string        `json:"snmp.version"`
	Socks_aaa                                              []string      `json:"socks.aaa"`
	Socks_allowedNetworks                                  []string      `json:"socks.allowed_networks"`
	Socks_authentication                                   bool          `json:"socks.authentication"`
	Socks_status                                           bool          `json:"socks.status"`
	Spx_global_errorNotificationTarget                     string        `json:"spx.global.error_notification_target"`
	Spx_global_expirySettings_allowSecureReplyDays         int64         `json:"spx.global.expiry_settings.allow_secure_reply_days"`
	Spx_global_expirySettings_keepDelayedMailDays          int64         `json:"spx.global.expiry_settings.keep_delayed_mail_days"`
	Spx_global_expirySettings_keepUnusedPwdDays            int64         `json:"spx.global.expiry_settings.keep_unused_pwd_days"`
	Spx_global_expirySettings_registrationReminderDays     int64         `json:"spx.global.expiry_settings.registration_reminder_days"`
	Spx_global_passwordStrength_minLength                  int64         `json:"spx.global.password_strength.min_length"`
	Spx_global_passwordStrength_requireSpecChars           bool          `json:"spx.global.password_strength.require_spec_chars"`
	Spx_global_portalSettings_allowedNetworks              []interface{} `json:"spx.global.portal_settings.allowed_networks"`
	Spx_global_portalSettings_hostname                     string        `json:"spx.global.portal_settings.hostname"`
	Spx_global_portalSettings_interfaceAddress             string        `json:"spx.global.portal_settings.interface_address"`
	Spx_global_portalSettings_port                         int64         `json:"spx.global.portal_settings.port"`
	Spx_global_poweredByLogo                               string        `json:"spx.global.powered_by_logo"`
	Spx_global_spxPriority                                 bool          `json:"spx.global.spx_priority"`
	Spx_global_status                                      bool          `json:"spx.global.status"`
	Spx_spxAuth_password                                   string        `json:"spx.spx_auth.password"`
	Spx_spxAuth_port                                       int64         `json:"spx.spx_auth.port"`
	Spx_spxAuth_server                                     string        `json:"spx.spx_auth.server"`
	Spx_spxAuth_url                                        string        `json:"spx.spx_auth.url"`
	Spx_templates                                          []string      `json:"spx.templates"`
	SSH_allowedNetworks                                    []string      `json:"ssh.allowed_networks"`
	SSH_loginKeys                                          []string      `json:"ssh.login_keys"`
	SSH_passwordAuth                                       bool          `json:"ssh.password_auth"`
	SSH_port                                               int64         `json:"ssh.port"`
	SSH_pubkeyAuth                                         bool          `json:"ssh.pubkey_auth"`
	SSH_rootKeys                                           []string      `json:"ssh.root_keys"`
	SSH_rootLogin                                          string        `json:"ssh.root_login"`
	SSH_status                                             bool          `json:"ssh.status"`
	SslVpn_authenticationAlgorithm                         string        `json:"ssl_vpn.authentication_algorithm"`
	SslVpn_certificate                                     string        `json:"ssl_vpn.certificate"`
	SslVpn_compression                                     bool          `json:"ssl_vpn.compression"`
	SslVpn_datachannelKeyLifetime                          int64         `json:"ssl_vpn.datachannel_key_lifetime"`
	SslVpn_debug                                           bool          `json:"ssl_vpn.debug"`
	SslVpn_dhKeySize                                       string        `json:"ssl_vpn.dh_key_size"`
	SslVpn_duplicateCn                                     bool          `json:"ssl_vpn.duplicate_cn"`
	SslVpn_encryptionAlgorithm                             string        `json:"ssl_vpn.encryption_algorithm"`
	SslVpn_hostname                                        string        `json:"ssl_vpn.hostname"`
	SslVpn_interface                                       string        `json:"ssl_vpn.interface"`
	SslVpn_interfaceAddress                                string        `json:"ssl_vpn.interface_address"`
	SslVpn_ipAssignmentPool                                string        `json:"ssl_vpn.ip_assignment_pool"`
	SslVpn_port                                            int64         `json:"ssl_vpn.port"`
	SslVpn_protocol                                        string        `json:"ssl_vpn.protocol"`
	SslVpn_userAuthOptional                                bool          `json:"ssl_vpn.user_auth_optional"`
	SupportAccess_accessID                                 string        `json:"support_access.access_id"`
	SupportAccess_apuServer                                string        `json:"support_access.apu_server"`
	SupportAccess_lifetimeDuration                         string        `json:"support_access.lifetime_duration"`
	SupportAccess_lifetimeEnd                              struct{}      `json:"support_access.lifetime_end"`
	SupportAccess_sshKeys                                  []interface{} `json:"support_access.ssh_keys"`
	SupportAccess_status                                   bool          `json:"support_access.status"`
	U2dcache_allowedNetworks                               []interface{} `json:"u2dcache.allowed_networks"`
	U2dcache_port                                          int64         `json:"u2dcache.port"`
	U2dcache_status                                        bool          `json:"u2dcache.status"`
	Up2date_cacheHost                                      string        `json:"up2date.cache_host"`
	Up2date_cachePort                                      int64         `json:"up2date.cache_port"`
	Up2date_cacheStatus                                    bool          `json:"up2date.cache_status"`
	Up2date_cacheUseAcc                                    bool          `json:"up2date.cache_use_acc"`
	Up2date_parentProxyAuthPass                            string        `json:"up2date.parent_proxy_auth_pass"`
	Up2date_parentProxyAuthStatus                          bool          `json:"up2date.parent_proxy_auth_status"`
	Up2date_parentProxyAuthUser                            string        `json:"up2date.parent_proxy_auth_user"`
	Up2date_parentProxyHost                                string        `json:"up2date.parent_proxy_host"`
	Up2date_parentProxyPort                                int64         `json:"up2date.parent_proxy_port"`
	Up2date_parentProxyStatus                              bool          `json:"up2date.parent_proxy_status"`
	Up2date_patternDownloadInterval                        struct{}      `json:"up2date.pattern_download_interval"`
	Up2date_patternDownloadStatus                          bool          `json:"up2date.pattern_download_status"`
	Up2date_scheduledUp2date                               []interface{} `json:"up2date.scheduled_up2date"`
	Up2date_servers                                        []string      `json:"up2date.servers"`
	Up2date_status                                         bool          `json:"up2date.status"`
	Up2date_systemAutoinstallTime                          string        `json:"up2date.system_autoinstall_time"`
	Up2date_systemDownloadInterval                         int64         `json:"up2date.system_download_interval"`
	Up2date_systemDownloadStatus                           bool          `json:"up2date.system_download_status"`
	Uplink_actions                                         []interface{} `json:"uplink.actions"`
	Uplink_active                                          string        `json:"uplink.active"`
	Uplink_condition                                       string        `json:"uplink.condition"`
	Uplink_interfaces                                      string        `json:"uplink.interfaces"`
	Uplink_monitoring                                      bool          `json:"uplink.monitoring"`
	Uplink_passive                                         string        `json:"uplink.passive"`
	Uplink_primary                                         string        `json:"uplink.primary"`
	Uplink_rules                                           []string      `json:"uplink.rules"`
	Uplink_scheduler                                       string        `json:"uplink.scheduler"`
	Uplink_status                                          bool          `json:"uplink.status"`
	Webadmin_allowedNetworks                               []string      `json:"webadmin.allowed_networks"`
	Webadmin_ca                                            string        `json:"webadmin.ca"`
	Webadmin_cert                                          string        `json:"webadmin.cert"`
	Webadmin_dashboardRefresh                              string        `json:"webadmin.dashboard_refresh"`
	Webadmin_language                                      string        `json:"webadmin.language"`
	Webadmin_logAdminConnect                               bool          `json:"webadmin.log_admin_connect"`
	Webadmin_offerWizard                                   bool          `json:"webadmin.offer_wizard"`
	Webadmin_port                                          int64         `json:"webadmin.port"`
	Webadmin_restAPI                                       bool          `json:"webadmin.rest_api"`
	Webadmin_termsOfUse_status                             bool          `json:"webadmin.terms_of_use.status"`
	Webadmin_termsOfUse_text                               string        `json:"webadmin.terms_of_use.text"`
	Webadmin_timeout                                       int64         `json:"webadmin.timeout"`
	Webadmin_timeoutOnDashboard                            bool          `json:"webadmin.timeout_on_dashboard"`
	Webadmin_tlsCiphers                                    string        `json:"webadmin.tls_ciphers"`
	Webadmin_tlsProtocols                                  string        `json:"webadmin.tls_protocols"`
}

// Definitions implements the Resource interface and returns a map of Nodes's Objects
func (Nodes) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{}
}

// GetPath implements sophos.RestObject interface and returns the Nodes GET path
func (Nodes) GetPath() string {
	return "/api/nodes"
}

// ApiRoutes returns all known Nodes paths
func (Nodes) ApiRoutes() []string {
	return []string{
		"/api/nodes/",
		"/api/nodes/{id}",
	}
}

type StatusStatus struct {
	Restd string `json:"restd"`
	Utm   string `json:"utm"`
}

// Status is a generated struct representing the Sophos Status Node Leaf
// GET /api/nodes/status
type Status struct {
	StatusStatus StatusStatus `json:"Status_status"`
}

// Definitions implements the Resource interface and returns a map of Status's sophos.Objects
func (Status) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"Status_status": StatusStatus{},
	}
}

// GetPath implements sophos.RestObject and returns the StatusStatus GET path
func (StatusStatus) GetPath() string {
	return "/api/status/version"
}

type AaaGroup []struct {
	Locked               string        `json:"_locked"`
	AdirectoryGroups     []interface{} `json:"adirectory_groups"`
	AdirectoryGroupsSids struct{}      `json:"adirectory_groups_sids"`
	BackendMatch         string        `json:"backend_match"`
	Comment              string        `json:"comment"`
	Dynamic              string        `json:"dynamic"`
	EdirectoryGroups     []interface{} `json:"edirectory_groups"`
	IpsecDn              string        `json:"ipsec_dn"`
	LdapAttribute        string        `json:"ldap_attribute"`
	LdapAttributeValue   string        `json:"ldap_attribute_value"`
	Members              []string      `json:"members"`
	Name                 string        `json:"name"`
	Network              string        `json:"network"`
	RadiusGroups         []interface{} `json:"radius_groups"`
	TacacsGroups         []interface{} `json:"tacacs_groups"`
}

type AaaUser []struct {
	Locked           string        `json:"_locked"`
	AccManaged       bool          `json:"acc_managed"`
	AllowedNetworks  []string      `json:"allowed_networks"`
	Authentication   string        `json:"authentication"`
	BackendUpdate    bool          `json:"backend_update"`
	Clearpass        string        `json:"clearpass"`
	Comment          string        `json:"comment"`
	EmailPrimary     string        `json:"email_primary"`
	EmailSecondary   []interface{} `json:"email_secondary"`
	Enabled          bool          `json:"enabled"`
	LastauthBackend  string        `json:"lastauth_backend"`
	LastauthFacility string        `json:"lastauth_facility"`
	LastauthTime     int64         `json:"lastauth_time"`
	Loc              string        `json:"loc"`
	Md4hash          string        `json:"md4hash"`
	Name             string        `json:"name"`
	Network          string        `json:"network"`
	Pop3Accounts     []interface{} `json:"pop3_accounts"`
	RasIP            string        `json:"ras_ip"`
	RasOnline        bool          `json:"ras_online"`
	Realname         string        `json:"realname"`
	SenderBlacklist  []interface{} `json:"sender_blacklist"`
	SenderWhitelist  []interface{} `json:"sender_whitelist"`
	Status           bool          `json:"status"`
	UseRasIP         bool          `json:"use_ras_ip"`
	UserPreferences  string        `json:"user_preferences"`
	X509Cert         string        `json:"x509_cert"`
	X509CertGost     string        `json:"x509_cert_gost"`
}

// Aaa is a generated struct representing the Sophos aaa Node Leaf
// GET /api/nodes/aaa
type Aaa struct {
	AaaGroup AaaGroup `json:"aaa_group"`
	AaaUser  AaaUser  `json:"aaa_user"`
}

// Definitions implements the Resource interface and returns a map of Aaa's sophos.Objects
func (Aaa) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"aaa_group": AaaGroup{},
		"aaa_user":  AaaUser{},
	}
}

// GetPath implements sophos.RestObject and returns the AaaGroup GET path
func (AaaGroup) GetPath() string {
	return "/api/objects/aaa/group/"
}

// GetPath implements sophos.RestObject and returns the AaaUser GET path
func (AaaUser) GetPath() string {
	return "/api/objects/aaa/user/"
}

type AmazonVpcGroup []interface{}

type AmazonVpcConnection []struct {
	Locked     string   `json:"_locked"`
	Comment    string   `json:"comment"`
	Dev        string   `json:"dev"`
	ID         string   `json:"id"`
	Name       string   `json:"name"`
	Region     string   `json:"region"`
	Status     bool     `json:"status"`
	Tunnel     []string `json:"tunnel"`
	VpcGateway string   `json:"vpc_gateway"`
	VpcID      string   `json:"vpc_id"`
	VpcNetmask int64    `json:"vpc_netmask"`
	VpcNetwork string   `json:"vpc_network"`
}

type AmazonVpcTunnel []struct {
	Locked  string `json:"_locked"`
	Address string `json:"address"`
	Bgp     string `json:"bgp"`
	Comment string `json:"comment"`
	Ipsec   string `json:"ipsec"`
	Name    string `json:"name"`
	Netmask int64  `json:"netmask"`
}

type AmazonVpc struct {
	AutoPfrule  int64    `json:"auto_pfrule"`
	Connections []string `json:"connections"`
	Networks    []string `json:"networks"`
	Status      int64    `json:"status"`
}

// Definitions implements the Resource interface and returns a map of AmazonVpc's Objects
func (AmazonVpc) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"AmazonVpcGroup":      AmazonVpcGroup{},
		"AmazonVpcConnection": AmazonVpcConnection{},
		"AmazonVpcTunnel":     AmazonVpcTunnel{},
	}
}

// GetPath implements sophos.RestObject interface and returns the AmazonVpc GET path
func (AmazonVpc) GetPath() string {
	return "/api/nodes/amazon_vpc"
}

// GetPath implements sophos.RestObject interface and returns the AmazonVpcGroup GET path
func (AmazonVpcGroup) GetPath() string {
	return "/objects/amazon_vpc/group/"
}

// GetPath implements sophos.RestObject interface and returns the AmazonVpcConnection GET path
func (AmazonVpcConnection) GetPath() string {
	return "/objects/amazon_vpc/connection/"
}

// GetPath implements sophos.RestObject interface and returns the AmazonVpcTunnel GET path
func (AmazonVpcTunnel) GetPath() string {
	return "/objects/amazon_vpc/tunnel/"
}

// ApiRoutes returns all known AmazonVpc paths
func (AmazonVpc) ApiRoutes() []string {
	return []string{
		"/api/objects/amazon_vpc/connection/",
		"/api/objects/amazon_vpc/group/{ref}",
		"/api/objects/amazon_vpc/tunnel/",
		"/api/objects/amazon_vpc/tunnel/{ref}",
		"/api/objects/amazon_vpc/tunnel/{ref}/usedby",
		"/api/objects/amazon_vpc/connection/{ref}",
		"/api/objects/amazon_vpc/connection/{ref}/usedby",
		"/api/objects/amazon_vpc/group/",
		"/api/objects/amazon_vpc/group/{ref}/usedby",
		"/api/objects/amazon_vpc/connection/{ref}",
		"/api/objects/amazon_vpc/connection/{ref}/usedby",
		"/api/objects/amazon_vpc/group/",
		"/api/objects/amazon_vpc/group/{ref}/usedby",
		"/api/objects/amazon_vpc/connection/",
		"/api/objects/amazon_vpc/group/{ref}",
		"/api/objects/amazon_vpc/tunnel/",
		"/api/objects/amazon_vpc/tunnel/{ref}",
		"/api/objects/amazon_vpc/tunnel/{ref}/usedby",
	}
}

type ApplicationControlGroup []interface{}

type ApplicationControlRule []struct {
	Locked                  string        `json:"_locked"`
	Action                  string        `json:"action"`
	Applications            []string      `json:"applications"`
	Comment                 string        `json:"comment"`
	DestinationNetworks     []string      `json:"destination_networks"`
	Group                   string        `json:"group"`
	GroupFilterProductivity int64         `json:"group_filter_productivity"`
	GroupFilterRisk         int64         `json:"group_filter_risk"`
	Groups                  []interface{} `json:"groups"`
	Log                     bool          `json:"log"`
	Name                    string        `json:"name"`
	SourceNetworks          []string      `json:"source_networks"`
	Status                  bool          `json:"status"`
}

// ApplicationControl is a generated struct representing the Sophos application_control Node Leaf
// GET /api/nodes/application_control
type ApplicationControl struct {
	ApplicationControlGroup ApplicationControlGroup `json:"application_control_group"`
	ApplicationControlRule  ApplicationControlRule  `json:"application_control_rule"`
}

// Definitions implements the Resource interface and returns a map of ApplicationControl's sophos.Objects
func (ApplicationControl) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"application_control_group": ApplicationControlGroup{},
		"application_control_rule":  ApplicationControlRule{},
	}
}

// GetPath implements sophos.RestObject and returns the ApplicationControlGroup GET path
func (ApplicationControlGroup) GetPath() string {
	return "/api/objects/application_control/group/"
}

// GetPath implements sophos.RestObject and returns the ApplicationControlRule GET path
func (ApplicationControlRule) GetPath() string {
	return "/api/objects/application_control/rule/"
}

type AuthenticationAdirectory []interface{}

type AuthenticationEdirectory []interface{}

type AuthenticationGroup []interface{}

type AuthenticationLdap []interface{}

type AuthenticationRadius []interface{}

type AuthenticationOtpToken []interface{}

type AuthenticationTacacs []interface{}

// Authentication is a generated struct representing the Sophos authentication Node Leaf
// GET /api/nodes/authentication
type Authentication struct {
	AuthenticationAdirectory AuthenticationAdirectory `json:"authentication_adirectory"`
	AuthenticationEdirectory AuthenticationEdirectory `json:"authentication_edirectory"`
	AuthenticationGroup      AuthenticationGroup      `json:"authentication_group"`
	AuthenticationLdap       AuthenticationLdap       `json:"authentication_ldap"`
	AuthenticationRadius     AuthenticationRadius     `json:"authentication_radius"`
	AuthenticationOtpToken   AuthenticationOtpToken   `json:"authentication_otp_token"`
	AuthenticationTacacs     AuthenticationTacacs     `json:"authentication_tacacs"`
}

// Definitions implements the Resource interface and returns a map of Authentication's sophos.Objects
func (Authentication) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"authentication_adirectory": AuthenticationAdirectory{},
		"authentication_edirectory": AuthenticationEdirectory{},
		"authentication_group":      AuthenticationGroup{},
		"authentication_ldap":       AuthenticationLdap{},
		"authentication_radius":     AuthenticationRadius{},
		"authentication_otp_token":  AuthenticationOtpToken{},
		"authentication_tacacs":     AuthenticationTacacs{},
	}
}

// GetPath implements sophos.RestObject and returns the AuthenticationAdirectory GET path
func (AuthenticationAdirectory) GetPath() string {
	return "/api/objects/authentication/adirectory/"
}

// GetPath implements sophos.RestObject and returns the AuthenticationEdirectory GET path
func (AuthenticationEdirectory) GetPath() string {
	return "/api/objects/authentication/edirectory/"
}

// GetPath implements sophos.RestObject and returns the AuthenticationGroup GET path
func (AuthenticationGroup) GetPath() string {
	return "/api/objects/authentication/group/"
}

// GetPath implements sophos.RestObject and returns the AuthenticationLdap GET path
func (AuthenticationLdap) GetPath() string {
	return "/api/objects/authentication/ldap/"
}

// GetPath implements sophos.RestObject and returns the AuthenticationRadius GET path
func (AuthenticationRadius) GetPath() string {
	return "/api/objects/authentication/radius/"
}

// GetPath implements sophos.RestObject and returns the AuthenticationOtpToken GET path
func (AuthenticationOtpToken) GetPath() string {
	return "/api/objects/authentication/otp_token/"
}

// GetPath implements sophos.RestObject and returns the AuthenticationTacacs GET path
func (AuthenticationTacacs) GetPath() string {
	return "/api/objects/authentication/tacacs/"
}

type AweRed []interface{}

type AweDevice []interface{}

type AweGroup []interface{}

type AweLocal []interface{}

type AweClient []interface{}

type Awe struct {
	AllowedInterfaces []interface{} `json:"allowed_interfaces"`
	Clients           []interface{} `json:"clients"`
	Devices           []interface{} `json:"devices"`
	Global            struct {
		ApAutoaccept        int64  `json:"ap_autoaccept"`
		ApDebuglevel        int64  `json:"ap_debuglevel"`
		ApSoftlimit         int64  `json:"ap_softlimit"`
		ApVlantag           int64  `json:"ap_vlantag"`
		AweStatus           int64  `json:"awe_status"`
		BridgeUpdateKickout int64  `json:"bridge_update_kickout"`
		InitialSetup        int64  `json:"initial_setup"`
		LogLevel            int64  `json:"log_level"`
		MagicIP             string `json:"magic_ip"`
		NotificationTimeout int64  `json:"notification_timeout"`
		RadiusConf          string `json:"radius_conf"`
		Rootpw              string `json:"rootpw"`
		StayOnline          int64  `json:"stay_online"`
		StoreBssStats       int64  `json:"store_bss_stats"`
		TunnelIDOffset      int64  `json:"tunnel_id_offset"`
		Vlantagging         int64  `json:"vlantagging"`
	} `json:"global"`
	Networks []string `json:"networks"`
}

// Definitions implements the Resource interface and returns a map of Awe's Objects
func (Awe) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"AweRed":    AweRed{},
		"AweDevice": AweDevice{},
		"AweGroup":  AweGroup{},
		"AweLocal":  AweLocal{},
		"AweClient": AweClient{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Awe GET path
func (Awe) GetPath() string {
	return "/api/nodes/awe"
}

// GetPath implements sophos.RestObject interface and returns the AweRed GET path
func (AweRed) GetPath() string {
	return "/objects/awe/red/"
}

// GetPath implements sophos.RestObject interface and returns the AweDevice GET path
func (AweDevice) GetPath() string {
	return "/objects/awe/device/"
}

// GetPath implements sophos.RestObject interface and returns the AweGroup GET path
func (AweGroup) GetPath() string {
	return "/objects/awe/group/"
}

// GetPath implements sophos.RestObject interface and returns the AweLocal GET path
func (AweLocal) GetPath() string {
	return "/objects/awe/local/"
}

// GetPath implements sophos.RestObject interface and returns the AweClient GET path
func (AweClient) GetPath() string {
	return "/objects/awe/client/"
}

// ApiRoutes returns all known Awe paths
func (Awe) ApiRoutes() []string {
	return []string{
		"/api/objects/awe/device/{ref}/usedby",
		"/api/objects/awe/group/{ref}/usedby",
		"/api/objects/awe/red/",
		"/api/objects/awe/group/{ref}",
		"/api/objects/awe/local/",
		"/api/objects/awe/local/{ref}",
		"/api/objects/awe/red/{ref}/usedby",
		"/api/objects/awe/client/{ref}",
		"/api/objects/awe/device/",
		"/api/objects/awe/group/",
		"/api/objects/awe/local/{ref}/usedby",
		"/api/objects/awe/red/{ref}",
		"/api/objects/awe/client/",
		"/api/objects/awe/client/{ref}/usedby",
		"/api/objects/awe/device/{ref}",
		"/api/objects/awe/group/{ref}/usedby",
		"/api/objects/awe/red/",
		"/api/objects/awe/device/{ref}/usedby",
		"/api/objects/awe/device/",
		"/api/objects/awe/group/",
		"/api/objects/awe/group/{ref}",
		"/api/objects/awe/local/",
		"/api/objects/awe/local/{ref}",
		"/api/objects/awe/red/{ref}/usedby",
		"/api/objects/awe/client/{ref}",
		"/api/objects/awe/client/{ref}/usedby",
		"/api/objects/awe/device/{ref}",
		"/api/objects/awe/local/{ref}/usedby",
		"/api/objects/awe/red/{ref}",
		"/api/objects/awe/client/",
	}
}

type AweNetworkDeviceAssociationMeshRole []interface{}

type AweNetworkDeviceAssociationGroup []interface{}

// AweNetworkDeviceAssociation is a generated struct representing the Sophos awe_network_device_association Node Leaf
// GET /api/nodes/awe_network_device_association
type AweNetworkDeviceAssociation struct {
	AweNetworkDeviceAssociationMeshRole AweNetworkDeviceAssociationMeshRole `json:"awe_network_device_association_mesh_role"`
	AweNetworkDeviceAssociationGroup    AweNetworkDeviceAssociationGroup    `json:"awe_network_device_association_group"`
}

// Definitions implements the Resource interface and returns a map of AweNetworkDeviceAssociation's sophos.Objects
func (AweNetworkDeviceAssociation) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"awe_network_device_association_mesh_role": AweNetworkDeviceAssociationMeshRole{},
		"awe_network_device_association_group":     AweNetworkDeviceAssociationGroup{},
	}
}

// GetPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationMeshRole GET path
func (AweNetworkDeviceAssociationMeshRole) GetPath() string {
	return "/api/objects/awe_network_device_association/mesh_role/"
}

// GetPath implements sophos.RestObject and returns the AweNetworkDeviceAssociationGroup GET path
func (AweNetworkDeviceAssociationGroup) GetPath() string {
	return "/api/objects/awe_network_device_association/group/"
}

type AwsGroup []interface{}

type AwsInstanceType []struct {
	Locked             string      `json:"_locked"`
	Comment            string      `json:"comment"`
	CPUCores           int64       `json:"cpu_cores"`
	Deprecated         bool        `json:"deprecated"`
	MemoryBytes        interface{} `json:"memory_bytes"`
	Model              string      `json:"model"`
	Name               string      `json:"name"`
	NetworkPerformance string      `json:"network_performance"`
}

type AwsRegion []struct {
	Locked            string   `json:"_locked"`
	AvailabilityZones []string `json:"availability_zones"`
	Code              string   `json:"code"`
	Comment           string   `json:"comment"`
	InstanceTypes     []string `json:"instance_types"`
	Name              string   `json:"name"`
	Partition         string   `json:"partition"`
}

// Aws is a generated struct representing the Sophos aws Node Leaf
// GET /api/nodes/aws
type Aws struct {
	AwsGroup        AwsGroup        `json:"aws_group"`
	AwsInstanceType AwsInstanceType `json:"aws_instance_type"`
	AwsRegion       AwsRegion       `json:"aws_region"`
}

// Definitions implements the Resource interface and returns a map of Aws's sophos.Objects
func (Aws) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"aws_group":         AwsGroup{},
		"aws_instance_type": AwsInstanceType{},
		"aws_region":        AwsRegion{},
	}
}

// GetPath implements sophos.RestObject and returns the AwsGroup GET path
func (AwsGroup) GetPath() string {
	return "/api/objects/aws/group/"
}

// GetPath implements sophos.RestObject and returns the AwsInstanceType GET path
func (AwsInstanceType) GetPath() string {
	return "/api/objects/aws/instance_type/"
}

// GetPath implements sophos.RestObject and returns the AwsRegion GET path
func (AwsRegion) GetPath() string {
	return "/api/objects/aws/region/"
}

type AwscliProfile []interface{}

type AwscliGroup []interface{}

type Awscli struct {
	Profiles []interface{} `json:"profiles"`
}

// Definitions implements the Resource interface and returns a map of Awscli's Objects
func (Awscli) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"AwscliProfile": AwscliProfile{},
		"AwscliGroup":   AwscliGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Awscli GET path
func (Awscli) GetPath() string {
	return "/api/nodes/awscli"
}

// GetPath implements sophos.RestObject interface and returns the AwscliProfile GET path
func (AwscliProfile) GetPath() string {
	return "/objects/awscli/profile/"
}

// GetPath implements sophos.RestObject interface and returns the AwscliGroup GET path
func (AwscliGroup) GetPath() string {
	return "/objects/awscli/group/"
}

// ApiRoutes returns all known Awscli paths
func (Awscli) ApiRoutes() []string {
	return []string{
		"/api/objects/awscli/profile/",
		"/api/objects/awscli/profile/{ref}",
		"/api/objects/awscli/profile/{ref}/usedby",
		"/api/objects/awscli/group/",
		"/api/objects/awscli/group/{ref}",
		"/api/objects/awscli/group/{ref}/usedby",
		"/api/objects/awscli/profile/",
		"/api/objects/awscli/profile/{ref}",
		"/api/objects/awscli/profile/{ref}/usedby",
		"/api/objects/awscli/group/",
		"/api/objects/awscli/group/{ref}",
		"/api/objects/awscli/group/{ref}/usedby",
	}
}

type BgpFilter []interface{}

type BgpNeighbor []interface{}

type BgpGroup []interface{}

type BgpSystem []interface{}

type BgpAmazonVpc []struct {
	Locked       string   `json:"_locked"`
	Comment      string   `json:"comment"`
	Custom       string   `json:"custom"`
	Host         string   `json:"host"`
	ID           string   `json:"id"`
	LocalAsn     int64    `json:"local_asn"`
	MaximumPaths int64    `json:"maximum_paths"`
	Name         string   `json:"name"`
	Network      []string `json:"network"`
	RemoteAsn    int64    `json:"remote_asn"`
}

type BgpRouteMap []interface{}

// Bgp is a generated struct representing the Sophos bgp Node Leaf
// GET /api/nodes/bgp
type Bgp struct {
	BgpFilter    BgpFilter    `json:"bgp_filter"`
	BgpNeighbor  BgpNeighbor  `json:"bgp_neighbor"`
	BgpGroup     BgpGroup     `json:"bgp_group"`
	BgpSystem    BgpSystem    `json:"bgp_system"`
	BgpAmazonVpc BgpAmazonVpc `json:"bgp_amazon_vpc"`
	BgpRouteMap  BgpRouteMap  `json:"bgp_route_map"`
}

// Definitions implements the Resource interface and returns a map of Bgp's sophos.Objects
func (Bgp) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"bgp_filter":     BgpFilter{},
		"bgp_neighbor":   BgpNeighbor{},
		"bgp_group":      BgpGroup{},
		"bgp_system":     BgpSystem{},
		"bgp_amazon_vpc": BgpAmazonVpc{},
		"bgp_route_map":  BgpRouteMap{},
	}
}

// GetPath implements sophos.RestObject and returns the BgpFilter GET path
func (BgpFilter) GetPath() string {
	return "/api/objects/bgp/filter/"
}

// GetPath implements sophos.RestObject and returns the BgpNeighbor GET path
func (BgpNeighbor) GetPath() string {
	return "/api/objects/bgp/neighbor/"
}

// GetPath implements sophos.RestObject and returns the BgpGroup GET path
func (BgpGroup) GetPath() string {
	return "/api/objects/bgp/group/"
}

// GetPath implements sophos.RestObject and returns the BgpSystem GET path
func (BgpSystem) GetPath() string {
	return "/api/objects/bgp/system/"
}

// GetPath implements sophos.RestObject and returns the BgpAmazonVpc GET path
func (BgpAmazonVpc) GetPath() string {
	return "/api/objects/bgp/amazon_vpc/"
}

// GetPath implements sophos.RestObject and returns the BgpRouteMap GET path
func (BgpRouteMap) GetPath() string {
	return "/api/objects/bgp/route_map/"
}

type CaGroup []interface{}

type CaHttpVerificationCa []interface{}

type CaSigningCa []struct {
	Locked      string `json:"_locked"`
	Certificate string `json:"certificate"`
	Comment     string `json:"comment"`
	Config      string `json:"config"`
	Encrypted   bool   `json:"encrypted"`
	Index       string `json:"index"`
	Key         string `json:"key"`
	Meta        string `json:"meta"`
	Name        string `json:"name"`
	Serial      string `json:"serial"`
}

type CaMetaX509 []struct {
	Locked             string   `json:"_locked"`
	Comment            string   `json:"comment"`
	Enddate            string   `json:"enddate"`
	Fingerprint        string   `json:"fingerprint"`
	Issuer             string   `json:"issuer"`
	IssuerHash         string   `json:"issuer_hash"`
	Name               string   `json:"name"`
	PublicKeyAlgorithm string   `json:"public_key_algorithm"`
	Serial             string   `json:"serial"`
	Startdate          string   `json:"startdate"`
	Subject            string   `json:"subject"`
	SubjectAltNames    []string `json:"subject_alt_names"`
	SubjectHash        string   `json:"subject_hash"`
	VpnID              string   `json:"vpn_id"`
	VpnIDType          string   `json:"vpn_id_type"`
}

type CaMetaCrl []interface{}

type CaHostKeyCert []struct {
	Locked      string `json:"_locked"`
	Ca          string `json:"ca"`
	Certificate string `json:"certificate"`
	Comment     string `json:"comment"`
	Encrypted   bool   `json:"encrypted"`
	Key         string `json:"key"`
	Meta        string `json:"meta"`
	Name        string `json:"name"`
}

type CaRsa []struct {
	Locked    string `json:"_locked"`
	Comment   string `json:"comment"`
	Key       string `json:"key"`
	KeySize   int64  `json:"key_size"`
	Name      string `json:"name"`
	Pubkey    string `json:"pubkey"`
	VpnID     string `json:"vpn_id"`
	VpnIDType string `json:"vpn_id_type"`
}

type CaCrl []interface{}

type CaVerificationCa []interface{}

type CaHostCert []struct {
	Locked      string `json:"_locked"`
	Certificate string `json:"certificate"`
	Comment     string `json:"comment"`
	Meta        string `json:"meta"`
	Name        string `json:"name"`
}

type Ca struct {
	CaGost     string `json:"ca_gost"`
	CaIpsec    string `json:"ca_ipsec"`
	CaProxies  string `json:"ca_proxies"`
	CaRed      string `json:"ca_red"`
	DefKeysize int64  `json:"def_keysize"`
	GlobalCas  struct {
		EmailEncryption struct {
			TrustNewCas int64         `json:"trust_new_cas"`
			Trusted     []interface{} `json:"trusted"`
			Untrusted   []interface{} `json:"untrusted"`
		} `json:"email_encryption"`
		HTTPProxy struct {
			TrustNewCas int64         `json:"trust_new_cas"`
			Trusted     []interface{} `json:"trusted"`
			Untrusted   []interface{} `json:"untrusted"`
		} `json:"http_proxy"`
	} `json:"global_cas"`
}

// Definitions implements the Resource interface and returns a map of Ca's Objects
func (Ca) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"CaGroup":              CaGroup{},
		"CaHttpVerificationCa": CaHttpVerificationCa{},
		"CaSigningCa":          CaSigningCa{},
		"CaMetaX509":           CaMetaX509{},
		"CaMetaCrl":            CaMetaCrl{},
		"CaHostKeyCert":        CaHostKeyCert{},
		"CaRsa":                CaRsa{},
		"CaCrl":                CaCrl{},
		"CaVerificationCa":     CaVerificationCa{},
		"CaHostCert":           CaHostCert{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Ca GET path
func (Ca) GetPath() string {
	return "/api/nodes/ca"
}

// GetPath implements sophos.RestObject interface and returns the CaGroup GET path
func (CaGroup) GetPath() string {
	return "/objects/ca/group/"
}

// GetPath implements sophos.RestObject interface and returns the CaHttpVerificationCa GET path
func (CaHttpVerificationCa) GetPath() string {
	return "/objects/ca/http_verification_ca/"
}

// GetPath implements sophos.RestObject interface and returns the CaSigningCa GET path
func (CaSigningCa) GetPath() string {
	return "/objects/ca/signing_ca/"
}

// GetPath implements sophos.RestObject interface and returns the CaMetaX509 GET path
func (CaMetaX509) GetPath() string {
	return "/objects/ca/meta_x509/"
}

// GetPath implements sophos.RestObject interface and returns the CaMetaCrl GET path
func (CaMetaCrl) GetPath() string {
	return "/objects/ca/meta_crl/"
}

// GetPath implements sophos.RestObject interface and returns the CaHostKeyCert GET path
func (CaHostKeyCert) GetPath() string {
	return "/objects/ca/host_key_cert/"
}

// GetPath implements sophos.RestObject interface and returns the CaRsa GET path
func (CaRsa) GetPath() string {
	return "/objects/ca/rsa/"
}

// GetPath implements sophos.RestObject interface and returns the CaCrl GET path
func (CaCrl) GetPath() string {
	return "/objects/ca/crl/"
}

// GetPath implements sophos.RestObject interface and returns the CaVerificationCa GET path
func (CaVerificationCa) GetPath() string {
	return "/objects/ca/verification_ca/"
}

// GetPath implements sophos.RestObject interface and returns the CaHostCert GET path
func (CaHostCert) GetPath() string {
	return "/objects/ca/host_cert/"
}

// ApiRoutes returns all known Ca paths
func (Ca) ApiRoutes() []string {
	return []string{
		"/api/objects/ca/signing_ca/",
		"/api/objects/ca/meta_x509/",
		"/api/objects/ca/meta_x509/{ref}/usedby",
		"/api/objects/ca/rsa/{ref}",
		"/api/objects/ca/group/{ref}",
		"/api/objects/ca/host_cert/{ref}/usedby",
		"/api/objects/ca/host_key_cert/{ref}",
		"/api/objects/ca/http_verification_ca/{ref}",
		"/api/objects/ca/meta_crl/",
		"/api/objects/ca/verification_ca/{ref}/usedby",
		"/api/objects/ca/host_key_cert/",
		"/api/objects/ca/rsa/",
		"/api/objects/ca/signing_ca/{ref}",
		"/api/objects/ca/crl/",
		"/api/objects/ca/crl/{ref}",
		"/api/objects/ca/meta_crl/{ref}",
		"/api/objects/ca/verification_ca/",
		"/api/objects/ca/crl/{ref}/usedby",
		"/api/objects/ca/host_key_cert/{ref}/usedby",
		"/api/objects/ca/http_verification_ca/{ref}/usedby",
		"/api/objects/ca/rsa/{ref}/usedby",
		"/api/objects/ca/signing_ca/{ref}/usedby",
		"/api/objects/ca/host_cert/",
		"/api/objects/ca/host_cert/{ref}",
		"/api/objects/ca/verification_ca/{ref}",
		"/api/objects/ca/group/",
		"/api/objects/ca/group/{ref}/usedby",
		"/api/objects/ca/http_verification_ca/",
		"/api/objects/ca/meta_crl/{ref}/usedby",
		"/api/objects/ca/meta_x509/{ref}",
		"/api/objects/ca/group/",
		"/api/objects/ca/group/{ref}/usedby",
		"/api/objects/ca/http_verification_ca/",
		"/api/objects/ca/meta_crl/{ref}/usedby",
		"/api/objects/ca/meta_x509/{ref}",
		"/api/objects/ca/signing_ca/",
		"/api/objects/ca/meta_x509/",
		"/api/objects/ca/meta_x509/{ref}/usedby",
		"/api/objects/ca/rsa/{ref}",
		"/api/objects/ca/group/{ref}",
		"/api/objects/ca/host_cert/{ref}/usedby",
		"/api/objects/ca/host_key_cert/{ref}",
		"/api/objects/ca/http_verification_ca/{ref}",
		"/api/objects/ca/meta_crl/",
		"/api/objects/ca/verification_ca/{ref}/usedby",
		"/api/objects/ca/host_key_cert/",
		"/api/objects/ca/rsa/",
		"/api/objects/ca/signing_ca/{ref}",
		"/api/objects/ca/crl/",
		"/api/objects/ca/crl/{ref}",
		"/api/objects/ca/meta_crl/{ref}",
		"/api/objects/ca/verification_ca/",
		"/api/objects/ca/crl/{ref}/usedby",
		"/api/objects/ca/host_key_cert/{ref}/usedby",
		"/api/objects/ca/http_verification_ca/{ref}/usedby",
		"/api/objects/ca/rsa/{ref}/usedby",
		"/api/objects/ca/signing_ca/{ref}/usedby",
		"/api/objects/ca/host_cert/",
		"/api/objects/ca/host_cert/{ref}",
		"/api/objects/ca/verification_ca/{ref}",
	}
}

type ClientlessVpnGroup []interface{}

type ClientlessVpnConnection []struct {
	Locked        string        `json:"_locked"`
	AllowedUsers  []string      `json:"allowed_users"`
	AutoLogin     bool          `json:"auto_login"`
	Comment       string        `json:"comment"`
	Destination   string        `json:"destination"`
	HostKeyCert   string        `json:"host_key_cert"`
	Login         string        `json:"login"`
	Name          string        `json:"name"`
	Password      string        `json:"password"`
	PfExceptions  []interface{} `json:"pf_exceptions"`
	Port          int64         `json:"port"`
	PrivateKey    string        `json:"private_key"`
	RdpSecurity   string        `json:"rdp_security"`
	RecordSession bool          `json:"record_session"`
	Service       string        `json:"service"`
	ShareSession  bool          `json:"share_session"`
	Status        bool          `json:"status"`
	UID           int64         `json:"uid"`
	WebPath       string        `json:"web_path"`
}

// ClientlessVpn is a generated struct representing the Sophos clientless_vpn Node Leaf
// GET /api/nodes/clientless_vpn
type ClientlessVpn struct {
	ClientlessVpnGroup      ClientlessVpnGroup      `json:"clientless_vpn_group"`
	ClientlessVpnConnection ClientlessVpnConnection `json:"clientless_vpn_connection"`
}

// Definitions implements the Resource interface and returns a map of ClientlessVpn's sophos.Objects
func (ClientlessVpn) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"clientless_vpn_group":      ClientlessVpnGroup{},
		"clientless_vpn_connection": ClientlessVpnConnection{},
	}
}

// GetPath implements sophos.RestObject and returns the ClientlessVpnGroup GET path
func (ClientlessVpnGroup) GetPath() string {
	return "/api/objects/clientless_vpn/group/"
}

// GetPath implements sophos.RestObject and returns the ClientlessVpnConnection GET path
func (ClientlessVpnConnection) GetPath() string {
	return "/api/objects/clientless_vpn/connection/"
}

type ConditionObjref []struct {
	Locked   string `json:"_locked"`
	Attr     string `json:"attr"`
	Comment  string `json:"comment"`
	Name     string `json:"name"`
	Operator string `json:"operator"`
	Ref      string `json:"ref"`
	Value    string `json:"value"`
}

type ConditionGroup []interface{}

// Condition is a generated struct representing the Sophos condition Node Leaf
// GET /api/nodes/condition
type Condition struct {
	ConditionObjref ConditionObjref `json:"condition_objref"`
	ConditionGroup  ConditionGroup  `json:"condition_group"`
}

// Definitions implements the Resource interface and returns a map of Condition's sophos.Objects
func (Condition) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"condition_objref": ConditionObjref{},
		"condition_group":  ConditionGroup{},
	}
}

// GetPath implements sophos.RestObject and returns the ConditionObjref GET path
func (ConditionObjref) GetPath() string {
	return "/api/objects/condition/objref/"
}

// GetPath implements sophos.RestObject and returns the ConditionGroup GET path
func (ConditionGroup) GetPath() string {
	return "/api/objects/condition/group/"
}

type CronAt []interface{}

type CronGroup []interface{}

// Cron is a generated struct representing the Sophos cron Node Leaf
// GET /api/nodes/cron
type Cron struct {
	CronAt    CronAt    `json:"cron_at"`
	CronGroup CronGroup `json:"cron_group"`
}

// Definitions implements the Resource interface and returns a map of Cron's sophos.Objects
func (Cron) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"cron_at":    CronAt{},
		"cron_group": CronGroup{},
	}
}

// GetPath implements sophos.RestObject and returns the CronAt GET path
func (CronAt) GetPath() string {
	return "/api/objects/cron/at/"
}

// GetPath implements sophos.RestObject and returns the CronGroup GET path
func (CronGroup) GetPath() string {
	return "/api/objects/cron/group/"
}

type DhcpStateless []interface{}

type DhcpOption []struct {
	Locked   string        `json:"_locked"`
	Address  string        `json:"address"`
	Code     int64         `json:"code"`
	Comment  string        `json:"comment"`
	DhcpName string        `json:"dhcp_name"`
	Host     []interface{} `json:"host"`
	Integer  int64         `json:"integer"`
	Mac      string        `json:"mac"`
	Name     string        `json:"name"`
	Scope    string        `json:"scope"`
	Server   []interface{} `json:"server"`
	Status   bool          `json:"status"`
	String   string        `json:"string"`
	Text     string        `json:"text"`
	Type     string        `json:"type"`
	Vendor   string        `json:"vendor"`
}

type DhcpOption6 []interface{}

type DhcpServer6 []interface{}

type DhcpGroup []interface{}

type DhcpServer []struct {
	Locked          string   `json:"_locked"`
	Address         string   `json:"address"`
	Comment         string   `json:"comment"`
	Custom          string   `json:"custom"`
	DefaultGateway  string   `json:"default_gateway"`
	DenyUnknown     bool     `json:"deny_unknown"`
	DNS1            string   `json:"dns1"`
	DNS2            string   `json:"dns2"`
	Domain          string   `json:"domain"`
	Interface       string   `json:"interface"`
	LeaseTime       int64    `json:"lease_time"`
	Mappings        []string `json:"mappings"`
	Name            string   `json:"name"`
	Netmask         int64    `json:"netmask"`
	ProxyAutoconfig bool     `json:"proxy_autoconfig"`
	RangeEnd        string   `json:"range_end"`
	RangeStart      string   `json:"range_start"`
	RelayMode       bool     `json:"relay_mode"`
	Status          bool     `json:"status"`
	Wins            string   `json:"wins"`
	WinsNodeType    string   `json:"wins_node_type"`
}

type Dhcp struct {
	Relay struct {
		DhcpServer string        `json:"dhcp_server"`
		Interfaces []interface{} `json:"interfaces"`
		Status     int64         `json:"status"`
	} `json:"relay"`
	Relay6 struct {
		ItfsFacingClients []interface{} `json:"itfs_facing_clients"`
		ItfsFacingServer6 []interface{} `json:"itfs_facing_server6"`
		Status            int64         `json:"status"`
	} `json:"relay6"`
	Server struct {
		Custom4 string   `json:"custom4"`
		Custom6 string   `json:"custom6"`
		Servers []string `json:"servers"`
	} `json:"server"`
}

// Definitions implements the Resource interface and returns a map of Dhcp's Objects
func (Dhcp) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"DhcpStateless": DhcpStateless{},
		"DhcpOption":    DhcpOption{},
		"DhcpOption6":   DhcpOption6{},
		"DhcpServer6":   DhcpServer6{},
		"DhcpGroup":     DhcpGroup{},
		"DhcpServer":    DhcpServer{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Dhcp GET path
func (Dhcp) GetPath() string {
	return "/api/nodes/dhcp"
}

// GetPath implements sophos.RestObject interface and returns the DhcpStateless GET path
func (DhcpStateless) GetPath() string {
	return "/objects/dhcp/stateless/"
}

// GetPath implements sophos.RestObject interface and returns the DhcpOption GET path
func (DhcpOption) GetPath() string {
	return "/objects/dhcp/option/"
}

// GetPath implements sophos.RestObject interface and returns the DhcpOption6 GET path
func (DhcpOption6) GetPath() string {
	return "/objects/dhcp/option6/"
}

// GetPath implements sophos.RestObject interface and returns the DhcpServer6 GET path
func (DhcpServer6) GetPath() string {
	return "/objects/dhcp/server6/"
}

// GetPath implements sophos.RestObject interface and returns the DhcpGroup GET path
func (DhcpGroup) GetPath() string {
	return "/objects/dhcp/group/"
}

// GetPath implements sophos.RestObject interface and returns the DhcpServer GET path
func (DhcpServer) GetPath() string {
	return "/objects/dhcp/server/"
}

// ApiRoutes returns all known Dhcp paths
func (Dhcp) ApiRoutes() []string {
	return []string{
		"/api/objects/dhcp/option/{ref}/usedby",
		"/api/objects/dhcp/option6/{ref}",
		"/api/objects/dhcp/server/{ref}",
		"/api/objects/dhcp/group/",
		"/api/objects/dhcp/group/{ref}",
		"/api/objects/dhcp/group/{ref}/usedby",
		"/api/objects/dhcp/option6/{ref}/usedby",
		"/api/objects/dhcp/server6/{ref}",
		"/api/objects/dhcp/server/",
		"/api/objects/dhcp/stateless/{ref}/usedby",
		"/api/objects/dhcp/option/",
		"/api/objects/dhcp/option/{ref}",
		"/api/objects/dhcp/option6/",
		"/api/objects/dhcp/server/{ref}/usedby",
		"/api/objects/dhcp/server6/",
		"/api/objects/dhcp/server6/{ref}/usedby",
		"/api/objects/dhcp/stateless/",
		"/api/objects/dhcp/stateless/{ref}",
		"/api/objects/dhcp/stateless/",
		"/api/objects/dhcp/stateless/{ref}",
		"/api/objects/dhcp/option/",
		"/api/objects/dhcp/option/{ref}",
		"/api/objects/dhcp/option6/",
		"/api/objects/dhcp/server/{ref}/usedby",
		"/api/objects/dhcp/server6/",
		"/api/objects/dhcp/server6/{ref}/usedby",
		"/api/objects/dhcp/option/{ref}/usedby",
		"/api/objects/dhcp/option6/{ref}",
		"/api/objects/dhcp/server/{ref}",
		"/api/objects/dhcp/group/",
		"/api/objects/dhcp/group/{ref}",
		"/api/objects/dhcp/group/{ref}/usedby",
		"/api/objects/dhcp/option6/{ref}/usedby",
		"/api/objects/dhcp/server6/{ref}",
		"/api/objects/dhcp/server/",
		"/api/objects/dhcp/stateless/{ref}/usedby",
	}
}

type DnsAxfr []interface{}

type DnsRoute []struct {
	Locked  string   `json:"_locked"`
	Comment string   `json:"comment"`
	Name    string   `json:"name"`
	Prefix  string   `json:"prefix"`
	Status  bool     `json:"status"`
	Targets []string `json:"targets"`
}

type DnsGroup []interface{}

type Dns struct {
	AllowedNetworks []string      `json:"allowed_networks"`
	Axfr            []interface{} `json:"axfr"`
	Dnssec          int64         `json:"dnssec"`
	Email           string        `json:"email"`
	EmptyZones      string        `json:"empty_zones"`
	FwdDynamic      int64         `json:"fwd_dynamic"`
	FwdStatic       []string      `json:"fwd_static"`
	RecheckInterval int64         `json:"recheck_interval"`
	Routes          []string      `json:"routes"`
}

// Definitions implements the Resource interface and returns a map of Dns's Objects
func (Dns) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"DnsAxfr":  DnsAxfr{},
		"DnsRoute": DnsRoute{},
		"DnsGroup": DnsGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Dns GET path
func (Dns) GetPath() string {
	return "/api/nodes/dns"
}

// GetPath implements sophos.RestObject interface and returns the DnsAxfr GET path
func (DnsAxfr) GetPath() string {
	return "/objects/dns/axfr/"
}

// GetPath implements sophos.RestObject interface and returns the DnsRoute GET path
func (DnsRoute) GetPath() string {
	return "/objects/dns/route/"
}

// GetPath implements sophos.RestObject interface and returns the DnsGroup GET path
func (DnsGroup) GetPath() string {
	return "/objects/dns/group/"
}

// ApiRoutes returns all known Dns paths
func (Dns) ApiRoutes() []string {
	return []string{
		"/api/objects/dns/axfr/",
		"/api/objects/dns/axfr/{ref}/usedby",
		"/api/objects/dns/route/",
		"/api/objects/dns/route/{ref}",
		"/api/objects/dns/axfr/{ref}",
		"/api/objects/dns/group/",
		"/api/objects/dns/group/{ref}",
		"/api/objects/dns/group/{ref}/usedby",
		"/api/objects/dns/route/{ref}/usedby",
		"/api/objects/dns/axfr/",
		"/api/objects/dns/axfr/{ref}/usedby",
		"/api/objects/dns/route/",
		"/api/objects/dns/route/{ref}",
		"/api/objects/dns/axfr/{ref}",
		"/api/objects/dns/group/",
		"/api/objects/dns/group/{ref}",
		"/api/objects/dns/group/{ref}/usedby",
		"/api/objects/dns/route/{ref}/usedby",
	}
}

type DyndnsDyndns []interface{}

type DyndnsGroup []interface{}

type Dyndns struct {
	Rules []interface{} `json:"rules"`
}

// Definitions implements the Resource interface and returns a map of Dyndns's Objects
func (Dyndns) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"DyndnsDyndns": DyndnsDyndns{},
		"DyndnsGroup":  DyndnsGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Dyndns GET path
func (Dyndns) GetPath() string {
	return "/api/nodes/dyndns"
}

// GetPath implements sophos.RestObject interface and returns the DyndnsDyndns GET path
func (DyndnsDyndns) GetPath() string {
	return "/objects/dyndns/dyndns/"
}

// GetPath implements sophos.RestObject interface and returns the DyndnsGroup GET path
func (DyndnsGroup) GetPath() string {
	return "/objects/dyndns/group/"
}

// ApiRoutes returns all known Dyndns paths
func (Dyndns) ApiRoutes() []string {
	return []string{
		"/api/objects/dyndns/group/{ref}/usedby",
		"/api/objects/dyndns/dyndns/",
		"/api/objects/dyndns/dyndns/{ref}",
		"/api/objects/dyndns/dyndns/{ref}/usedby",
		"/api/objects/dyndns/group/",
		"/api/objects/dyndns/group/{ref}",
		"/api/objects/dyndns/group/{ref}",
		"/api/objects/dyndns/group/{ref}/usedby",
		"/api/objects/dyndns/dyndns/",
		"/api/objects/dyndns/dyndns/{ref}",
		"/api/objects/dyndns/dyndns/{ref}/usedby",
		"/api/objects/dyndns/group/",
	}
}

type EmailpkiSmime []interface{}

type EmailpkiGroup []interface{}

type EmailpkiOpenpgp []interface{}

type EmailpkiUser []interface{}

type Emailpki struct {
	Authority struct {
		Cert                  string `json:"cert"`
		Fingerprint           string `json:"fingerprint"`
		Key                   string `json:"key"`
		PostmasterFingerprint string `json:"postmaster_fingerprint"`
		PostmasterPrivkey     string `json:"postmaster_privkey"`
		PostmasterPubkey      string `json:"postmaster_pubkey"`
	} `json:"authority"`
	Global struct {
		City         string `json:"city"`
		Country      string `json:"country"`
		Organization string `json:"organization"`
		Postmaster   string `json:"postmaster"`
		Status       int64  `json:"status"`
	} `json:"global"`
	Objects struct {
		Cas     []string      `json:"cas"`
		Openpgp []interface{} `json:"openpgp"`
		Smime   []interface{} `json:"smime"`
		Users   []interface{} `json:"users"`
	} `json:"objects"`
	Openpgp struct {
		MainKeysize int64 `json:"main_keysize"`
		SubKeysize  int64 `json:"sub_keysize"`
	} `json:"openpgp"`
	Options struct {
		ExternalAuto     int64  `json:"external_auto"`
		Keyserver        string `json:"keyserver"`
		PolicyDecryption int64  `json:"policy_decryption"`
		PolicyEncryption int64  `json:"policy_encryption"`
		PolicySign       int64  `json:"policy_sign"`
		PolicyVerify     int64  `json:"policy_verify"`
	} `json:"options"`
}

// Definitions implements the Resource interface and returns a map of Emailpki's Objects
func (Emailpki) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"EmailpkiSmime":   EmailpkiSmime{},
		"EmailpkiGroup":   EmailpkiGroup{},
		"EmailpkiOpenpgp": EmailpkiOpenpgp{},
		"EmailpkiUser":    EmailpkiUser{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Emailpki GET path
func (Emailpki) GetPath() string {
	return "/api/nodes/emailpki"
}

// GetPath implements sophos.RestObject interface and returns the EmailpkiSmime GET path
func (EmailpkiSmime) GetPath() string {
	return "/objects/emailpki/smime/"
}

// GetPath implements sophos.RestObject interface and returns the EmailpkiGroup GET path
func (EmailpkiGroup) GetPath() string {
	return "/objects/emailpki/group/"
}

// GetPath implements sophos.RestObject interface and returns the EmailpkiOpenpgp GET path
func (EmailpkiOpenpgp) GetPath() string {
	return "/objects/emailpki/openpgp/"
}

// GetPath implements sophos.RestObject interface and returns the EmailpkiUser GET path
func (EmailpkiUser) GetPath() string {
	return "/objects/emailpki/user/"
}

// ApiRoutes returns all known Emailpki paths
func (Emailpki) ApiRoutes() []string {
	return []string{
		"/api/objects/emailpki/user/{ref}/usedby",
		"/api/objects/emailpki/group/",
		"/api/objects/emailpki/group/{ref}",
		"/api/objects/emailpki/openpgp/",
		"/api/objects/emailpki/user/",
		"/api/objects/emailpki/user/{ref}",
		"/api/objects/emailpki/smime/{ref}/usedby",
		"/api/objects/emailpki/group/{ref}/usedby",
		"/api/objects/emailpki/openpgp/{ref}",
		"/api/objects/emailpki/openpgp/{ref}/usedby",
		"/api/objects/emailpki/smime/",
		"/api/objects/emailpki/smime/{ref}",
		"/api/objects/emailpki/smime/{ref}",
		"/api/objects/emailpki/smime/{ref}/usedby",
		"/api/objects/emailpki/group/{ref}/usedby",
		"/api/objects/emailpki/openpgp/{ref}",
		"/api/objects/emailpki/openpgp/{ref}/usedby",
		"/api/objects/emailpki/smime/",
		"/api/objects/emailpki/user/{ref}",
		"/api/objects/emailpki/user/{ref}/usedby",
		"/api/objects/emailpki/group/",
		"/api/objects/emailpki/group/{ref}",
		"/api/objects/emailpki/openpgp/",
		"/api/objects/emailpki/user/",
	}
}

type EppEndpoint []interface{}

type EppAvException []interface{}

type EppEndpointsGroup []struct {
	Locked           string        `json:"_locked"`
	AvPolicy         string        `json:"av_policy"`
	Comment          string        `json:"comment"`
	DcPolicy         string        `json:"dc_policy"`
	Endpoints        []interface{} `json:"endpoints"`
	Name             string        `json:"name"`
	ProxyAddress     string        `json:"proxy_address"`
	ProxyPassword    string        `json:"proxy_password"`
	ProxyPort        int64         `json:"proxy_port"`
	ProxySupport     bool          `json:"proxy_support"`
	ProxyUser        string        `json:"proxy_user"`
	TamperProtection bool          `json:"tamper_protection"`
	WebControl       bool          `json:"web_control"`
}

type EppAvPolicy []struct {
	Locked                    string `json:"_locked"`
	AlertOnly                 bool   `json:"alert_only"`
	AutoCleanup               bool   `json:"auto_cleanup"`
	BlockMaliciousSites       bool   `json:"block_malicious_sites"`
	Comment                   string `json:"comment"`
	DetectBufferOverflow      bool   `json:"detect_buffer_overflow"`
	DetectMaliciousFiles      bool   `json:"detect_malicious_files"`
	DetectSuspiciousBehaviour bool   `json:"detect_suspicious_behaviour"`
	DownloadScanning          bool   `json:"download_scanning"`
	Hips                      bool   `json:"hips"`
	LowPriorityScan           bool   `json:"low_priority_scan"`
	Name                      string `json:"name"`
	OnAccessScanning          bool   `json:"on_access_scanning"`
	OnRead                    bool   `json:"on_read"`
	OnRename                  bool   `json:"on_rename"`
	OnWrite                   bool   `json:"on_write"`
	RootKitScan               bool   `json:"root_kit_scan"`
	ScanForPua                bool   `json:"scan_for_pua"`
	ScanForSuspiciousFiles    bool   `json:"scan_for_suspicious_files"`
	ScanInsideArchive         bool   `json:"scan_inside_archive"`
	ScanSystemMemory          bool   `json:"scan_system_memory"`
	ScheduledScanning         bool   `json:"scheduled_scanning"`
	SendSampleFile            bool   `json:"send_sample_file"`
	SophosLiveProtection      bool   `json:"sophos_live_protection"`
	TimeEvent                 string `json:"time_event"`
	WebProtection             bool   `json:"web_protection"`
}

type EppGroup []interface{}

type EppDcException []interface{}

type EppDcPolicy []struct {
	Locked           string `json:"_locked"`
	Bluetooth        string `json:"bluetooth"`
	Comment          string `json:"comment"`
	EncryptedStorage string `json:"encrypted_storage"`
	FloppyDrive      string `json:"floppy_drive"`
	Infrared         string `json:"infrared"`
	Modem            string `json:"modem"`
	Name             string `json:"name"`
	OpticalDrive     string `json:"optical_drive"`
	RemovableStorage string `json:"removable_storage"`
	Wireless         string `json:"wireless"`
}

type EppDevice []interface{}

type Epp struct {
	AllowedNetworks       []string      `json:"allowed_networks"`
	Certificate           string        `json:"certificate"`
	City                  string        `json:"city"`
	Country               string        `json:"country"`
	DefaultEndpointsGroup string        `json:"default_endpoints_group"`
	Devices               []interface{} `json:"devices"`
	Email                 string        `json:"email"`
	Endpoints             []interface{} `json:"endpoints"`
	EndpointsGroups       []string      `json:"endpoints_groups"`
	Exceptions            struct {
		Av []interface{} `json:"av"`
		Dc []interface{} `json:"dc"`
	} `json:"exceptions"`
	FallbackURL       string `json:"fallback_url"`
	MagnetPassword    string `json:"magnet_password"`
	MagnetUsername    string `json:"magnet_username"`
	Organization      string `json:"organization"`
	ParentProxyHost   string `json:"parent_proxy_host"`
	ParentProxyPort   int64  `json:"parent_proxy_port"`
	ParentProxyStatus int64  `json:"parent_proxy_status"`
	Policies          struct {
		Av []string `json:"av"`
		Dc []string `json:"dc"`
	} `json:"policies"`
	Port              int64  `json:"port"`
	PrivateKey        string `json:"private_key"`
	RegistrationToken string `json:"registration_token"`
	Status            struct {
		Av     int64 `json:"av"`
		Broker int64 `json:"broker"`
		Dc     int64 `json:"dc"`
		Epp    int64 `json:"epp"`
		Wc     int64 `json:"wc"`
	} `json:"status"`
	TamperPassword string `json:"tamper_password"`
	Version        string `json:"version"`
	WdxToken       string `json:"wdx_token"`
}

// Definitions implements the Resource interface and returns a map of Epp's Objects
func (Epp) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"EppEndpoint":       EppEndpoint{},
		"EppAvException":    EppAvException{},
		"EppEndpointsGroup": EppEndpointsGroup{},
		"EppAvPolicy":       EppAvPolicy{},
		"EppGroup":          EppGroup{},
		"EppDcException":    EppDcException{},
		"EppDcPolicy":       EppDcPolicy{},
		"EppDevice":         EppDevice{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Epp GET path
func (Epp) GetPath() string {
	return "/api/nodes/epp"
}

// GetPath implements sophos.RestObject interface and returns the EppEndpoint GET path
func (EppEndpoint) GetPath() string {
	return "/objects/epp/endpoint/"
}

// GetPath implements sophos.RestObject interface and returns the EppAvException GET path
func (EppAvException) GetPath() string {
	return "/objects/epp/av_exception/"
}

// GetPath implements sophos.RestObject interface and returns the EppEndpointsGroup GET path
func (EppEndpointsGroup) GetPath() string {
	return "/objects/epp/endpoints_group/"
}

// GetPath implements sophos.RestObject interface and returns the EppAvPolicy GET path
func (EppAvPolicy) GetPath() string {
	return "/objects/epp/av_policy/"
}

// GetPath implements sophos.RestObject interface and returns the EppGroup GET path
func (EppGroup) GetPath() string {
	return "/objects/epp/group/"
}

// GetPath implements sophos.RestObject interface and returns the EppDcException GET path
func (EppDcException) GetPath() string {
	return "/objects/epp/dc_exception/"
}

// GetPath implements sophos.RestObject interface and returns the EppDcPolicy GET path
func (EppDcPolicy) GetPath() string {
	return "/objects/epp/dc_policy/"
}

// GetPath implements sophos.RestObject interface and returns the EppDevice GET path
func (EppDevice) GetPath() string {
	return "/objects/epp/device/"
}

// ApiRoutes returns all known Epp paths
func (Epp) ApiRoutes() []string {
	return []string{
		"/api/objects/epp/dc_exception/",
		"/api/objects/epp/dc_policy/",
		"/api/objects/epp/device/",
		"/api/objects/epp/endpoint/{ref}",
		"/api/objects/epp/endpoints_group/{ref}/usedby",
		"/api/objects/epp/group/",
		"/api/objects/epp/av_exception/{ref}",
		"/api/objects/epp/av_policy/{ref}/usedby",
		"/api/objects/epp/endpoint/",
		"/api/objects/epp/group/{ref}",
		"/api/objects/epp/av_exception/",
		"/api/objects/epp/av_exception/{ref}/usedby",
		"/api/objects/epp/dc_policy/{ref}/usedby",
		"/api/objects/epp/endpoints_group/",
		"/api/objects/epp/device/{ref}/usedby",
		"/api/objects/epp/endpoint/{ref}/usedby",
		"/api/objects/epp/av_policy/",
		"/api/objects/epp/av_policy/{ref}",
		"/api/objects/epp/dc_exception/{ref}",
		"/api/objects/epp/dc_exception/{ref}/usedby",
		"/api/objects/epp/dc_policy/{ref}",
		"/api/objects/epp/device/{ref}",
		"/api/objects/epp/endpoints_group/{ref}",
		"/api/objects/epp/group/{ref}/usedby",
		"/api/objects/epp/av_exception/{ref}",
		"/api/objects/epp/av_policy/{ref}/usedby",
		"/api/objects/epp/endpoint/",
		"/api/objects/epp/group/{ref}",
		"/api/objects/epp/av_exception/",
		"/api/objects/epp/av_exception/{ref}/usedby",
		"/api/objects/epp/dc_policy/{ref}/usedby",
		"/api/objects/epp/endpoints_group/",
		"/api/objects/epp/device/{ref}",
		"/api/objects/epp/device/{ref}/usedby",
		"/api/objects/epp/endpoint/{ref}/usedby",
		"/api/objects/epp/av_policy/",
		"/api/objects/epp/av_policy/{ref}",
		"/api/objects/epp/dc_exception/{ref}",
		"/api/objects/epp/dc_exception/{ref}/usedby",
		"/api/objects/epp/dc_policy/{ref}",
		"/api/objects/epp/endpoints_group/{ref}",
		"/api/objects/epp/group/{ref}/usedby",
		"/api/objects/epp/group/",
		"/api/objects/epp/dc_exception/",
		"/api/objects/epp/dc_policy/",
		"/api/objects/epp/device/",
		"/api/objects/epp/endpoint/{ref}",
		"/api/objects/epp/endpoints_group/{ref}/usedby",
	}
}

type FtpException []interface{}

type FtpGroup []interface{}

type Ftp struct {
	AllowedClients        []interface{} `json:"allowed_clients"`
	AllowedServers        []string      `json:"allowed_servers"`
	CffAv                 int64         `json:"cff_av"`
	CffAvEngines          string        `json:"cff_av_engines"`
	CffFileExtensions     []interface{} `json:"cff_file_extensions"`
	Exceptions            []interface{} `json:"exceptions"`
	MaxFileSize           int64         `json:"max_file_size"`
	MsWinMode             int64         `json:"ms_win_mode"`
	OperationMode         string        `json:"operation_mode"`
	RestrictedServers     []string      `json:"restricted_servers"`
	Status                int64         `json:"status"`
	TransparentSkip       []interface{} `json:"transparent_skip"`
	TransparentSkipAutoPf int64         `json:"transparent_skip_auto_pf"`
}

// Definitions implements the Resource interface and returns a map of Ftp's Objects
func (Ftp) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"FtpException": FtpException{},
		"FtpGroup":     FtpGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Ftp GET path
func (Ftp) GetPath() string {
	return "/api/nodes/ftp"
}

// GetPath implements sophos.RestObject interface and returns the FtpException GET path
func (FtpException) GetPath() string {
	return "/objects/ftp/exception/"
}

// GetPath implements sophos.RestObject interface and returns the FtpGroup GET path
func (FtpGroup) GetPath() string {
	return "/objects/ftp/group/"
}

// ApiRoutes returns all known Ftp paths
func (Ftp) ApiRoutes() []string {
	return []string{
		"/api/objects/ftp/group/{ref}/usedby",
		"/api/objects/ftp/exception/",
		"/api/objects/ftp/exception/{ref}",
		"/api/objects/ftp/exception/{ref}/usedby",
		"/api/objects/ftp/group/",
		"/api/objects/ftp/group/{ref}",
		"/api/objects/ftp/exception/",
		"/api/objects/ftp/exception/{ref}",
		"/api/objects/ftp/exception/{ref}/usedby",
		"/api/objects/ftp/group/",
		"/api/objects/ftp/group/{ref}",
		"/api/objects/ftp/group/{ref}/usedby",
	}
}

type GeoipDstexception []interface{}

type GeoipGeoipgroup []struct {
	Locked    string   `json:"_locked"`
	Comment   string   `json:"comment"`
	Countries []string `json:"countries"`
	Name      string   `json:"name"`
}

type GeoipGroup []interface{}

type GeoipSrcexception []interface{}

type Geoip struct {
	CountriesDst []string      `json:"countries_dst"`
	CountriesSrc []string      `json:"countries_src"`
	Exceptions   []interface{} `json:"exceptions"`
	Log          string        `json:"log"`
	Status       int64         `json:"status"`
}

// Definitions implements the Resource interface and returns a map of Geoip's Objects
func (Geoip) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"GeoipDstexception": GeoipDstexception{},
		"GeoipGeoipgroup":   GeoipGeoipgroup{},
		"GeoipGroup":        GeoipGroup{},
		"GeoipSrcexception": GeoipSrcexception{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Geoip GET path
func (Geoip) GetPath() string {
	return "/api/nodes/geoip"
}

// GetPath implements sophos.RestObject interface and returns the GeoipDstexception GET path
func (GeoipDstexception) GetPath() string {
	return "/objects/geoip/dstexception/"
}

// GetPath implements sophos.RestObject interface and returns the GeoipGeoipgroup GET path
func (GeoipGeoipgroup) GetPath() string {
	return "/objects/geoip/geoipgroup/"
}

// GetPath implements sophos.RestObject interface and returns the GeoipGroup GET path
func (GeoipGroup) GetPath() string {
	return "/objects/geoip/group/"
}

// GetPath implements sophos.RestObject interface and returns the GeoipSrcexception GET path
func (GeoipSrcexception) GetPath() string {
	return "/objects/geoip/srcexception/"
}

// ApiRoutes returns all known Geoip paths
func (Geoip) ApiRoutes() []string {
	return []string{
		"/api/objects/geoip/geoipgroup/{ref}",
		"/api/objects/geoip/group/",
		"/api/objects/geoip/group/{ref}",
		"/api/objects/geoip/group/{ref}/usedby",
		"/api/objects/geoip/dstexception/",
		"/api/objects/geoip/dstexception/{ref}",
		"/api/objects/geoip/geoipgroup/",
		"/api/objects/geoip/srcexception/{ref}",
		"/api/objects/geoip/srcexception/{ref}/usedby",
		"/api/objects/geoip/dstexception/{ref}/usedby",
		"/api/objects/geoip/geoipgroup/{ref}/usedby",
		"/api/objects/geoip/srcexception/",
		"/api/objects/geoip/dstexception/",
		"/api/objects/geoip/dstexception/{ref}",
		"/api/objects/geoip/geoipgroup/",
		"/api/objects/geoip/geoipgroup/{ref}",
		"/api/objects/geoip/group/",
		"/api/objects/geoip/group/{ref}",
		"/api/objects/geoip/group/{ref}/usedby",
		"/api/objects/geoip/dstexception/{ref}/usedby",
		"/api/objects/geoip/geoipgroup/{ref}/usedby",
		"/api/objects/geoip/srcexception/",
		"/api/objects/geoip/srcexception/{ref}",
		"/api/objects/geoip/srcexception/{ref}/usedby",
	}
}

type HotspotVoucher []interface{}

type HotspotGroup []interface{}

type HotspotPortal []interface{}

type Hotspot struct {
	Cert            string        `json:"cert"`
	DeleteDays      int64         `json:"delete_days"`
	SslPortal       int64         `json:"ssl_portal"`
	Status          int64         `json:"status"`
	TransparentSkip []interface{} `json:"transparent_skip"`
}

// Definitions implements the Resource interface and returns a map of Hotspot's Objects
func (Hotspot) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"HotspotVoucher": HotspotVoucher{},
		"HotspotGroup":   HotspotGroup{},
		"HotspotPortal":  HotspotPortal{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Hotspot GET path
func (Hotspot) GetPath() string {
	return "/api/nodes/hotspot"
}

// GetPath implements sophos.RestObject interface and returns the HotspotVoucher GET path
func (HotspotVoucher) GetPath() string {
	return "/objects/hotspot/voucher/"
}

// GetPath implements sophos.RestObject interface and returns the HotspotGroup GET path
func (HotspotGroup) GetPath() string {
	return "/objects/hotspot/group/"
}

// GetPath implements sophos.RestObject interface and returns the HotspotPortal GET path
func (HotspotPortal) GetPath() string {
	return "/objects/hotspot/portal/"
}

// ApiRoutes returns all known Hotspot paths
func (Hotspot) ApiRoutes() []string {
	return []string{
		"/api/objects/hotspot/group/{ref}/usedby",
		"/api/objects/hotspot/portal/",
		"/api/objects/hotspot/portal/{ref}",
		"/api/objects/hotspot/portal/{ref}/usedby",
		"/api/objects/hotspot/voucher/",
		"/api/objects/hotspot/voucher/{ref}",
		"/api/objects/hotspot/group/",
		"/api/objects/hotspot/group/{ref}",
		"/api/objects/hotspot/voucher/{ref}/usedby",
		"/api/objects/hotspot/portal/{ref}",
		"/api/objects/hotspot/portal/{ref}/usedby",
		"/api/objects/hotspot/voucher/",
		"/api/objects/hotspot/voucher/{ref}",
		"/api/objects/hotspot/group/",
		"/api/objects/hotspot/group/{ref}",
		"/api/objects/hotspot/group/{ref}/usedby",
		"/api/objects/hotspot/portal/",
		"/api/objects/hotspot/voucher/{ref}/usedby",
	}
}

type HttpPacFile []struct {
	Locked  string `json:"_locked"`
	Comment string `json:"comment"`
	Content string `json:"content"`
	Name    string `json:"name"`
	Status  bool   `json:"status"`
}

type HttpGroup []interface{}

type HttpException []struct {
	Locked          string        `json:"_locked"`
	Aaa             []interface{} `json:"aaa"`
	Comment         string        `json:"comment"`
	Domains         []string      `json:"domains"`
	EndpointsGroups []interface{} `json:"endpoints_groups"`
	Name            string        `json:"name"`
	Networks        []interface{} `json:"networks"`
	Operator        string        `json:"operator"`
	Skiplist        []string      `json:"skiplist"`
	SpCategories    []interface{} `json:"sp_categories"`
	Status          bool          `json:"status"`
	Tags            []interface{} `json:"tags"`
	UserAgents      []interface{} `json:"user_agents"`
}

type HttpParentProxy []interface{}

type HttpDeviceAuth []interface{}

type HttpLocalSite []interface{}

type HttpCffAction []struct {
	Locked                   string        `json:"_locked"`
	AllowTags                []interface{} `json:"allow_tags"`
	Av                       bool          `json:"av"`
	AvEngines                string        `json:"av_engines"`
	BingSafesearch           string        `json:"bing_safesearch"`
	BlockTags                []interface{} `json:"block_tags"`
	CheckMaxDownload         bool          `json:"check_max_download"`
	Comment                  string        `json:"comment"`
	ContenttypeBlacklist     []interface{} `json:"contenttype_blacklist"`
	ContenttypeBlacklistWarn []interface{} `json:"contenttype_blacklist_warn"`
	CreativeCommonsFilter    bool          `json:"creative_commons_filter"`
	EmbeddedRemoval          bool          `json:"embedded_removal"`
	Extensions               []string      `json:"extensions"`
	ExtensionsWarn           []interface{} `json:"extensions_warn"`
	GoogleSafesearch         string        `json:"google_safesearch"`
	Googleappdomains         []interface{} `json:"googleappdomains"`
	GoogleappdomainsEnabled  bool          `json:"googleappdomains_enabled"`
	LogAccess                bool          `json:"log_access"`
	LogBlocked               bool          `json:"log_blocked"`
	MaxDownloadSize          int64         `json:"max_download_size"`
	MaxFilesize              int64         `json:"max_filesize"`
	Mode                     string        `json:"mode"`
	Name                     string        `json:"name"`
	ParentProxies            []interface{} `json:"parent_proxies"`
	Pua                      bool          `json:"pua"`
	QuotaTags                []interface{} `json:"quota_tags"`
	QuotaTime                int64         `json:"quota_time"`
	Sandbox                  bool          `json:"sandbox"`
	ScriptRemoval            bool          `json:"script_removal"`
	SpCategories             []interface{} `json:"sp_categories"`
	SpCategoriesQuota        []interface{} `json:"sp_categories_quota"`
	SpCategoriesWarn         []interface{} `json:"sp_categories_warn"`
	SpMinreputation          string        `json:"sp_minreputation"`
	Spyware                  bool          `json:"spyware"`
	UncategorizedWebsites    string        `json:"uncategorized_websites"`
	URLBlacklist             []interface{} `json:"url_blacklist"`
	URLWhitelist             []interface{} `json:"url_whitelist"`
	WarnTags                 []interface{} `json:"warn_tags"`
	YahooSafesearch          string        `json:"yahoo_safesearch"`
}

type HttpLslTag []interface{}

type HttpProfile []struct {
	Locked             string        `json:"_locked"`
	Aua                bool          `json:"aua"`
	BlockOnAuthFailed  bool          `json:"block_on_auth_failed"`
	CffProfiles        []string      `json:"cff_profiles"`
	Comment            string        `json:"comment"`
	DefaultCffAction   string        `json:"default_cff_action"`
	DeviceAuth         []interface{} `json:"device_auth"`
	EdirSso            bool          `json:"edir_sso"`
	EnableDeviceAuth   bool          `json:"enable_device_auth"`
	EndpointsGroups    []interface{} `json:"endpoints_groups"`
	FullTransparent    bool          `json:"full_transparent"`
	InProgress         bool          `json:"in_progress"`
	Name               string        `json:"name"`
	Networks           []interface{} `json:"networks"`
	Ntlm               bool          `json:"ntlm"`
	OpendirectoryAuth  bool          `json:"opendirectory_auth"`
	OrderedCffProfiles []string      `json:"ordered_cff_profiles"`
	OutInterface       string        `json:"out_interface"`
	ScanSslOpt         string        `json:"scan_ssl_opt"`
	SelectiveScanCat   []string      `json:"selective_scan_cat"`
	SelectiveScanTags  []interface{} `json:"selective_scan_tags"`
	Status             bool          `json:"status"`
	Transparent        bool          `json:"transparent"`
	TransparentAac     bool          `json:"transparent_aac"`
	TransparentAuth    bool          `json:"transparent_auth"`
}

type HttpSpCategory []struct {
	Locked  string   `json:"_locked"`
	Comment string   `json:"comment"`
	ID      string   `json:"id"`
	Name    string   `json:"name"`
	Subcats []string `json:"subcats"`
}

type HttpDomainRegex []interface{}

type HttpSpSubcat []struct {
	Locked  string `json:"_locked"`
	Comment string `json:"comment"`
	ID      string `json:"id"`
	Name    string `json:"name"`
}

type HttpCffProfile []struct {
	Locked         string   `json:"_locked"`
	Aaa            []string `json:"aaa"`
	Action         string   `json:"action"`
	CffProfileName string   `json:"cff_profile_name"`
	Comment        string   `json:"comment"`
	InProgress     string   `json:"in_progress"`
	Name           string   `json:"name"`
	SkipAuth       bool     `json:"skip_auth"`
	TimeEvent      string   `json:"time_event"`
}

type Http struct {
	AdSsoInterfaces                  []interface{} `json:"ad_sso_interfaces"`
	AdssoRedirectUseHostname         int64         `json:"adsso_redirect_use_hostname"`
	AllowSsl3                        int64         `json:"allow_ssl3"`
	AllowTLS1_2                      int64         `json:"allow_tls_1_2"`
	AllowedPuas                      []interface{} `json:"allowed_puas"`
	AllowedTargetServices            []string      `json:"allowed_target_services"`
	AuaMaxconns                      int64         `json:"aua_maxconns"`
	AuaTimeout                       int64         `json:"aua_timeout"`
	AuthCacheSize                    int64         `json:"auth_cache_size"`
	AuthCacheTTL                     int64         `json:"auth_cache_ttl"`
	AuthRealm                        string        `json:"auth_realm"`
	AuthUsercacheTTL                 int64         `json:"auth_usercache_ttl"`
	BlockUnscannable                 int64         `json:"block_unscannable"`
	BypassStreaming                  int64         `json:"bypass_streaming"`
	CaList                           []interface{} `json:"ca_list"`
	CacheIgnoresCookies              int64         `json:"cache_ignores_cookies"`
	Cachessl                         int64         `json:"cachessl"`
	Caching                          int64         `json:"caching"`
	Certcache                        string        `json:"certcache"`
	Certstore                        string        `json:"certstore"`
	CffOverrideUsers                 []interface{} `json:"cff_override_users"`
	ClientTimeout                    int64         `json:"client_timeout"`
	ConfLockWorkaround               int64         `json:"conf_lock_workaround"`
	ConnectTimeout                   int64         `json:"connect_timeout"`
	ConnectV6Timeout                 int64         `json:"connect_v6_timeout"`
	Connlimit                        int64         `json:"connlimit"`
	CtypeInspectBody                 int64         `json:"ctype_inspect_body"`
	CtypeUnpackArchive               int64         `json:"ctype_unpack_archive"`
	Debug                            []interface{} `json:"debug"`
	Defaultblockaction               string        `json:"defaultblockaction"`
	Deferagents                      []string      `json:"deferagents"`
	Deferlength                      int64         `json:"deferlength"`
	DisplayHTTPBlockpageExplicitMode int64         `json:"display_http_blockpage_explicit_mode"`
	DisplayIntro                     int64         `json:"display_intro"`
	DownloadManagerDefaultCharset    string        `json:"download_manager_default_charset"`
	EdirDelayBasicAuth               int64         `json:"edir_delay_basic_auth"`
	EnableOutInterface               int64         `json:"enable_out_interface"`
	EppQuotaAction                   string        `json:"epp_quota_action"`
	Exceptions                       []string      `json:"exceptions"`
	ForcedCachingExtension           []string      `json:"forced_caching_extension"`
	ForcedCachingNeverCachePrefix    []string      `json:"forced_caching_never_cache_prefix"`
	ForcedCachingStatus              int64         `json:"forced_caching_status"`
	ForcedCachingTTL                 int64         `json:"forced_caching_ttl"`
	ForcedCachingUserAgentPrefix     []string      `json:"forced_caching_user_agent_prefix"`
	HTTPLoopbackDetect               int64         `json:"http_loopback_detect"`
	IeSslBlockpageWorkaround         int64         `json:"ie_ssl_blockpage_workaround"`
	LimitAdSsoInterfaces             int64         `json:"limit_ad_sso_interfaces"`
	LocalSiteList                    []interface{} `json:"local_site_list"`
	MaxContentEncoding               int64         `json:"max_content_encoding"`
	MaxTempfileSize                  int64         `json:"max_tempfile_size"`
	Maxthreads                       int64         `json:"maxthreads"`
	MaxthreadsUnused                 int64         `json:"maxthreads_unused"`
	Modulepath                       string        `json:"modulepath"`
	Modules                          []string      `json:"modules"`
	Noscancontent                    []string      `json:"noscancontent"`
	OpendirectoryKeytab              string        `json:"opendirectory_keytab"`
	PacFile                          string        `json:"pac_file"`
	ParentProxyHost                  string        `json:"parent_proxy_host"`
	ParentProxyPort                  int64         `json:"parent_proxy_port"`
	ParentProxyStatus                int64         `json:"parent_proxy_status"`
	PassthroughID                    string        `json:"passthrough_id"`
	PharmingProtection               int64         `json:"pharming_protection"`
	Port                             int64         `json:"port"`
	PortalCert                       string        `json:"portal_cert"`
	PortalCertChain                  []interface{} `json:"portal_cert_chain"`
	PortalDomain                     string        `json:"portal_domain"`
	PortalHosts                      []interface{} `json:"portal_hosts"`
	PortalUseCert                    int64         `json:"portal_use_cert"`
	ProceedCacheTimeout              int64         `json:"proceed_cache_timeout"`
	Profiles                         []string      `json:"profiles"`
	QuotaSliceTime                   int64         `json:"quota_slice_time"`
	RemoveRequest                    []interface{} `json:"remove_request"`
	RemoveResponse                   []string      `json:"remove_response"`
	ResponseTimeout                  int64         `json:"response_timeout"`
	ScLocalDB                        string        `json:"sc_local_db"`
	ScanEppTraffic                   int64         `json:"scan_epp_traffic"`
	Searchdomain                     string        `json:"searchdomain"`
	StrictHTTP                       int64         `json:"strict_http"`
	TlsciphersClient                 string        `json:"tlsciphers_client"`
	TlsciphersServer                 string        `json:"tlsciphers_server"`
	TmpfsUsageMinMemsize             int64         `json:"tmpfs_usage_min_memsize"`
	TransparentAuthTimeout           int64         `json:"transparent_auth_timeout"`
	TransparentDstSkip               []interface{} `json:"transparent_dst_skip"`
	TransparentSkipAutoPf            int64         `json:"transparent_skip_auto_pf"`
	TransparentSrcSkip               []interface{} `json:"transparent_src_skip"`
	TunnelTimeout                    int64         `json:"tunnel_timeout"`
	TunnelV6Timeout                  int64         `json:"tunnel_v6_timeout"`
	Undefercontent                   []string      `json:"undefercontent"`
	Undeferextension                 []string      `json:"undeferextension"`
	URLFilteringRedirectURL          string        `json:"url_filtering_redirect_url"`
	UseDstaddrForGeopiplookup        int64         `json:"use_dstaddr_for_geopiplookup"`
	UseKrb5Adsso                     int64         `json:"use_krb5_adsso"`
	UseSni                           int64         `json:"use_sni"`
	UseSxlUrid                       int64         `json:"use_sxl_urid"`
}

// Definitions implements the Resource interface and returns a map of Http's Objects
func (Http) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"HttpPacFile":     HttpPacFile{},
		"HttpGroup":       HttpGroup{},
		"HttpException":   HttpException{},
		"HttpParentProxy": HttpParentProxy{},
		"HttpDeviceAuth":  HttpDeviceAuth{},
		"HttpLocalSite":   HttpLocalSite{},
		"HttpCffAction":   HttpCffAction{},
		"HttpLslTag":      HttpLslTag{},
		"HttpProfile":     HttpProfile{},
		"HttpSpCategory":  HttpSpCategory{},
		"HttpDomainRegex": HttpDomainRegex{},
		"HttpSpSubcat":    HttpSpSubcat{},
		"HttpCffProfile":  HttpCffProfile{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Http GET path
func (Http) GetPath() string {
	return "/api/nodes/http"
}

// GetPath implements sophos.RestObject interface and returns the HttpPacFile GET path
func (HttpPacFile) GetPath() string {
	return "/objects/http/pac_file/"
}

// GetPath implements sophos.RestObject interface and returns the HttpGroup GET path
func (HttpGroup) GetPath() string {
	return "/objects/http/group/"
}

// GetPath implements sophos.RestObject interface and returns the HttpException GET path
func (HttpException) GetPath() string {
	return "/objects/http/exception/"
}

// GetPath implements sophos.RestObject interface and returns the HttpParentProxy GET path
func (HttpParentProxy) GetPath() string {
	return "/objects/http/parent_proxy/"
}

// GetPath implements sophos.RestObject interface and returns the HttpDeviceAuth GET path
func (HttpDeviceAuth) GetPath() string {
	return "/objects/http/device_auth/"
}

// GetPath implements sophos.RestObject interface and returns the HttpLocalSite GET path
func (HttpLocalSite) GetPath() string {
	return "/objects/http/local_site/"
}

// GetPath implements sophos.RestObject interface and returns the HttpCffAction GET path
func (HttpCffAction) GetPath() string {
	return "/objects/http/cff_action/"
}

// GetPath implements sophos.RestObject interface and returns the HttpLslTag GET path
func (HttpLslTag) GetPath() string {
	return "/objects/http/lsl_tag/"
}

// GetPath implements sophos.RestObject interface and returns the HttpProfile GET path
func (HttpProfile) GetPath() string {
	return "/objects/http/profile/"
}

// GetPath implements sophos.RestObject interface and returns the HttpSpCategory GET path
func (HttpSpCategory) GetPath() string {
	return "/objects/http/sp_category/"
}

// GetPath implements sophos.RestObject interface and returns the HttpDomainRegex GET path
func (HttpDomainRegex) GetPath() string {
	return "/objects/http/domain_regex/"
}

// GetPath implements sophos.RestObject interface and returns the HttpSpSubcat GET path
func (HttpSpSubcat) GetPath() string {
	return "/objects/http/sp_subcat/"
}

// GetPath implements sophos.RestObject interface and returns the HttpCffProfile GET path
func (HttpCffProfile) GetPath() string {
	return "/objects/http/cff_profile/"
}

// ApiRoutes returns all known Http paths
func (Http) ApiRoutes() []string {
	return []string{
		"/api/objects/http/group/{ref}",
		"/api/objects/http/pac_file/",
		"/api/objects/http/parent_proxy/{ref}",
		"/api/objects/http/cff_profile/{ref}",
		"/api/objects/http/cff_profile/{ref}/usedby",
		"/api/objects/http/group/",
		"/api/objects/http/pac_file/{ref}",
		"/api/objects/http/sp_category/{ref}",
		"/api/objects/http/sp_subcat/{ref}",
		"/api/objects/http/device_auth/{ref}",
		"/api/objects/http/exception/",
		"/api/objects/http/exception/{ref}",
		"/api/objects/http/parent_proxy/",
		"/api/objects/http/sp_category/{ref}/usedby",
		"/api/objects/http/cff_action/",
		"/api/objects/http/device_auth/",
		"/api/objects/http/local_site/",
		"/api/objects/http/local_site/{ref}",
		"/api/objects/http/lsl_tag/{ref}/usedby",
		"/api/objects/http/profile/{ref}/usedby",
		"/api/objects/http/group/{ref}/usedby",
		"/api/objects/http/local_site/{ref}/usedby",
		"/api/objects/http/lsl_tag/",
		"/api/objects/http/profile/",
		"/api/objects/http/sp_category/",
		"/api/objects/http/sp_subcat/{ref}/usedby",
		"/api/objects/http/cff_action/{ref}/usedby",
		"/api/objects/http/domain_regex/",
		"/api/objects/http/pac_file/{ref}/usedby",
		"/api/objects/http/parent_proxy/{ref}/usedby",
		"/api/objects/http/domain_regex/{ref}/usedby",
		"/api/objects/http/lsl_tag/{ref}",
		"/api/objects/http/profile/{ref}",
		"/api/objects/http/sp_subcat/",
		"/api/objects/http/cff_action/{ref}",
		"/api/objects/http/cff_profile/",
		"/api/objects/http/device_auth/{ref}/usedby",
		"/api/objects/http/domain_regex/{ref}",
		"/api/objects/http/exception/{ref}/usedby",
		"/api/objects/http/pac_file/",
		"/api/objects/http/parent_proxy/{ref}",
		"/api/objects/http/group/{ref}",
		"/api/objects/http/cff_profile/{ref}/usedby",
		"/api/objects/http/group/",
		"/api/objects/http/pac_file/{ref}",
		"/api/objects/http/sp_category/{ref}",
		"/api/objects/http/sp_subcat/{ref}",
		"/api/objects/http/cff_profile/{ref}",
		"/api/objects/http/exception/",
		"/api/objects/http/exception/{ref}",
		"/api/objects/http/parent_proxy/",
		"/api/objects/http/device_auth/{ref}",
		"/api/objects/http/device_auth/",
		"/api/objects/http/local_site/",
		"/api/objects/http/local_site/{ref}",
		"/api/objects/http/lsl_tag/{ref}/usedby",
		"/api/objects/http/profile/{ref}/usedby",
		"/api/objects/http/sp_category/{ref}/usedby",
		"/api/objects/http/cff_action/",
		"/api/objects/http/local_site/{ref}/usedby",
		"/api/objects/http/lsl_tag/",
		"/api/objects/http/profile/",
		"/api/objects/http/sp_category/",
		"/api/objects/http/sp_subcat/{ref}/usedby",
		"/api/objects/http/group/{ref}/usedby",
		"/api/objects/http/domain_regex/",
		"/api/objects/http/pac_file/{ref}/usedby",
		"/api/objects/http/parent_proxy/{ref}/usedby",
		"/api/objects/http/cff_action/{ref}/usedby",
		"/api/objects/http/lsl_tag/{ref}",
		"/api/objects/http/profile/{ref}",
		"/api/objects/http/sp_subcat/",
		"/api/objects/http/domain_regex/{ref}/usedby",
		"/api/objects/http/cff_profile/",
		"/api/objects/http/device_auth/{ref}/usedby",
		"/api/objects/http/domain_regex/{ref}",
		"/api/objects/http/exception/{ref}/usedby",
		"/api/objects/http/cff_action/{ref}",
	}
}

type InterfacePppmodem []interface{}

type InterfacePppoe []interface{}

type InterfaceGroup []struct {
	Locked           string        `json:"_locked"`
	Comment          string        `json:"comment"`
	Link             bool          `json:"link"`
	Members          []interface{} `json:"members"`
	Name             string        `json:"name"`
	PrimaryAddresses string        `json:"primary_addresses"`
}

type InterfacePpp3G []interface{}

type InterfaceTunnel []interface{}

type InterfaceEthernet []struct {
	Locked              string        `json:"_locked"`
	AdditionalAddresses []interface{} `json:"additional_addresses"`
	Bandwidth           int64         `json:"bandwidth"`
	Comment             string        `json:"comment"`
	Inbandwidth         int64         `json:"inbandwidth"`
	Itfhw               string        `json:"itfhw"`
	Link                bool          `json:"link"`
	Mtu                 int64         `json:"mtu"`
	MtuAutoDiscovery    bool          `json:"mtu_auto_discovery"`
	Name                string        `json:"name"`
	Outbandwidth        int64         `json:"outbandwidth"`
	PrimaryAddress      string        `json:"primary_address"`
	Proxyarp            bool          `json:"proxyarp"`
	Proxyndp            bool          `json:"proxyndp"`
	Status              bool          `json:"status"`
}

type InterfaceBridge []interface{}

type InterfacePppoa []interface{}

type InterfaceVlan []struct {
	Locked              string        `json:"_locked"`
	AdditionalAddresses []interface{} `json:"additional_addresses"`
	Bandwidth           int64         `json:"bandwidth"`
	Comment             string        `json:"comment"`
	Inbandwidth         int64         `json:"inbandwidth"`
	Itfhw               string        `json:"itfhw"`
	Link                bool          `json:"link"`
	Macvlan             bool          `json:"macvlan"`
	Mtu                 int64         `json:"mtu"`
	MtuAutoDiscovery    bool          `json:"mtu_auto_discovery"`
	Name                string        `json:"name"`
	Outbandwidth        int64         `json:"outbandwidth"`
	PrimaryAddress      string        `json:"primary_address"`
	Proxyarp            bool          `json:"proxyarp"`
	Proxyndp            bool          `json:"proxyndp"`
	Status              bool          `json:"status"`
	Vlantag             int64         `json:"vlantag"`
}

// Interface is a generated struct representing the Sophos interface Node Leaf
// GET /api/nodes/interface
type Interface struct {
	InterfacePppmodem InterfacePppmodem `json:"interface_pppmodem"`
	InterfacePppoe    InterfacePppoe    `json:"interface_pppoe"`
	InterfaceGroup    InterfaceGroup    `json:"interface_group"`
	InterfacePpp3G    InterfacePpp3G    `json:"interface_ppp3g"`
	InterfaceTunnel   InterfaceTunnel   `json:"interface_tunnel"`
	InterfaceEthernet InterfaceEthernet `json:"interface_ethernet"`
	InterfaceBridge   InterfaceBridge   `json:"interface_bridge"`
	InterfacePppoa    InterfacePppoa    `json:"interface_pppoa"`
	InterfaceVlan     InterfaceVlan     `json:"interface_vlan"`
}

// Definitions implements the Resource interface and returns a map of Interface's sophos.Objects
func (Interface) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"interface_pppmodem": InterfacePppmodem{},
		"interface_pppoe":    InterfacePppoe{},
		"interface_group":    InterfaceGroup{},
		"interface_ppp3g":    InterfacePpp3G{},
		"interface_tunnel":   InterfaceTunnel{},
		"interface_ethernet": InterfaceEthernet{},
		"interface_bridge":   InterfaceBridge{},
		"interface_pppoa":    InterfacePppoa{},
		"interface_vlan":     InterfaceVlan{},
	}
}

// GetPath implements sophos.RestObject and returns the InterfacePppmodem GET path
func (InterfacePppmodem) GetPath() string {
	return "/api/objects/interface/pppmodem/"
}

// GetPath implements sophos.RestObject and returns the InterfacePppoe GET path
func (InterfacePppoe) GetPath() string {
	return "/api/objects/interface/pppoe/"
}

// GetPath implements sophos.RestObject and returns the InterfaceGroup GET path
func (InterfaceGroup) GetPath() string {
	return "/api/objects/interface/group/"
}

// GetPath implements sophos.RestObject and returns the InterfacePpp3G GET path
func (InterfacePpp3G) GetPath() string {
	return "/api/objects/interface/ppp3g/"
}

// GetPath implements sophos.RestObject and returns the InterfaceTunnel GET path
func (InterfaceTunnel) GetPath() string {
	return "/api/objects/interface/tunnel/"
}

// GetPath implements sophos.RestObject and returns the InterfaceEthernet GET path
func (InterfaceEthernet) GetPath() string {
	return "/api/objects/interface/ethernet/"
}

// GetPath implements sophos.RestObject and returns the InterfaceBridge GET path
func (InterfaceBridge) GetPath() string {
	return "/api/objects/interface/bridge/"
}

// GetPath implements sophos.RestObject and returns the InterfacePppoa GET path
func (InterfacePppoa) GetPath() string {
	return "/api/objects/interface/pppoa/"
}

// GetPath implements sophos.RestObject and returns the InterfaceVlan GET path
func (InterfaceVlan) GetPath() string {
	return "/api/objects/interface/vlan/"
}

type IpfixConnectionGroup []interface{}

type IpfixConnectionIpfixConnection []interface{}

// IpfixConnection is a generated struct representing the Sophos ipfix_connection Node Leaf
// GET /api/nodes/ipfix_connection
type IpfixConnection struct {
	IpfixConnectionGroup           IpfixConnectionGroup           `json:"ipfix_connection_group"`
	IpfixConnectionIpfixConnection IpfixConnectionIpfixConnection `json:"ipfix_connection_ipfix_connection"`
}

// Definitions implements the Resource interface and returns a map of IpfixConnection's sophos.Objects
func (IpfixConnection) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"ipfix_connection_group":            IpfixConnectionGroup{},
		"ipfix_connection_ipfix_connection": IpfixConnectionIpfixConnection{},
	}
}

// GetPath implements sophos.RestObject and returns the IpfixConnectionGroup GET path
func (IpfixConnectionGroup) GetPath() string {
	return "/api/objects/ipfix_connection/group/"
}

// GetPath implements sophos.RestObject and returns the IpfixConnectionIpfixConnection GET path
func (IpfixConnectionIpfixConnection) GetPath() string {
	return "/api/objects/ipfix_connection/ipfix_connection/"
}

type IpsException []struct {
	Locked              string   `json:"_locked"`
	Comment             string   `json:"comment"`
	DestinationNetworks []string `json:"destination_networks"`
	Name                string   `json:"name"`
	Operator            string   `json:"operator"`
	Services            []string `json:"services"`
	Skiplist            []string `json:"skiplist"`
	SourceNetworks      []string `json:"source_networks"`
	Status              bool     `json:"status"`
}

type IpsRuleModifier []interface{}

type IpsGroup []struct {
	Locked       string   `json:"_locked"`
	Action       string   `json:"action"`
	Age          int64    `json:"age"`
	Comment      string   `json:"comment"`
	ID           string   `json:"id"`
	Name         string   `json:"name"`
	Notification bool     `json:"notification"`
	Status       bool     `json:"status"`
	Subgroups    []string `json:"subgroups"`
	Warnings     bool     `json:"warnings"`
}

type IpsRule []interface{}

type Ips struct {
	DNSServers     []interface{} `json:"dns_servers"`
	Engine         string        `json:"engine"`
	Exceptions     []string      `json:"exceptions"`
	Failopen       int64         `json:"failopen"`
	FileBasedRules int64         `json:"file_based_rules"`
	Groups         []string      `json:"groups"`
	HTTPServers    []interface{} `json:"http_servers"`
	Ipsfb          struct {
		AlertInterval  int64 `json:"alert_interval"`
		ConfigInterval int64 `json:"config_interval"`
		Debug          int64 `json:"debug"`
	} `json:"ipsfb"`
	LocalNetworks  []string      `json:"local_networks"`
	NumInstances   int64         `json:"num_instances"`
	PatternChannel string        `json:"pattern_channel"`
	Policy         string        `json:"policy"`
	QueueLength    int64         `json:"queue_length"`
	QueueThreshold int64         `json:"queue_threshold"`
	ReloadMethod   string        `json:"reload_method"`
	RestartPolicy  string        `json:"restart_policy"`
	RuleModifiers  []interface{} `json:"rule_modifiers"`
	Rules          []interface{} `json:"rules"`
	SkipAcks       int64         `json:"skip_acks"`
	SMTPServers    []interface{} `json:"smtp_servers"`
	Snortsettings  struct {
		MaxQueuedBytes int64  `json:"max_queued_bytes"`
		MaxQueuedSegs  int64  `json:"max_queued_segs"`
		MaxTcp         int64  `json:"max_tcp"`
		MaxUdp         int64  `json:"max_udp"`
		Memcap         int64  `json:"memcap"`
		SearchMethod   string `json:"search_method"`
	} `json:"snortsettings"`
	SqlServers []interface{} `json:"sql_servers"`
	Status     int64         `json:"status"`
}

// Definitions implements the Resource interface and returns a map of Ips's Objects
func (Ips) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"IpsException":    IpsException{},
		"IpsRuleModifier": IpsRuleModifier{},
		"IpsGroup":        IpsGroup{},
		"IpsRule":         IpsRule{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Ips GET path
func (Ips) GetPath() string {
	return "/api/nodes/ips"
}

// GetPath implements sophos.RestObject interface and returns the IpsException GET path
func (IpsException) GetPath() string {
	return "/objects/ips/exception/"
}

// GetPath implements sophos.RestObject interface and returns the IpsRuleModifier GET path
func (IpsRuleModifier) GetPath() string {
	return "/objects/ips/rule_modifier/"
}

// GetPath implements sophos.RestObject interface and returns the IpsGroup GET path
func (IpsGroup) GetPath() string {
	return "/objects/ips/group/"
}

// GetPath implements sophos.RestObject interface and returns the IpsRule GET path
func (IpsRule) GetPath() string {
	return "/objects/ips/rule/"
}

// ApiRoutes returns all known Ips paths
func (Ips) ApiRoutes() []string {
	return []string{
		"/api/objects/ips/rule_modifier/",
		"/api/objects/ips/rule_modifier/{ref}/usedby",
		"/api/objects/ips/exception/",
		"/api/objects/ips/exception/{ref}",
		"/api/objects/ips/exception/{ref}/usedby",
		"/api/objects/ips/group/{ref}/usedby",
		"/api/objects/ips/rule/{ref}",
		"/api/objects/ips/group/",
		"/api/objects/ips/group/{ref}",
		"/api/objects/ips/rule/",
		"/api/objects/ips/rule/{ref}/usedby",
		"/api/objects/ips/rule_modifier/{ref}",
		"/api/objects/ips/exception/",
		"/api/objects/ips/exception/{ref}",
		"/api/objects/ips/exception/{ref}/usedby",
		"/api/objects/ips/group/{ref}/usedby",
		"/api/objects/ips/rule/{ref}",
		"/api/objects/ips/rule_modifier/",
		"/api/objects/ips/rule_modifier/{ref}/usedby",
		"/api/objects/ips/group/",
		"/api/objects/ips/group/{ref}",
		"/api/objects/ips/rule/",
		"/api/objects/ips/rule/{ref}/usedby",
		"/api/objects/ips/rule_modifier/{ref}",
	}
}

type IpsecRemoteGateway []struct {
	Locked         string   `json:"_locked"`
	Authentication string   `json:"authentication"`
	Comment        string   `json:"comment"`
	Ecn            bool     `json:"ecn"`
	Host           string   `json:"host"`
	Name           string   `json:"name"`
	Networks       []string `json:"networks"`
	PmtuDiscovery  bool     `json:"pmtu_discovery"`
	Xauth          bool     `json:"xauth"`
	XauthPassword  string   `json:"xauth_password"`
	XauthUsername  string   `json:"xauth_username"`
}

type IpsecPolicy []struct {
	Locked            string `json:"_locked"`
	Comment           string `json:"comment"`
	IkeAuthAlg        string `json:"ike_auth_alg"`
	IkeDhGroup        string `json:"ike_dh_group"`
	IkeEncAlg         string `json:"ike_enc_alg"`
	IkeSaLifetime     int64  `json:"ike_sa_lifetime"`
	IpsecAuthAlg      string `json:"ipsec_auth_alg"`
	IpsecCompression  bool   `json:"ipsec_compression"`
	IpsecEncAlg       string `json:"ipsec_enc_alg"`
	IpsecPfsGroup     string `json:"ipsec_pfs_group"`
	IpsecSaLifetime   int64  `json:"ipsec_sa_lifetime"`
	IpsecStrictPolicy bool   `json:"ipsec_strict_policy"`
	Name              string `json:"name"`
}

type IpsecGroup []interface{}

type Ipsec struct {
	Advanced struct {
		CrlAutoFetching       int64         `json:"crl_auto_fetching"`
		CrlStrictPolicy       int64         `json:"crl_strict_policy"`
		DeadPeerDetection     int64         `json:"dead_peer_detection"`
		IkeDebug              []interface{} `json:"ike_debug"`
		IkePort               int64         `json:"ike_port"`
		Metric                int64         `json:"metric"`
		NatTraversal          int64         `json:"nat_traversal"`
		NatTraversalKeepalive int64         `json:"nat_traversal_keepalive"`
		ProbePsk              int64         `json:"probe_psk"`
		PskVpnID              string        `json:"psk_vpn_id"`
		PskVpnIDType          string        `json:"psk_vpn_id_type"`
	} `json:"advanced"`
	Connections []string `json:"connections"`
	LocalRsa    string   `json:"local_rsa"`
	LocalX509   string   `json:"local_x509"`
	Status      int64    `json:"status"`
}

// Definitions implements the Resource interface and returns a map of Ipsec's Objects
func (Ipsec) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"IpsecRemoteGateway": IpsecRemoteGateway{},
		"IpsecPolicy":        IpsecPolicy{},
		"IpsecGroup":         IpsecGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Ipsec GET path
func (Ipsec) GetPath() string {
	return "/api/nodes/ipsec"
}

// GetPath implements sophos.RestObject interface and returns the IpsecRemoteGateway GET path
func (IpsecRemoteGateway) GetPath() string {
	return "/objects/ipsec/remote_gateway/"
}

// GetPath implements sophos.RestObject interface and returns the IpsecPolicy GET path
func (IpsecPolicy) GetPath() string {
	return "/objects/ipsec/policy/"
}

// GetPath implements sophos.RestObject interface and returns the IpsecGroup GET path
func (IpsecGroup) GetPath() string {
	return "/objects/ipsec/group/"
}

// ApiRoutes returns all known Ipsec paths
func (Ipsec) ApiRoutes() []string {
	return []string{
		"/api/objects/ipsec/policy/{ref}/usedby",
		"/api/objects/ipsec/remote_gateway/",
		"/api/objects/ipsec/remote_gateway/{ref}",
		"/api/objects/ipsec/remote_gateway/{ref}/usedby",
		"/api/objects/ipsec/group/{ref}/usedby",
		"/api/objects/ipsec/policy/",
		"/api/objects/ipsec/policy/{ref}",
		"/api/objects/ipsec/group/",
		"/api/objects/ipsec/group/{ref}",
		"/api/objects/ipsec/remote_gateway/",
		"/api/objects/ipsec/remote_gateway/{ref}",
		"/api/objects/ipsec/remote_gateway/{ref}/usedby",
		"/api/objects/ipsec/group/{ref}/usedby",
		"/api/objects/ipsec/policy/",
		"/api/objects/ipsec/policy/{ref}",
		"/api/objects/ipsec/policy/{ref}/usedby",
		"/api/objects/ipsec/group/",
		"/api/objects/ipsec/group/{ref}",
	}
}

type IpsecConnectionRoadwarriorCisco []interface{}

type IpsecConnectionRoadwarriorCa []interface{}

type IpsecConnectionGroup []interface{}

type IpsecConnectionRoadwarriorPsk []interface{}

type IpsecConnectionRoadwarriorX509 []interface{}

type IpsecConnectionSiteToSite []struct {
	Locked        string   `json:"_locked"`
	AutoPfIn      string   `json:"auto_pf_in"`
	AutoPfOut     string   `json:"auto_pf_out"`
	AutoPfrule    bool     `json:"auto_pfrule"`
	Bind          bool     `json:"bind"`
	Comment       string   `json:"comment"`
	Interface     string   `json:"interface"`
	Name          string   `json:"name"`
	Networks      []string `json:"networks"`
	Policy        string   `json:"policy"`
	RemoteGateway string   `json:"remote_gateway"`
	Status        bool     `json:"status"`
	StrictRouting bool     `json:"strict_routing"`
}

type IpsecConnectionAmazonVpc []struct {
	Locked         string `json:"_locked"`
	Authentication string `json:"authentication"`
	Comment        string `json:"comment"`
	Interface      string `json:"interface"`
	Name           string `json:"name"`
	Policy         string `json:"policy"`
	Remote         string `json:"remote"`
}

type IpsecConnectionL2Tp []struct {
	Locked                    string   `json:"_locked"`
	AuthenticationType        string   `json:"authentication_type"`
	Certificate               string   `json:"certificate"`
	Comment                   string   `json:"comment"`
	Debug                     bool     `json:"debug"`
	Interface                 string   `json:"interface"`
	IPAssignmentDhcp          string   `json:"ip_assignment_dhcp"`
	IPAssignmentDhcpInterface string   `json:"ip_assignment_dhcp_interface"`
	IPAssignmentMode          string   `json:"ip_assignment_mode"`
	IPAssignmentPool          string   `json:"ip_assignment_pool"`
	IphoneConnectionName      string   `json:"iphone_connection_name"`
	IphoneHostname            string   `json:"iphone_hostname"`
	IphoneStatus              bool     `json:"iphone_status"`
	Name                      string   `json:"name"`
	Policy                    string   `json:"policy"`
	Psk                       string   `json:"psk"`
	Status                    bool     `json:"status"`
	Users                     []string `json:"users"`
}

// IpsecConnection is a generated struct representing the Sophos ipsec_connection Node Leaf
// GET /api/nodes/ipsec_connection
type IpsecConnection struct {
	IpsecConnectionRoadwarriorCisco IpsecConnectionRoadwarriorCisco `json:"ipsec_connection_roadwarrior_cisco"`
	IpsecConnectionRoadwarriorCa    IpsecConnectionRoadwarriorCa    `json:"ipsec_connection_roadwarrior_ca"`
	IpsecConnectionGroup            IpsecConnectionGroup            `json:"ipsec_connection_group"`
	IpsecConnectionRoadwarriorPsk   IpsecConnectionRoadwarriorPsk   `json:"ipsec_connection_roadwarrior_psk"`
	IpsecConnectionRoadwarriorX509  IpsecConnectionRoadwarriorX509  `json:"ipsec_connection_roadwarrior_x509"`
	IpsecConnectionSiteToSite       IpsecConnectionSiteToSite       `json:"ipsec_connection_site_to_site"`
	IpsecConnectionAmazonVpc        IpsecConnectionAmazonVpc        `json:"ipsec_connection_amazon_vpc"`
	IpsecConnectionL2Tp             IpsecConnectionL2Tp             `json:"ipsec_connection_l2tp"`
}

// Definitions implements the Resource interface and returns a map of IpsecConnection's sophos.Objects
func (IpsecConnection) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"ipsec_connection_roadwarrior_cisco": IpsecConnectionRoadwarriorCisco{},
		"ipsec_connection_roadwarrior_ca":    IpsecConnectionRoadwarriorCa{},
		"ipsec_connection_group":             IpsecConnectionGroup{},
		"ipsec_connection_roadwarrior_psk":   IpsecConnectionRoadwarriorPsk{},
		"ipsec_connection_roadwarrior_x509":  IpsecConnectionRoadwarriorX509{},
		"ipsec_connection_site_to_site":      IpsecConnectionSiteToSite{},
		"ipsec_connection_amazon_vpc":        IpsecConnectionAmazonVpc{},
		"ipsec_connection_l2tp":              IpsecConnectionL2Tp{},
	}
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCisco GET path
func (IpsecConnectionRoadwarriorCisco) GetPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_cisco/"
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorCa GET path
func (IpsecConnectionRoadwarriorCa) GetPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_ca/"
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionGroup GET path
func (IpsecConnectionGroup) GetPath() string {
	return "/api/objects/ipsec_connection/group/"
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorPsk GET path
func (IpsecConnectionRoadwarriorPsk) GetPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_psk/"
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionRoadwarriorX509 GET path
func (IpsecConnectionRoadwarriorX509) GetPath() string {
	return "/api/objects/ipsec_connection/roadwarrior_x509/"
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionSiteToSite GET path
func (IpsecConnectionSiteToSite) GetPath() string {
	return "/api/objects/ipsec_connection/site_to_site/"
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionAmazonVpc GET path
func (IpsecConnectionAmazonVpc) GetPath() string {
	return "/api/objects/ipsec_connection/amazon_vpc/"
}

// GetPath implements sophos.RestObject and returns the IpsecConnectionL2Tp GET path
func (IpsecConnectionL2Tp) GetPath() string {
	return "/api/objects/ipsec_connection/l2tp/"
}

type IpsecRemoteAuthX509 []struct {
	Locked      string `json:"_locked"`
	Certificate string `json:"certificate"`
	Comment     string `json:"comment"`
	Name        string `json:"name"`
	VpnID       string `json:"vpn_id"`
	VpnIDType   string `json:"vpn_id_type"`
}

type IpsecRemoteAuthGroup []interface{}

type IpsecRemoteAuthPsk []struct {
	Locked    string `json:"_locked"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Psk       string `json:"psk"`
	VpnID     string `json:"vpn_id"`
	VpnIDType string `json:"vpn_id_type"`
}

type IpsecRemoteAuthCa []interface{}

type IpsecRemoteAuthRsa []interface{}

// IpsecRemoteAuth is a generated struct representing the Sophos ipsec_remote_auth Node Leaf
// GET /api/nodes/ipsec_remote_auth
type IpsecRemoteAuth struct {
	IpsecRemoteAuthX509  IpsecRemoteAuthX509  `json:"ipsec_remote_auth_x509"`
	IpsecRemoteAuthGroup IpsecRemoteAuthGroup `json:"ipsec_remote_auth_group"`
	IpsecRemoteAuthPsk   IpsecRemoteAuthPsk   `json:"ipsec_remote_auth_psk"`
	IpsecRemoteAuthCa    IpsecRemoteAuthCa    `json:"ipsec_remote_auth_ca"`
	IpsecRemoteAuthRsa   IpsecRemoteAuthRsa   `json:"ipsec_remote_auth_rsa"`
}

// Definitions implements the Resource interface and returns a map of IpsecRemoteAuth's sophos.Objects
func (IpsecRemoteAuth) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"ipsec_remote_auth_x509":  IpsecRemoteAuthX509{},
		"ipsec_remote_auth_group": IpsecRemoteAuthGroup{},
		"ipsec_remote_auth_psk":   IpsecRemoteAuthPsk{},
		"ipsec_remote_auth_ca":    IpsecRemoteAuthCa{},
		"ipsec_remote_auth_rsa":   IpsecRemoteAuthRsa{},
	}
}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthX509 GET path
func (IpsecRemoteAuthX509) GetPath() string {
	return "/api/objects/ipsec_remote_auth/x509/"
}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthGroup GET path
func (IpsecRemoteAuthGroup) GetPath() string {
	return "/api/objects/ipsec_remote_auth/group/"
}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthPsk GET path
func (IpsecRemoteAuthPsk) GetPath() string {
	return "/api/objects/ipsec_remote_auth/psk/"
}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthCa GET path
func (IpsecRemoteAuthCa) GetPath() string {
	return "/api/objects/ipsec_remote_auth/ca/"
}

// GetPath implements sophos.RestObject and returns the IpsecRemoteAuthRsa GET path
func (IpsecRemoteAuthRsa) GetPath() string {
	return "/api/objects/ipsec_remote_auth/rsa/"
}

type ItfhwSerial []interface{}

type ItfhwRedServer []interface{}

type ItfhwAweNetworkGroup []interface{}

type ItfhwBridge []interface{}

type ItfhwUsbserial []interface{}

type ItfhwEthernet []struct {
	Locked                string `json:"_locked"`
	AutoNegotiation       bool   `json:"auto_negotiation"`
	AutoNegotiationStatus bool   `json:"auto_negotiation_status"`
	Comment               string `json:"comment"`
	Description           string `json:"description"`
	Duplex                string `json:"duplex"`
	Hardware              string `json:"hardware"`
	Irq                   int64  `json:"irq"`
	LinkMonitoring        bool   `json:"link_monitoring"`
	Mac                   string `json:"mac"`
	Mii                   bool   `json:"mii"`
	Name                  string `json:"name"`
	Pcidev                string `json:"pcidev"`
	PoeEnabled            bool   `json:"poe_enabled"`
	PoeStatus             string `json:"poe_status"`
	Slot                  string `json:"slot"`
	Speed                 string `json:"speed"`
	SupportedLinkModes    string `json:"supported_link_modes"`
	VirtualMac            string `json:"virtual_mac"`
}

type ItfhwRedClient []interface{}

type ItfhwVirtual []interface{}

type ItfhwGroup []interface{}

type ItfhwAweNetwork []struct {
	Locked            string        `json:"_locked"`
	ApBridgemode      string        `json:"ap_bridgemode"`
	Bridge            string        `json:"bridge"`
	ClientIsolation   bool          `json:"client_isolation"`
	Comment           string        `json:"comment"`
	CryptoAlg         string        `json:"crypto_alg"`
	Description       string        `json:"description"`
	Dot11r            bool          `json:"dot11r"`
	DynamicVlan       int64         `json:"dynamic_vlan"`
	EncryptionMode    string        `json:"encryption_mode"`
	FreqBands         string        `json:"freq_bands"`
	Hardware          string        `json:"hardware"`
	HideSsid          bool          `json:"hide_ssid"`
	InterfaceName     string        `json:"interface_name"`
	Mac               string        `json:"mac"`
	MacFilter         string        `json:"mac_filter"`
	MacList           string        `json:"mac_list"`
	MeshID            string        `json:"mesh_id"`
	MeshMode          string        `json:"mesh_mode"`
	MeshSubtag        string        `json:"mesh_subtag"`
	Name              string        `json:"name"`
	NetworkMode       string        `json:"network_mode"`
	NetworkName       string        `json:"network_name"`
	Psk               string        `json:"psk"`
	R0khSecret        string        `json:"r0kh_secret"`
	Ssid              string        `json:"ssid"`
	SsidVlantag       interface{}   `json:"ssid_vlantag"`
	Status            bool          `json:"status"`
	TimeScheduling    bool          `json:"time_scheduling"`
	TimeSelect        []interface{} `json:"time_select"`
	Uapsd             bool          `json:"uapsd"`
	Utf8Ssid          bool          `json:"utf8_ssid"`
	Vlantag           string        `json:"vlantag"`
	Wep128            string        `json:"wep128"`
	WepAuthentication string        `json:"wep_authentication"`
}

type ItfhwLag []struct {
	Locked         string `json:"_locked"`
	Comment        string `json:"comment"`
	Description    string `json:"description"`
	Hardware       string `json:"hardware"`
	LinkMonitoring bool   `json:"link_monitoring"`
	Mac            string `json:"mac"`
	Name           string `json:"name"`
}

// Itfhw is a generated struct representing the Sophos itfhw Node Leaf
// GET /api/nodes/itfhw
type Itfhw struct {
	ItfhwSerial          ItfhwSerial          `json:"itfhw_serial"`
	ItfhwRedServer       ItfhwRedServer       `json:"itfhw_red_server"`
	ItfhwAweNetworkGroup ItfhwAweNetworkGroup `json:"itfhw_awe_network_group"`
	ItfhwBridge          ItfhwBridge          `json:"itfhw_bridge"`
	ItfhwUsbserial       ItfhwUsbserial       `json:"itfhw_usbserial"`
	ItfhwEthernet        ItfhwEthernet        `json:"itfhw_ethernet"`
	ItfhwRedClient       ItfhwRedClient       `json:"itfhw_red_client"`
	ItfhwVirtual         ItfhwVirtual         `json:"itfhw_virtual"`
	ItfhwGroup           ItfhwGroup           `json:"itfhw_group"`
	ItfhwAweNetwork      ItfhwAweNetwork      `json:"itfhw_awe_network"`
	ItfhwLag             ItfhwLag             `json:"itfhw_lag"`
}

// Definitions implements the Resource interface and returns a map of Itfhw's sophos.Objects
func (Itfhw) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"itfhw_serial":            ItfhwSerial{},
		"itfhw_red_server":        ItfhwRedServer{},
		"itfhw_awe_network_group": ItfhwAweNetworkGroup{},
		"itfhw_bridge":            ItfhwBridge{},
		"itfhw_usbserial":         ItfhwUsbserial{},
		"itfhw_ethernet":          ItfhwEthernet{},
		"itfhw_red_client":        ItfhwRedClient{},
		"itfhw_virtual":           ItfhwVirtual{},
		"itfhw_group":             ItfhwGroup{},
		"itfhw_awe_network":       ItfhwAweNetwork{},
		"itfhw_lag":               ItfhwLag{},
	}
}

// GetPath implements sophos.RestObject and returns the ItfhwSerial GET path
func (ItfhwSerial) GetPath() string {
	return "/api/objects/itfhw/serial/"
}

// GetPath implements sophos.RestObject and returns the ItfhwRedServer GET path
func (ItfhwRedServer) GetPath() string {
	return "/api/objects/itfhw/red_server/"
}

// GetPath implements sophos.RestObject and returns the ItfhwAweNetworkGroup GET path
func (ItfhwAweNetworkGroup) GetPath() string {
	return "/api/objects/itfhw/awe_network_group/"
}

// GetPath implements sophos.RestObject and returns the ItfhwBridge GET path
func (ItfhwBridge) GetPath() string {
	return "/api/objects/itfhw/bridge/"
}

// GetPath implements sophos.RestObject and returns the ItfhwUsbserial GET path
func (ItfhwUsbserial) GetPath() string {
	return "/api/objects/itfhw/usbserial/"
}

// GetPath implements sophos.RestObject and returns the ItfhwEthernet GET path
func (ItfhwEthernet) GetPath() string {
	return "/api/objects/itfhw/ethernet/"
}

// GetPath implements sophos.RestObject and returns the ItfhwRedClient GET path
func (ItfhwRedClient) GetPath() string {
	return "/api/objects/itfhw/red_client/"
}

// GetPath implements sophos.RestObject and returns the ItfhwVirtual GET path
func (ItfhwVirtual) GetPath() string {
	return "/api/objects/itfhw/virtual/"
}

// GetPath implements sophos.RestObject and returns the ItfhwGroup GET path
func (ItfhwGroup) GetPath() string {
	return "/api/objects/itfhw/group/"
}

// GetPath implements sophos.RestObject and returns the ItfhwAweNetwork GET path
func (ItfhwAweNetwork) GetPath() string {
	return "/api/objects/itfhw/awe_network/"
}

// GetPath implements sophos.RestObject and returns the ItfhwLag GET path
func (ItfhwLag) GetPath() string {
	return "/api/objects/itfhw/lag/"
}

type ItfparamsLinkAggregationGroup []struct {
	Locked         string   `json:"_locked"`
	AdSelect       int64    `json:"ad_select"`
	ArpInterval    int64    `json:"arp_interval"`
	ArpIPTarget    string   `json:"arp_ip_target"`
	Comment        string   `json:"comment"`
	Downdelay      int64    `json:"downdelay"`
	EnforceMac     bool     `json:"enforce_mac"`
	ID             int64    `json:"id"`
	Itfhw          []string `json:"itfhw"`
	LacpRate       int64    `json:"lacp_rate"`
	Mac            string   `json:"mac"`
	Miimon         int64    `json:"miimon"`
	Mode           int64    `json:"mode"`
	Name           string   `json:"name"`
	Primary        string   `json:"primary"`
	Status         bool     `json:"status"`
	Updelay        int64    `json:"updelay"`
	UseCarrier     bool     `json:"use_carrier"`
	VirtualMac     string   `json:"virtual_mac"`
	XmitHashPolicy string   `json:"xmit_hash_policy"`
}

type ItfparamsBridgePort []interface{}

type ItfparamsGroup []interface{}

type ItfparamsSecondary []interface{}

type ItfparamsPrimary []struct {
	Locked                 string `json:"_locked"`
	Address                string `json:"address"`
	Address6               string `json:"address6"`
	Comment                string `json:"comment"`
	DefaultGatewayAddress  string `json:"default_gateway_address"`
	DefaultGatewayAddress6 string `json:"default_gateway_address6"`
	DefaultGatewayStatus   bool   `json:"default_gateway_status"`
	DefaultGatewayStatus6  bool   `json:"default_gateway_status6"`
	Dhcpv6RapidCommit      bool   `json:"dhcpv6_rapid_commit"`
	DNSServer1             string `json:"dns_server_1"`
	DNSServer2             string `json:"dns_server_2"`
	DNSServer3             string `json:"dns_server_3"`
	DNSServer4             string `json:"dns_server_4"`
	GatewayType            string `json:"gateway_type"`
	GatewayType6           string `json:"gateway_type6"`
	Hostname               string `json:"hostname"`
	InterfaceAddress       string `json:"interface_address"`
	InterfaceBroadcast     string `json:"interface_broadcast"`
	InterfaceNetwork       string `json:"interface_network"`
	Name                   string `json:"name"`
	Netmask                int64  `json:"netmask"`
	Netmask6               int64  `json:"netmask6"`
	PdAddress6             string `json:"pd_address6"`
	PdNetmask6             int64  `json:"pd_netmask6"`
	PdResolved6            bool   `json:"pd_resolved6"`
	Resolved               bool   `json:"resolved"`
	Resolved6              bool   `json:"resolved6"`
	Six2four               bool   `json:"six2four"`
	Type                   string `json:"type"`
	Type6                  string `json:"type6"`
}

// Itfparams is a generated struct representing the Sophos itfparams Node Leaf
// GET /api/nodes/itfparams
type Itfparams struct {
	ItfparamsLinkAggregationGroup ItfparamsLinkAggregationGroup `json:"itfparams_link_aggregation_group"`
	ItfparamsBridgePort           ItfparamsBridgePort           `json:"itfparams_bridge_port"`
	ItfparamsGroup                ItfparamsGroup                `json:"itfparams_group"`
	ItfparamsSecondary            ItfparamsSecondary            `json:"itfparams_secondary"`
	ItfparamsPrimary              ItfparamsPrimary              `json:"itfparams_primary"`
}

// Definitions implements the Resource interface and returns a map of Itfparams's sophos.Objects
func (Itfparams) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"itfparams_link_aggregation_group": ItfparamsLinkAggregationGroup{},
		"itfparams_bridge_port":            ItfparamsBridgePort{},
		"itfparams_group":                  ItfparamsGroup{},
		"itfparams_secondary":              ItfparamsSecondary{},
		"itfparams_primary":                ItfparamsPrimary{},
	}
}

// GetPath implements sophos.RestObject and returns the ItfparamsLinkAggregationGroup GET path
func (ItfparamsLinkAggregationGroup) GetPath() string {
	return "/api/objects/itfparams/link_aggregation_group/"
}

// GetPath implements sophos.RestObject and returns the ItfparamsBridgePort GET path
func (ItfparamsBridgePort) GetPath() string {
	return "/api/objects/itfparams/bridge_port/"
}

// GetPath implements sophos.RestObject and returns the ItfparamsGroup GET path
func (ItfparamsGroup) GetPath() string {
	return "/api/objects/itfparams/group/"
}

// GetPath implements sophos.RestObject and returns the ItfparamsSecondary GET path
func (ItfparamsSecondary) GetPath() string {
	return "/api/objects/itfparams/secondary/"
}

// GetPath implements sophos.RestObject and returns the ItfparamsPrimary GET path
func (ItfparamsPrimary) GetPath() string {
	return "/api/objects/itfparams/primary/"
}

type MacListMacList []interface{}

type MacListGroup []interface{}

// MacList is a generated struct representing the Sophos mac_list Node Leaf
// GET /api/nodes/mac_list
type MacList struct {
	MacListMacList MacListMacList `json:"mac_list_mac_list"`
	MacListGroup   MacListGroup   `json:"mac_list_group"`
}

// Definitions implements the Resource interface and returns a map of MacList's sophos.Objects
func (MacList) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"mac_list_mac_list": MacListMacList{},
		"mac_list_group":    MacListGroup{},
	}
}

// GetPath implements sophos.RestObject and returns the MacListMacList GET path
func (MacListMacList) GetPath() string {
	return "/api/objects/mac_list/mac_list/"
}

// GetPath implements sophos.RestObject and returns the MacListGroup GET path
func (MacListGroup) GetPath() string {
	return "/api/objects/mac_list/group/"
}

type NetworkAaa []struct {
	Locked     string        `json:"_locked"`
	Addresses  []interface{} `json:"addresses"`
	Addresses6 []interface{} `json:"addresses6"`
	Comment    string        `json:"comment"`
	Name       string        `json:"name"`
	Resolved   bool          `json:"resolved"`
	Resolved6  bool          `json:"resolved6"`
}

type NetworkHost []struct {
	Locked     string        `json:"_locked"`
	Address    string        `json:"address"`
	Address6   string        `json:"address6"`
	Comment    string        `json:"comment"`
	Duids      []interface{} `json:"duids"`
	Hostnames  []string      `json:"hostnames"`
	Interface  string        `json:"interface"`
	Macs       []interface{} `json:"macs"`
	Name       string        `json:"name"`
	Resolved   bool          `json:"resolved"`
	Resolved6  bool          `json:"resolved6"`
	ReverseDNS bool          `json:"reverse_dns"`
}

type NetworkInterfaceAddress []struct {
	Locked    string `json:"_locked"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
}

type NetworkRange []struct {
	Locked    string `json:"_locked"`
	Comment   string `json:"comment"`
	From      string `json:"from"`
	From6     string `json:"from6"`
	Interface string `json:"interface"`
	Name      string `json:"name"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
	To        string `json:"to"`
	To6       string `json:"to6"`
}

type NetworkDnsHost []struct {
	Locked    string `json:"_locked"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Hostname  string `json:"hostname"`
	Interface string `json:"interface"`
	Name      string `json:"name"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
	Timeout   int64  `json:"timeout"`
}

type NetworkInterfaceNetwork []struct {
	Locked    string `json:"_locked"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Name      string `json:"name"`
	Netmask   int64  `json:"netmask"`
	Netmask6  int64  `json:"netmask6"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
}

type NetworkNetwork []struct {
	Locked    string `json:"_locked"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Interface string `json:"interface"`
	Name      string `json:"name"`
	Netmask   int64  `json:"netmask"`
	Netmask6  int64  `json:"netmask6"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
}

type NetworkAvailabilityGroup []interface{}

type NetworkInterfaceBroadcast []struct {
	Locked   string `json:"_locked"`
	Address  string `json:"address"`
	Comment  string `json:"comment"`
	Name     string `json:"name"`
	Resolved bool   `json:"resolved"`
}

type NetworkDnsGroup []struct {
	Locked     string        `json:"_locked"`
	Addresses  []string      `json:"addresses"`
	Addresses6 []interface{} `json:"addresses6"`
	Comment    string        `json:"comment"`
	Hostname   string        `json:"hostname"`
	Interface  string        `json:"interface"`
	Name       string        `json:"name"`
	Resolved   bool          `json:"resolved"`
	Resolved6  bool          `json:"resolved6"`
	Timeout    int64         `json:"timeout"`
}

type NetworkMulticast []interface{}

type NetworkAny []struct {
	Locked    string `json:"_locked"`
	Address   string `json:"address"`
	Address6  string `json:"address6"`
	Comment   string `json:"comment"`
	Interface string `json:"interface"`
	Name      string `json:"name"`
	Netmask   int64  `json:"netmask"`
	Netmask6  int64  `json:"netmask6"`
	Resolved  bool   `json:"resolved"`
	Resolved6 bool   `json:"resolved6"`
}

type NetworkGroup []struct {
	Locked  string   `json:"_locked"`
	Comment string   `json:"comment"`
	Members []string `json:"members"`
	Name    string   `json:"name"`
	Types   []string `json:"types"`
}

// Network is a generated struct representing the Sophos network Node Leaf
// GET /api/nodes/network
type Network struct {
	NetworkAaa                NetworkAaa                `json:"network_aaa"`
	NetworkHost               NetworkHost               `json:"network_host"`
	NetworkInterfaceAddress   NetworkInterfaceAddress   `json:"network_interface_address"`
	NetworkRange              NetworkRange              `json:"network_range"`
	NetworkDnsHost            NetworkDnsHost            `json:"network_dns_host"`
	NetworkInterfaceNetwork   NetworkInterfaceNetwork   `json:"network_interface_network"`
	NetworkNetwork            NetworkNetwork            `json:"network_network"`
	NetworkAvailabilityGroup  NetworkAvailabilityGroup  `json:"network_availability_group"`
	NetworkInterfaceBroadcast NetworkInterfaceBroadcast `json:"network_interface_broadcast"`
	NetworkDnsGroup           NetworkDnsGroup           `json:"network_dns_group"`
	NetworkMulticast          NetworkMulticast          `json:"network_multicast"`
	NetworkAny                NetworkAny                `json:"network_any"`
	NetworkGroup              NetworkGroup              `json:"network_group"`
}

// Definitions implements the Resource interface and returns a map of Network's sophos.Objects
func (Network) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"network_aaa":                 NetworkAaa{},
		"network_host":                NetworkHost{},
		"network_interface_address":   NetworkInterfaceAddress{},
		"network_range":               NetworkRange{},
		"network_dns_host":            NetworkDnsHost{},
		"network_interface_network":   NetworkInterfaceNetwork{},
		"network_network":             NetworkNetwork{},
		"network_availability_group":  NetworkAvailabilityGroup{},
		"network_interface_broadcast": NetworkInterfaceBroadcast{},
		"network_dns_group":           NetworkDnsGroup{},
		"network_multicast":           NetworkMulticast{},
		"network_any":                 NetworkAny{},
		"network_group":               NetworkGroup{},
	}
}

// GetPath implements sophos.RestObject and returns the NetworkAaa GET path
func (NetworkAaa) GetPath() string {
	return "/api/objects/network/aaa/"
}

// GetPath implements sophos.RestObject and returns the NetworkHost GET path
func (NetworkHost) GetPath() string {
	return "/api/objects/network/host/"
}

// GetPath implements sophos.RestObject and returns the NetworkInterfaceAddress GET path
func (NetworkInterfaceAddress) GetPath() string {
	return "/api/objects/network/interface_address/"
}

// GetPath implements sophos.RestObject and returns the NetworkRange GET path
func (NetworkRange) GetPath() string {
	return "/api/objects/network/range/"
}

// GetPath implements sophos.RestObject and returns the NetworkDnsHost GET path
func (NetworkDnsHost) GetPath() string {
	return "/api/objects/network/dns_host/"
}

// GetPath implements sophos.RestObject and returns the NetworkInterfaceNetwork GET path
func (NetworkInterfaceNetwork) GetPath() string {
	return "/api/objects/network/interface_network/"
}

// GetPath implements sophos.RestObject and returns the NetworkNetwork GET path
func (NetworkNetwork) GetPath() string {
	return "/api/objects/network/network/"
}

// GetPath implements sophos.RestObject and returns the NetworkAvailabilityGroup GET path
func (NetworkAvailabilityGroup) GetPath() string {
	return "/api/objects/network/availability_group/"
}

// GetPath implements sophos.RestObject and returns the NetworkInterfaceBroadcast GET path
func (NetworkInterfaceBroadcast) GetPath() string {
	return "/api/objects/network/interface_broadcast/"
}

// GetPath implements sophos.RestObject and returns the NetworkDnsGroup GET path
func (NetworkDnsGroup) GetPath() string {
	return "/api/objects/network/dns_group/"
}

// GetPath implements sophos.RestObject and returns the NetworkMulticast GET path
func (NetworkMulticast) GetPath() string {
	return "/api/objects/network/multicast/"
}

// GetPath implements sophos.RestObject and returns the NetworkAny GET path
func (NetworkAny) GetPath() string {
	return "/api/objects/network/any/"
}

// GetPath implements sophos.RestObject and returns the NetworkGroup GET path
func (NetworkGroup) GetPath() string {
	return "/api/objects/network/group/"
}

type NotificationGroup []interface{}

type NotificationNotification []interface{}

// Notification is a generated struct representing the Sophos notification Node Leaf
// GET /api/nodes/notification
type Notification struct {
	NotificationGroup        NotificationGroup        `json:"notification_group"`
	NotificationNotification NotificationNotification `json:"notification_notification"`
}

// Definitions implements the Resource interface and returns a map of Notification's sophos.Objects
func (Notification) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"notification_group":        NotificationGroup{},
		"notification_notification": NotificationNotification{},
	}
}

// GetPath implements sophos.RestObject and returns the NotificationGroup GET path
func (NotificationGroup) GetPath() string {
	return "/api/objects/notification/group/"
}

// GetPath implements sophos.RestObject and returns the NotificationNotification GET path
func (NotificationNotification) GetPath() string {
	return "/api/objects/notification/notification/"
}

type OspfGroup []interface{}

type OspfMessageDigestKey []interface{}

type OspfArea []interface{}

type OspfInterface []interface{}

// Ospf is a generated struct representing the Sophos ospf Node Leaf
// GET /api/nodes/ospf
type Ospf struct {
	OspfGroup            OspfGroup            `json:"ospf_group"`
	OspfMessageDigestKey OspfMessageDigestKey `json:"ospf_message_digest_key"`
	OspfArea             OspfArea             `json:"ospf_area"`
	OspfInterface        OspfInterface        `json:"ospf_interface"`
}

// Definitions implements the Resource interface and returns a map of Ospf's sophos.Objects
func (Ospf) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"ospf_group":              OspfGroup{},
		"ospf_message_digest_key": OspfMessageDigestKey{},
		"ospf_area":               OspfArea{},
		"ospf_interface":          OspfInterface{},
	}
}

// GetPath implements sophos.RestObject and returns the OspfGroup GET path
func (OspfGroup) GetPath() string {
	return "/api/objects/ospf/group/"
}

// GetPath implements sophos.RestObject and returns the OspfMessageDigestKey GET path
func (OspfMessageDigestKey) GetPath() string {
	return "/api/objects/ospf/message_digest_key/"
}

// GetPath implements sophos.RestObject and returns the OspfArea GET path
func (OspfArea) GetPath() string {
	return "/api/objects/ospf/area/"
}

// GetPath implements sophos.RestObject and returns the OspfInterface GET path
func (OspfInterface) GetPath() string {
	return "/api/objects/ospf/interface/"
}

type OverrideGroup []interface{}

type OverrideObjref []interface{}

// Override is a generated struct representing the Sophos override Node Leaf
// GET /api/nodes/override
type Override struct {
	OverrideGroup  OverrideGroup  `json:"override_group"`
	OverrideObjref OverrideObjref `json:"override_objref"`
}

// Definitions implements the Resource interface and returns a map of Override's sophos.Objects
func (Override) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"override_group":  OverrideGroup{},
		"override_objref": OverrideObjref{},
	}
}

// GetPath implements sophos.RestObject and returns the OverrideGroup GET path
func (OverrideGroup) GetPath() string {
	return "/api/objects/override/group/"
}

// GetPath implements sophos.RestObject and returns the OverrideObjref GET path
func (OverrideObjref) GetPath() string {
	return "/api/objects/override/objref/"
}

type PacketfilterGenericProxy []interface{}

type PacketfilterMasq []struct {
	Locked                   string `json:"_locked"`
	AdditionalAddress        string `json:"additional_address"`
	AdditionalAddressRestore string `json:"additional_address_restore"`
	Comment                  string `json:"comment"`
	Name                     string `json:"name"`
	Source                   string `json:"source"`
	SourceNatInterface       string `json:"source_nat_interface"`
	Status                   bool   `json:"status"`
}

type PacketfilterLoadbalance []interface{}

type PacketfilterNat []struct {
	Locked                string `json:"_locked"`
	AutoPfIn              string `json:"auto_pf_in"`
	AutoPfrule            bool   `json:"auto_pfrule"`
	Comment               string `json:"comment"`
	Destination           string `json:"destination"`
	DestinationNatAddress string `json:"destination_nat_address"`
	DestinationNatService string `json:"destination_nat_service"`
	Group                 string `json:"group"`
	Ipsec                 bool   `json:"ipsec"`
	Log                   bool   `json:"log"`
	Mode                  string `json:"mode"`
	Name                  string `json:"name"`
	Service               string `json:"service"`
	Source                string `json:"source"`
	SourceNatAddress      string `json:"source_nat_address"`
	SourceNatService      string `json:"source_nat_service"`
	Status                bool   `json:"status"`
}

type Packetfilter1to1Nat []interface{}

type PacketfilterRuleset []interface{}

type PacketfilterGroup []interface{}

type PacketfilterMangle []interface{}

type PacketfilterPacketfilter []struct {
	Locked             string   `json:"_locked"`
	Action             string   `json:"action"`
	Auto               bool     `json:"auto"`
	AutoType           string   `json:"auto_type"`
	Comment            string   `json:"comment"`
	Destinations       []string `json:"destinations"`
	Direction          string   `json:"direction"`
	Group              string   `json:"group"`
	Interface          string   `json:"interface"`
	Log                bool     `json:"log"`
	Name               string   `json:"name"`
	Services           []string `json:"services"`
	SourceMacAddresses string   `json:"source_mac_addresses"`
	Sources            []string `json:"sources"`
	Status             bool     `json:"status"`
	Time               string   `json:"time"`
}

type Packetfilter struct {
	Advanced struct {
		BlockInvalidCtPackets int64    `json:"block_invalid_ct_packets"`
		CheckPacketLength     int64    `json:"check_packet_length"`
		ConntrackHelpers      []string `json:"conntrack_helpers"`
		FtpPorts              []int64  `json:"ftp_ports"`
		LogBroadcasts         int64    `json:"log_broadcasts"`
		LogDNSRequests        int64    `json:"log_dns_requests"`
		LogFtpData            int64    `json:"log_ftp_data"`
		LogInvalid            int64    `json:"log_invalid"`
		LogMcast              int64    `json:"log_mcast"`
		LogStrictTcpState     string   `json:"log_strict_tcp_state"`
		NoErrorReplay         int64    `json:"no_error_replay"`
		Optimize              struct {
			Ipset string `json:"ipset"`
			Ports int64  `json:"ports"`
		} `json:"optimize"`
		SpoofProtection  string `json:"spoof_protection"`
		StrictTcpState   int64  `json:"strict_tcp_state"`
		TcpMaxRetrans    int64  `json:"tcp_max_retrans"`
		TcpWindowScaling int64  `json:"tcp_window_scaling"`
	} `json:"advanced"`
	Rules      []string `json:"rules"`
	RulesAuto  []string `json:"rules_auto"`
	RulesBack  string   `json:"rules_back"`
	RulesFront string   `json:"rules_front"`
	Timeouts   struct {
		IPConntrackGenericTimeout        int64 `json:"ip_conntrack_generic_timeout"`
		IPConntrackIcmpTimeout           int64 `json:"ip_conntrack_icmp_timeout"`
		IPConntrackTcpTimeoutClose       int64 `json:"ip_conntrack_tcp_timeout_close"`
		IPConntrackTcpTimeoutCloseWait   int64 `json:"ip_conntrack_tcp_timeout_close_wait"`
		IPConntrackTcpTimeoutEstablished int64 `json:"ip_conntrack_tcp_timeout_established"`
		IPConntrackTcpTimeoutFinWait     int64 `json:"ip_conntrack_tcp_timeout_fin_wait"`
		IPConntrackTcpTimeoutLastAck     int64 `json:"ip_conntrack_tcp_timeout_last_ack"`
		IPConntrackTcpTimeoutMaxRetrans  int64 `json:"ip_conntrack_tcp_timeout_max_retrans"`
		IPConntrackTcpTimeoutSynRecv     int64 `json:"ip_conntrack_tcp_timeout_syn_recv"`
		IPConntrackTcpTimeoutSynSent     int64 `json:"ip_conntrack_tcp_timeout_syn_sent"`
		IPConntrackTcpTimeoutTimeWait    int64 `json:"ip_conntrack_tcp_timeout_time_wait"`
		IPConntrackUdpTimeout            int64 `json:"ip_conntrack_udp_timeout"`
		IPConntrackUdpTimeoutStream      int64 `json:"ip_conntrack_udp_timeout_stream"`
	} `json:"timeouts"`
}

// Definitions implements the Resource interface and returns a map of Packetfilter's Objects
func (Packetfilter) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"PacketfilterGenericProxy": PacketfilterGenericProxy{},
		"PacketfilterMasq":         PacketfilterMasq{},
		"PacketfilterLoadbalance":  PacketfilterLoadbalance{},
		"PacketfilterNat":          PacketfilterNat{},
		"Packetfilter1to1Nat":      Packetfilter1to1Nat{},
		"PacketfilterRuleset":      PacketfilterRuleset{},
		"PacketfilterGroup":        PacketfilterGroup{},
		"PacketfilterMangle":       PacketfilterMangle{},
		"PacketfilterPacketfilter": PacketfilterPacketfilter{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Packetfilter GET path
func (Packetfilter) GetPath() string {
	return "/api/nodes/packetfilter"
}

// GetPath implements sophos.RestObject interface and returns the PacketfilterGenericProxy GET path
func (PacketfilterGenericProxy) GetPath() string {
	return "/objects/packetfilter/generic_proxy/"
}

// GetPath implements sophos.RestObject interface and returns the PacketfilterMasq GET path
func (PacketfilterMasq) GetPath() string {
	return "/objects/packetfilter/masq/"
}

// GetPath implements sophos.RestObject interface and returns the PacketfilterLoadbalance GET path
func (PacketfilterLoadbalance) GetPath() string {
	return "/objects/packetfilter/loadbalance/"
}

// GetPath implements sophos.RestObject interface and returns the PacketfilterNat GET path
func (PacketfilterNat) GetPath() string {
	return "/objects/packetfilter/nat/"
}

// GetPath implements sophos.RestObject interface and returns the Packetfilter1to1Nat GET path
func (Packetfilter1to1Nat) GetPath() string {
	return "/objects/packetfilter/1to1nat/"
}

// GetPath implements sophos.RestObject interface and returns the PacketfilterRuleset GET path
func (PacketfilterRuleset) GetPath() string {
	return "/objects/packetfilter/ruleset/"
}

// GetPath implements sophos.RestObject interface and returns the PacketfilterGroup GET path
func (PacketfilterGroup) GetPath() string {
	return "/objects/packetfilter/group/"
}

// GetPath implements sophos.RestObject interface and returns the PacketfilterMangle GET path
func (PacketfilterMangle) GetPath() string {
	return "/objects/packetfilter/mangle/"
}

// GetPath implements sophos.RestObject interface and returns the PacketfilterPacketfilter GET path
func (PacketfilterPacketfilter) GetPath() string {
	return "/objects/packetfilter/packetfilter/"
}

// ApiRoutes returns all known Packetfilter paths
func (Packetfilter) ApiRoutes() []string {
	return []string{
		"/api/objects/packetfilter/loadbalance/{ref}",
		"/api/objects/packetfilter/loadbalance/{ref}/usedby",
		"/api/objects/packetfilter/masq/{ref}",
		"/api/objects/packetfilter/generic_proxy/{ref}",
		"/api/objects/packetfilter/mangle/{ref}",
		"/api/objects/packetfilter/packetfilter/{ref}/usedby",
		"/api/objects/packetfilter/1to1nat/{ref}",
		"/api/objects/packetfilter/generic_proxy/",
		"/api/objects/packetfilter/mangle/{ref}/usedby",
		"/api/objects/packetfilter/packetfilter/{ref}",
		"/api/objects/packetfilter/nat/{ref}/usedby",
		"/api/objects/packetfilter/1to1nat/{ref}/usedby",
		"/api/objects/packetfilter/masq/",
		"/api/objects/packetfilter/masq/{ref}/usedby",
		"/api/objects/packetfilter/ruleset/{ref}",
		"/api/objects/packetfilter/loadbalance/",
		"/api/objects/packetfilter/nat/",
		"/api/objects/packetfilter/nat/{ref}",
		"/api/objects/packetfilter/ruleset/",
		"/api/objects/packetfilter/1to1nat/",
		"/api/objects/packetfilter/mangle/",
		"/api/objects/packetfilter/generic_proxy/{ref}/usedby",
		"/api/objects/packetfilter/group/",
		"/api/objects/packetfilter/group/{ref}/usedby",
		"/api/objects/packetfilter/group/{ref}",
		"/api/objects/packetfilter/packetfilter/",
		"/api/objects/packetfilter/ruleset/{ref}/usedby",
		"/api/objects/packetfilter/1to1nat/{ref}",
		"/api/objects/packetfilter/generic_proxy/",
		"/api/objects/packetfilter/generic_proxy/{ref}",
		"/api/objects/packetfilter/mangle/{ref}",
		"/api/objects/packetfilter/packetfilter/{ref}/usedby",
		"/api/objects/packetfilter/mangle/{ref}/usedby",
		"/api/objects/packetfilter/packetfilter/{ref}",
		"/api/objects/packetfilter/1to1nat/{ref}/usedby",
		"/api/objects/packetfilter/masq/",
		"/api/objects/packetfilter/masq/{ref}/usedby",
		"/api/objects/packetfilter/nat/{ref}/usedby",
		"/api/objects/packetfilter/loadbalance/",
		"/api/objects/packetfilter/nat/",
		"/api/objects/packetfilter/nat/{ref}",
		"/api/objects/packetfilter/ruleset/{ref}",
		"/api/objects/packetfilter/1to1nat/",
		"/api/objects/packetfilter/ruleset/",
		"/api/objects/packetfilter/generic_proxy/{ref}/usedby",
		"/api/objects/packetfilter/group/",
		"/api/objects/packetfilter/group/{ref}/usedby",
		"/api/objects/packetfilter/mangle/",
		"/api/objects/packetfilter/group/{ref}",
		"/api/objects/packetfilter/packetfilter/",
		"/api/objects/packetfilter/ruleset/{ref}/usedby",
		"/api/objects/packetfilter/loadbalance/{ref}",
		"/api/objects/packetfilter/loadbalance/{ref}/usedby",
		"/api/objects/packetfilter/masq/{ref}",
	}
}

type PimSmRoute []interface{}

type PimSmInterface []interface{}

type PimSmRpRouter []interface{}

type PimSmGroup []interface{}

type PimSm struct {
	AutoPfOut       string        `json:"auto_pf_out"`
	AutoPfrule      int64         `json:"auto_pfrule"`
	Debug           int64         `json:"debug"`
	Interfaces      []interface{} `json:"interfaces"`
	RpRouters       []interface{} `json:"rp_routers"`
	SptSwitchBytes  int64         `json:"spt_switch_bytes"`
	SptSwitchStatus int64         `json:"spt_switch_status"`
	Status          int64         `json:"status"`
}

// Definitions implements the Resource interface and returns a map of PimSm's Objects
func (PimSm) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"PimSmRoute":     PimSmRoute{},
		"PimSmInterface": PimSmInterface{},
		"PimSmRpRouter":  PimSmRpRouter{},
		"PimSmGroup":     PimSmGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the PimSm GET path
func (PimSm) GetPath() string {
	return "/api/nodes/pim_sm"
}

// GetPath implements sophos.RestObject interface and returns the PimSmRoute GET path
func (PimSmRoute) GetPath() string {
	return "/objects/pim_sm/route/"
}

// GetPath implements sophos.RestObject interface and returns the PimSmInterface GET path
func (PimSmInterface) GetPath() string {
	return "/objects/pim_sm/interface/"
}

// GetPath implements sophos.RestObject interface and returns the PimSmRpRouter GET path
func (PimSmRpRouter) GetPath() string {
	return "/objects/pim_sm/rp_router/"
}

// GetPath implements sophos.RestObject interface and returns the PimSmGroup GET path
func (PimSmGroup) GetPath() string {
	return "/objects/pim_sm/group/"
}

// ApiRoutes returns all known PimSm paths
func (PimSm) ApiRoutes() []string {
	return []string{
		"/api/objects/pim_sm/rp_router/",
		"/api/objects/pim_sm/group/",
		"/api/objects/pim_sm/group/{ref}",
		"/api/objects/pim_sm/interface/",
		"/api/objects/pim_sm/interface/{ref}",
		"/api/objects/pim_sm/interface/{ref}/usedby",
		"/api/objects/pim_sm/route/{ref}",
		"/api/objects/pim_sm/route/{ref}/usedby",
		"/api/objects/pim_sm/rp_router/{ref}",
		"/api/objects/pim_sm/group/{ref}/usedby",
		"/api/objects/pim_sm/route/",
		"/api/objects/pim_sm/rp_router/{ref}/usedby",
		"/api/objects/pim_sm/rp_router/{ref}/usedby",
		"/api/objects/pim_sm/group/{ref}/usedby",
		"/api/objects/pim_sm/route/",
		"/api/objects/pim_sm/interface/",
		"/api/objects/pim_sm/interface/{ref}",
		"/api/objects/pim_sm/interface/{ref}/usedby",
		"/api/objects/pim_sm/route/{ref}",
		"/api/objects/pim_sm/route/{ref}/usedby",
		"/api/objects/pim_sm/rp_router/",
		"/api/objects/pim_sm/group/",
		"/api/objects/pim_sm/group/{ref}",
		"/api/objects/pim_sm/rp_router/{ref}",
	}
}

type Pop3Group []interface{}

type Pop3Account []interface{}

type Pop3Exception []interface{}

type Pop3Server []interface{}

type Pop3 struct {
	AllowedClients            []interface{} `json:"allowed_clients"`
	AllowedServers            []string      `json:"allowed_servers"`
	CffAsMarker               string        `json:"cff_as_marker"`
	CffAv                     int64         `json:"cff_av"`
	CffAvAction               string        `json:"cff_av_action"`
	CffAvEngines              string        `json:"cff_av_engines"`
	CffFileExtensions         []string      `json:"cff_file_extensions"`
	DirectlyDeleteQuarantined int64         `json:"directly_delete_quarantined"`
	Exceptions                []interface{} `json:"exceptions"`
	KnownServers              []interface{} `json:"known_servers"`
	MaxMessageSize            int64         `json:"max_message_size"`
	Prefetching               struct {
		Interval           int64 `json:"interval"`
		OptimizeStorage    int64 `json:"optimize_storage"`
		Status             int64 `json:"status"`
		StorageMinHoldDays int64 `json:"storage_min_hold_days"`
	} `json:"prefetching"`
	QuarantineUnscannable int64         `json:"quarantine_unscannable"`
	SandboxMaxFilesizeMb  int64         `json:"sandbox_max_filesize_mb"`
	SandboxScanStatus     int64         `json:"sandbox_scan_status"`
	ScanTLS               int64         `json:"scan_tls"`
	SenderBlacklist       []interface{} `json:"sender_blacklist"`
	Spam                  string        `json:"spam"`
	SpamExpressions       []interface{} `json:"spam_expressions"`
	Spamplus              string        `json:"spamplus"`
	Spamstatus            int64         `json:"spamstatus"`
	Status                int64         `json:"status"`
	TLSCert               string        `json:"tls_cert"`
	TransparentSkip       []interface{} `json:"transparent_skip"`
	TransparentSkipAutoPf int64         `json:"transparent_skip_auto_pf"`
	UserCharset           string        `json:"user_charset"`
}

// Definitions implements the Resource interface and returns a map of Pop3's Objects
func (Pop3) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"Pop3Group":     Pop3Group{},
		"Pop3Account":   Pop3Account{},
		"Pop3Exception": Pop3Exception{},
		"Pop3Server":    Pop3Server{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Pop3 GET path
func (Pop3) GetPath() string {
	return "/api/nodes/pop3"
}

// GetPath implements sophos.RestObject interface and returns the Pop3Group GET path
func (Pop3Group) GetPath() string {
	return "/objects/pop3/group/"
}

// GetPath implements sophos.RestObject interface and returns the Pop3Account GET path
func (Pop3Account) GetPath() string {
	return "/objects/pop3/account/"
}

// GetPath implements sophos.RestObject interface and returns the Pop3Exception GET path
func (Pop3Exception) GetPath() string {
	return "/objects/pop3/exception/"
}

// GetPath implements sophos.RestObject interface and returns the Pop3Server GET path
func (Pop3Server) GetPath() string {
	return "/objects/pop3/server/"
}

// ApiRoutes returns all known Pop3 paths
func (Pop3) ApiRoutes() []string {
	return []string{
		"/api/objects/pop3/account/{ref}/usedby",
		"/api/objects/pop3/exception/",
		"/api/objects/pop3/exception/{ref}",
		"/api/objects/pop3/exception/{ref}/usedby",
		"/api/objects/pop3/group/",
		"/api/objects/pop3/group/{ref}",
		"/api/objects/pop3/group/{ref}/usedby",
		"/api/objects/pop3/account/",
		"/api/objects/pop3/server/{ref}",
		"/api/objects/pop3/server/",
		"/api/objects/pop3/server/{ref}/usedby",
		"/api/objects/pop3/account/{ref}",
		"/api/objects/pop3/account/{ref}",
		"/api/objects/pop3/server/{ref}/usedby",
		"/api/objects/pop3/exception/{ref}",
		"/api/objects/pop3/exception/{ref}/usedby",
		"/api/objects/pop3/group/",
		"/api/objects/pop3/group/{ref}",
		"/api/objects/pop3/group/{ref}/usedby",
		"/api/objects/pop3/account/",
		"/api/objects/pop3/account/{ref}/usedby",
		"/api/objects/pop3/exception/",
		"/api/objects/pop3/server/",
		"/api/objects/pop3/server/{ref}",
	}
}

type QosTrafficSelectorGroup []interface{}

type QosApplicationSelector []interface{}

type QosInterface []struct {
	Locked            string        `json:"_locked"`
	Comment           string        `json:"comment"`
	Downlink          int64         `json:"downlink"`
	DownlinkOptimizer bool          `json:"downlink_optimizer"`
	IngressRules      []interface{} `json:"ingress_rules"`
	Interface         string        `json:"interface"`
	Name              string        `json:"name"`
	Rules             []interface{} `json:"rules"`
	Status            bool          `json:"status"`
	Uplink            int64         `json:"uplink"`
	UplinkLimit       bool          `json:"uplink_limit"`
	UplinkOptimizer   bool          `json:"uplink_optimizer"`
}

type QosTrafficSelector []interface{}

type QosIngressRule []interface{}

type QosRule []interface{}

type QosGroup []interface{}

type Qos struct {
	Advanced struct {
		Ecn                 int64 `json:"ecn"`
		KeepClassAfterEncap int64 `json:"keep_class_after_encap"`
	} `json:"advanced"`
	Interfaces []string `json:"interfaces"`
}

// Definitions implements the Resource interface and returns a map of Qos's Objects
func (Qos) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"QosTrafficSelectorGroup": QosTrafficSelectorGroup{},
		"QosApplicationSelector":  QosApplicationSelector{},
		"QosInterface":            QosInterface{},
		"QosTrafficSelector":      QosTrafficSelector{},
		"QosIngressRule":          QosIngressRule{},
		"QosRule":                 QosRule{},
		"QosGroup":                QosGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Qos GET path
func (Qos) GetPath() string {
	return "/api/nodes/qos"
}

// GetPath implements sophos.RestObject interface and returns the QosTrafficSelectorGroup GET path
func (QosTrafficSelectorGroup) GetPath() string {
	return "/objects/qos/traffic_selector_group/"
}

// GetPath implements sophos.RestObject interface and returns the QosApplicationSelector GET path
func (QosApplicationSelector) GetPath() string {
	return "/objects/qos/application_selector/"
}

// GetPath implements sophos.RestObject interface and returns the QosInterface GET path
func (QosInterface) GetPath() string {
	return "/objects/qos/interface/"
}

// GetPath implements sophos.RestObject interface and returns the QosTrafficSelector GET path
func (QosTrafficSelector) GetPath() string {
	return "/objects/qos/traffic_selector/"
}

// GetPath implements sophos.RestObject interface and returns the QosIngressRule GET path
func (QosIngressRule) GetPath() string {
	return "/objects/qos/ingress_rule/"
}

// GetPath implements sophos.RestObject interface and returns the QosRule GET path
func (QosRule) GetPath() string {
	return "/objects/qos/rule/"
}

// GetPath implements sophos.RestObject interface and returns the QosGroup GET path
func (QosGroup) GetPath() string {
	return "/objects/qos/group/"
}

// ApiRoutes returns all known Qos paths
func (Qos) ApiRoutes() []string {
	return []string{
		"/api/objects/qos/group/{ref}/usedby",
		"/api/objects/qos/ingress_rule/",
		"/api/objects/qos/ingress_rule/{ref}",
		"/api/objects/qos/ingress_rule/{ref}/usedby",
		"/api/objects/qos/rule/",
		"/api/objects/qos/application_selector/{ref}/usedby",
		"/api/objects/qos/group/",
		"/api/objects/qos/group/{ref}",
		"/api/objects/qos/traffic_selector/{ref}",
		"/api/objects/qos/traffic_selector_group/{ref}/usedby",
		"/api/objects/qos/interface/{ref}",
		"/api/objects/qos/rule/{ref}/usedby",
		"/api/objects/qos/traffic_selector_group/",
		"/api/objects/qos/rule/{ref}",
		"/api/objects/qos/application_selector/",
		"/api/objects/qos/interface/",
		"/api/objects/qos/interface/{ref}/usedby",
		"/api/objects/qos/traffic_selector_group/{ref}",
		"/api/objects/qos/application_selector/{ref}",
		"/api/objects/qos/traffic_selector/",
		"/api/objects/qos/traffic_selector/{ref}/usedby",
		"/api/objects/qos/traffic_selector_group/{ref}/usedby",
		"/api/objects/qos/interface/{ref}",
		"/api/objects/qos/rule/{ref}/usedby",
		"/api/objects/qos/traffic_selector_group/",
		"/api/objects/qos/rule/{ref}",
		"/api/objects/qos/application_selector/",
		"/api/objects/qos/interface/",
		"/api/objects/qos/interface/{ref}/usedby",
		"/api/objects/qos/traffic_selector_group/{ref}",
		"/api/objects/qos/application_selector/{ref}",
		"/api/objects/qos/traffic_selector/",
		"/api/objects/qos/traffic_selector/{ref}/usedby",
		"/api/objects/qos/group/{ref}/usedby",
		"/api/objects/qos/ingress_rule/",
		"/api/objects/qos/ingress_rule/{ref}",
		"/api/objects/qos/ingress_rule/{ref}/usedby",
		"/api/objects/qos/rule/",
		"/api/objects/qos/application_selector/{ref}/usedby",
		"/api/objects/qos/group/",
		"/api/objects/qos/group/{ref}",
		"/api/objects/qos/traffic_selector/{ref}",
	}
}

type RemoteSyslogServer []interface{}

type RemoteSyslogGroup []interface{}

type RemoteSyslog struct {
	Buffer int64         `json:"buffer"`
	Logs   []interface{} `json:"logs"`
	Status int64         `json:"status"`
	Target []interface{} `json:"target"`
}

// Definitions implements the Resource interface and returns a map of RemoteSyslog's Objects
func (RemoteSyslog) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"RemoteSyslogServer": RemoteSyslogServer{},
		"RemoteSyslogGroup":  RemoteSyslogGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the RemoteSyslog GET path
func (RemoteSyslog) GetPath() string {
	return "/api/nodes/remote_syslog"
}

// GetPath implements sophos.RestObject interface and returns the RemoteSyslogServer GET path
func (RemoteSyslogServer) GetPath() string {
	return "/objects/remote_syslog/server/"
}

// GetPath implements sophos.RestObject interface and returns the RemoteSyslogGroup GET path
func (RemoteSyslogGroup) GetPath() string {
	return "/objects/remote_syslog/group/"
}

// ApiRoutes returns all known RemoteSyslog paths
func (RemoteSyslog) ApiRoutes() []string {
	return []string{
		"/api/objects/remote_syslog/server/",
		"/api/objects/remote_syslog/server/{ref}",
		"/api/objects/remote_syslog/server/{ref}/usedby",
		"/api/objects/remote_syslog/group/",
		"/api/objects/remote_syslog/group/{ref}",
		"/api/objects/remote_syslog/group/{ref}/usedby",
		"/api/objects/remote_syslog/group/{ref}/usedby",
		"/api/objects/remote_syslog/server/",
		"/api/objects/remote_syslog/server/{ref}",
		"/api/objects/remote_syslog/server/{ref}/usedby",
		"/api/objects/remote_syslog/group/",
		"/api/objects/remote_syslog/group/{ref}",
	}
}

type ReportingDepartment []interface{}

type ReportingFilter []struct {
	Locked     string `json:"_locked"`
	Callname   string `json:"callname"`
	Comment    string `json:"comment"`
	Department string `json:"department"`
	Filter     struct {
		Action string `json:"action"`
		Info   string `json:"info"`
	} `json:"filter"`
	Name      string `json:"name"`
	SortBy    string `json:"sort_by"`
	SortDir   string `json:"sort_dir"`
	Subsystem string `json:"subsystem"`
	Timeframe string `json:"timeframe"`
	Top       int64  `json:"top"`
}

type ReportingGroup []interface{}

type ReportingMail []interface{}

type Reporting struct {
	AccountingKeepdays     int64         `json:"accounting_keepdays"`
	AccountingStatus       int64         `json:"accounting_status"`
	Anonymizing            int64         `json:"anonymizing"`
	AppctrlKeepdays        int64         `json:"appctrl_keepdays"`
	AppctrlStatus          int64         `json:"appctrl_status"`
	AtpKeepdays            int64         `json:"atp_keepdays"`
	AtpReset               int64         `json:"atp_reset"`
	AtpStatus              int64         `json:"atp_status"`
	AuthenticationKeepdays int64         `json:"authentication_keepdays"`
	AuthenticationStatus   int64         `json:"authentication_status"`
	CsvSeparator           string        `json:"csv_separator"`
	EmailsecurityImport    []interface{} `json:"emailsecurity_import"`
	EmailsecurityKeepdays  int64         `json:"emailsecurity_keepdays"`
	EmailsecurityStatus    int64         `json:"emailsecurity_status"`
	EnableVpnAccounting    int64         `json:"enable_vpn_accounting"`
	HideAccountingips      []interface{} `json:"hide_accountingips"`
	HideMailaddresses      []interface{} `json:"hide_mailaddresses"`
	HideMaildomains        []interface{} `json:"hide_maildomains"`
	HideNetsecips          []interface{} `json:"hide_netsecips"`
	HideWebdomains         []interface{} `json:"hide_webdomains"`
	IpsImport              []interface{} `json:"ips_import"`
	IpsKeepdays            int64         `json:"ips_keepdays"`
	IpsStatus              int64         `json:"ips_status"`
	PacketfilterImport     []interface{} `json:"packetfilter_import"`
	PacketfilterKeepdays   int64         `json:"packetfilter_keepdays"`
	PacketfilterStatus     int64         `json:"packetfilter_status"`
	Password1              string        `json:"password1"`
	Password2              string        `json:"password2"`
	SandboxKeepdays        int64         `json:"sandbox_keepdays"`
	UserlogFromLogs        int64         `json:"userlog_from_logs"`
	VpnKeepdays            int64         `json:"vpn_keepdays"`
	VpnStatus              int64         `json:"vpn_status"`
	WafKeepdays            int64         `json:"waf_keepdays"`
	WafStatus              int64         `json:"waf_status"`
	WebsecurityDetail      int64         `json:"websecurity_detail"`
	WebsecurityImport      []interface{} `json:"websecurity_import"`
	WebsecurityKeepdays    int64         `json:"websecurity_keepdays"`
	WebsecurityStatus      int64         `json:"websecurity_status"`
}

// Definitions implements the Resource interface and returns a map of Reporting's Objects
func (Reporting) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"ReportingDepartment": ReportingDepartment{},
		"ReportingFilter":     ReportingFilter{},
		"ReportingGroup":      ReportingGroup{},
		"ReportingMail":       ReportingMail{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Reporting GET path
func (Reporting) GetPath() string {
	return "/api/nodes/reporting"
}

// GetPath implements sophos.RestObject interface and returns the ReportingDepartment GET path
func (ReportingDepartment) GetPath() string {
	return "/objects/reporting/department/"
}

// GetPath implements sophos.RestObject interface and returns the ReportingFilter GET path
func (ReportingFilter) GetPath() string {
	return "/objects/reporting/filter/"
}

// GetPath implements sophos.RestObject interface and returns the ReportingGroup GET path
func (ReportingGroup) GetPath() string {
	return "/objects/reporting/group/"
}

// GetPath implements sophos.RestObject interface and returns the ReportingMail GET path
func (ReportingMail) GetPath() string {
	return "/objects/reporting/mail/"
}

// ApiRoutes returns all known Reporting paths
func (Reporting) ApiRoutes() []string {
	return []string{
		"/api/objects/reporting/filter/{ref}/usedby",
		"/api/objects/reporting/group/{ref}",
		"/api/objects/reporting/group/{ref}/usedby",
		"/api/objects/reporting/mail/",
		"/api/objects/reporting/mail/{ref}",
		"/api/objects/reporting/department/{ref}",
		"/api/objects/reporting/department/{ref}/usedby",
		"/api/objects/reporting/filter/",
		"/api/objects/reporting/filter/{ref}",
		"/api/objects/reporting/group/",
		"/api/objects/reporting/mail/{ref}/usedby",
		"/api/objects/reporting/department/",
		"/api/objects/reporting/department/",
		"/api/objects/reporting/department/{ref}/usedby",
		"/api/objects/reporting/filter/",
		"/api/objects/reporting/filter/{ref}",
		"/api/objects/reporting/group/",
		"/api/objects/reporting/mail/{ref}/usedby",
		"/api/objects/reporting/department/{ref}",
		"/api/objects/reporting/filter/{ref}/usedby",
		"/api/objects/reporting/group/{ref}",
		"/api/objects/reporting/group/{ref}/usedby",
		"/api/objects/reporting/mail/",
		"/api/objects/reporting/mail/{ref}",
	}
}

type ReverseProxyFilter []interface{}

type ReverseProxyFrontend []struct {
	Locked               string        `json:"_locked"`
	AddContentTypeHeader bool          `json:"add_content_type_header"`
	Address              string        `json:"address"`
	AllowedNetworks      []string      `json:"allowed_networks"`
	Certificate          string        `json:"certificate"`
	Comment              string        `json:"comment"`
	DisableCompression   bool          `json:"disable_compression"`
	Domain               []string      `json:"domain"`
	Exceptions           []interface{} `json:"exceptions"`
	Htmlrewrite          bool          `json:"htmlrewrite"`
	HtmlrewriteCookies   bool          `json:"htmlrewrite_cookies"`
	Implicitredirect     bool          `json:"implicitredirect"`
	Lbmethod             string        `json:"lbmethod"`
	Locations            []string      `json:"locations"`
	Name                 string        `json:"name"`
	Port                 int64         `json:"port"`
	Preservehost         bool          `json:"preservehost"`
	Profile              string        `json:"profile"`
	Status               bool          `json:"status"`
	Type                 string        `json:"type"`
	Xheaders             bool          `json:"xheaders"`
}

type ReverseProxyException []interface{}

type ReverseProxyLocation []struct {
	Locked               string        `json:"_locked"`
	AccessControl        string        `json:"access_control"`
	AllowedNetworks      []string      `json:"allowed_networks"`
	AuthProfile          string        `json:"auth_profile"`
	Backend              []string      `json:"backend"`
	BePath               string        `json:"be_path"`
	Comment              string        `json:"comment"`
	DeniedNetworks       []interface{} `json:"denied_networks"`
	HotStandby           bool          `json:"hot_standby"`
	Name                 string        `json:"name"`
	Path                 string        `json:"path"`
	Status               bool          `json:"status"`
	StickysessionID      string        `json:"stickysession_id"`
	StickysessionStatus  bool          `json:"stickysession_status"`
	WebsocketPassthrough bool          `json:"websocket_passthrough"`
}

type ReverseProxyFormTemplate []struct {
	Locked string `json:"_locked"`
	Assets struct {
		DefaultStylesheet_css string `json:"default_stylesheet.css"`
	} `json:"assets"`
	Comment  string `json:"comment"`
	Filename string `json:"filename"`
	Name     string `json:"name"`
	Template string `json:"template"`
}

type ReverseProxyBackend []struct {
	Locked                          string `json:"_locked"`
	Comment                         string `json:"comment"`
	DisableBackendConnectionPooling bool   `json:"disable_backend_connection_pooling"`
	Host                            string `json:"host"`
	Keepalive                       bool   `json:"keepalive"`
	Name                            string `json:"name"`
	Path                            string `json:"path"`
	Port                            int64  `json:"port"`
	Ssl                             bool   `json:"ssl"`
	Status                          bool   `json:"status"`
	Timeout                         int64  `json:"timeout"`
}

type ReverseProxyProfile []struct {
	Locked                       string        `json:"_locked"`
	Av                           bool          `json:"av"`
	AvBlockUnscannable           bool          `json:"av_block_unscannable"`
	AvDirections                 string        `json:"av_directions"`
	AvEngines                    string        `json:"av_engines"`
	AvSizeLimit                  int64         `json:"av_size_limit"`
	AvTimeout                    int64         `json:"av_timeout"`
	BadClients                   bool          `json:"bad_clients"`
	BadClientsNoDnslookup        bool          `json:"bad_clients_no_dnslookup"`
	Comment                      string        `json:"comment"`
	Cookiesign                   bool          `json:"cookiesign"`
	CookiesignDropUnsigned       bool          `json:"cookiesign_drop_unsigned"`
	CustomThreatsFilters         []interface{} `json:"custom_threats_filters"`
	Extensions                   []interface{} `json:"extensions"`
	Filter                       []interface{} `json:"filter"`
	FilterMode                   string        `json:"filter_mode"`
	Formhardening                bool          `json:"formhardening"`
	Name                         string        `json:"name"`
	Outlookanywhere              bool          `json:"outlookanywhere"`
	SecRequestBodyNoFilesLimit   int64         `json:"sec_request_body_no_files_limit"`
	Skipwafrules                 []int64       `json:"skipwafrules"`
	Tft                          bool          `json:"tft"`
	TftBlockUnscannable          bool          `json:"tft_block_unscannable"`
	TftBlockedMimeTypes          []interface{} `json:"tft_blocked_mime_types"`
	ThreatsFilter                bool          `json:"threats_filter"`
	ThreatsFilterCategories      []string      `json:"threats_filter_categories"`
	ThreatsFilterRigid           bool          `json:"threats_filter_rigid"`
	Urlhardening                 bool          `json:"urlhardening"`
	UrlhardeningEntrypages       []string      `json:"urlhardening_entrypages"`
	UrlhardeningEntrypagesSource string        `json:"urlhardening_entrypages_source"`
	UrlhardeningSitemapUpdate    int64         `json:"urlhardening_sitemap_update"`
	UrlhardeningSitemapURL       string        `json:"urlhardening_sitemap_url"`
	Waf                          bool          `json:"waf"`
	Wafmode                      string        `json:"wafmode"`
	Wafparanoia                  bool          `json:"wafparanoia"`
}

type ReverseProxyAuthProfile []struct {
	Locked                          string        `json:"_locked"`
	Aaa                             []string      `json:"aaa"`
	BackendMode                     string        `json:"backend_mode"`
	BackendStripBasicAuth           bool          `json:"backend_strip_basic_auth"`
	BackendUserPrefix               string        `json:"backend_user_prefix"`
	BackendUserSuffix               string        `json:"backend_user_suffix"`
	BasicPrompt                     string        `json:"basic_prompt"`
	Comment                         string        `json:"comment"`
	FrontendCookie                  string        `json:"frontend_cookie"`
	FrontendCookieSecret            string        `json:"frontend_cookie_secret"`
	FrontendForm                    string        `json:"frontend_form"`
	FrontendFormTemplate            string        `json:"frontend_form_template"`
	FrontendLogin                   string        `json:"frontend_login"`
	FrontendLogout                  string        `json:"frontend_logout"`
	FrontendMode                    string        `json:"frontend_mode"`
	FrontendRealm                   string        `json:"frontend_realm"`
	FrontendSessionAllowPersistency bool          `json:"frontend_session_allow_persistency"`
	FrontendSessionLifetime         int64         `json:"frontend_session_lifetime"`
	FrontendSessionLifetimeLimited  bool          `json:"frontend_session_lifetime_limited"`
	FrontendSessionLifetimeScope    string        `json:"frontend_session_lifetime_scope"`
	FrontendSessionTimeout          int64         `json:"frontend_session_timeout"`
	FrontendSessionTimeoutEnabled   bool          `json:"frontend_session_timeout_enabled"`
	FrontendSessionTimeoutScope     string        `json:"frontend_session_timeout_scope"`
	LogoutDelegationUrls            []interface{} `json:"logout_delegation_urls"`
	LogoutMode                      string        `json:"logout_mode"`
	Name                            string        `json:"name"`
	RedirectToRequestedURL          bool          `json:"redirect_to_requested_url"`
}

type ReverseProxyGroup []interface{}

type ReverseProxyRedirection []interface{}

type ReverseProxyThreatsFilter []interface{}

type ReverseProxy struct {
	AuaRefreshEnabled  int64 `json:"aua_refresh_enabled"`
	AuaRefreshInterval int64 `json:"aua_refresh_interval"`
	Blacklist          struct {
		DnsrblZones []string `json:"dnsrbl_zones"`
		GeoipCodes  []string `json:"geoip_codes"`
	} `json:"blacklist"`
	Cookiesignkey                       string        `json:"cookiesignkey"`
	CssdHostname                        string        `json:"cssd_hostname"`
	CssdPort                            int64         `json:"cssd_port"`
	CustomThreatFiltersEnabled          int64         `json:"custom_threat_filters_enabled"`
	FormhardeningSecret                 string        `json:"formhardening_secret"`
	Keepalive                           int64         `json:"keepalive"`
	Manualmode                          int64         `json:"manualmode"`
	MaxConnectionsPerChild              int64         `json:"max_connections_per_child"`
	MaxPreforkProcesses                 int64         `json:"max_prefork_processes"`
	MaxProcesses                        int64         `json:"max_processes"`
	MaxSessionFiles                     int64         `json:"max_session_files"`
	MaxSpareProcesses                   int64         `json:"max_spare_processes"`
	MaxSpareThreads                     int64         `json:"max_spare_threads"`
	MaxThreadsPerProcess                int64         `json:"max_threads_per_process"`
	MinSpareProcesses                   int64         `json:"min_spare_processes"`
	MinSpareThreads                     int64         `json:"min_spare_threads"`
	MinTLS                              string        `json:"min_tls"`
	ModsecurityBeta                     int64         `json:"modsecurity_beta"`
	MpmMode                             string        `json:"mpm_mode"`
	Patternversion                      string        `json:"patternversion"`
	Port                                int64         `json:"port"`
	Proxyprotocol                       int64         `json:"proxyprotocol"`
	RequestLineLimit                    int64         `json:"request_line_limit"`
	SlowhttpExceptions                  []interface{} `json:"slowhttp_exceptions"`
	SlowhttpRequestHeaderTimeoutBase    int64         `json:"slowhttp_request_header_timeout_base"`
	SlowhttpRequestHeaderTimeoutEnabled int64         `json:"slowhttp_request_header_timeout_enabled"`
	SlowhttpRequestHeaderTimeoutMax     int64         `json:"slowhttp_request_header_timeout_max"`
	SlowhttpRequestHeaderTimeoutRate    int64         `json:"slowhttp_request_header_timeout_rate"`
	Status                              int64         `json:"status"`
	TraceEnabled                        int64         `json:"trace_enabled"`
	Urlhardeningsignkey                 string        `json:"urlhardeningsignkey"`
	Whatkilledus                        int64         `json:"whatkilledus"`
}

// Definitions implements the Resource interface and returns a map of ReverseProxy's Objects
func (ReverseProxy) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"ReverseProxyFilter":        ReverseProxyFilter{},
		"ReverseProxyFrontend":      ReverseProxyFrontend{},
		"ReverseProxyException":     ReverseProxyException{},
		"ReverseProxyLocation":      ReverseProxyLocation{},
		"ReverseProxyFormTemplate":  ReverseProxyFormTemplate{},
		"ReverseProxyBackend":       ReverseProxyBackend{},
		"ReverseProxyProfile":       ReverseProxyProfile{},
		"ReverseProxyAuthProfile":   ReverseProxyAuthProfile{},
		"ReverseProxyGroup":         ReverseProxyGroup{},
		"ReverseProxyRedirection":   ReverseProxyRedirection{},
		"ReverseProxyThreatsFilter": ReverseProxyThreatsFilter{},
	}
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxy GET path
func (ReverseProxy) GetPath() string {
	return "/api/nodes/reverse_proxy"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyFilter GET path
func (ReverseProxyFilter) GetPath() string {
	return "/objects/reverse_proxy/filter/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyFrontend GET path
func (ReverseProxyFrontend) GetPath() string {
	return "/objects/reverse_proxy/frontend/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyException GET path
func (ReverseProxyException) GetPath() string {
	return "/objects/reverse_proxy/exception/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyLocation GET path
func (ReverseProxyLocation) GetPath() string {
	return "/objects/reverse_proxy/location/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyFormTemplate GET path
func (ReverseProxyFormTemplate) GetPath() string {
	return "/objects/reverse_proxy/form_template/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyBackend GET path
func (ReverseProxyBackend) GetPath() string {
	return "/objects/reverse_proxy/backend/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyProfile GET path
func (ReverseProxyProfile) GetPath() string {
	return "/objects/reverse_proxy/profile/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyAuthProfile GET path
func (ReverseProxyAuthProfile) GetPath() string {
	return "/objects/reverse_proxy/auth_profile/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyGroup GET path
func (ReverseProxyGroup) GetPath() string {
	return "/objects/reverse_proxy/group/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyRedirection GET path
func (ReverseProxyRedirection) GetPath() string {
	return "/objects/reverse_proxy/redirection/"
}

// GetPath implements sophos.RestObject interface and returns the ReverseProxyThreatsFilter GET path
func (ReverseProxyThreatsFilter) GetPath() string {
	return "/objects/reverse_proxy/threats_filter/"
}

// ApiRoutes returns all known ReverseProxy paths
func (ReverseProxy) ApiRoutes() []string {
	return []string{
		"/api/objects/reverse_proxy/form_template/",
		"/api/objects/reverse_proxy/auth_profile/{ref}",
		"/api/objects/reverse_proxy/backend/",
		"/api/objects/reverse_proxy/frontend/{ref}",
		"/api/objects/reverse_proxy/group/{ref}/usedby",
		"/api/objects/reverse_proxy/location/{ref}",
		"/api/objects/reverse_proxy/profile/",
		"/api/objects/reverse_proxy/auth_profile/",
		"/api/objects/reverse_proxy/backend/{ref}",
		"/api/objects/reverse_proxy/form_template/{ref}/usedby",
		"/api/objects/reverse_proxy/group/",
		"/api/objects/reverse_proxy/threats_filter/{ref}",
		"/api/objects/reverse_proxy/backend/{ref}/usedby",
		"/api/objects/reverse_proxy/exception/{ref}",
		"/api/objects/reverse_proxy/filter/{ref}",
		"/api/objects/reverse_proxy/group/{ref}",
		"/api/objects/reverse_proxy/redirection/",
		"/api/objects/reverse_proxy/redirection/{ref}",
		"/api/objects/reverse_proxy/form_template/{ref}",
		"/api/objects/reverse_proxy/profile/{ref}/usedby",
		"/api/objects/reverse_proxy/threats_filter/",
		"/api/objects/reverse_proxy/auth_profile/{ref}/usedby",
		"/api/objects/reverse_proxy/filter/{ref}/usedby",
		"/api/objects/reverse_proxy/frontend/{ref}/usedby",
		"/api/objects/reverse_proxy/filter/",
		"/api/objects/reverse_proxy/frontend/",
		"/api/objects/reverse_proxy/profile/{ref}",
		"/api/objects/reverse_proxy/redirection/{ref}/usedby",
		"/api/objects/reverse_proxy/threats_filter/{ref}/usedby",
		"/api/objects/reverse_proxy/exception/",
		"/api/objects/reverse_proxy/exception/{ref}/usedby",
		"/api/objects/reverse_proxy/location/",
		"/api/objects/reverse_proxy/location/{ref}/usedby",
		"/api/objects/reverse_proxy/filter/",
		"/api/objects/reverse_proxy/frontend/",
		"/api/objects/reverse_proxy/profile/{ref}",
		"/api/objects/reverse_proxy/redirection/{ref}/usedby",
		"/api/objects/reverse_proxy/threats_filter/{ref}/usedby",
		"/api/objects/reverse_proxy/exception/",
		"/api/objects/reverse_proxy/exception/{ref}/usedby",
		"/api/objects/reverse_proxy/location/",
		"/api/objects/reverse_proxy/location/{ref}/usedby",
		"/api/objects/reverse_proxy/form_template/",
		"/api/objects/reverse_proxy/auth_profile/{ref}",
		"/api/objects/reverse_proxy/backend/",
		"/api/objects/reverse_proxy/frontend/{ref}",
		"/api/objects/reverse_proxy/group/{ref}/usedby",
		"/api/objects/reverse_proxy/location/{ref}",
		"/api/objects/reverse_proxy/profile/",
		"/api/objects/reverse_proxy/auth_profile/",
		"/api/objects/reverse_proxy/backend/{ref}",
		"/api/objects/reverse_proxy/form_template/{ref}/usedby",
		"/api/objects/reverse_proxy/group/",
		"/api/objects/reverse_proxy/threats_filter/{ref}",
		"/api/objects/reverse_proxy/backend/{ref}/usedby",
		"/api/objects/reverse_proxy/exception/{ref}",
		"/api/objects/reverse_proxy/filter/{ref}",
		"/api/objects/reverse_proxy/group/{ref}",
		"/api/objects/reverse_proxy/redirection/",
		"/api/objects/reverse_proxy/redirection/{ref}",
		"/api/objects/reverse_proxy/form_template/{ref}",
		"/api/objects/reverse_proxy/profile/{ref}/usedby",
		"/api/objects/reverse_proxy/threats_filter/",
		"/api/objects/reverse_proxy/auth_profile/{ref}/usedby",
		"/api/objects/reverse_proxy/filter/{ref}/usedby",
		"/api/objects/reverse_proxy/frontend/{ref}/usedby",
	}
}

type RightRight []struct {
	Locked  string `json:"_locked"`
	Comment string `json:"comment"`
	Name    string `json:"name"`
}

type RightGroup []interface{}

// Right is a generated struct representing the Sophos right Node Leaf
// GET /api/nodes/right
type Right struct {
	RightRight RightRight `json:"right_right"`
	RightGroup RightGroup `json:"right_group"`
}

// Definitions implements the Resource interface and returns a map of Right's sophos.Objects
func (Right) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"right_right": RightRight{},
		"right_group": RightGroup{},
	}
}

// GetPath implements sophos.RestObject and returns the RightRight GET path
func (RightRight) GetPath() string {
	return "/api/objects/right/right/"
}

// GetPath implements sophos.RestObject and returns the RightGroup GET path
func (RightGroup) GetPath() string {
	return "/api/objects/right/group/"
}

type RoleGroup []interface{}

type RoleRole []struct {
	Locked         string   `json:"_locked"`
	Comment        string   `json:"comment"`
	Members        []string `json:"members"`
	Name           string   `json:"name"`
	Rights         []string `json:"rights"`
	WebadminAccess bool     `json:"webadmin_access"`
}

// Role is a generated struct representing the Sophos role Node Leaf
// GET /api/nodes/role
type Role struct {
	RoleGroup RoleGroup `json:"role_group"`
	RoleRole  RoleRole  `json:"role_role"`
}

// Definitions implements the Resource interface and returns a map of Role's sophos.Objects
func (Role) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"role_group": RoleGroup{},
		"role_role":  RoleRole{},
	}
}

// GetPath implements sophos.RestObject and returns the RoleGroup GET path
func (RoleGroup) GetPath() string {
	return "/api/objects/role/group/"
}

// GetPath implements sophos.RestObject and returns the RoleRole GET path
func (RoleRole) GetPath() string {
	return "/api/objects/role/role/"
}

type RouteStatic []struct {
	Locked  string `json:"_locked"`
	Comment string `json:"comment"`
	Metric  int64  `json:"metric"`
	Name    string `json:"name"`
	Network string `json:"network"`
	Status  bool   `json:"status"`
	Target  string `json:"target"`
	Type    string `json:"type"`
}

type RouteGroup []interface{}

type RoutePolicy []interface{}

// Route is a generated struct representing the Sophos route Node Leaf
// GET /api/nodes/route
type Route struct {
	RouteStatic RouteStatic `json:"route_static"`
	RouteGroup  RouteGroup  `json:"route_group"`
	RoutePolicy RoutePolicy `json:"route_policy"`
}

// Definitions implements the Resource interface and returns a map of Route's sophos.Objects
func (Route) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"route_static": RouteStatic{},
		"route_group":  RouteGroup{},
		"route_policy": RoutePolicy{},
	}
}

// GetPath implements sophos.RestObject and returns the RouteStatic GET path
func (RouteStatic) GetPath() string {
	return "/api/objects/route/static/"
}

// GetPath implements sophos.RestObject and returns the RouteGroup GET path
func (RouteGroup) GetPath() string {
	return "/api/objects/route/group/"
}

// GetPath implements sophos.RestObject and returns the RoutePolicy GET path
func (RoutePolicy) GetPath() string {
	return "/api/objects/route/policy/"
}

type SchedulerLoadbalance []struct {
	Locked          string        `json:"_locked"`
	Algorithm       string        `json:"algorithm"`
	CheckData       string        `json:"check_data"`
	CheckHosts      []interface{} `json:"check_hosts"`
	CheckInterval   int64         `json:"check_interval"`
	CheckPort       int64         `json:"check_port"`
	CheckTimeout    int64         `json:"check_timeout"`
	CheckType       string        `json:"check_type"`
	Comment         string        `json:"comment"`
	Name            string        `json:"name"`
	Persistence     bool          `json:"persistence"`
	PersistenceHash string        `json:"persistence_hash"`
	PersistenceSize int64         `json:"persistence_size"`
	PersistenceTime int64         `json:"persistence_time"`
	Weight          struct{}      `json:"weight"`
}

type SchedulerRule []struct {
	Locked          string `json:"_locked"`
	Comment         string `json:"comment"`
	Destination     string `json:"destination"`
	Interface       string `json:"interface"`
	InterfaceGroup  string `json:"interface_group"`
	Name            string `json:"name"`
	Persistence     bool   `json:"persistence"`
	PersistenceHash string `json:"persistence_hash"`
	Service         string `json:"service"`
	SkipOnError     bool   `json:"skip_on_error"`
	Source          string `json:"source"`
	Status          bool   `json:"status"`
}

type SchedulerGroup []interface{}

// Scheduler is a generated struct representing the Sophos scheduler Node Leaf
// GET /api/nodes/scheduler
type Scheduler struct {
	SchedulerLoadbalance SchedulerLoadbalance `json:"scheduler_loadbalance"`
	SchedulerRule        SchedulerRule        `json:"scheduler_rule"`
	SchedulerGroup       SchedulerGroup       `json:"scheduler_group"`
}

// Definitions implements the Resource interface and returns a map of Scheduler's sophos.Objects
func (Scheduler) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"scheduler_loadbalance": SchedulerLoadbalance{},
		"scheduler_rule":        SchedulerRule{},
		"scheduler_group":       SchedulerGroup{},
	}
}

// GetPath implements sophos.RestObject and returns the SchedulerLoadbalance GET path
func (SchedulerLoadbalance) GetPath() string {
	return "/api/objects/scheduler/loadbalance/"
}

// GetPath implements sophos.RestObject and returns the SchedulerRule GET path
func (SchedulerRule) GetPath() string {
	return "/api/objects/scheduler/rule/"
}

// GetPath implements sophos.RestObject and returns the SchedulerGroup GET path
func (SchedulerGroup) GetPath() string {
	return "/api/objects/scheduler/group/"
}

type ServiceIcmp []struct {
	Locked  string `json:"_locked"`
	Code    int64  `json:"code"`
	Comment string `json:"comment"`
	Name    string `json:"name"`
	Type    int64  `json:"type"`
}

type ServiceIp []struct {
	Locked  string `json:"_locked"`
	Comment string `json:"comment"`
	Name    string `json:"name"`
	Proto   int64  `json:"proto"`
}

type ServiceAny []struct {
	Locked  string `json:"_locked"`
	Comment string `json:"comment"`
	Name    string `json:"name"`
}

type ServiceAh []interface{}

type ServiceIcmpv6 []interface{}

type ServiceTcpudp []struct {
	Locked       string `json:"_locked"`
	AutoPfSvcDst string `json:"auto_pf_svc_dst"`
	AutoPfSvcSrc string `json:"auto_pf_svc_src"`
	Comment      string `json:"comment"`
	DstHigh      int64  `json:"dst_high"`
	DstLow       int64  `json:"dst_low"`
	Name         string `json:"name"`
	SrcHigh      int64  `json:"src_high"`
	SrcLow       int64  `json:"src_low"`
}

type ServiceUdp []struct {
	Locked       string `json:"_locked"`
	AutoPfSvcDst string `json:"auto_pf_svc_dst"`
	AutoPfSvcSrc string `json:"auto_pf_svc_src"`
	Comment      string `json:"comment"`
	DstHigh      int64  `json:"dst_high"`
	DstLow       int64  `json:"dst_low"`
	Name         string `json:"name"`
	SrcHigh      int64  `json:"src_high"`
	SrcLow       int64  `json:"src_low"`
}

type ServiceGroup []struct {
	Locked  string   `json:"_locked"`
	Comment string   `json:"comment"`
	Members []string `json:"members"`
	Name    string   `json:"name"`
	Types   []string `json:"types"`
}

type ServiceTcp []struct {
	Locked       string `json:"_locked"`
	AutoPfSvcDst string `json:"auto_pf_svc_dst"`
	AutoPfSvcSrc string `json:"auto_pf_svc_src"`
	Comment      string `json:"comment"`
	DstHigh      int64  `json:"dst_high"`
	DstLow       int64  `json:"dst_low"`
	Name         string `json:"name"`
	SrcHigh      int64  `json:"src_high"`
	SrcLow       int64  `json:"src_low"`
}

type ServiceEsp []interface{}

// Service is a generated struct representing the Sophos service Node Leaf
// GET /api/nodes/service
type Service struct {
	ServiceIcmp   ServiceIcmp   `json:"service_icmp"`
	ServiceIp     ServiceIp     `json:"service_ip"`
	ServiceAny    ServiceAny    `json:"service_any"`
	ServiceAh     ServiceAh     `json:"service_ah"`
	ServiceIcmpv6 ServiceIcmpv6 `json:"service_icmpv6"`
	ServiceTcpudp ServiceTcpudp `json:"service_tcpudp"`
	ServiceUdp    ServiceUdp    `json:"service_udp"`
	ServiceGroup  ServiceGroup  `json:"service_group"`
	ServiceTcp    ServiceTcp    `json:"service_tcp"`
	ServiceEsp    ServiceEsp    `json:"service_esp"`
}

// Definitions implements the Resource interface and returns a map of Service's sophos.Objects
func (Service) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"service_icmp":   ServiceIcmp{},
		"service_ip":     ServiceIp{},
		"service_any":    ServiceAny{},
		"service_ah":     ServiceAh{},
		"service_icmpv6": ServiceIcmpv6{},
		"service_tcpudp": ServiceTcpudp{},
		"service_udp":    ServiceUdp{},
		"service_group":  ServiceGroup{},
		"service_tcp":    ServiceTcp{},
		"service_esp":    ServiceEsp{},
	}
}

// GetPath implements sophos.RestObject and returns the ServiceIcmp GET path
func (ServiceIcmp) GetPath() string {
	return "/api/objects/service/icmp/"
}

// GetPath implements sophos.RestObject and returns the ServiceIp GET path
func (ServiceIp) GetPath() string {
	return "/api/objects/service/ip/"
}

// GetPath implements sophos.RestObject and returns the ServiceAny GET path
func (ServiceAny) GetPath() string {
	return "/api/objects/service/any/"
}

// GetPath implements sophos.RestObject and returns the ServiceAh GET path
func (ServiceAh) GetPath() string {
	return "/api/objects/service/ah/"
}

// GetPath implements sophos.RestObject and returns the ServiceIcmpv6 GET path
func (ServiceIcmpv6) GetPath() string {
	return "/api/objects/service/icmpv6/"
}

// GetPath implements sophos.RestObject and returns the ServiceTcpudp GET path
func (ServiceTcpudp) GetPath() string {
	return "/api/objects/service/tcpudp/"
}

// GetPath implements sophos.RestObject and returns the ServiceUdp GET path
func (ServiceUdp) GetPath() string {
	return "/api/objects/service/udp/"
}

// GetPath implements sophos.RestObject and returns the ServiceGroup GET path
func (ServiceGroup) GetPath() string {
	return "/api/objects/service/group/"
}

// GetPath implements sophos.RestObject and returns the ServiceTcp GET path
func (ServiceTcp) GetPath() string {
	return "/api/objects/service/tcp/"
}

// GetPath implements sophos.RestObject and returns the ServiceEsp GET path
func (ServiceEsp) GetPath() string {
	return "/api/objects/service/esp/"
}

type SmtpGroup []interface{}

type SmtpHeaderOperation []interface{}

type SmtpProfile []struct {
	Locked                      string        `json:"_locked"`
	AdBaseDn                    string        `json:"ad_base_dn"`
	Batv                        bool          `json:"batv"`
	CffAv                       string        `json:"cff_av"`
	CffAvEngines                string        `json:"cff_av_engines"`
	CffFileExtensions           []string      `json:"cff_file_extensions"`
	Comment                     string        `json:"comment"`
	ConfidentialFooter          string        `json:"confidential_footer"`
	ConfidentialFooterStatus    bool          `json:"confidential_footer_status"`
	DlpAction                   string        `json:"dlp_action"`
	DlpCclRules                 []interface{} `json:"dlp_ccl_rules"`
	DlpCustomExpressions        []interface{} `json:"dlp_custom_expressions"`
	DlpNotificationAdmin        bool          `json:"dlp_notification_admin"`
	DlpNotificationOther        bool          `json:"dlp_notification_other"`
	DlpNotificationOtherAddress string        `json:"dlp_notification_other_address"`
	DlpNotificationSender       bool          `json:"dlp_notification_sender"`
	DlpScanAttachments          bool          `json:"dlp_scan_attachments"`
	Domains                     []interface{} `json:"domains"`
	GlobalAdd                   []interface{} `json:"global_add"`
	GlobalCopy                  []interface{} `json:"global_copy"`
	Greylisting                 bool          `json:"greylisting"`
	HeaderModification          []interface{} `json:"header_modification"`
	MimeAudio                   bool          `json:"mime_audio"`
	MimeBlacklist               []interface{} `json:"mime_blacklist"`
	MimeExecutable              bool          `json:"mime_executable"`
	MimeVideo                   bool          `json:"mime_video"`
	MimeWhitelist               []interface{} `json:"mime_whitelist"`
	Name                        string        `json:"name"`
	Rbl                         bool          `json:"rbl"`
	RblExtra                    []interface{} `json:"rbl_extra"`
	RcptAdServer                string        `json:"rcpt_ad_server"`
	RcptVerify                  string        `json:"rcpt_verify"`
	RdnsReject                  bool          `json:"rdns_reject"`
	RdnsRejectStrict            bool          `json:"rdns_reject_strict"`
	RouteList                   []interface{} `json:"route_list"`
	RouteTarget                 string        `json:"route_target"`
	RouteTargetPort             int64         `json:"route_target_port"`
	RouteTargetType             string        `json:"route_target_type"`
	SandboxMaxFilesizeMb        int64         `json:"sandbox_max_filesize_mb"`
	SandboxScanStatus           bool          `json:"sandbox_scan_status"`
	SenderBlacklist             []interface{} `json:"sender_blacklist"`
	Spam                        string        `json:"spam"`
	SpamExpressions             []interface{} `json:"spam_expressions"`
	Spamplus                    string        `json:"spamplus"`
	Spf                         bool          `json:"spf"`
	SpxTemplate                 string        `json:"spx_template"`
	Status                      bool          `json:"status"`
	Unscannable                 string        `json:"unscannable"`
}

type SmtpException []interface{}

type Smtp struct {
	AuthAaa                   []interface{} `json:"auth_aaa"`
	AuthStatus                int64         `json:"auth_status"`
	AvFooter                  string        `json:"av_footer"`
	AvFooterStatus            int64         `json:"av_footer_status"`
	BatvSecret                string        `json:"batv_secret"`
	BlockerService            string        `json:"blocker_service"`
	CffAsMarker               string        `json:"cff_as_marker"`
	DkimDomains               []interface{} `json:"dkim_domains"`
	DkimPrivateKey            string        `json:"dkim_private_key"`
	DkimSelector              string        `json:"dkim_selector"`
	EnableOldExpressionFilter int64         `json:"enable_old_expression_filter"`
	EncryptionUtility         string        `json:"encryption_utility"`
	Exceptions                []interface{} `json:"exceptions"`
	FootersMode               string        `json:"footers_mode"`
	GlobalAsReject            string        `json:"global_as_reject"`
	GlobalAvReject            int64         `json:"global_av_reject"`
	GlobalProfile             string        `json:"global_profile"`
	HostBlacklist             []interface{} `json:"host_blacklist"`
	Hostname                  string        `json:"hostname"`
	MaxMessageSize            int64         `json:"max_message_size"`
	Mode                      string        `json:"mode"`
	ParentProxyAuthPass       string        `json:"parent_proxy_auth_pass"`
	ParentProxyAuthStatus     int64         `json:"parent_proxy_auth_status"`
	ParentProxyAuthUser       string        `json:"parent_proxy_auth_user"`
	ParentProxyHost           string        `json:"parent_proxy_host"`
	ParentProxyPort           int64         `json:"parent_proxy_port"`
	ParentProxyStatus         int64         `json:"parent_proxy_status"`
	Postmaster                string        `json:"postmaster"`
	Profiles                  []interface{} `json:"profiles"`
	RecipientsMax             int64         `json:"recipients_max"`
	Relays                    []interface{} `json:"relays"`
	ScanOutgoingEmails        int64         `json:"scan_outgoing_emails"`
	ScannerPool               struct {
		MaxPool    int64   `json:"max_pool"`
		Thresholds []int64 `json:"thresholds"`
	} `json:"scanner_pool"`
	ScannerTimeout             int64         `json:"scanner_timeout"`
	SmarthostAuth              int64         `json:"smarthost_auth"`
	SmarthostHostname          string        `json:"smarthost_hostname"`
	SmarthostPass              string        `json:"smarthost_pass"`
	SmarthostPort              int64         `json:"smarthost_port"`
	SmarthostStatus            int64         `json:"smarthost_status"`
	SmarthostUser              string        `json:"smarthost_user"`
	SMTPAcceptMax              int64         `json:"smtp_accept_max"`
	SMTPAcceptPerConnectionMax int64         `json:"smtp_accept_per_connection_max"`
	SMTPAcceptPerHostMax       int64         `json:"smtp_accept_per_host_max"`
	Status                     int64         `json:"status"`
	TLSAvoid                   []interface{} `json:"tls_avoid"`
	TLSCert                    string        `json:"tls_cert"`
	TLSRequire                 []interface{} `json:"tls_require"`
	TLSRequireSenderDomains    []interface{} `json:"tls_require_sender_domains"`
	Transparent                int64         `json:"transparent"`
	TransparentSkip            []interface{} `json:"transparent_skip"`
	TransparentSkipAutoPf      int64         `json:"transparent_skip_auto_pf"`
	UpstreamHosts              []interface{} `json:"upstream_hosts"`
	UpstreamHostsOnly          int64         `json:"upstream_hosts_only"`
}

// Definitions implements the Resource interface and returns a map of Smtp's Objects
func (Smtp) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"SmtpGroup":           SmtpGroup{},
		"SmtpHeaderOperation": SmtpHeaderOperation{},
		"SmtpProfile":         SmtpProfile{},
		"SmtpException":       SmtpException{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Smtp GET path
func (Smtp) GetPath() string {
	return "/api/nodes/smtp"
}

// GetPath implements sophos.RestObject interface and returns the SmtpGroup GET path
func (SmtpGroup) GetPath() string {
	return "/objects/smtp/group/"
}

// GetPath implements sophos.RestObject interface and returns the SmtpHeaderOperation GET path
func (SmtpHeaderOperation) GetPath() string {
	return "/objects/smtp/header_operation/"
}

// GetPath implements sophos.RestObject interface and returns the SmtpProfile GET path
func (SmtpProfile) GetPath() string {
	return "/objects/smtp/profile/"
}

// GetPath implements sophos.RestObject interface and returns the SmtpException GET path
func (SmtpException) GetPath() string {
	return "/objects/smtp/exception/"
}

// ApiRoutes returns all known Smtp paths
func (Smtp) ApiRoutes() []string {
	return []string{
		"/api/objects/smtp/group/{ref}",
		"/api/objects/smtp/header_operation/{ref}",
		"/api/objects/smtp/header_operation/{ref}/usedby",
		"/api/objects/smtp/profile/{ref}",
		"/api/objects/smtp/exception/{ref}",
		"/api/objects/smtp/exception/{ref}/usedby",
		"/api/objects/smtp/group/",
		"/api/objects/smtp/group/{ref}/usedby",
		"/api/objects/smtp/header_operation/",
		"/api/objects/smtp/profile/",
		"/api/objects/smtp/profile/{ref}/usedby",
		"/api/objects/smtp/exception/",
		"/api/objects/smtp/exception/{ref}/usedby",
		"/api/objects/smtp/group/",
		"/api/objects/smtp/group/{ref}/usedby",
		"/api/objects/smtp/header_operation/",
		"/api/objects/smtp/profile/",
		"/api/objects/smtp/profile/{ref}/usedby",
		"/api/objects/smtp/exception/",
		"/api/objects/smtp/group/{ref}",
		"/api/objects/smtp/header_operation/{ref}",
		"/api/objects/smtp/header_operation/{ref}/usedby",
		"/api/objects/smtp/profile/{ref}",
		"/api/objects/smtp/exception/{ref}",
	}
}

type SnmpGroup []interface{}

type SnmpTrap []interface{}

type Snmp struct {
	AllowedNetworks []interface{} `json:"allowed_networks"`
	AuthPassword    string        `json:"auth_password"`
	AuthType        string        `json:"auth_type"`
	Community       string        `json:"community"`
	DeviceAdmin     string        `json:"device_admin"`
	DeviceLocation  string        `json:"device_location"`
	DeviceName      string        `json:"device_name"`
	EncryptPassword string        `json:"encrypt_password"`
	EncryptType     string        `json:"encrypt_type"`
	Status          int64         `json:"status"`
	Traps           []interface{} `json:"traps"`
	TrapsUseOldOids int64         `json:"traps_use_old_oids"`
	Username        string        `json:"username"`
	Version         string        `json:"version"`
}

// Definitions implements the Resource interface and returns a map of Snmp's Objects
func (Snmp) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"SnmpGroup": SnmpGroup{},
		"SnmpTrap":  SnmpTrap{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Snmp GET path
func (Snmp) GetPath() string {
	return "/api/nodes/snmp"
}

// GetPath implements sophos.RestObject interface and returns the SnmpGroup GET path
func (SnmpGroup) GetPath() string {
	return "/objects/snmp/group/"
}

// GetPath implements sophos.RestObject interface and returns the SnmpTrap GET path
func (SnmpTrap) GetPath() string {
	return "/objects/snmp/trap/"
}

// ApiRoutes returns all known Snmp paths
func (Snmp) ApiRoutes() []string {
	return []string{
		"/api/objects/snmp/trap/",
		"/api/objects/snmp/trap/{ref}",
		"/api/objects/snmp/trap/{ref}/usedby",
		"/api/objects/snmp/group/",
		"/api/objects/snmp/group/{ref}",
		"/api/objects/snmp/group/{ref}/usedby",
		"/api/objects/snmp/group/",
		"/api/objects/snmp/group/{ref}",
		"/api/objects/snmp/group/{ref}/usedby",
		"/api/objects/snmp/trap/",
		"/api/objects/snmp/trap/{ref}",
		"/api/objects/snmp/trap/{ref}/usedby",
	}
}

type SpxTemplate []struct {
	Locked                         string `json:"_locked"`
	Comment                        string `json:"comment"`
	Name                           string `json:"name"`
	OrgName                        string `json:"org_name"`
	PdfCoverPage                   string `json:"pdf_cover_page"`
	PdfCoverPageExt                string `json:"pdf_cover_page_ext"`
	PdfCoverPageFile               string `json:"pdf_cover_page_file"`
	PdfEncryption                  string `json:"pdf_encryption"`
	PdfLanguage                    string `json:"pdf_language"`
	PdfPageSize                    string `json:"pdf_page_size"`
	PortalAuthRequired             bool   `json:"portal_auth_required"`
	PortalFooterImage              string `json:"portal_footer_image"`
	PortalFooterImageExt           string `json:"portal_footer_image_ext"`
	PortalFooterImageFile          string `json:"portal_footer_image_file"`
	PortalHeaderImage              string `json:"portal_header_image"`
	PortalHeaderImageExt           string `json:"portal_header_image_ext"`
	PortalHeaderImageFile          string `json:"portal_header_image_file"`
	PortalIncludeOriginalBody      bool   `json:"portal_include_original_body"`
	PortalReplyAllButton           bool   `json:"portal_reply_all_button"`
	PortalSecureReplyEnabled       bool   `json:"portal_secure_reply_enabled"`
	PwdChallengeQuestionNumber     string `json:"pwd_challenge_question_number"`
	PwdFunctionChange              bool   `json:"pwd_function_change"`
	PwdFunctionRecover             bool   `json:"pwd_function_recover"`
	PwdFunctionReset               bool   `json:"pwd_function_reset"`
	PwdNotificationBody            string `json:"pwd_notification_body"`
	PwdNotificationFooterImage     string `json:"pwd_notification_footer_image"`
	PwdNotificationFooterImageExt  string `json:"pwd_notification_footer_image_ext"`
	PwdNotificationFooterImageFile string `json:"pwd_notification_footer_image_file"`
	PwdNotificationHeaderImage     string `json:"pwd_notification_header_image"`
	PwdNotificationHeaderImageExt  string `json:"pwd_notification_header_image_ext"`
	PwdNotificationHeaderImageFile string `json:"pwd_notification_header_image_file"`
	PwdNotificationSubject         string `json:"pwd_notification_subject"`
	PwdRcptNotificationBody        string `json:"pwd_rcpt_notification_body"`
	PwdRcptNotificationSubject     string `json:"pwd_rcpt_notification_subject"`
	PwdType                        string `json:"pwd_type"`
	RcptFooterImage                string `json:"rcpt_footer_image"`
	RcptFooterImageExt             string `json:"rcpt_footer_image_ext"`
	RcptFooterImageFile            string `json:"rcpt_footer_image_file"`
	RcptHeaderImage                string `json:"rcpt_header_image"`
	RcptHeaderImageExt             string `json:"rcpt_header_image_ext"`
	RcptHeaderImageFile            string `json:"rcpt_header_image_file"`
	RcptInstructions               string `json:"rcpt_instructions"`
	RemoveSophosLogo               bool   `json:"remove_sophos_logo"`
}

type SpxGroup []interface{}

type Spx struct {
	Global struct {
		ErrorNotificationTarget string `json:"error_notification_target"`
		ExpirySettings          struct {
			AllowSecureReplyDays     int64 `json:"allow_secure_reply_days"`
			KeepDelayedMailDays      int64 `json:"keep_delayed_mail_days"`
			KeepUnusedPwdDays        int64 `json:"keep_unused_pwd_days"`
			RegistrationReminderDays int64 `json:"registration_reminder_days"`
		} `json:"expiry_settings"`
		PasswordStrength struct {
			MinLength        int64 `json:"min_length"`
			RequireSpecChars int64 `json:"require_spec_chars"`
		} `json:"password_strength"`
		PortalSettings struct {
			AllowedNetworks  []interface{} `json:"allowed_networks"`
			Hostname         string        `json:"hostname"`
			InterfaceAddress string        `json:"interface_address"`
			Port             int64         `json:"port"`
		} `json:"portal_settings"`
		PoweredByLogo string `json:"powered_by_logo"`
		SpxPriority   int64  `json:"spx_priority"`
		Status        int64  `json:"status"`
	} `json:"global"`
	SpxAuth struct {
		Password string `json:"password"`
		Port     int64  `json:"port"`
		Server   string `json:"server"`
		URL      string `json:"url"`
	} `json:"spx_auth"`
	Templates []string `json:"templates"`
}

// Definitions implements the Resource interface and returns a map of Spx's Objects
func (Spx) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"SpxTemplate": SpxTemplate{},
		"SpxGroup":    SpxGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the Spx GET path
func (Spx) GetPath() string {
	return "/api/nodes/spx"
}

// GetPath implements sophos.RestObject interface and returns the SpxTemplate GET path
func (SpxTemplate) GetPath() string {
	return "/objects/spx/template/"
}

// GetPath implements sophos.RestObject interface and returns the SpxGroup GET path
func (SpxGroup) GetPath() string {
	return "/objects/spx/group/"
}

// ApiRoutes returns all known Spx paths
func (Spx) ApiRoutes() []string {
	return []string{
		"/api/objects/spx/template/{ref}/usedby",
		"/api/objects/spx/group/",
		"/api/objects/spx/group/{ref}",
		"/api/objects/spx/group/{ref}/usedby",
		"/api/objects/spx/template/",
		"/api/objects/spx/template/{ref}",
		"/api/objects/spx/group/{ref}",
		"/api/objects/spx/group/{ref}/usedby",
		"/api/objects/spx/template/",
		"/api/objects/spx/template/{ref}",
		"/api/objects/spx/template/{ref}/usedby",
		"/api/objects/spx/group/",
	}
}

type SslVpnServerConnection []interface{}

type SslVpnRemoteAccessProfile []struct {
	Locked     string   `json:"_locked"`
	Aaa        []string `json:"aaa"`
	AutoPfIn   string   `json:"auto_pf_in"`
	AutoPfrule bool     `json:"auto_pfrule"`
	Comment    string   `json:"comment"`
	Name       string   `json:"name"`
	Networks   []string `json:"networks"`
	Status     bool     `json:"status"`
}

type SslVpnClientConnection []struct {
	Locked                  string   `json:"_locked"`
	AuthenticationAlgorithm string   `json:"authentication_algorithm"`
	AutoPfIn                string   `json:"auto_pf_in"`
	AutoPfOut               string   `json:"auto_pf_out"`
	AutoPfrule              bool     `json:"auto_pfrule"`
	CaCert                  string   `json:"ca_cert"`
	Certificate             string   `json:"certificate"`
	Comment                 string   `json:"comment"`
	Compression             bool     `json:"compression"`
	EncryptionAlgorithm     string   `json:"encryption_algorithm"`
	Engine                  string   `json:"engine"`
	Interface               string   `json:"interface"`
	Key                     string   `json:"key"`
	LocalNetworks           []string `json:"local_networks"`
	Name                    string   `json:"name"`
	Password                string   `json:"password"`
	PlainServerAddress      string   `json:"plain_server_address"`
	Protocol                string   `json:"protocol"`
	ProxyAuthPass           string   `json:"proxy_auth_pass"`
	ProxyAuthStatus         bool     `json:"proxy_auth_status"`
	ProxyAuthUser           string   `json:"proxy_auth_user"`
	ProxyHost               string   `json:"proxy_host"`
	ProxyPort               int64    `json:"proxy_port"`
	ProxyStatus             bool     `json:"proxy_status"`
	RemoteNetworks          []string `json:"remote_networks"`
	ServerAddress           string   `json:"server_address"`
	ServerDn                string   `json:"server_dn"`
	ServerOverrideHostname  string   `json:"server_override_hostname"`
	ServerOverrideStatus    bool     `json:"server_override_status"`
	ServerPort              int64    `json:"server_port"`
	Status                  bool     `json:"status"`
	Username                string   `json:"username"`
}

type SslVpnGroup []interface{}

type SslVpn struct {
	AuthenticationAlgorithm string `json:"authentication_algorithm"`
	Certificate             string `json:"certificate"`
	Compression             int64  `json:"compression"`
	DatachannelKeyLifetime  int64  `json:"datachannel_key_lifetime"`
	Debug                   int64  `json:"debug"`
	DhKeySize               string `json:"dh_key_size"`
	DuplicateCn             int64  `json:"duplicate_cn"`
	EncryptionAlgorithm     string `json:"encryption_algorithm"`
	Hostname                string `json:"hostname"`
	Interface               string `json:"interface"`
	InterfaceAddress        string `json:"interface_address"`
	IPAssignmentPool        string `json:"ip_assignment_pool"`
	Port                    int64  `json:"port"`
	Protocol                string `json:"protocol"`
	UserAuthOptional        int64  `json:"user_auth_optional"`
}

// Definitions implements the Resource interface and returns a map of SslVpn's Objects
func (SslVpn) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"SslVpnServerConnection":    SslVpnServerConnection{},
		"SslVpnRemoteAccessProfile": SslVpnRemoteAccessProfile{},
		"SslVpnClientConnection":    SslVpnClientConnection{},
		"SslVpnGroup":               SslVpnGroup{},
	}
}

// GetPath implements sophos.RestObject interface and returns the SslVpn GET path
func (SslVpn) GetPath() string {
	return "/api/nodes/ssl_vpn"
}

// GetPath implements sophos.RestObject interface and returns the SslVpnServerConnection GET path
func (SslVpnServerConnection) GetPath() string {
	return "/objects/ssl_vpn/server_connection/"
}

// GetPath implements sophos.RestObject interface and returns the SslVpnRemoteAccessProfile GET path
func (SslVpnRemoteAccessProfile) GetPath() string {
	return "/objects/ssl_vpn/remote_access_profile/"
}

// GetPath implements sophos.RestObject interface and returns the SslVpnClientConnection GET path
func (SslVpnClientConnection) GetPath() string {
	return "/objects/ssl_vpn/client_connection/"
}

// GetPath implements sophos.RestObject interface and returns the SslVpnGroup GET path
func (SslVpnGroup) GetPath() string {
	return "/objects/ssl_vpn/group/"
}

// ApiRoutes returns all known SslVpn paths
func (SslVpn) ApiRoutes() []string {
	return []string{
		"/api/objects/ssl_vpn/client_connection/",
		"/api/objects/ssl_vpn/client_connection/{ref}/usedby",
		"/api/objects/ssl_vpn/group/",
		"/api/objects/ssl_vpn/group/{ref}/usedby",
		"/api/objects/ssl_vpn/server_connection/{ref}",
		"/api/objects/ssl_vpn/server_connection/",
		"/api/objects/ssl_vpn/server_connection/{ref}/usedby",
		"/api/objects/ssl_vpn/client_connection/{ref}",
		"/api/objects/ssl_vpn/group/{ref}",
		"/api/objects/ssl_vpn/remote_access_profile/",
		"/api/objects/ssl_vpn/remote_access_profile/{ref}",
		"/api/objects/ssl_vpn/remote_access_profile/{ref}/usedby",
		"/api/objects/ssl_vpn/remote_access_profile/{ref}/usedby",
		"/api/objects/ssl_vpn/server_connection/",
		"/api/objects/ssl_vpn/server_connection/{ref}/usedby",
		"/api/objects/ssl_vpn/client_connection/{ref}",
		"/api/objects/ssl_vpn/group/{ref}",
		"/api/objects/ssl_vpn/remote_access_profile/",
		"/api/objects/ssl_vpn/remote_access_profile/{ref}",
		"/api/objects/ssl_vpn/server_connection/{ref}",
		"/api/objects/ssl_vpn/client_connection/",
		"/api/objects/ssl_vpn/client_connection/{ref}/usedby",
		"/api/objects/ssl_vpn/group/",
		"/api/objects/ssl_vpn/group/{ref}/usedby",
	}
}

type StasCollector []interface{}

type StasGroup []interface{}

// Stas is a generated struct representing the Sophos stas Node Leaf
// GET /api/nodes/stas
type Stas struct {
	StasCollector StasCollector `json:"stas_collector"`
	StasGroup     StasGroup     `json:"stas_group"`
}

// Definitions implements the Resource interface and returns a map of Stas's sophos.Objects
func (Stas) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"stas_collector": StasCollector{},
		"stas_group":     StasGroup{},
	}
}

// GetPath implements sophos.RestObject and returns the StasCollector GET path
func (StasCollector) GetPath() string {
	return "/api/objects/stas/collector/"
}

// GetPath implements sophos.RestObject and returns the StasGroup GET path
func (StasGroup) GetPath() string {
	return "/api/objects/stas/group/"
}

type TimeGroup []interface{}

type TimeSingle []interface{}

type TimeRecurring []struct {
	Locked    string   `json:"_locked"`
	Comment   string   `json:"comment"`
	EndTime   string   `json:"end_time"`
	Name      string   `json:"name"`
	StartTime string   `json:"start_time"`
	Weekdays  []string `json:"weekdays"`
}

// Time is a generated struct representing the Sophos time Node Leaf
// GET /api/nodes/time
type Time struct {
	TimeGroup     TimeGroup     `json:"time_group"`
	TimeSingle    TimeSingle    `json:"time_single"`
	TimeRecurring TimeRecurring `json:"time_recurring"`
}

// Definitions implements the Resource interface and returns a map of Time's sophos.Objects
func (Time) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"time_group":     TimeGroup{},
		"time_single":    TimeSingle{},
		"time_recurring": TimeRecurring{},
	}
}

// GetPath implements sophos.RestObject and returns the TimeGroup GET path
func (TimeGroup) GetPath() string {
	return "/api/objects/time/group/"
}

// GetPath implements sophos.RestObject and returns the TimeSingle GET path
func (TimeSingle) GetPath() string {
	return "/api/objects/time/single/"
}

// GetPath implements sophos.RestObject and returns the TimeRecurring GET path
func (TimeRecurring) GetPath() string {
	return "/api/objects/time/recurring/"
}

type UserPreferencesWebadmin []struct {
	Locked               string   `json:"_locked"`
	BrowserTitle         string   `json:"browser_title"`
	Comment              string   `json:"comment"`
	DashboardAutogroup   bool     `json:"dashboard_autogroup"`
	DashboardLeftcolumn  []string `json:"dashboard_leftcolumn"`
	DashboardRightcolumn []string `json:"dashboard_rightcolumn"`
	ItemsPerPage         string   `json:"items_per_page"`
	Language             string   `json:"language"`
	MarketingWindow      bool     `json:"marketing_window"`
	Name                 string   `json:"name"`
	Shortcuts            struct {
		Aaa       []string `json:"aaa"`
		Epp       []string `json:"epp"`
		Interface []string `json:"interface"`
		Network   []string `json:"network"`
		Searchbox []string `json:"searchbox"`
		Service   []string `json:"service"`
	} `json:"shortcuts"`
	SkipTermsOfUse bool `json:"skip_terms_of_use"`
}

type UserPreferencesGroup []interface{}

// UserPreferences is a generated struct representing the Sophos user_preferences Node Leaf
// GET /api/nodes/user_preferences
type UserPreferences struct {
	UserPreferencesWebadmin UserPreferencesWebadmin `json:"user_preferences_webadmin"`
	UserPreferencesGroup    UserPreferencesGroup    `json:"user_preferences_group"`
}

// Definitions implements the Resource interface and returns a map of UserPreferences's sophos.Objects
func (UserPreferences) Definitions() map[string]sophos.RestObject {
	return map[string]sophos.RestObject{
		"user_preferences_webadmin": UserPreferencesWebadmin{},
		"user_preferences_group":    UserPreferencesGroup{},
	}
}

// GetPath implements sophos.RestObject and returns the UserPreferencesWebadmin GET path
func (UserPreferencesWebadmin) GetPath() string {
	return "/api/objects/user_preferences/webadmin/"
}

// GetPath implements sophos.RestObject and returns the UserPreferencesGroup GET path
func (UserPreferencesGroup) GetPath() string {
	return "/api/objects/user_preferences/group/"
}

var Objects = map[string]sophos.Object{
	"Status": Status{},
	"aaa":    Aaa{},
	"application_control":            ApplicationControl{},
	"authentication":                 Authentication{},
	"awe_network_device_association": AweNetworkDeviceAssociation{},
	"aws":               Aws{},
	"bgp":               Bgp{},
	"clientless_vpn":    ClientlessVpn{},
	"condition":         Condition{},
	"cron":              Cron{},
	"interface":         Interface{},
	"ipfix_connection":  IpfixConnection{},
	"ipsec_connection":  IpsecConnection{},
	"ipsec_remote_auth": IpsecRemoteAuth{},
	"itfhw":             Itfhw{},
	"itfparams":         Itfparams{},
	"mac_list":          MacList{},
	"network":           Network{},
	"notification":      Notification{},
	"ospf":              Ospf{},
	"override":          Override{},
	"right":             Right{},
	"role":              Role{},
	"route":             Route{},
	"scheduler":         Scheduler{},
	"service":           Service{},
	"stas":              Stas{},
	"time":              Time{},
	"user_preferences":  UserPreferences{},
}

var NodeLeaves = map[string]sophos.Node{
	"Nodes":         Nodes{},
	"amazon_vpc":    AmazonVpc{},
	"awe":           Awe{},
	"awscli":        Awscli{},
	"ca":            Ca{},
	"dhcp":          Dhcp{},
	"dns":           Dns{},
	"dyndns":        Dyndns{},
	"emailpki":      Emailpki{},
	"epp":           Epp{},
	"ftp":           Ftp{},
	"geoip":         Geoip{},
	"hotspot":       Hotspot{},
	"http":          Http{},
	"ips":           Ips{},
	"ipsec":         Ipsec{},
	"packetfilter":  Packetfilter{},
	"pim_sm":        PimSm{},
	"pop3":          Pop3{},
	"qos":           Qos{},
	"remote_syslog": RemoteSyslog{},
	"reporting":     Reporting{},
	"reverse_proxy": ReverseProxy{},
	"smtp":          Smtp{},
	"snmp":          Snmp{},
	"spx":           Spx{},
	"ssl_vpn":       SslVpn{},
}
