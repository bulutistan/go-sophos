// Package nodes contains generated types and Get/Update functions for sophos.Node(s)
//
// This file was generated by bin/gen.go! DO NOT EDIT!
package nodes

import "github.com/esurdam/go-sophos"

// AccServer1AuthSecret represents the acc.server1.auth.secret node and implements sophos.Node
type AccServer1AuthSecret struct{ Value string }

// Get retrieves node acc.server1.auth.secret's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer1AuthSecret) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer1AuthSecret(client)
	return err
}

// Update PUT's' acc.server1.auth.secret's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer1AuthSecret) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer1AuthSecret(client, a.Value)
}

// AccServer1AuthStatus represents the acc.server1.auth.status node and implements sophos.Node
type AccServer1AuthStatus struct{ Value bool }

// Get retrieves node acc.server1.auth.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer1AuthStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer1AuthStatus(client)
	return err
}

// Update PUT's' acc.server1.auth.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer1AuthStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer1AuthStatus(client, a.Value)
}

// AccServer1Port represents the acc.server1.port node and implements sophos.Node
type AccServer1Port struct{ Value int64 }

// Get retrieves node acc.server1.port's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer1Port) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer1Port(client)
	return err
}

// Update PUT's' acc.server1.port's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer1Port) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer1Port(client, a.Value)
}

// AccServer1Roles represents the acc.server1.roles node and implements sophos.Node
type AccServer1Roles struct{ Value []string }

// Get retrieves node acc.server1.roles's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer1Roles) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer1Roles(client)
	return err
}

// Update PUT's' acc.server1.roles's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer1Roles) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer1Roles(client, a.Value)
}

// AccServer1Server represents the acc.server1.server node and implements sophos.Node
type AccServer1Server struct{ Value string }

// Get retrieves node acc.server1.server's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer1Server) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer1Server(client)
	return err
}

// Update PUT's' acc.server1.server's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer1Server) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer1Server(client, a.Value)
}

// AccServer2AuthSecret represents the acc.server2.auth.secret node and implements sophos.Node
type AccServer2AuthSecret struct{ Value string }

// Get retrieves node acc.server2.auth.secret's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer2AuthSecret) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer2AuthSecret(client)
	return err
}

// Update PUT's' acc.server2.auth.secret's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer2AuthSecret) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer2AuthSecret(client, a.Value)
}

// AccServer2AuthStatus represents the acc.server2.auth.status node and implements sophos.Node
type AccServer2AuthStatus struct{ Value bool }

// Get retrieves node acc.server2.auth.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer2AuthStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer2AuthStatus(client)
	return err
}

// Update PUT's' acc.server2.auth.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer2AuthStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer2AuthStatus(client, a.Value)
}

// AccServer2Port represents the acc.server2.port node and implements sophos.Node
type AccServer2Port struct{ Value int64 }

// Get retrieves node acc.server2.port's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer2Port) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer2Port(client)
	return err
}

// Update PUT's' acc.server2.port's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer2Port) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer2Port(client, a.Value)
}

// AccServer2Roles represents the acc.server2.roles node and implements sophos.Node
type AccServer2Roles struct{ Value []string }

// Get retrieves node acc.server2.roles's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer2Roles) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer2Roles(client)
	return err
}

// Update PUT's' acc.server2.roles's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer2Roles) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer2Roles(client, a.Value)
}

// AccServer2Server represents the acc.server2.server node and implements sophos.Node
type AccServer2Server struct{ Value string }

// Get retrieves node acc.server2.server's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer2Server) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer2Server(client)
	return err
}

// Update PUT's' acc.server2.server's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer2Server) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer2Server(client, a.Value)
}

// AccServer2Status represents the acc.server2.status node and implements sophos.Node
type AccServer2Status struct{ Value bool }

// Get retrieves node acc.server2.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AccServer2Status) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccServer2Status(client)
	return err
}

// Update PUT's' acc.server2.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AccServer2Status) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccServer2Status(client, a.Value)
}

// AccSsoAdminGroup represents the acc.sso_admin_group node and implements sophos.Node
type AccSsoAdminGroup struct{ Value string }

// Get retrieves node acc.sso_admin_group's value from the gateway utilizing a sophos.ClientInterface
func (a *AccSsoAdminGroup) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccSsoAdminGroup(client)
	return err
}

// Update PUT's' acc.sso_admin_group's value to the gateway utilizing a sophos.ClientInterface
func (a *AccSsoAdminGroup) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccSsoAdminGroup(client, a.Value)
}

// AccSsoAuditorGroup represents the acc.sso_auditor_group node and implements sophos.Node
type AccSsoAuditorGroup struct{ Value string }

// Get retrieves node acc.sso_auditor_group's value from the gateway utilizing a sophos.ClientInterface
func (a *AccSsoAuditorGroup) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccSsoAuditorGroup(client)
	return err
}

// Update PUT's' acc.sso_auditor_group's value to the gateway utilizing a sophos.ClientInterface
func (a *AccSsoAuditorGroup) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccSsoAuditorGroup(client, a.Value)
}

// AccStatus represents the acc.status node and implements sophos.Node
type AccStatus struct{ Value bool }

// Get retrieves node acc.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AccStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccStatus(client)
	return err
}

// Update PUT's' acc.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AccStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccStatus(client, a.Value)
}

// AccdAccessAllowedAdmins represents the accd.access.allowed_admins node and implements sophos.Node
type AccdAccessAllowedAdmins struct{ Value []interface{} }

// Get retrieves node accd.access.allowed_admins's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessAllowedAdmins) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdAccessAllowedAdmins(client)
	return err
}

// Update PUT's' accd.access.allowed_admins's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessAllowedAdmins) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdAccessAllowedAdmins(client, a.Value)
}

// AccdAccessAllowedNetworks represents the accd.access.allowed_networks node and implements sophos.Node
type AccdAccessAllowedNetworks struct{ Value []interface{} }

// Get retrieves node accd.access.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdAccessAllowedNetworks(client)
	return err
}

// Update PUT's' accd.access.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdAccessAllowedNetworks(client, a.Value)
}

// AccdAccessAllowedUsers represents the accd.access.allowed_users node and implements sophos.Node
type AccdAccessAllowedUsers struct{ Value []interface{} }

// Get retrieves node accd.access.allowed_users's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessAllowedUsers) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdAccessAllowedUsers(client)
	return err
}

// Update PUT's' accd.access.allowed_users's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessAllowedUsers) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdAccessAllowedUsers(client, a.Value)
}

// AccdAccessCert represents the accd.access.cert node and implements sophos.Node
type AccdAccessCert struct{ Value string }

// Get retrieves node accd.access.cert's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessCert) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdAccessCert(client)
	return err
}

// Update PUT's' accd.access.cert's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdAccessCert(client, a.Value)
}

// AccdAccessPort represents the accd.access.port node and implements sophos.Node
type AccdAccessPort struct{ Value int64 }

// Get retrieves node accd.access.port's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessPort) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdAccessPort(client)
	return err
}

// Update PUT's' accd.access.port's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdAccessPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdAccessPort(client, a.Value)
}

// AccdDevicesAllowedNetworks represents the accd.devices.allowed_networks node and implements sophos.Node
type AccdDevicesAllowedNetworks struct{ Value []interface{} }

// Get retrieves node accd.devices.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdDevicesAllowedNetworks(client)
	return err
}

// Update PUT's' accd.devices.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdDevicesAllowedNetworks(client, a.Value)
}

// AccdDevicesAuthAuto represents the accd.devices.auth.auto node and implements sophos.Node
type AccdDevicesAuthAuto struct{ Value bool }

// Get retrieves node accd.devices.auth.auto's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesAuthAuto) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdDevicesAuthAuto(client)
	return err
}

// Update PUT's' accd.devices.auth.auto's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesAuthAuto) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdDevicesAuthAuto(client, a.Value)
}

// AccdDevicesAuthSecret represents the accd.devices.auth.secret node and implements sophos.Node
type AccdDevicesAuthSecret struct{ Value string }

// Get retrieves node accd.devices.auth.secret's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesAuthSecret) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdDevicesAuthSecret(client)
	return err
}

// Update PUT's' accd.devices.auth.secret's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesAuthSecret) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdDevicesAuthSecret(client, a.Value)
}

// AccdDevicesAuthStatus represents the accd.devices.auth.status node and implements sophos.Node
type AccdDevicesAuthStatus struct{ Value bool }

// Get retrieves node accd.devices.auth.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesAuthStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdDevicesAuthStatus(client)
	return err
}

// Update PUT's' accd.devices.auth.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesAuthStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdDevicesAuthStatus(client, a.Value)
}

// AccdDevicesCert represents the accd.devices.cert node and implements sophos.Node
type AccdDevicesCert struct{ Value string }

// Get retrieves node accd.devices.cert's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesCert) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdDevicesCert(client)
	return err
}

// Update PUT's' accd.devices.cert's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdDevicesCert(client, a.Value)
}

// AccdDevicesPort represents the accd.devices.port node and implements sophos.Node
type AccdDevicesPort struct{ Value int64 }

// Get retrieves node accd.devices.port's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesPort) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdDevicesPort(client)
	return err
}

// Update PUT's' accd.devices.port's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdDevicesPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdDevicesPort(client, a.Value)
}

// AccdGeneralAllowedNetworks represents the accd.general.allowed_networks node and implements sophos.Node
type AccdGeneralAllowedNetworks struct{ Value []interface{} }

// Get retrieves node accd.general.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdGeneralAllowedNetworks(client)
	return err
}

// Update PUT's' accd.general.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdGeneralAllowedNetworks(client, a.Value)
}

// AccdGeneralCert represents the accd.general.cert node and implements sophos.Node
type AccdGeneralCert struct{ Value string }

// Get retrieves node accd.general.cert's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralCert) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdGeneralCert(client)
	return err
}

// Update PUT's' accd.general.cert's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdGeneralCert(client, a.Value)
}

// AccdGeneralLanguage represents the accd.general.language node and implements sophos.Node
type AccdGeneralLanguage struct{ Value string }

// Get retrieves node accd.general.language's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralLanguage) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdGeneralLanguage(client)
	return err
}

// Update PUT's' accd.general.language's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralLanguage) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdGeneralLanguage(client, a.Value)
}

// AccdGeneralPort represents the accd.general.port node and implements sophos.Node
type AccdGeneralPort struct{ Value int64 }

// Get retrieves node accd.general.port's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralPort) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdGeneralPort(client)
	return err
}

// Update PUT's' accd.general.port's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdGeneralPort(client, a.Value)
}

// AccdGeneralTimeout represents the accd.general.timeout node and implements sophos.Node
type AccdGeneralTimeout struct{ Value int64 }

// Get retrieves node accd.general.timeout's value from the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralTimeout) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccdGeneralTimeout(client)
	return err
}

// Update PUT's' accd.general.timeout's value to the gateway utilizing a sophos.ClientInterface
func (a *AccdGeneralTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccdGeneralTimeout(client, a.Value)
}

// AccountingIpfixConnections represents the accounting.ipfix.connections node and implements sophos.Node
type AccountingIpfixConnections struct{ Value []interface{} }

// Get retrieves node accounting.ipfix.connections's value from the gateway utilizing a sophos.ClientInterface
func (a *AccountingIpfixConnections) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccountingIpfixConnections(client)
	return err
}

// Update PUT's' accounting.ipfix.connections's value to the gateway utilizing a sophos.ClientInterface
func (a *AccountingIpfixConnections) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccountingIpfixConnections(client, a.Value)
}

// AccountingIpfixStatus represents the accounting.ipfix.status node and implements sophos.Node
type AccountingIpfixStatus struct{ Value bool }

// Get retrieves node accounting.ipfix.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AccountingIpfixStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAccountingIpfixStatus(client)
	return err
}

// Update PUT's' accounting.ipfix.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AccountingIpfixStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAccountingIpfixStatus(client, a.Value)
}

// AfcControlledNetworks represents the afc.controlled_networks node and implements sophos.Node
type AfcControlledNetworks struct{ Value []string }

// Get retrieves node afc.controlled_networks's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcControlledNetworks) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcControlledNetworks(client)
	return err
}

// Update PUT's' afc.controlled_networks's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcControlledNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcControlledNetworks(client, a.Value)
}

// AfcHiddenSkip represents the afc.hidden_skip node and implements sophos.Node
type AfcHiddenSkip struct{ Value []string }

// Get retrieves node afc.hidden_skip's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcHiddenSkip) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcHiddenSkip(client)
	return err
}

// Update PUT's' afc.hidden_skip's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcHiddenSkip) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcHiddenSkip(client, a.Value)
}

// AfcHttpRedirectUrl represents the afc.http_redirect_url node and implements sophos.Node
type AfcHttpRedirectUrl struct{ Value string }

// Get retrieves node afc.http_redirect_url's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcHttpRedirectUrl) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcHttpRedirectUrl(client)
	return err
}

// Update PUT's' afc.http_redirect_url's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcHttpRedirectUrl) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcHttpRedirectUrl(client, a.Value)
}

// AfcLog represents the afc.log node and implements sophos.Node
type AfcLog struct{ Value string }

// Get retrieves node afc.log's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcLog) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcLog(client)
	return err
}

// Update PUT's' afc.log's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcLog) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcLog(client, a.Value)
}

// AfcNfqueueLength represents the afc.nfqueue_length node and implements sophos.Node
type AfcNfqueueLength struct{ Value int64 }

// Get retrieves node afc.nfqueue_length's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcNfqueueLength) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcNfqueueLength(client)
	return err
}

// Update PUT's' afc.nfqueue_length's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcNfqueueLength) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcNfqueueLength(client, a.Value)
}

// AfcNumQueues represents the afc.num_queues node and implements sophos.Node
type AfcNumQueues struct{ Value map[string]interface{} }

// Get retrieves node afc.num_queues's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcNumQueues) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcNumQueues(client)
	return err
}

// Update PUT's' afc.num_queues's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcNumQueues) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcNumQueues(client, a.Value)
}

// AfcRules represents the afc.rules node and implements sophos.Node
type AfcRules struct{ Value []string }

// Get retrieves node afc.rules's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcRules) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcRules(client)
	return err
}

// Update PUT's' afc.rules's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcRules) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcRules(client, a.Value)
}

// AfcStatus represents the afc.status node and implements sophos.Node
type AfcStatus struct{ Value bool }

// Get retrieves node afc.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcStatus(client)
	return err
}

// Update PUT's' afc.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcStatus(client, a.Value)
}

// AfcSubmitUnknownTrafficData represents the afc.submit_unknown_traffic_data node and implements sophos.Node
type AfcSubmitUnknownTrafficData struct{ Value bool }

// Get retrieves node afc.submit_unknown_traffic_data's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcSubmitUnknownTrafficData) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcSubmitUnknownTrafficData(client)
	return err
}

// Update PUT's' afc.submit_unknown_traffic_data's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcSubmitUnknownTrafficData) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcSubmitUnknownTrafficData(client, a.Value)
}

// AfcTransparentSkip represents the afc.transparent_skip node and implements sophos.Node
type AfcTransparentSkip struct{ Value []interface{} }

// Get retrieves node afc.transparent_skip's value from the gateway utilizing a sophos.ClientInterface
func (a *AfcTransparentSkip) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAfcTransparentSkip(client)
	return err
}

// Update PUT's' afc.transparent_skip's value to the gateway utilizing a sophos.ClientInterface
func (a *AfcTransparentSkip) Update(client sophos.ClientInterface) (err error) {
	return UpdateAfcTransparentSkip(client, a.Value)
}

// AmazonVpcAutoPfrule represents the amazon_vpc.auto_pfrule node and implements sophos.Node
type AmazonVpcAutoPfrule struct{ Value bool }

// Get retrieves node amazon_vpc.auto_pfrule's value from the gateway utilizing a sophos.ClientInterface
func (a *AmazonVpcAutoPfrule) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAmazonVpcAutoPfrule(client)
	return err
}

// Update PUT's' amazon_vpc.auto_pfrule's value to the gateway utilizing a sophos.ClientInterface
func (a *AmazonVpcAutoPfrule) Update(client sophos.ClientInterface) (err error) {
	return UpdateAmazonVpcAutoPfrule(client, a.Value)
}

// AmazonVpcConnections represents the amazon_vpc.connections node and implements sophos.Node
type AmazonVpcConnections struct{ Value []string }

// Get retrieves node amazon_vpc.connections's value from the gateway utilizing a sophos.ClientInterface
func (a *AmazonVpcConnections) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAmazonVpcConnections(client)
	return err
}

// Update PUT's' amazon_vpc.connections's value to the gateway utilizing a sophos.ClientInterface
func (a *AmazonVpcConnections) Update(client sophos.ClientInterface) (err error) {
	return UpdateAmazonVpcConnections(client, a.Value)
}

// AmazonVpcNetworks represents the amazon_vpc.networks node and implements sophos.Node
type AmazonVpcNetworks struct{ Value []string }

// Get retrieves node amazon_vpc.networks's value from the gateway utilizing a sophos.ClientInterface
func (a *AmazonVpcNetworks) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAmazonVpcNetworks(client)
	return err
}

// Update PUT's' amazon_vpc.networks's value to the gateway utilizing a sophos.ClientInterface
func (a *AmazonVpcNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateAmazonVpcNetworks(client, a.Value)
}

// AmazonVpcStatus represents the amazon_vpc.status node and implements sophos.Node
type AmazonVpcStatus struct{ Value bool }

// Get retrieves node amazon_vpc.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AmazonVpcStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAmazonVpcStatus(client)
	return err
}

// Update PUT's' amazon_vpc.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AmazonVpcStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAmazonVpcStatus(client, a.Value)
}

// AptpPolicy represents the aptp.policy node and implements sophos.Node
type AptpPolicy struct{ Value string }

// Get retrieves node aptp.policy's value from the gateway utilizing a sophos.ClientInterface
func (a *AptpPolicy) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAptpPolicy(client)
	return err
}

// Update PUT's' aptp.policy's value to the gateway utilizing a sophos.ClientInterface
func (a *AptpPolicy) Update(client sophos.ClientInterface) (err error) {
	return UpdateAptpPolicy(client, a.Value)
}

// AptpRuleModifiers represents the aptp.rule_modifiers node and implements sophos.Node
type AptpRuleModifiers struct{ Value []interface{} }

// Get retrieves node aptp.rule_modifiers's value from the gateway utilizing a sophos.ClientInterface
func (a *AptpRuleModifiers) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAptpRuleModifiers(client)
	return err
}

// Update PUT's' aptp.rule_modifiers's value to the gateway utilizing a sophos.ClientInterface
func (a *AptpRuleModifiers) Update(client sophos.ClientInterface) (err error) {
	return UpdateAptpRuleModifiers(client, a.Value)
}

// AptpStatus represents the aptp.status node and implements sophos.Node
type AptpStatus struct{ Value bool }

// Get retrieves node aptp.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AptpStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAptpStatus(client)
	return err
}

// Update PUT's' aptp.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AptpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAptpStatus(client, a.Value)
}

// AptpTransparentSkip represents the aptp.transparent_skip node and implements sophos.Node
type AptpTransparentSkip struct{ Value []interface{} }

// Get retrieves node aptp.transparent_skip's value from the gateway utilizing a sophos.ClientInterface
func (a *AptpTransparentSkip) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAptpTransparentSkip(client)
	return err
}

// Update PUT's' aptp.transparent_skip's value to the gateway utilizing a sophos.ClientInterface
func (a *AptpTransparentSkip) Update(client sophos.ClientInterface) (err error) {
	return UpdateAptpTransparentSkip(client, a.Value)
}

// ArmLicensedIp represents the arm.licensed_ip node and implements sophos.Node
type ArmLicensedIp struct{ Value string }

// Get retrieves node arm.licensed_ip's value from the gateway utilizing a sophos.ClientInterface
func (a *ArmLicensedIp) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetArmLicensedIp(client)
	return err
}

// Update PUT's' arm.licensed_ip's value to the gateway utilizing a sophos.ClientInterface
func (a *ArmLicensedIp) Update(client sophos.ClientInterface) (err error) {
	return UpdateArmLicensedIp(client, a.Value)
}

// ArmRemoteHost represents the arm.remote.host node and implements sophos.Node
type ArmRemoteHost struct{ Value string }

// Get retrieves node arm.remote.host's value from the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteHost) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetArmRemoteHost(client)
	return err
}

// Update PUT's' arm.remote.host's value to the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteHost) Update(client sophos.ClientInterface) (err error) {
	return UpdateArmRemoteHost(client, a.Value)
}

// ArmRemoteMethod represents the arm.remote.method node and implements sophos.Node
type ArmRemoteMethod struct{ Value string }

// Get retrieves node arm.remote.method's value from the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteMethod) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetArmRemoteMethod(client)
	return err
}

// Update PUT's' arm.remote.method's value to the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteMethod) Update(client sophos.ClientInterface) (err error) {
	return UpdateArmRemoteMethod(client, a.Value)
}

// ArmRemoteSmbPassword represents the arm.remote.smb_password node and implements sophos.Node
type ArmRemoteSmbPassword struct{ Value string }

// Get retrieves node arm.remote.smb_password's value from the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteSmbPassword) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetArmRemoteSmbPassword(client)
	return err
}

// Update PUT's' arm.remote.smb_password's value to the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteSmbPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateArmRemoteSmbPassword(client, a.Value)
}

// ArmRemoteSmbShare represents the arm.remote.smb_share node and implements sophos.Node
type ArmRemoteSmbShare struct{ Value string }

// Get retrieves node arm.remote.smb_share's value from the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteSmbShare) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetArmRemoteSmbShare(client)
	return err
}

// Update PUT's' arm.remote.smb_share's value to the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteSmbShare) Update(client sophos.ClientInterface) (err error) {
	return UpdateArmRemoteSmbShare(client, a.Value)
}

// ArmRemoteSmbUser represents the arm.remote.smb_user node and implements sophos.Node
type ArmRemoteSmbUser struct{ Value string }

// Get retrieves node arm.remote.smb_user's value from the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteSmbUser) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetArmRemoteSmbUser(client)
	return err
}

// Update PUT's' arm.remote.smb_user's value to the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteSmbUser) Update(client sophos.ClientInterface) (err error) {
	return UpdateArmRemoteSmbUser(client, a.Value)
}

// ArmRemoteStatus represents the arm.remote.status node and implements sophos.Node
type ArmRemoteStatus struct{ Value bool }

// Get retrieves node arm.remote.status's value from the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetArmRemoteStatus(client)
	return err
}

// Update PUT's' arm.remote.status's value to the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateArmRemoteStatus(client, a.Value)
}

// ArmRemoteSyslogService represents the arm.remote.syslog_service node and implements sophos.Node
type ArmRemoteSyslogService struct{ Value string }

// Get retrieves node arm.remote.syslog_service's value from the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteSyslogService) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetArmRemoteSyslogService(client)
	return err
}

// Update PUT's' arm.remote.syslog_service's value to the gateway utilizing a sophos.ClientInterface
func (a *ArmRemoteSyslogService) Update(client sophos.ClientInterface) (err error) {
	return UpdateArmRemoteSyslogService(client, a.Value)
}

// ArmStatus represents the arm.status node and implements sophos.Node
type ArmStatus struct{ Value bool }

// Get retrieves node arm.status's value from the gateway utilizing a sophos.ClientInterface
func (a *ArmStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetArmStatus(client)
	return err
}

// Update PUT's' arm.status's value to the gateway utilizing a sophos.ClientInterface
func (a *ArmStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateArmStatus(client, a.Value)
}

// AuthAdSsoForceUtf8Sync represents the auth.ad_sso.force_utf8_sync node and implements sophos.Node
type AuthAdSsoForceUtf8Sync struct{ Value bool }

// Get retrieves node auth.ad_sso.force_utf8_sync's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoForceUtf8Sync) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoForceUtf8Sync(client)
	return err
}

// Update PUT's' auth.ad_sso.force_utf8_sync's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoForceUtf8Sync) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoForceUtf8Sync(client, a.Value)
}

// AuthAdSsoJoinresult represents the auth.ad_sso.joinresult node and implements sophos.Node
type AuthAdSsoJoinresult struct{ Value string }

// Get retrieves node auth.ad_sso.joinresult's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoJoinresult) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoJoinresult(client)
	return err
}

// Update PUT's' auth.ad_sso.joinresult's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoJoinresult) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoJoinresult(client, a.Value)
}

// AuthAdSsoLoadbalancerFqdn represents the auth.ad_sso.loadbalancer_fqdn node and implements sophos.Node
type AuthAdSsoLoadbalancerFqdn struct{ Value string }

// Get retrieves node auth.ad_sso.loadbalancer_fqdn's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoLoadbalancerFqdn) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoLoadbalancerFqdn(client)
	return err
}

// Update PUT's' auth.ad_sso.loadbalancer_fqdn's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoLoadbalancerFqdn) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoLoadbalancerFqdn(client, a.Value)
}

// AuthAdSsoNtlmv2Auth represents the auth.ad_sso.ntlmv2_auth node and implements sophos.Node
type AuthAdSsoNtlmv2Auth struct{ Value bool }

// Get retrieves node auth.ad_sso.ntlmv2_auth's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoNtlmv2Auth) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoNtlmv2Auth(client)
	return err
}

// Update PUT's' auth.ad_sso.ntlmv2_auth's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoNtlmv2Auth) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoNtlmv2Auth(client, a.Value)
}

// AuthAdSsoSecrets represents the auth.ad_sso.secrets node and implements sophos.Node
type AuthAdSsoSecrets struct{ Value string }

// Get retrieves node auth.ad_sso.secrets's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSecrets) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSecrets(client)
	return err
}

// Update PUT's' auth.ad_sso.secrets's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSecrets) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSecrets(client, a.Value)
}

// AuthAdSsoSmbconf represents the auth.ad_sso.smbconf node and implements sophos.Node
type AuthAdSsoSmbconf struct{ Value string }

// Get retrieves node auth.ad_sso.smbconf's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSmbconf) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSmbconf(client)
	return err
}

// Update PUT's' auth.ad_sso.smbconf's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSmbconf) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSmbconf(client, a.Value)
}

// AuthAdSsoSsoDomain represents the auth.ad_sso.sso_domain node and implements sophos.Node
type AuthAdSsoSsoDomain struct{ Value string }

// Get retrieves node auth.ad_sso.sso_domain's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoDomain) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSsoDomain(client)
	return err
}

// Update PUT's' auth.ad_sso.sso_domain's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoDomain) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSsoDomain(client, a.Value)
}

// AuthAdSsoSsoNetbiosDomain represents the auth.ad_sso.sso_netbios_domain node and implements sophos.Node
type AuthAdSsoSsoNetbiosDomain struct{ Value string }

// Get retrieves node auth.ad_sso.sso_netbios_domain's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoNetbiosDomain) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSsoNetbiosDomain(client)
	return err
}

// Update PUT's' auth.ad_sso.sso_netbios_domain's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoNetbiosDomain) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSsoNetbiosDomain(client, a.Value)
}

// AuthAdSsoSsoNetbiosHost represents the auth.ad_sso.sso_netbios_host node and implements sophos.Node
type AuthAdSsoSsoNetbiosHost struct{ Value string }

// Get retrieves node auth.ad_sso.sso_netbios_host's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoNetbiosHost) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSsoNetbiosHost(client)
	return err
}

// Update PUT's' auth.ad_sso.sso_netbios_host's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoNetbiosHost) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSsoNetbiosHost(client, a.Value)
}

// AuthAdSsoSsoPassword represents the auth.ad_sso.sso_password node and implements sophos.Node
type AuthAdSsoSsoPassword struct{ Value string }

// Get retrieves node auth.ad_sso.sso_password's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoPassword) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSsoPassword(client)
	return err
}

// Update PUT's' auth.ad_sso.sso_password's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSsoPassword(client, a.Value)
}

// AuthAdSsoSsoServer represents the auth.ad_sso.sso_server node and implements sophos.Node
type AuthAdSsoSsoServer struct{ Value string }

// Get retrieves node auth.ad_sso.sso_server's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoServer) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSsoServer(client)
	return err
}

// Update PUT's' auth.ad_sso.sso_server's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSsoServer(client, a.Value)
}

// AuthAdSsoSsoStatus represents the auth.ad_sso.sso_status node and implements sophos.Node
type AuthAdSsoSsoStatus struct{ Value bool }

// Get retrieves node auth.ad_sso.sso_status's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSsoStatus(client)
	return err
}

// Update PUT's' auth.ad_sso.sso_status's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSsoStatus(client, a.Value)
}

// AuthAdSsoSsoSync represents the auth.ad_sso.sso_sync node and implements sophos.Node
type AuthAdSsoSsoSync struct{ Value bool }

// Get retrieves node auth.ad_sso.sso_sync's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoSync) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSsoSync(client)
	return err
}

// Update PUT's' auth.ad_sso.sso_sync's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoSync) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSsoSync(client, a.Value)
}

// AuthAdSsoSsoUsername represents the auth.ad_sso.sso_username node and implements sophos.Node
type AuthAdSsoSsoUsername struct{ Value string }

// Get retrieves node auth.ad_sso.sso_username's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoUsername) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAdSsoSsoUsername(client)
	return err
}

// Update PUT's' auth.ad_sso.sso_username's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAdSsoSsoUsername) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAdSsoSsoUsername(client, a.Value)
}

// AuthApiTokens represents the auth.api_tokens node and implements sophos.Node
type AuthApiTokens struct{ Value map[string]interface{} }

// Get retrieves node auth.api_tokens's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthApiTokens) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthApiTokens(client)
	return err
}

// Update PUT's' auth.api_tokens's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthApiTokens) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthApiTokens(client, a.Value)
}

// AuthAutoAddToFacility represents the auth.auto_add_to_facility node and implements sophos.Node
type AuthAutoAddToFacility struct{ Value []string }

// Get retrieves node auth.auto_add_to_facility's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAutoAddToFacility) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAutoAddToFacility(client)
	return err
}

// Update PUT's' auth.auto_add_to_facility's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAutoAddToFacility) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAutoAddToFacility(client, a.Value)
}

// AuthAutoAddUsers represents the auth.auto_add_users node and implements sophos.Node
type AuthAutoAddUsers struct{ Value bool }

// Get retrieves node auth.auto_add_users's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthAutoAddUsers) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthAutoAddUsers(client)
	return err
}

// Update PUT's' auth.auto_add_users's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthAutoAddUsers) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthAutoAddUsers(client, a.Value)
}

// AuthBlockAttempts represents the auth.block.attempts node and implements sophos.Node
type AuthBlockAttempts struct{ Value int64 }

// Get retrieves node auth.block.attempts's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockAttempts) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthBlockAttempts(client)
	return err
}

// Update PUT's' auth.block.attempts's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockAttempts) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthBlockAttempts(client, a.Value)
}

// AuthBlockFacilities represents the auth.block.facilities node and implements sophos.Node
type AuthBlockFacilities struct{ Value []string }

// Get retrieves node auth.block.facilities's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockFacilities) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthBlockFacilities(client)
	return err
}

// Update PUT's' auth.block.facilities's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockFacilities) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthBlockFacilities(client, a.Value)
}

// AuthBlockLockout represents the auth.block.lockout node and implements sophos.Node
type AuthBlockLockout struct{ Value bool }

// Get retrieves node auth.block.lockout's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockLockout) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthBlockLockout(client)
	return err
}

// Update PUT's' auth.block.lockout's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockLockout) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthBlockLockout(client, a.Value)
}

// AuthBlockNever represents the auth.block.never node and implements sophos.Node
type AuthBlockNever struct{ Value []interface{} }

// Get retrieves node auth.block.never's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockNever) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthBlockNever(client)
	return err
}

// Update PUT's' auth.block.never's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockNever) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthBlockNever(client, a.Value)
}

// AuthBlockSeconds represents the auth.block.seconds node and implements sophos.Node
type AuthBlockSeconds struct{ Value int64 }

// Get retrieves node auth.block.seconds's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockSeconds) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthBlockSeconds(client)
	return err
}

// Update PUT's' auth.block.seconds's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthBlockSeconds) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthBlockSeconds(client, a.Value)
}

// AuthCacheLifetime represents the auth.cache_lifetime node and implements sophos.Node
type AuthCacheLifetime struct{ Value int64 }

// Get retrieves node auth.cache_lifetime's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthCacheLifetime) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthCacheLifetime(client)
	return err
}

// Update PUT's' auth.cache_lifetime's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthCacheLifetime) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthCacheLifetime(client, a.Value)
}

// AuthEdirSsoEmConflict represents the auth.edir_sso.em_conflict node and implements sophos.Node
type AuthEdirSsoEmConflict struct{ Value string }

// Get retrieves node auth.edir_sso.em_conflict's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoEmConflict) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthEdirSsoEmConflict(client)
	return err
}

// Update PUT's' auth.edir_sso.em_conflict's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoEmConflict) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthEdirSsoEmConflict(client, a.Value)
}

// AuthEdirSsoEmSocketTimeout represents the auth.edir_sso.em_socket_timeout node and implements sophos.Node
type AuthEdirSsoEmSocketTimeout struct{ Value int64 }

// Get retrieves node auth.edir_sso.em_socket_timeout's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoEmSocketTimeout) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthEdirSsoEmSocketTimeout(client)
	return err
}

// Update PUT's' auth.edir_sso.em_socket_timeout's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoEmSocketTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthEdirSsoEmSocketTimeout(client, a.Value)
}

// AuthEdirSsoEmVerifyLogout represents the auth.edir_sso.em_verify_logout node and implements sophos.Node
type AuthEdirSsoEmVerifyLogout struct{ Value bool }

// Get retrieves node auth.edir_sso.em_verify_logout's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoEmVerifyLogout) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthEdirSsoEmVerifyLogout(client)
	return err
}

// Update PUT's' auth.edir_sso.em_verify_logout's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoEmVerifyLogout) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthEdirSsoEmVerifyLogout(client, a.Value)
}

// AuthEdirSsoSsoAuaSearchIp represents the auth.edir_sso.sso_aua_search_ip node and implements sophos.Node
type AuthEdirSsoSsoAuaSearchIp struct{ Value bool }

// Get retrieves node auth.edir_sso.sso_aua_search_ip's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoSsoAuaSearchIp) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthEdirSsoSsoAuaSearchIp(client)
	return err
}

// Update PUT's' auth.edir_sso.sso_aua_search_ip's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoSsoAuaSearchIp) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthEdirSsoSsoAuaSearchIp(client, a.Value)
}

// AuthEdirSsoSsoMode represents the auth.edir_sso.sso_mode node and implements sophos.Node
type AuthEdirSsoSsoMode struct{ Value string }

// Get retrieves node auth.edir_sso.sso_mode's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoSsoMode) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthEdirSsoSsoMode(client)
	return err
}

// Update PUT's' auth.edir_sso.sso_mode's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoSsoMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthEdirSsoSsoMode(client, a.Value)
}

// AuthEdirSsoSsoServer represents the auth.edir_sso.sso_server node and implements sophos.Node
type AuthEdirSsoSsoServer struct{ Value string }

// Get retrieves node auth.edir_sso.sso_server's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoSsoServer) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthEdirSsoSsoServer(client)
	return err
}

// Update PUT's' auth.edir_sso.sso_server's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoSsoServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthEdirSsoSsoServer(client, a.Value)
}

// AuthEdirSsoSyncInterval represents the auth.edir_sso.sync_interval node and implements sophos.Node
type AuthEdirSsoSyncInterval struct{ Value int64 }

// Get retrieves node auth.edir_sso.sync_interval's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoSyncInterval) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthEdirSsoSyncInterval(client)
	return err
}

// Update PUT's' auth.edir_sso.sync_interval's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthEdirSsoSyncInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthEdirSsoSyncInterval(client, a.Value)
}

// AuthOtpAutoCreateToken represents the auth.otp.auto_create_token node and implements sophos.Node
type AuthOtpAutoCreateToken struct{ Value bool }

// Get retrieves node auth.otp.auto_create_token's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpAutoCreateToken) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthOtpAutoCreateToken(client)
	return err
}

// Update PUT's' auth.otp.auto_create_token's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpAutoCreateToken) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthOtpAutoCreateToken(client, a.Value)
}

// AuthOtpAutoTokenDigest represents the auth.otp.auto_token_digest node and implements sophos.Node
type AuthOtpAutoTokenDigest struct{ Value string }

// Get retrieves node auth.otp.auto_token_digest's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpAutoTokenDigest) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthOtpAutoTokenDigest(client)
	return err
}

// Update PUT's' auth.otp.auto_token_digest's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpAutoTokenDigest) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthOtpAutoTokenDigest(client, a.Value)
}

// AuthOtpDefaultTimestep represents the auth.otp.default_timestep node and implements sophos.Node
type AuthOtpDefaultTimestep struct{ Value int64 }

// Get retrieves node auth.otp.default_timestep's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpDefaultTimestep) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthOtpDefaultTimestep(client)
	return err
}

// Update PUT's' auth.otp.default_timestep's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpDefaultTimestep) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthOtpDefaultTimestep(client, a.Value)
}

// AuthOtpFacilities represents the auth.otp.facilities node and implements sophos.Node
type AuthOtpFacilities struct{ Value []string }

// Get retrieves node auth.otp.facilities's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpFacilities) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthOtpFacilities(client)
	return err
}

// Update PUT's' auth.otp.facilities's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpFacilities) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthOtpFacilities(client, a.Value)
}

// AuthOtpMaxInitTimestepDiff represents the auth.otp.max_init_timestep_diff node and implements sophos.Node
type AuthOtpMaxInitTimestepDiff struct{ Value int64 }

// Get retrieves node auth.otp.max_init_timestep_diff's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpMaxInitTimestepDiff) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthOtpMaxInitTimestepDiff(client)
	return err
}

// Update PUT's' auth.otp.max_init_timestep_diff's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpMaxInitTimestepDiff) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthOtpMaxInitTimestepDiff(client, a.Value)
}

// AuthOtpMaxTimestepDiff represents the auth.otp.max_timestep_diff node and implements sophos.Node
type AuthOtpMaxTimestepDiff struct{ Value int64 }

// Get retrieves node auth.otp.max_timestep_diff's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpMaxTimestepDiff) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthOtpMaxTimestepDiff(client)
	return err
}

// Update PUT's' auth.otp.max_timestep_diff's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpMaxTimestepDiff) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthOtpMaxTimestepDiff(client, a.Value)
}

// AuthOtpRequireAllUsers represents the auth.otp.require_all_users node and implements sophos.Node
type AuthOtpRequireAllUsers struct{ Value bool }

// Get retrieves node auth.otp.require_all_users's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpRequireAllUsers) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthOtpRequireAllUsers(client)
	return err
}

// Update PUT's' auth.otp.require_all_users's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpRequireAllUsers) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthOtpRequireAllUsers(client, a.Value)
}

// AuthOtpRequiredUsers represents the auth.otp.required_users node and implements sophos.Node
type AuthOtpRequiredUsers struct{ Value []interface{} }

// Get retrieves node auth.otp.required_users's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpRequiredUsers) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthOtpRequiredUsers(client)
	return err
}

// Update PUT's' auth.otp.required_users's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpRequiredUsers) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthOtpRequiredUsers(client, a.Value)
}

// AuthOtpStatus represents the auth.otp.status node and implements sophos.Node
type AuthOtpStatus struct{ Value bool }

// Get retrieves node auth.otp.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthOtpStatus(client)
	return err
}

// Update PUT's' auth.otp.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthOtpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthOtpStatus(client, a.Value)
}

// AuthServers represents the auth.servers node and implements sophos.Node
type AuthServers struct{ Value []interface{} }

// Get retrieves node auth.servers's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthServers) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthServers(client)
	return err
}

// Update PUT's' auth.servers's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthServers(client, a.Value)
}

// AuthUpdateBackendGroupMembersDebug represents the auth.update_backend_group_members.debug node and implements sophos.Node
type AuthUpdateBackendGroupMembersDebug struct{ Value bool }

// Get retrieves node auth.update_backend_group_members.debug's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthUpdateBackendGroupMembersDebug) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthUpdateBackendGroupMembersDebug(client)
	return err
}

// Update PUT's' auth.update_backend_group_members.debug's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthUpdateBackendGroupMembersDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthUpdateBackendGroupMembersDebug(client, a.Value)
}

// AuthUpdateBackendGroupMembersStatus represents the auth.update_backend_group_members.status node and implements sophos.Node
type AuthUpdateBackendGroupMembersStatus struct{ Value bool }

// Get retrieves node auth.update_backend_group_members.status's value from the gateway utilizing a sophos.ClientInterface
func (a *AuthUpdateBackendGroupMembersStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAuthUpdateBackendGroupMembersStatus(client)
	return err
}

// Update PUT's' auth.update_backend_group_members.status's value to the gateway utilizing a sophos.ClientInterface
func (a *AuthUpdateBackendGroupMembersStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAuthUpdateBackendGroupMembersStatus(client, a.Value)
}

// AweAllowedInterfaces represents the awe.allowed_interfaces node and implements sophos.Node
type AweAllowedInterfaces struct{ Value []interface{} }

// Get retrieves node awe.allowed_interfaces's value from the gateway utilizing a sophos.ClientInterface
func (a *AweAllowedInterfaces) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweAllowedInterfaces(client)
	return err
}

// Update PUT's' awe.allowed_interfaces's value to the gateway utilizing a sophos.ClientInterface
func (a *AweAllowedInterfaces) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweAllowedInterfaces(client, a.Value)
}

// AweClients represents the awe.clients node and implements sophos.Node
type AweClients struct{ Value []interface{} }

// Get retrieves node awe.clients's value from the gateway utilizing a sophos.ClientInterface
func (a *AweClients) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweClients(client)
	return err
}

// Update PUT's' awe.clients's value to the gateway utilizing a sophos.ClientInterface
func (a *AweClients) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweClients(client, a.Value)
}

// AweDevices represents the awe.devices node and implements sophos.Node
type AweDevices struct{ Value []interface{} }

// Get retrieves node awe.devices's value from the gateway utilizing a sophos.ClientInterface
func (a *AweDevices) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweDevices(client)
	return err
}

// Update PUT's' awe.devices's value to the gateway utilizing a sophos.ClientInterface
func (a *AweDevices) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweDevices(client, a.Value)
}

// AweGlobalApAutoaccept represents the awe.global.ap_autoaccept node and implements sophos.Node
type AweGlobalApAutoaccept struct{ Value bool }

// Get retrieves node awe.global.ap_autoaccept's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalApAutoaccept) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalApAutoaccept(client)
	return err
}

// Update PUT's' awe.global.ap_autoaccept's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalApAutoaccept) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalApAutoaccept(client, a.Value)
}

// AweGlobalApDebuglevel represents the awe.global.ap_debuglevel node and implements sophos.Node
type AweGlobalApDebuglevel struct{ Value map[string]interface{} }

// Get retrieves node awe.global.ap_debuglevel's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalApDebuglevel) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalApDebuglevel(client)
	return err
}

// Update PUT's' awe.global.ap_debuglevel's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalApDebuglevel) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalApDebuglevel(client, a.Value)
}

// AweGlobalApSoftlimit represents the awe.global.ap_softlimit node and implements sophos.Node
type AweGlobalApSoftlimit struct{ Value int64 }

// Get retrieves node awe.global.ap_softlimit's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalApSoftlimit) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalApSoftlimit(client)
	return err
}

// Update PUT's' awe.global.ap_softlimit's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalApSoftlimit) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalApSoftlimit(client, a.Value)
}

// AweGlobalApVlantag represents the awe.global.ap_vlantag node and implements sophos.Node
type AweGlobalApVlantag struct{ Value int64 }

// Get retrieves node awe.global.ap_vlantag's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalApVlantag) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalApVlantag(client)
	return err
}

// Update PUT's' awe.global.ap_vlantag's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalApVlantag) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalApVlantag(client, a.Value)
}

// AweGlobalAweStatus represents the awe.global.awe_status node and implements sophos.Node
type AweGlobalAweStatus struct{ Value map[string]interface{} }

// Get retrieves node awe.global.awe_status's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalAweStatus) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalAweStatus(client)
	return err
}

// Update PUT's' awe.global.awe_status's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalAweStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalAweStatus(client, a.Value)
}

// AweGlobalBridgeUpdateKickout represents the awe.global.bridge_update_kickout node and implements sophos.Node
type AweGlobalBridgeUpdateKickout struct{ Value bool }

// Get retrieves node awe.global.bridge_update_kickout's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalBridgeUpdateKickout) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalBridgeUpdateKickout(client)
	return err
}

// Update PUT's' awe.global.bridge_update_kickout's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalBridgeUpdateKickout) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalBridgeUpdateKickout(client, a.Value)
}

// AweGlobalInitialSetup represents the awe.global.initial_setup node and implements sophos.Node
type AweGlobalInitialSetup struct{ Value bool }

// Get retrieves node awe.global.initial_setup's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalInitialSetup) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalInitialSetup(client)
	return err
}

// Update PUT's' awe.global.initial_setup's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalInitialSetup) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalInitialSetup(client, a.Value)
}

// AweGlobalLogLevel represents the awe.global.log_level node and implements sophos.Node
type AweGlobalLogLevel struct{ Value int64 }

// Get retrieves node awe.global.log_level's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalLogLevel) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalLogLevel(client)
	return err
}

// Update PUT's' awe.global.log_level's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalLogLevel) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalLogLevel(client, a.Value)
}

// AweGlobalMagicIp represents the awe.global.magic_ip node and implements sophos.Node
type AweGlobalMagicIp struct{ Value string }

// Get retrieves node awe.global.magic_ip's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalMagicIp) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalMagicIp(client)
	return err
}

// Update PUT's' awe.global.magic_ip's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalMagicIp) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalMagicIp(client, a.Value)
}

// AweGlobalNotificationTimeout represents the awe.global.notification_timeout node and implements sophos.Node
type AweGlobalNotificationTimeout struct{ Value int64 }

// Get retrieves node awe.global.notification_timeout's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalNotificationTimeout) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalNotificationTimeout(client)
	return err
}

// Update PUT's' awe.global.notification_timeout's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalNotificationTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalNotificationTimeout(client, a.Value)
}

// AweGlobalRadiusConf represents the awe.global.radius_conf node and implements sophos.Node
type AweGlobalRadiusConf struct{ Value string }

// Get retrieves node awe.global.radius_conf's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalRadiusConf) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalRadiusConf(client)
	return err
}

// Update PUT's' awe.global.radius_conf's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalRadiusConf) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalRadiusConf(client, a.Value)
}

// AweGlobalRootpw represents the awe.global.rootpw node and implements sophos.Node
type AweGlobalRootpw struct{ Value string }

// Get retrieves node awe.global.rootpw's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalRootpw) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalRootpw(client)
	return err
}

// Update PUT's' awe.global.rootpw's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalRootpw) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalRootpw(client, a.Value)
}

// AweGlobalStayOnline represents the awe.global.stay_online node and implements sophos.Node
type AweGlobalStayOnline struct{ Value bool }

// Get retrieves node awe.global.stay_online's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalStayOnline) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalStayOnline(client)
	return err
}

// Update PUT's' awe.global.stay_online's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalStayOnline) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalStayOnline(client, a.Value)
}

// AweGlobalStoreBssStats represents the awe.global.store_bss_stats node and implements sophos.Node
type AweGlobalStoreBssStats struct{ Value bool }

// Get retrieves node awe.global.store_bss_stats's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalStoreBssStats) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalStoreBssStats(client)
	return err
}

// Update PUT's' awe.global.store_bss_stats's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalStoreBssStats) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalStoreBssStats(client, a.Value)
}

// AweGlobalTunnelIdOffset represents the awe.global.tunnel_id_offset node and implements sophos.Node
type AweGlobalTunnelIdOffset struct{ Value int64 }

// Get retrieves node awe.global.tunnel_id_offset's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalTunnelIdOffset) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalTunnelIdOffset(client)
	return err
}

// Update PUT's' awe.global.tunnel_id_offset's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalTunnelIdOffset) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalTunnelIdOffset(client, a.Value)
}

// AweGlobalVlantagging represents the awe.global.vlantagging node and implements sophos.Node
type AweGlobalVlantagging struct{ Value bool }

// Get retrieves node awe.global.vlantagging's value from the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalVlantagging) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweGlobalVlantagging(client)
	return err
}

// Update PUT's' awe.global.vlantagging's value to the gateway utilizing a sophos.ClientInterface
func (a *AweGlobalVlantagging) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweGlobalVlantagging(client, a.Value)
}

// AweNetworks represents the awe.networks node and implements sophos.Node
type AweNetworks struct{ Value []string }

// Get retrieves node awe.networks's value from the gateway utilizing a sophos.ClientInterface
func (a *AweNetworks) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAweNetworks(client)
	return err
}

// Update PUT's' awe.networks's value to the gateway utilizing a sophos.ClientInterface
func (a *AweNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateAweNetworks(client, a.Value)
}

// AwscliProfiles represents the awscli.profiles node and implements sophos.Node
type AwscliProfiles struct{ Value []interface{} }

// Get retrieves node awscli.profiles's value from the gateway utilizing a sophos.ClientInterface
func (a *AwscliProfiles) Get(client sophos.ClientInterface) (err error) {
	a.Value, err = GetAwscliProfiles(client)
	return err
}

// Update PUT's' awscli.profiles's value to the gateway utilizing a sophos.ClientInterface
func (a *AwscliProfiles) Update(client sophos.ClientInterface) (err error) {
	return UpdateAwscliProfiles(client, a.Value)
}

// BackupEncryption represents the backup.encryption node and implements sophos.Node
type BackupEncryption struct{ Value bool }

// Get retrieves node backup.encryption's value from the gateway utilizing a sophos.ClientInterface
func (b *BackupEncryption) Get(client sophos.ClientInterface) (err error) {
	b.Value, err = GetBackupEncryption(client)
	return err
}

// Update PUT's' backup.encryption's value to the gateway utilizing a sophos.ClientInterface
func (b *BackupEncryption) Update(client sophos.ClientInterface) (err error) {
	return UpdateBackupEncryption(client, b.Value)
}

// BackupInterval represents the backup.interval node and implements sophos.Node
type BackupInterval struct{ Value string }

// Get retrieves node backup.interval's value from the gateway utilizing a sophos.ClientInterface
func (b *BackupInterval) Get(client sophos.ClientInterface) (err error) {
	b.Value, err = GetBackupInterval(client)
	return err
}

// Update PUT's' backup.interval's value to the gateway utilizing a sophos.ClientInterface
func (b *BackupInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateBackupInterval(client, b.Value)
}

// BackupMaxBackups represents the backup.max_backups node and implements sophos.Node
type BackupMaxBackups struct{ Value int64 }

// Get retrieves node backup.max_backups's value from the gateway utilizing a sophos.ClientInterface
func (b *BackupMaxBackups) Get(client sophos.ClientInterface) (err error) {
	b.Value, err = GetBackupMaxBackups(client)
	return err
}

// Update PUT's' backup.max_backups's value to the gateway utilizing a sophos.ClientInterface
func (b *BackupMaxBackups) Update(client sophos.ClientInterface) (err error) {
	return UpdateBackupMaxBackups(client, b.Value)
}

// BackupPassword represents the backup.password node and implements sophos.Node
type BackupPassword struct{ Value string }

// Get retrieves node backup.password's value from the gateway utilizing a sophos.ClientInterface
func (b *BackupPassword) Get(client sophos.ClientInterface) (err error) {
	b.Value, err = GetBackupPassword(client)
	return err
}

// Update PUT's' backup.password's value to the gateway utilizing a sophos.ClientInterface
func (b *BackupPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateBackupPassword(client, b.Value)
}

// BackupRecipients represents the backup.recipients node and implements sophos.Node
type BackupRecipients struct{ Value []string }

// Get retrieves node backup.recipients's value from the gateway utilizing a sophos.ClientInterface
func (b *BackupRecipients) Get(client sophos.ClientInterface) (err error) {
	b.Value, err = GetBackupRecipients(client)
	return err
}

// Update PUT's' backup.recipients's value to the gateway utilizing a sophos.ClientInterface
func (b *BackupRecipients) Update(client sophos.ClientInterface) (err error) {
	return UpdateBackupRecipients(client, b.Value)
}

// BackupStatus represents the backup.status node and implements sophos.Node
type BackupStatus struct{ Value bool }

// Get retrieves node backup.status's value from the gateway utilizing a sophos.ClientInterface
func (b *BackupStatus) Get(client sophos.ClientInterface) (err error) {
	b.Value, err = GetBackupStatus(client)
	return err
}

// Update PUT's' backup.status's value to the gateway utilizing a sophos.ClientInterface
func (b *BackupStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateBackupStatus(client, b.Value)
}

// CaCaGost represents the ca.ca_gost node and implements sophos.Node
type CaCaGost struct{ Value string }

// Get retrieves node ca.ca_gost's value from the gateway utilizing a sophos.ClientInterface
func (c *CaCaGost) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaCaGost(client)
	return err
}

// Update PUT's' ca.ca_gost's value to the gateway utilizing a sophos.ClientInterface
func (c *CaCaGost) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaCaGost(client, c.Value)
}

// CaCaIpsec represents the ca.ca_ipsec node and implements sophos.Node
type CaCaIpsec struct{ Value string }

// Get retrieves node ca.ca_ipsec's value from the gateway utilizing a sophos.ClientInterface
func (c *CaCaIpsec) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaCaIpsec(client)
	return err
}

// Update PUT's' ca.ca_ipsec's value to the gateway utilizing a sophos.ClientInterface
func (c *CaCaIpsec) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaCaIpsec(client, c.Value)
}

// CaCaProxies represents the ca.ca_proxies node and implements sophos.Node
type CaCaProxies struct{ Value string }

// Get retrieves node ca.ca_proxies's value from the gateway utilizing a sophos.ClientInterface
func (c *CaCaProxies) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaCaProxies(client)
	return err
}

// Update PUT's' ca.ca_proxies's value to the gateway utilizing a sophos.ClientInterface
func (c *CaCaProxies) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaCaProxies(client, c.Value)
}

// CaCaRed represents the ca.ca_red node and implements sophos.Node
type CaCaRed struct{ Value string }

// Get retrieves node ca.ca_red's value from the gateway utilizing a sophos.ClientInterface
func (c *CaCaRed) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaCaRed(client)
	return err
}

// Update PUT's' ca.ca_red's value to the gateway utilizing a sophos.ClientInterface
func (c *CaCaRed) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaCaRed(client, c.Value)
}

// CaDefKeysize represents the ca.def_keysize node and implements sophos.Node
type CaDefKeysize struct{ Value int64 }

// Get retrieves node ca.def_keysize's value from the gateway utilizing a sophos.ClientInterface
func (c *CaDefKeysize) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaDefKeysize(client)
	return err
}

// Update PUT's' ca.def_keysize's value to the gateway utilizing a sophos.ClientInterface
func (c *CaDefKeysize) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaDefKeysize(client, c.Value)
}

// CaGlobalCasEmailEncryptionTrustNewCas represents the ca.global_cas.email_encryption.trust_new_cas node and implements sophos.Node
type CaGlobalCasEmailEncryptionTrustNewCas struct{ Value bool }

// Get retrieves node ca.global_cas.email_encryption.trust_new_cas's value from the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasEmailEncryptionTrustNewCas) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaGlobalCasEmailEncryptionTrustNewCas(client)
	return err
}

// Update PUT's' ca.global_cas.email_encryption.trust_new_cas's value to the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasEmailEncryptionTrustNewCas) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaGlobalCasEmailEncryptionTrustNewCas(client, c.Value)
}

// CaGlobalCasEmailEncryptionTrusted represents the ca.global_cas.email_encryption.trusted node and implements sophos.Node
type CaGlobalCasEmailEncryptionTrusted struct{ Value []interface{} }

// Get retrieves node ca.global_cas.email_encryption.trusted's value from the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasEmailEncryptionTrusted) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaGlobalCasEmailEncryptionTrusted(client)
	return err
}

// Update PUT's' ca.global_cas.email_encryption.trusted's value to the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasEmailEncryptionTrusted) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaGlobalCasEmailEncryptionTrusted(client, c.Value)
}

// CaGlobalCasEmailEncryptionUntrusted represents the ca.global_cas.email_encryption.untrusted node and implements sophos.Node
type CaGlobalCasEmailEncryptionUntrusted struct{ Value []interface{} }

// Get retrieves node ca.global_cas.email_encryption.untrusted's value from the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasEmailEncryptionUntrusted) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaGlobalCasEmailEncryptionUntrusted(client)
	return err
}

// Update PUT's' ca.global_cas.email_encryption.untrusted's value to the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasEmailEncryptionUntrusted) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaGlobalCasEmailEncryptionUntrusted(client, c.Value)
}

// CaGlobalCasHttpProxyTrustNewCas represents the ca.global_cas.http_proxy.trust_new_cas node and implements sophos.Node
type CaGlobalCasHttpProxyTrustNewCas struct{ Value bool }

// Get retrieves node ca.global_cas.http_proxy.trust_new_cas's value from the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasHttpProxyTrustNewCas) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaGlobalCasHttpProxyTrustNewCas(client)
	return err
}

// Update PUT's' ca.global_cas.http_proxy.trust_new_cas's value to the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasHttpProxyTrustNewCas) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaGlobalCasHttpProxyTrustNewCas(client, c.Value)
}

// CaGlobalCasHttpProxyTrusted represents the ca.global_cas.http_proxy.trusted node and implements sophos.Node
type CaGlobalCasHttpProxyTrusted struct{ Value []interface{} }

// Get retrieves node ca.global_cas.http_proxy.trusted's value from the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasHttpProxyTrusted) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaGlobalCasHttpProxyTrusted(client)
	return err
}

// Update PUT's' ca.global_cas.http_proxy.trusted's value to the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasHttpProxyTrusted) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaGlobalCasHttpProxyTrusted(client, c.Value)
}

// CaGlobalCasHttpProxyUntrusted represents the ca.global_cas.http_proxy.untrusted node and implements sophos.Node
type CaGlobalCasHttpProxyUntrusted struct{ Value []interface{} }

// Get retrieves node ca.global_cas.http_proxy.untrusted's value from the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasHttpProxyUntrusted) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCaGlobalCasHttpProxyUntrusted(client)
	return err
}

// Update PUT's' ca.global_cas.http_proxy.untrusted's value to the gateway utilizing a sophos.ClientInterface
func (c *CaGlobalCasHttpProxyUntrusted) Update(client sophos.ClientInterface) (err error) {
	return UpdateCaGlobalCasHttpProxyUntrusted(client, c.Value)
}

// CrlsCrls represents the crls.crls node and implements sophos.Node
type CrlsCrls struct{ Value []interface{} }

// Get retrieves node crls.crls's value from the gateway utilizing a sophos.ClientInterface
func (c *CrlsCrls) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCrlsCrls(client)
	return err
}

// Update PUT's' crls.crls's value to the gateway utilizing a sophos.ClientInterface
func (c *CrlsCrls) Update(client sophos.ClientInterface) (err error) {
	return UpdateCrlsCrls(client, c.Value)
}

// CssAvPrimaryEngine represents the css.av_primary_engine node and implements sophos.Node
type CssAvPrimaryEngine struct{ Value string }

// Get retrieves node css.av_primary_engine's value from the gateway utilizing a sophos.ClientInterface
func (c *CssAvPrimaryEngine) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCssAvPrimaryEngine(client)
	return err
}

// Update PUT's' css.av_primary_engine's value to the gateway utilizing a sophos.ClientInterface
func (c *CssAvPrimaryEngine) Update(client sophos.ClientInterface) (err error) {
	return UpdateCssAvPrimaryEngine(client, c.Value)
}

// CssSxlLiveprotection represents the css.sxl_liveprotection node and implements sophos.Node
type CssSxlLiveprotection struct{ Value bool }

// Get retrieves node css.sxl_liveprotection's value from the gateway utilizing a sophos.ClientInterface
func (c *CssSxlLiveprotection) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCssSxlLiveprotection(client)
	return err
}

// Update PUT's' css.sxl_liveprotection's value to the gateway utilizing a sophos.ClientInterface
func (c *CssSxlLiveprotection) Update(client sophos.ClientInterface) (err error) {
	return UpdateCssSxlLiveprotection(client, c.Value)
}

// CssSxlSampleSubmit represents the css.sxl_sample_submit node and implements sophos.Node
type CssSxlSampleSubmit struct{ Value bool }

// Get retrieves node css.sxl_sample_submit's value from the gateway utilizing a sophos.ClientInterface
func (c *CssSxlSampleSubmit) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCssSxlSampleSubmit(client)
	return err
}

// Update PUT's' css.sxl_sample_submit's value to the gateway utilizing a sophos.ClientInterface
func (c *CssSxlSampleSubmit) Update(client sophos.ClientInterface) (err error) {
	return UpdateCssSxlSampleSubmit(client, c.Value)
}

// CustomizationEppLastUpdated represents the customization.epp.last_updated node and implements sophos.Node
type CustomizationEppLastUpdated struct{ Value int64 }

// Get retrieves node customization.epp.last_updated's value from the gateway utilizing a sophos.ClientInterface
func (c *CustomizationEppLastUpdated) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCustomizationEppLastUpdated(client)
	return err
}

// Update PUT's' customization.epp.last_updated's value to the gateway utilizing a sophos.ClientInterface
func (c *CustomizationEppLastUpdated) Update(client sophos.ClientInterface) (err error) {
	return UpdateCustomizationEppLastUpdated(client, c.Value)
}

// CustomizationEppResourcesRoot represents the customization.epp.resources_root node and implements sophos.Node
type CustomizationEppResourcesRoot struct{ Value string }

// Get retrieves node customization.epp.resources_root's value from the gateway utilizing a sophos.ClientInterface
func (c *CustomizationEppResourcesRoot) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCustomizationEppResourcesRoot(client)
	return err
}

// Update PUT's' customization.epp.resources_root's value to the gateway utilizing a sophos.ClientInterface
func (c *CustomizationEppResourcesRoot) Update(client sophos.ClientInterface) (err error) {
	return UpdateCustomizationEppResourcesRoot(client, c.Value)
}

// CustomizationHttpCustomAssets represents the customization.http.custom_assets node and implements sophos.Node
type CustomizationHttpCustomAssets struct{ Value map[string]interface{} }

// Get retrieves node customization.http.custom_assets's value from the gateway utilizing a sophos.ClientInterface
func (c *CustomizationHttpCustomAssets) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCustomizationHttpCustomAssets(client)
	return err
}

// Update PUT's' customization.http.custom_assets's value to the gateway utilizing a sophos.ClientInterface
func (c *CustomizationHttpCustomAssets) Update(client sophos.ClientInterface) (err error) {
	return UpdateCustomizationHttpCustomAssets(client, c.Value)
}

// CustomizationHttpCustomTemplates represents the customization.http.custom_templates node and implements sophos.Node
type CustomizationHttpCustomTemplates struct{ Value map[string]interface{} }

// Get retrieves node customization.http.custom_templates's value from the gateway utilizing a sophos.ClientInterface
func (c *CustomizationHttpCustomTemplates) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCustomizationHttpCustomTemplates(client)
	return err
}

// Update PUT's' customization.http.custom_templates's value to the gateway utilizing a sophos.ClientInterface
func (c *CustomizationHttpCustomTemplates) Update(client sophos.ClientInterface) (err error) {
	return UpdateCustomizationHttpCustomTemplates(client, c.Value)
}

// CustomizationHttpLastUpdated represents the customization.http.last_updated node and implements sophos.Node
type CustomizationHttpLastUpdated struct{ Value int64 }

// Get retrieves node customization.http.last_updated's value from the gateway utilizing a sophos.ClientInterface
func (c *CustomizationHttpLastUpdated) Get(client sophos.ClientInterface) (err error) {
	c.Value, err = GetCustomizationHttpLastUpdated(client)
	return err
}

// Update PUT's' customization.http.last_updated's value to the gateway utilizing a sophos.ClientInterface
func (c *CustomizationHttpLastUpdated) Update(client sophos.ClientInterface) (err error) {
	return UpdateCustomizationHttpLastUpdated(client, c.Value)
}

// DebugmodeCrashReport represents the debugmode.crash_report node and implements sophos.Node
type DebugmodeCrashReport struct{ Value bool }

// Get retrieves node debugmode.crash_report's value from the gateway utilizing a sophos.ClientInterface
func (d *DebugmodeCrashReport) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDebugmodeCrashReport(client)
	return err
}

// Update PUT's' debugmode.crash_report's value to the gateway utilizing a sophos.ClientInterface
func (d *DebugmodeCrashReport) Update(client sophos.ClientInterface) (err error) {
	return UpdateDebugmodeCrashReport(client, d.Value)
}

// DebugmodeEnabled represents the debugmode.enabled node and implements sophos.Node
type DebugmodeEnabled struct{ Value bool }

// Get retrieves node debugmode.enabled's value from the gateway utilizing a sophos.ClientInterface
func (d *DebugmodeEnabled) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDebugmodeEnabled(client)
	return err
}

// Update PUT's' debugmode.enabled's value to the gateway utilizing a sophos.ClientInterface
func (d *DebugmodeEnabled) Update(client sophos.ClientInterface) (err error) {
	return UpdateDebugmodeEnabled(client, d.Value)
}

// DhcpRelayDhcpServer represents the dhcp.relay.dhcp_server node and implements sophos.Node
type DhcpRelayDhcpServer struct{ Value string }

// Get retrieves node dhcp.relay.dhcp_server's value from the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelayDhcpServer) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDhcpRelayDhcpServer(client)
	return err
}

// Update PUT's' dhcp.relay.dhcp_server's value to the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelayDhcpServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateDhcpRelayDhcpServer(client, d.Value)
}

// DhcpRelayInterfaces represents the dhcp.relay.interfaces node and implements sophos.Node
type DhcpRelayInterfaces struct{ Value []interface{} }

// Get retrieves node dhcp.relay.interfaces's value from the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelayInterfaces) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDhcpRelayInterfaces(client)
	return err
}

// Update PUT's' dhcp.relay.interfaces's value to the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelayInterfaces) Update(client sophos.ClientInterface) (err error) {
	return UpdateDhcpRelayInterfaces(client, d.Value)
}

// DhcpRelayStatus represents the dhcp.relay.status node and implements sophos.Node
type DhcpRelayStatus struct{ Value bool }

// Get retrieves node dhcp.relay.status's value from the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelayStatus) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDhcpRelayStatus(client)
	return err
}

// Update PUT's' dhcp.relay.status's value to the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelayStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateDhcpRelayStatus(client, d.Value)
}

// DhcpRelay6ItfsFacingClients represents the dhcp.relay6.itfs_facing_clients node and implements sophos.Node
type DhcpRelay6ItfsFacingClients struct{ Value []interface{} }

// Get retrieves node dhcp.relay6.itfs_facing_clients's value from the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelay6ItfsFacingClients) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDhcpRelay6ItfsFacingClients(client)
	return err
}

// Update PUT's' dhcp.relay6.itfs_facing_clients's value to the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelay6ItfsFacingClients) Update(client sophos.ClientInterface) (err error) {
	return UpdateDhcpRelay6ItfsFacingClients(client, d.Value)
}

// DhcpRelay6ItfsFacingServer6 represents the dhcp.relay6.itfs_facing_server6 node and implements sophos.Node
type DhcpRelay6ItfsFacingServer6 struct{ Value []interface{} }

// Get retrieves node dhcp.relay6.itfs_facing_server6's value from the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelay6ItfsFacingServer6) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDhcpRelay6ItfsFacingServer6(client)
	return err
}

// Update PUT's' dhcp.relay6.itfs_facing_server6's value to the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelay6ItfsFacingServer6) Update(client sophos.ClientInterface) (err error) {
	return UpdateDhcpRelay6ItfsFacingServer6(client, d.Value)
}

// DhcpRelay6Status represents the dhcp.relay6.status node and implements sophos.Node
type DhcpRelay6Status struct{ Value bool }

// Get retrieves node dhcp.relay6.status's value from the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelay6Status) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDhcpRelay6Status(client)
	return err
}

// Update PUT's' dhcp.relay6.status's value to the gateway utilizing a sophos.ClientInterface
func (d *DhcpRelay6Status) Update(client sophos.ClientInterface) (err error) {
	return UpdateDhcpRelay6Status(client, d.Value)
}

// DhcpServerCustom4 represents the dhcp.server.custom4 node and implements sophos.Node
type DhcpServerCustom4 struct{ Value string }

// Get retrieves node dhcp.server.custom4's value from the gateway utilizing a sophos.ClientInterface
func (d *DhcpServerCustom4) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDhcpServerCustom4(client)
	return err
}

// Update PUT's' dhcp.server.custom4's value to the gateway utilizing a sophos.ClientInterface
func (d *DhcpServerCustom4) Update(client sophos.ClientInterface) (err error) {
	return UpdateDhcpServerCustom4(client, d.Value)
}

// DhcpServerCustom6 represents the dhcp.server.custom6 node and implements sophos.Node
type DhcpServerCustom6 struct{ Value string }

// Get retrieves node dhcp.server.custom6's value from the gateway utilizing a sophos.ClientInterface
func (d *DhcpServerCustom6) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDhcpServerCustom6(client)
	return err
}

// Update PUT's' dhcp.server.custom6's value to the gateway utilizing a sophos.ClientInterface
func (d *DhcpServerCustom6) Update(client sophos.ClientInterface) (err error) {
	return UpdateDhcpServerCustom6(client, d.Value)
}

// DhcpServerServers represents the dhcp.server.servers node and implements sophos.Node
type DhcpServerServers struct{ Value []string }

// Get retrieves node dhcp.server.servers's value from the gateway utilizing a sophos.ClientInterface
func (d *DhcpServerServers) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDhcpServerServers(client)
	return err
}

// Update PUT's' dhcp.server.servers's value to the gateway utilizing a sophos.ClientInterface
func (d *DhcpServerServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateDhcpServerServers(client, d.Value)
}

// DigestAllowedNetworks represents the digest.allowed_networks node and implements sophos.Node
type DigestAllowedNetworks struct{ Value []interface{} }

// Get retrieves node digest.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestAllowedNetworks(client)
	return err
}

// Update PUT's' digest.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestAllowedNetworks(client, d.Value)
}

// DigestCustomText represents the digest.custom_text node and implements sophos.Node
type DigestCustomText struct{ Value string }

// Get retrieves node digest.custom_text's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestCustomText) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestCustomText(client)
	return err
}

// Update PUT's' digest.custom_text's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestCustomText) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestCustomText(client, d.Value)
}

// DigestDomains represents the digest.domains node and implements sophos.Node
type DigestDomains struct{ Value []string }

// Get retrieves node digest.domains's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestDomains) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestDomains(client)
	return err
}

// Update PUT's' digest.domains's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestDomains) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestDomains(client, d.Value)
}

// DigestHostname represents the digest.hostname node and implements sophos.Node
type DigestHostname struct{ Value string }

// Get retrieves node digest.hostname's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestHostname) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestHostname(client)
	return err
}

// Update PUT's' digest.hostname's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestHostname(client, d.Value)
}

// DigestMailinglists represents the digest.mailinglists node and implements sophos.Node
type DigestMailinglists struct{ Value []interface{} }

// Get retrieves node digest.mailinglists's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestMailinglists) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestMailinglists(client)
	return err
}

// Update PUT's' digest.mailinglists's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestMailinglists) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestMailinglists(client, d.Value)
}

// DigestPort represents the digest.port node and implements sophos.Node
type DigestPort struct{ Value int64 }

// Get retrieves node digest.port's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestPort) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestPort(client)
	return err
}

// Update PUT's' digest.port's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestPort(client, d.Value)
}

// DigestSendTimeOne represents the digest.send_time_one node and implements sophos.Node
type DigestSendTimeOne struct{ Value string }

// Get retrieves node digest.send_time_one's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestSendTimeOne) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestSendTimeOne(client)
	return err
}

// Update PUT's' digest.send_time_one's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestSendTimeOne) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestSendTimeOne(client, d.Value)
}

// DigestSendTimeTwo represents the digest.send_time_two node and implements sophos.Node
type DigestSendTimeTwo struct{ Value string }

// Get retrieves node digest.send_time_two's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestSendTimeTwo) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestSendTimeTwo(client)
	return err
}

// Update PUT's' digest.send_time_two's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestSendTimeTwo) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestSendTimeTwo(client, d.Value)
}

// DigestSkiplist represents the digest.skiplist node and implements sophos.Node
type DigestSkiplist struct{ Value []interface{} }

// Get retrieves node digest.skiplist's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestSkiplist) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestSkiplist(client)
	return err
}

// Update PUT's' digest.skiplist's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestSkiplist) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestSkiplist(client, d.Value)
}

// DigestStatus represents the digest.status node and implements sophos.Node
type DigestStatus struct{ Value bool }

// Get retrieves node digest.status's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestStatus) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestStatus(client)
	return err
}

// Update PUT's' digest.status's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestStatus(client, d.Value)
}

// DigestUserRelease represents the digest.user_release node and implements sophos.Node
type DigestUserRelease struct{ Value []string }

// Get retrieves node digest.user_release's value from the gateway utilizing a sophos.ClientInterface
func (d *DigestUserRelease) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDigestUserRelease(client)
	return err
}

// Update PUT's' digest.user_release's value to the gateway utilizing a sophos.ClientInterface
func (d *DigestUserRelease) Update(client sophos.ClientInterface) (err error) {
	return UpdateDigestUserRelease(client, d.Value)
}

// DnsAllowedNetworks represents the dns.allowed_networks node and implements sophos.Node
type DnsAllowedNetworks struct{ Value []string }

// Get retrieves node dns.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (d *DnsAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDnsAllowedNetworks(client)
	return err
}

// Update PUT's' dns.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (d *DnsAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateDnsAllowedNetworks(client, d.Value)
}

// DnsAxfr represents the dns.axfr node and implements sophos.Node
type DnsAxfr struct{ Value []interface{} }

// Get retrieves node dns.axfr's value from the gateway utilizing a sophos.ClientInterface
func (d *DnsAxfr) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDnsAxfr(client)
	return err
}

// Update PUT's' dns.axfr's value to the gateway utilizing a sophos.ClientInterface
func (d *DnsAxfr) Update(client sophos.ClientInterface) (err error) {
	return UpdateDnsAxfr(client, d.Value)
}

// DnsDnssec represents the dns.dnssec node and implements sophos.Node
type DnsDnssec struct{ Value bool }

// Get retrieves node dns.dnssec's value from the gateway utilizing a sophos.ClientInterface
func (d *DnsDnssec) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDnsDnssec(client)
	return err
}

// Update PUT's' dns.dnssec's value to the gateway utilizing a sophos.ClientInterface
func (d *DnsDnssec) Update(client sophos.ClientInterface) (err error) {
	return UpdateDnsDnssec(client, d.Value)
}

// DnsEmail represents the dns.email node and implements sophos.Node
type DnsEmail struct{ Value string }

// Get retrieves node dns.email's value from the gateway utilizing a sophos.ClientInterface
func (d *DnsEmail) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDnsEmail(client)
	return err
}

// Update PUT's' dns.email's value to the gateway utilizing a sophos.ClientInterface
func (d *DnsEmail) Update(client sophos.ClientInterface) (err error) {
	return UpdateDnsEmail(client, d.Value)
}

// DnsEmptyZones represents the dns.empty_zones node and implements sophos.Node
type DnsEmptyZones struct{ Value string }

// Get retrieves node dns.empty_zones's value from the gateway utilizing a sophos.ClientInterface
func (d *DnsEmptyZones) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDnsEmptyZones(client)
	return err
}

// Update PUT's' dns.empty_zones's value to the gateway utilizing a sophos.ClientInterface
func (d *DnsEmptyZones) Update(client sophos.ClientInterface) (err error) {
	return UpdateDnsEmptyZones(client, d.Value)
}

// DnsFwdDynamic represents the dns.fwd_dynamic node and implements sophos.Node
type DnsFwdDynamic struct{ Value bool }

// Get retrieves node dns.fwd_dynamic's value from the gateway utilizing a sophos.ClientInterface
func (d *DnsFwdDynamic) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDnsFwdDynamic(client)
	return err
}

// Update PUT's' dns.fwd_dynamic's value to the gateway utilizing a sophos.ClientInterface
func (d *DnsFwdDynamic) Update(client sophos.ClientInterface) (err error) {
	return UpdateDnsFwdDynamic(client, d.Value)
}

// DnsFwdStatic represents the dns.fwd_static node and implements sophos.Node
type DnsFwdStatic struct{ Value []string }

// Get retrieves node dns.fwd_static's value from the gateway utilizing a sophos.ClientInterface
func (d *DnsFwdStatic) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDnsFwdStatic(client)
	return err
}

// Update PUT's' dns.fwd_static's value to the gateway utilizing a sophos.ClientInterface
func (d *DnsFwdStatic) Update(client sophos.ClientInterface) (err error) {
	return UpdateDnsFwdStatic(client, d.Value)
}

// DnsRecheckInterval represents the dns.recheck_interval node and implements sophos.Node
type DnsRecheckInterval struct{ Value int64 }

// Get retrieves node dns.recheck_interval's value from the gateway utilizing a sophos.ClientInterface
func (d *DnsRecheckInterval) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDnsRecheckInterval(client)
	return err
}

// Update PUT's' dns.recheck_interval's value to the gateway utilizing a sophos.ClientInterface
func (d *DnsRecheckInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateDnsRecheckInterval(client, d.Value)
}

// DnsRoutes represents the dns.routes node and implements sophos.Node
type DnsRoutes struct{ Value []string }

// Get retrieves node dns.routes's value from the gateway utilizing a sophos.ClientInterface
func (d *DnsRoutes) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDnsRoutes(client)
	return err
}

// Update PUT's' dns.routes's value to the gateway utilizing a sophos.ClientInterface
func (d *DnsRoutes) Update(client sophos.ClientInterface) (err error) {
	return UpdateDnsRoutes(client, d.Value)
}

// DyndnsRules represents the dyndns.rules node and implements sophos.Node
type DyndnsRules struct{ Value []interface{} }

// Get retrieves node dyndns.rules's value from the gateway utilizing a sophos.ClientInterface
func (d *DyndnsRules) Get(client sophos.ClientInterface) (err error) {
	d.Value, err = GetDyndnsRules(client)
	return err
}

// Update PUT's' dyndns.rules's value to the gateway utilizing a sophos.ClientInterface
func (d *DyndnsRules) Update(client sophos.ClientInterface) (err error) {
	return UpdateDyndnsRules(client, d.Value)
}

// EmailpkiAuthorityCert represents the emailpki.authority.cert node and implements sophos.Node
type EmailpkiAuthorityCert struct{ Value string }

// Get retrieves node emailpki.authority.cert's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityCert) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiAuthorityCert(client)
	return err
}

// Update PUT's' emailpki.authority.cert's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiAuthorityCert(client, e.Value)
}

// EmailpkiAuthorityFingerprint represents the emailpki.authority.fingerprint node and implements sophos.Node
type EmailpkiAuthorityFingerprint struct{ Value string }

// Get retrieves node emailpki.authority.fingerprint's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityFingerprint) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiAuthorityFingerprint(client)
	return err
}

// Update PUT's' emailpki.authority.fingerprint's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityFingerprint) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiAuthorityFingerprint(client, e.Value)
}

// EmailpkiAuthorityKey represents the emailpki.authority.key node and implements sophos.Node
type EmailpkiAuthorityKey struct{ Value string }

// Get retrieves node emailpki.authority.key's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityKey) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiAuthorityKey(client)
	return err
}

// Update PUT's' emailpki.authority.key's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityKey) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiAuthorityKey(client, e.Value)
}

// EmailpkiAuthorityPostmasterFingerprint represents the emailpki.authority.postmaster_fingerprint node and implements sophos.Node
type EmailpkiAuthorityPostmasterFingerprint struct{ Value string }

// Get retrieves node emailpki.authority.postmaster_fingerprint's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityPostmasterFingerprint) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiAuthorityPostmasterFingerprint(client)
	return err
}

// Update PUT's' emailpki.authority.postmaster_fingerprint's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityPostmasterFingerprint) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiAuthorityPostmasterFingerprint(client, e.Value)
}

// EmailpkiAuthorityPostmasterPrivkey represents the emailpki.authority.postmaster_privkey node and implements sophos.Node
type EmailpkiAuthorityPostmasterPrivkey struct{ Value string }

// Get retrieves node emailpki.authority.postmaster_privkey's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityPostmasterPrivkey) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiAuthorityPostmasterPrivkey(client)
	return err
}

// Update PUT's' emailpki.authority.postmaster_privkey's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityPostmasterPrivkey) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiAuthorityPostmasterPrivkey(client, e.Value)
}

// EmailpkiAuthorityPostmasterPubkey represents the emailpki.authority.postmaster_pubkey node and implements sophos.Node
type EmailpkiAuthorityPostmasterPubkey struct{ Value string }

// Get retrieves node emailpki.authority.postmaster_pubkey's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityPostmasterPubkey) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiAuthorityPostmasterPubkey(client)
	return err
}

// Update PUT's' emailpki.authority.postmaster_pubkey's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiAuthorityPostmasterPubkey) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiAuthorityPostmasterPubkey(client, e.Value)
}

// EmailpkiGlobalCity represents the emailpki.global.city node and implements sophos.Node
type EmailpkiGlobalCity struct{ Value string }

// Get retrieves node emailpki.global.city's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalCity) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiGlobalCity(client)
	return err
}

// Update PUT's' emailpki.global.city's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalCity) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiGlobalCity(client, e.Value)
}

// EmailpkiGlobalCountry represents the emailpki.global.country node and implements sophos.Node
type EmailpkiGlobalCountry struct{ Value string }

// Get retrieves node emailpki.global.country's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalCountry) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiGlobalCountry(client)
	return err
}

// Update PUT's' emailpki.global.country's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalCountry) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiGlobalCountry(client, e.Value)
}

// EmailpkiGlobalOrganization represents the emailpki.global.organization node and implements sophos.Node
type EmailpkiGlobalOrganization struct{ Value string }

// Get retrieves node emailpki.global.organization's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalOrganization) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiGlobalOrganization(client)
	return err
}

// Update PUT's' emailpki.global.organization's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalOrganization) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiGlobalOrganization(client, e.Value)
}

// EmailpkiGlobalPostmaster represents the emailpki.global.postmaster node and implements sophos.Node
type EmailpkiGlobalPostmaster struct{ Value string }

// Get retrieves node emailpki.global.postmaster's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalPostmaster) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiGlobalPostmaster(client)
	return err
}

// Update PUT's' emailpki.global.postmaster's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalPostmaster) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiGlobalPostmaster(client, e.Value)
}

// EmailpkiGlobalStatus represents the emailpki.global.status node and implements sophos.Node
type EmailpkiGlobalStatus struct{ Value bool }

// Get retrieves node emailpki.global.status's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalStatus) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiGlobalStatus(client)
	return err
}

// Update PUT's' emailpki.global.status's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiGlobalStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiGlobalStatus(client, e.Value)
}

// EmailpkiObjectsCas represents the emailpki.objects.cas node and implements sophos.Node
type EmailpkiObjectsCas struct{ Value []string }

// Get retrieves node emailpki.objects.cas's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiObjectsCas) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiObjectsCas(client)
	return err
}

// Update PUT's' emailpki.objects.cas's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiObjectsCas) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiObjectsCas(client, e.Value)
}

// EmailpkiObjectsOpenpgp represents the emailpki.objects.openpgp node and implements sophos.Node
type EmailpkiObjectsOpenpgp struct{ Value []interface{} }

// Get retrieves node emailpki.objects.openpgp's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiObjectsOpenpgp) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiObjectsOpenpgp(client)
	return err
}

// Update PUT's' emailpki.objects.openpgp's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiObjectsOpenpgp) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiObjectsOpenpgp(client, e.Value)
}

// EmailpkiObjectsSmime represents the emailpki.objects.smime node and implements sophos.Node
type EmailpkiObjectsSmime struct{ Value []interface{} }

// Get retrieves node emailpki.objects.smime's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiObjectsSmime) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiObjectsSmime(client)
	return err
}

// Update PUT's' emailpki.objects.smime's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiObjectsSmime) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiObjectsSmime(client, e.Value)
}

// EmailpkiObjectsUsers represents the emailpki.objects.users node and implements sophos.Node
type EmailpkiObjectsUsers struct{ Value []interface{} }

// Get retrieves node emailpki.objects.users's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiObjectsUsers) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiObjectsUsers(client)
	return err
}

// Update PUT's' emailpki.objects.users's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiObjectsUsers) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiObjectsUsers(client, e.Value)
}

// EmailpkiOpenpgpMainKeysize represents the emailpki.openpgp.main_keysize node and implements sophos.Node
type EmailpkiOpenpgpMainKeysize struct{ Value int64 }

// Get retrieves node emailpki.openpgp.main_keysize's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOpenpgpMainKeysize) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiOpenpgpMainKeysize(client)
	return err
}

// Update PUT's' emailpki.openpgp.main_keysize's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOpenpgpMainKeysize) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiOpenpgpMainKeysize(client, e.Value)
}

// EmailpkiOpenpgpSubKeysize represents the emailpki.openpgp.sub_keysize node and implements sophos.Node
type EmailpkiOpenpgpSubKeysize struct{ Value int64 }

// Get retrieves node emailpki.openpgp.sub_keysize's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOpenpgpSubKeysize) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiOpenpgpSubKeysize(client)
	return err
}

// Update PUT's' emailpki.openpgp.sub_keysize's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOpenpgpSubKeysize) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiOpenpgpSubKeysize(client, e.Value)
}

// EmailpkiOptionsExternalAuto represents the emailpki.options.external_auto node and implements sophos.Node
type EmailpkiOptionsExternalAuto struct{ Value bool }

// Get retrieves node emailpki.options.external_auto's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsExternalAuto) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiOptionsExternalAuto(client)
	return err
}

// Update PUT's' emailpki.options.external_auto's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsExternalAuto) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiOptionsExternalAuto(client, e.Value)
}

// EmailpkiOptionsKeyserver represents the emailpki.options.keyserver node and implements sophos.Node
type EmailpkiOptionsKeyserver struct{ Value string }

// Get retrieves node emailpki.options.keyserver's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsKeyserver) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiOptionsKeyserver(client)
	return err
}

// Update PUT's' emailpki.options.keyserver's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsKeyserver) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiOptionsKeyserver(client, e.Value)
}

// EmailpkiOptionsPolicyDecryption represents the emailpki.options.policy_decryption node and implements sophos.Node
type EmailpkiOptionsPolicyDecryption struct{ Value bool }

// Get retrieves node emailpki.options.policy_decryption's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsPolicyDecryption) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiOptionsPolicyDecryption(client)
	return err
}

// Update PUT's' emailpki.options.policy_decryption's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsPolicyDecryption) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiOptionsPolicyDecryption(client, e.Value)
}

// EmailpkiOptionsPolicyEncryption represents the emailpki.options.policy_encryption node and implements sophos.Node
type EmailpkiOptionsPolicyEncryption struct{ Value bool }

// Get retrieves node emailpki.options.policy_encryption's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsPolicyEncryption) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiOptionsPolicyEncryption(client)
	return err
}

// Update PUT's' emailpki.options.policy_encryption's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsPolicyEncryption) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiOptionsPolicyEncryption(client, e.Value)
}

// EmailpkiOptionsPolicySign represents the emailpki.options.policy_sign node and implements sophos.Node
type EmailpkiOptionsPolicySign struct{ Value bool }

// Get retrieves node emailpki.options.policy_sign's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsPolicySign) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiOptionsPolicySign(client)
	return err
}

// Update PUT's' emailpki.options.policy_sign's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsPolicySign) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiOptionsPolicySign(client, e.Value)
}

// EmailpkiOptionsPolicyVerify represents the emailpki.options.policy_verify node and implements sophos.Node
type EmailpkiOptionsPolicyVerify struct{ Value bool }

// Get retrieves node emailpki.options.policy_verify's value from the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsPolicyVerify) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEmailpkiOptionsPolicyVerify(client)
	return err
}

// Update PUT's' emailpki.options.policy_verify's value to the gateway utilizing a sophos.ClientInterface
func (e *EmailpkiOptionsPolicyVerify) Update(client sophos.ClientInterface) (err error) {
	return UpdateEmailpkiOptionsPolicyVerify(client, e.Value)
}

// EndpointAacAllowedNetworks represents the endpoint.aac.allowed_networks node and implements sophos.Node
type EndpointAacAllowedNetworks struct{ Value []string }

// Get retrieves node endpoint.aac.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEndpointAacAllowedNetworks(client)
	return err
}

// Update PUT's' endpoint.aac.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateEndpointAacAllowedNetworks(client, e.Value)
}

// EndpointAacAllowedUsers represents the endpoint.aac.allowed_users node and implements sophos.Node
type EndpointAacAllowedUsers struct{ Value []string }

// Get retrieves node endpoint.aac.allowed_users's value from the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacAllowedUsers) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEndpointAacAllowedUsers(client)
	return err
}

// Update PUT's' endpoint.aac.allowed_users's value to the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacAllowedUsers) Update(client sophos.ClientInterface) (err error) {
	return UpdateEndpointAacAllowedUsers(client, e.Value)
}

// EndpointAacCa represents the endpoint.aac.ca node and implements sophos.Node
type EndpointAacCa struct{ Value string }

// Get retrieves node endpoint.aac.ca's value from the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacCa) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEndpointAacCa(client)
	return err
}

// Update PUT's' endpoint.aac.ca's value to the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacCa) Update(client sophos.ClientInterface) (err error) {
	return UpdateEndpointAacCa(client, e.Value)
}

// EndpointAacCert represents the endpoint.aac.cert node and implements sophos.Node
type EndpointAacCert struct{ Value string }

// Get retrieves node endpoint.aac.cert's value from the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacCert) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEndpointAacCert(client)
	return err
}

// Update PUT's' endpoint.aac.cert's value to the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateEndpointAacCert(client, e.Value)
}

// EndpointAacMagicIp represents the endpoint.aac.magic_ip node and implements sophos.Node
type EndpointAacMagicIp struct{ Value string }

// Get retrieves node endpoint.aac.magic_ip's value from the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacMagicIp) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEndpointAacMagicIp(client)
	return err
}

// Update PUT's' endpoint.aac.magic_ip's value to the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacMagicIp) Update(client sophos.ClientInterface) (err error) {
	return UpdateEndpointAacMagicIp(client, e.Value)
}

// EndpointAacMaxUserLogins represents the endpoint.aac.max_user_logins node and implements sophos.Node
type EndpointAacMaxUserLogins struct{ Value int64 }

// Get retrieves node endpoint.aac.max_user_logins's value from the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacMaxUserLogins) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEndpointAacMaxUserLogins(client)
	return err
}

// Update PUT's' endpoint.aac.max_user_logins's value to the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacMaxUserLogins) Update(client sophos.ClientInterface) (err error) {
	return UpdateEndpointAacMaxUserLogins(client, e.Value)
}

// EndpointAacStatus represents the endpoint.aac.status node and implements sophos.Node
type EndpointAacStatus struct{ Value bool }

// Get retrieves node endpoint.aac.status's value from the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacStatus) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEndpointAacStatus(client)
	return err
}

// Update PUT's' endpoint.aac.status's value to the gateway utilizing a sophos.ClientInterface
func (e *EndpointAacStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateEndpointAacStatus(client, e.Value)
}

// EndpointStasCollectors represents the endpoint.stas.collectors node and implements sophos.Node
type EndpointStasCollectors struct{ Value []interface{} }

// Get retrieves node endpoint.stas.collectors's value from the gateway utilizing a sophos.ClientInterface
func (e *EndpointStasCollectors) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEndpointStasCollectors(client)
	return err
}

// Update PUT's' endpoint.stas.collectors's value to the gateway utilizing a sophos.ClientInterface
func (e *EndpointStasCollectors) Update(client sophos.ClientInterface) (err error) {
	return UpdateEndpointStasCollectors(client, e.Value)
}

// EndpointStasStatus represents the endpoint.stas.status node and implements sophos.Node
type EndpointStasStatus struct{ Value bool }

// Get retrieves node endpoint.stas.status's value from the gateway utilizing a sophos.ClientInterface
func (e *EndpointStasStatus) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEndpointStasStatus(client)
	return err
}

// Update PUT's' endpoint.stas.status's value to the gateway utilizing a sophos.ClientInterface
func (e *EndpointStasStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateEndpointStasStatus(client, e.Value)
}

// EnduserMessagesCompanyLogo represents the enduser_messages.company_logo node and implements sophos.Node
type EnduserMessagesCompanyLogo struct{ Value string }

// Get retrieves node enduser_messages.company_logo's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesCompanyLogo) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesCompanyLogo(client)
	return err
}

// Update PUT's' enduser_messages.company_logo's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesCompanyLogo) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesCompanyLogo(client, e.Value)
}

// EnduserMessagesCompanyText represents the enduser_messages.company_text node and implements sophos.Node
type EnduserMessagesCompanyText struct{ Value string }

// Get retrieves node enduser_messages.company_text's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesCompanyText) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesCompanyText(client)
	return err
}

// Update PUT's' enduser_messages.company_text's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesCompanyText) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesCompanyText(client, e.Value)
}

// EnduserMessagesDlpBlackholePart represents the enduser_messages.dlp.blackhole_part node and implements sophos.Node
type EnduserMessagesDlpBlackholePart struct{ Value string }

// Get retrieves node enduser_messages.dlp.blackhole_part's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpBlackholePart) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesDlpBlackholePart(client)
	return err
}

// Update PUT's' enduser_messages.dlp.blackhole_part's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpBlackholePart) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesDlpBlackholePart(client, e.Value)
}

// EnduserMessagesDlpFooterPart represents the enduser_messages.dlp.footer_part node and implements sophos.Node
type EnduserMessagesDlpFooterPart struct{ Value string }

// Get retrieves node enduser_messages.dlp.footer_part's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpFooterPart) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesDlpFooterPart(client)
	return err
}

// Update PUT's' enduser_messages.dlp.footer_part's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpFooterPart) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesDlpFooterPart(client, e.Value)
}

// EnduserMessagesDlpHeaderPart represents the enduser_messages.dlp.header_part node and implements sophos.Node
type EnduserMessagesDlpHeaderPart struct{ Value string }

// Get retrieves node enduser_messages.dlp.header_part's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpHeaderPart) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesDlpHeaderPart(client)
	return err
}

// Update PUT's' enduser_messages.dlp.header_part's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpHeaderPart) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesDlpHeaderPart(client, e.Value)
}

// EnduserMessagesDlpOriginalPart represents the enduser_messages.dlp.original_part node and implements sophos.Node
type EnduserMessagesDlpOriginalPart struct{ Value string }

// Get retrieves node enduser_messages.dlp.original_part's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpOriginalPart) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesDlpOriginalPart(client)
	return err
}

// Update PUT's' enduser_messages.dlp.original_part's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpOriginalPart) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesDlpOriginalPart(client, e.Value)
}

// EnduserMessagesDlpSpxPart represents the enduser_messages.dlp.spx_part node and implements sophos.Node
type EnduserMessagesDlpSpxPart struct{ Value string }

// Get retrieves node enduser_messages.dlp.spx_part's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpSpxPart) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesDlpSpxPart(client)
	return err
}

// Update PUT's' enduser_messages.dlp.spx_part's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpSpxPart) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesDlpSpxPart(client, e.Value)
}

// EnduserMessagesDlpSubject represents the enduser_messages.dlp.subject node and implements sophos.Node
type EnduserMessagesDlpSubject struct{ Value string }

// Get retrieves node enduser_messages.dlp.subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesDlpSubject(client)
	return err
}

// Update PUT's' enduser_messages.dlp.subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesDlpSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesDlpSubject(client, e.Value)
}

// EnduserMessagesHttpAppDesc represents the enduser_messages.http.app_desc node and implements sophos.Node
type EnduserMessagesHttpAppDesc struct{ Value string }

// Get retrieves node enduser_messages.http.app_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpAppDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpAppDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.app_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpAppDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpAppDesc(client, e.Value)
}

// EnduserMessagesHttpAppSubject represents the enduser_messages.http.app_subject node and implements sophos.Node
type EnduserMessagesHttpAppSubject struct{ Value string }

// Get retrieves node enduser_messages.http.app_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpAppSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpAppSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.app_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpAppSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpAppSubject(client, e.Value)
}

// EnduserMessagesHttpBlacklistDesc represents the enduser_messages.http.blacklist_desc node and implements sophos.Node
type EnduserMessagesHttpBlacklistDesc struct{ Value string }

// Get retrieves node enduser_messages.http.blacklist_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpBlacklistDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpBlacklistDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.blacklist_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpBlacklistDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpBlacklistDesc(client, e.Value)
}

// EnduserMessagesHttpBlacklistSubject represents the enduser_messages.http.blacklist_subject node and implements sophos.Node
type EnduserMessagesHttpBlacklistSubject struct{ Value string }

// Get retrieves node enduser_messages.http.blacklist_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpBlacklistSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpBlacklistSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.blacklist_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpBlacklistSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpBlacklistSubject(client, e.Value)
}

// EnduserMessagesHttpCertfailSubject represents the enduser_messages.http.certfail_subject node and implements sophos.Node
type EnduserMessagesHttpCertfailSubject struct{ Value string }

// Get retrieves node enduser_messages.http.certfail_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpCertfailSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpCertfailSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.certfail_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpCertfailSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpCertfailSubject(client, e.Value)
}

// EnduserMessagesHttpCffOverrideDesc represents the enduser_messages.http.cff_override_desc node and implements sophos.Node
type EnduserMessagesHttpCffOverrideDesc struct{ Value string }

// Get retrieves node enduser_messages.http.cff_override_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpCffOverrideDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpCffOverrideDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.cff_override_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpCffOverrideDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpCffOverrideDesc(client, e.Value)
}

// EnduserMessagesHttpCffOverrideSubject represents the enduser_messages.http.cff_override_subject node and implements sophos.Node
type EnduserMessagesHttpCffOverrideSubject struct{ Value string }

// Get retrieves node enduser_messages.http.cff_override_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpCffOverrideSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpCffOverrideSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.cff_override_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpCffOverrideSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpCffOverrideSubject(client, e.Value)
}

// EnduserMessagesHttpCffOverrideTerms represents the enduser_messages.http.cff_override_terms node and implements sophos.Node
type EnduserMessagesHttpCffOverrideTerms struct{ Value string }

// Get retrieves node enduser_messages.http.cff_override_terms's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpCffOverrideTerms) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpCffOverrideTerms(client)
	return err
}

// Update PUT's' enduser_messages.http.cff_override_terms's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpCffOverrideTerms) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpCffOverrideTerms(client, e.Value)
}

// EnduserMessagesHttpDownloadCompleteDesc represents the enduser_messages.http.download_complete_desc node and implements sophos.Node
type EnduserMessagesHttpDownloadCompleteDesc struct{ Value string }

// Get retrieves node enduser_messages.http.download_complete_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpDownloadCompleteDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpDownloadCompleteDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.download_complete_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpDownloadCompleteDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpDownloadCompleteDesc(client, e.Value)
}

// EnduserMessagesHttpDownloadCompleteSubject represents the enduser_messages.http.download_complete_subject node and implements sophos.Node
type EnduserMessagesHttpDownloadCompleteSubject struct{ Value string }

// Get retrieves node enduser_messages.http.download_complete_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpDownloadCompleteSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpDownloadCompleteSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.download_complete_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpDownloadCompleteSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpDownloadCompleteSubject(client, e.Value)
}

// EnduserMessagesHttpDownloadDesc represents the enduser_messages.http.download_desc node and implements sophos.Node
type EnduserMessagesHttpDownloadDesc struct{ Value string }

// Get retrieves node enduser_messages.http.download_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpDownloadDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpDownloadDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.download_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpDownloadDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpDownloadDesc(client, e.Value)
}

// EnduserMessagesHttpDownloadSubject represents the enduser_messages.http.download_subject node and implements sophos.Node
type EnduserMessagesHttpDownloadSubject struct{ Value string }

// Get retrieves node enduser_messages.http.download_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpDownloadSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpDownloadSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.download_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpDownloadSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpDownloadSubject(client, e.Value)
}

// EnduserMessagesHttpErrorDesc represents the enduser_messages.http.error_desc node and implements sophos.Node
type EnduserMessagesHttpErrorDesc struct{ Value string }

// Get retrieves node enduser_messages.http.error_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpErrorDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpErrorDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.error_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpErrorDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpErrorDesc(client, e.Value)
}

// EnduserMessagesHttpErrorSubject represents the enduser_messages.http.error_subject node and implements sophos.Node
type EnduserMessagesHttpErrorSubject struct{ Value string }

// Get retrieves node enduser_messages.http.error_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpErrorSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpErrorSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.error_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpErrorSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpErrorSubject(client, e.Value)
}

// EnduserMessagesHttpFileextensionDesc represents the enduser_messages.http.fileextension_desc node and implements sophos.Node
type EnduserMessagesHttpFileextensionDesc struct{ Value string }

// Get retrieves node enduser_messages.http.fileextension_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFileextensionDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpFileextensionDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.fileextension_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFileextensionDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpFileextensionDesc(client, e.Value)
}

// EnduserMessagesHttpFileextensionSubject represents the enduser_messages.http.fileextension_subject node and implements sophos.Node
type EnduserMessagesHttpFileextensionSubject struct{ Value string }

// Get retrieves node enduser_messages.http.fileextension_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFileextensionSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpFileextensionSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.fileextension_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFileextensionSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpFileextensionSubject(client, e.Value)
}

// EnduserMessagesHttpFileextensionWarnDesc represents the enduser_messages.http.fileextension_warn_desc node and implements sophos.Node
type EnduserMessagesHttpFileextensionWarnDesc struct{ Value string }

// Get retrieves node enduser_messages.http.fileextension_warn_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFileextensionWarnDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpFileextensionWarnDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.fileextension_warn_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFileextensionWarnDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpFileextensionWarnDesc(client, e.Value)
}

// EnduserMessagesHttpFileextensionWarnSubject represents the enduser_messages.http.fileextension_warn_subject node and implements sophos.Node
type EnduserMessagesHttpFileextensionWarnSubject struct{ Value string }

// Get retrieves node enduser_messages.http.fileextension_warn_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFileextensionWarnSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpFileextensionWarnSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.fileextension_warn_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFileextensionWarnSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpFileextensionWarnSubject(client, e.Value)
}

// EnduserMessagesHttpFilesizeDesc represents the enduser_messages.http.filesize_desc node and implements sophos.Node
type EnduserMessagesHttpFilesizeDesc struct{ Value string }

// Get retrieves node enduser_messages.http.filesize_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFilesizeDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpFilesizeDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.filesize_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFilesizeDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpFilesizeDesc(client, e.Value)
}

// EnduserMessagesHttpFilesizeSubject represents the enduser_messages.http.filesize_subject node and implements sophos.Node
type EnduserMessagesHttpFilesizeSubject struct{ Value string }

// Get retrieves node enduser_messages.http.filesize_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFilesizeSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpFilesizeSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.filesize_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpFilesizeSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpFilesizeSubject(client, e.Value)
}

// EnduserMessagesHttpGeoipDesc represents the enduser_messages.http.geoip_desc node and implements sophos.Node
type EnduserMessagesHttpGeoipDesc struct{ Value string }

// Get retrieves node enduser_messages.http.geoip_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpGeoipDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpGeoipDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.geoip_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpGeoipDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpGeoipDesc(client, e.Value)
}

// EnduserMessagesHttpGeoipSubject represents the enduser_messages.http.geoip_subject node and implements sophos.Node
type EnduserMessagesHttpGeoipSubject struct{ Value string }

// Get retrieves node enduser_messages.http.geoip_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpGeoipSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpGeoipSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.geoip_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpGeoipSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpGeoipSubject(client, e.Value)
}

// EnduserMessagesHttpMimetypeDesc represents the enduser_messages.http.mimetype_desc node and implements sophos.Node
type EnduserMessagesHttpMimetypeDesc struct{ Value string }

// Get retrieves node enduser_messages.http.mimetype_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpMimetypeDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpMimetypeDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.mimetype_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpMimetypeDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpMimetypeDesc(client, e.Value)
}

// EnduserMessagesHttpMimetypeSubject represents the enduser_messages.http.mimetype_subject node and implements sophos.Node
type EnduserMessagesHttpMimetypeSubject struct{ Value string }

// Get retrieves node enduser_messages.http.mimetype_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpMimetypeSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpMimetypeSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.mimetype_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpMimetypeSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpMimetypeSubject(client, e.Value)
}

// EnduserMessagesHttpMimetypeWarnDesc represents the enduser_messages.http.mimetype_warn_desc node and implements sophos.Node
type EnduserMessagesHttpMimetypeWarnDesc struct{ Value string }

// Get retrieves node enduser_messages.http.mimetype_warn_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpMimetypeWarnDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpMimetypeWarnDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.mimetype_warn_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpMimetypeWarnDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpMimetypeWarnDesc(client, e.Value)
}

// EnduserMessagesHttpMimetypeWarnSubject represents the enduser_messages.http.mimetype_warn_subject node and implements sophos.Node
type EnduserMessagesHttpMimetypeWarnSubject struct{ Value string }

// Get retrieves node enduser_messages.http.mimetype_warn_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpMimetypeWarnSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpMimetypeWarnSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.mimetype_warn_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpMimetypeWarnSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpMimetypeWarnSubject(client, e.Value)
}

// EnduserMessagesHttpPuaDesc represents the enduser_messages.http.pua_desc node and implements sophos.Node
type EnduserMessagesHttpPuaDesc struct{ Value string }

// Get retrieves node enduser_messages.http.pua_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpPuaDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpPuaDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.pua_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpPuaDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpPuaDesc(client, e.Value)
}

// EnduserMessagesHttpPuaSubject represents the enduser_messages.http.pua_subject node and implements sophos.Node
type EnduserMessagesHttpPuaSubject struct{ Value string }

// Get retrieves node enduser_messages.http.pua_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpPuaSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpPuaSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.pua_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpPuaSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpPuaSubject(client, e.Value)
}

// EnduserMessagesHttpQuotaBlockDesc represents the enduser_messages.http.quota_block_desc node and implements sophos.Node
type EnduserMessagesHttpQuotaBlockDesc struct{ Value string }

// Get retrieves node enduser_messages.http.quota_block_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpQuotaBlockDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpQuotaBlockDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.quota_block_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpQuotaBlockDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpQuotaBlockDesc(client, e.Value)
}

// EnduserMessagesHttpQuotaBlockSubject represents the enduser_messages.http.quota_block_subject node and implements sophos.Node
type EnduserMessagesHttpQuotaBlockSubject struct{ Value string }

// Get retrieves node enduser_messages.http.quota_block_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpQuotaBlockSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpQuotaBlockSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.quota_block_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpQuotaBlockSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpQuotaBlockSubject(client, e.Value)
}

// EnduserMessagesHttpQuotaWarnDesc represents the enduser_messages.http.quota_warn_desc node and implements sophos.Node
type EnduserMessagesHttpQuotaWarnDesc struct{ Value string }

// Get retrieves node enduser_messages.http.quota_warn_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpQuotaWarnDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpQuotaWarnDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.quota_warn_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpQuotaWarnDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpQuotaWarnDesc(client, e.Value)
}

// EnduserMessagesHttpQuotaWarnSubject represents the enduser_messages.http.quota_warn_subject node and implements sophos.Node
type EnduserMessagesHttpQuotaWarnSubject struct{ Value string }

// Get retrieves node enduser_messages.http.quota_warn_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpQuotaWarnSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpQuotaWarnSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.quota_warn_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpQuotaWarnSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpQuotaWarnSubject(client, e.Value)
}

// EnduserMessagesHttpSpDesc represents the enduser_messages.http.sp_desc node and implements sophos.Node
type EnduserMessagesHttpSpDesc struct{ Value string }

// Get retrieves node enduser_messages.http.sp_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSpDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.sp_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSpDesc(client, e.Value)
}

// EnduserMessagesHttpSpFrameSubject represents the enduser_messages.http.sp_frame_subject node and implements sophos.Node
type EnduserMessagesHttpSpFrameSubject struct{ Value string }

// Get retrieves node enduser_messages.http.sp_frame_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpFrameSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSpFrameSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.sp_frame_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpFrameSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSpFrameSubject(client, e.Value)
}

// EnduserMessagesHttpSpSubject represents the enduser_messages.http.sp_subject node and implements sophos.Node
type EnduserMessagesHttpSpSubject struct{ Value string }

// Get retrieves node enduser_messages.http.sp_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSpSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.sp_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSpSubject(client, e.Value)
}

// EnduserMessagesHttpSpWarnDesc represents the enduser_messages.http.sp_warn_desc node and implements sophos.Node
type EnduserMessagesHttpSpWarnDesc struct{ Value string }

// Get retrieves node enduser_messages.http.sp_warn_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpWarnDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSpWarnDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.sp_warn_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpWarnDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSpWarnDesc(client, e.Value)
}

// EnduserMessagesHttpSpWarnSubject represents the enduser_messages.http.sp_warn_subject node and implements sophos.Node
type EnduserMessagesHttpSpWarnSubject struct{ Value string }

// Get retrieves node enduser_messages.http.sp_warn_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpWarnSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSpWarnSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.sp_warn_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSpWarnSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSpWarnSubject(client, e.Value)
}

// EnduserMessagesHttpSslCertraw represents the enduser_messages.http.ssl_certraw node and implements sophos.Node
type EnduserMessagesHttpSslCertraw struct{ Value string }

// Get retrieves node enduser_messages.http.ssl_certraw's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslCertraw) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSslCertraw(client)
	return err
}

// Update PUT's' enduser_messages.http.ssl_certraw's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslCertraw) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSslCertraw(client, e.Value)
}

// EnduserMessagesHttpSslCertstatus represents the enduser_messages.http.ssl_certstatus node and implements sophos.Node
type EnduserMessagesHttpSslCertstatus struct{ Value string }

// Get retrieves node enduser_messages.http.ssl_certstatus's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslCertstatus) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSslCertstatus(client)
	return err
}

// Update PUT's' enduser_messages.http.ssl_certstatus's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslCertstatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSslCertstatus(client, e.Value)
}

// EnduserMessagesHttpSslIssuer represents the enduser_messages.http.ssl_issuer node and implements sophos.Node
type EnduserMessagesHttpSslIssuer struct{ Value string }

// Get retrieves node enduser_messages.http.ssl_issuer's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslIssuer) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSslIssuer(client)
	return err
}

// Update PUT's' enduser_messages.http.ssl_issuer's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslIssuer) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSslIssuer(client, e.Value)
}

// EnduserMessagesHttpSslMd5Fp represents the enduser_messages.http.ssl_md5fp node and implements sophos.Node
type EnduserMessagesHttpSslMd5Fp struct{ Value string }

// Get retrieves node enduser_messages.http.ssl_md5fp's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslMd5Fp) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSslMd5Fp(client)
	return err
}

// Update PUT's' enduser_messages.http.ssl_md5fp's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslMd5Fp) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSslMd5Fp(client, e.Value)
}

// EnduserMessagesHttpSslSha1Fp represents the enduser_messages.http.ssl_sha1fp node and implements sophos.Node
type EnduserMessagesHttpSslSha1Fp struct{ Value string }

// Get retrieves node enduser_messages.http.ssl_sha1fp's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslSha1Fp) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSslSha1Fp(client)
	return err
}

// Update PUT's' enduser_messages.http.ssl_sha1fp's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslSha1Fp) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSslSha1Fp(client, e.Value)
}

// EnduserMessagesHttpSslSubject represents the enduser_messages.http.ssl_subject node and implements sophos.Node
type EnduserMessagesHttpSslSubject struct{ Value string }

// Get retrieves node enduser_messages.http.ssl_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSslSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.ssl_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSslSubject(client, e.Value)
}

// EnduserMessagesHttpSslValidfrom represents the enduser_messages.http.ssl_validfrom node and implements sophos.Node
type EnduserMessagesHttpSslValidfrom struct{ Value string }

// Get retrieves node enduser_messages.http.ssl_validfrom's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslValidfrom) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSslValidfrom(client)
	return err
}

// Update PUT's' enduser_messages.http.ssl_validfrom's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslValidfrom) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSslValidfrom(client, e.Value)
}

// EnduserMessagesHttpSslValiduntil represents the enduser_messages.http.ssl_validuntil node and implements sophos.Node
type EnduserMessagesHttpSslValiduntil struct{ Value string }

// Get retrieves node enduser_messages.http.ssl_validuntil's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslValiduntil) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpSslValiduntil(client)
	return err
}

// Update PUT's' enduser_messages.http.ssl_validuntil's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpSslValiduntil) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpSslValiduntil(client, e.Value)
}

// EnduserMessagesHttpThreatDesc represents the enduser_messages.http.threat_desc node and implements sophos.Node
type EnduserMessagesHttpThreatDesc struct{ Value string }

// Get retrieves node enduser_messages.http.threat_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpThreatDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpThreatDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.threat_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpThreatDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpThreatDesc(client, e.Value)
}

// EnduserMessagesHttpThreatSubject represents the enduser_messages.http.threat_subject node and implements sophos.Node
type EnduserMessagesHttpThreatSubject struct{ Value string }

// Get retrieves node enduser_messages.http.threat_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpThreatSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpThreatSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.threat_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpThreatSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpThreatSubject(client, e.Value)
}

// EnduserMessagesHttpTransparentAuthDesc represents the enduser_messages.http.transparent_auth_desc node and implements sophos.Node
type EnduserMessagesHttpTransparentAuthDesc struct{ Value string }

// Get retrieves node enduser_messages.http.transparent_auth_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpTransparentAuthDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpTransparentAuthDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.transparent_auth_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpTransparentAuthDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpTransparentAuthDesc(client, e.Value)
}

// EnduserMessagesHttpTransparentAuthSubject represents the enduser_messages.http.transparent_auth_subject node and implements sophos.Node
type EnduserMessagesHttpTransparentAuthSubject struct{ Value string }

// Get retrieves node enduser_messages.http.transparent_auth_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpTransparentAuthSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpTransparentAuthSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.transparent_auth_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpTransparentAuthSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpTransparentAuthSubject(client, e.Value)
}

// EnduserMessagesHttpTransparentAuthTerms represents the enduser_messages.http.transparent_auth_terms node and implements sophos.Node
type EnduserMessagesHttpTransparentAuthTerms struct{ Value string }

// Get retrieves node enduser_messages.http.transparent_auth_terms's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpTransparentAuthTerms) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpTransparentAuthTerms(client)
	return err
}

// Update PUT's' enduser_messages.http.transparent_auth_terms's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpTransparentAuthTerms) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpTransparentAuthTerms(client, e.Value)
}

// EnduserMessagesHttpVirusDesc represents the enduser_messages.http.virus_desc node and implements sophos.Node
type EnduserMessagesHttpVirusDesc struct{ Value string }

// Get retrieves node enduser_messages.http.virus_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpVirusDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpVirusDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.virus_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpVirusDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpVirusDesc(client, e.Value)
}

// EnduserMessagesHttpVirusSubject represents the enduser_messages.http.virus_subject node and implements sophos.Node
type EnduserMessagesHttpVirusSubject struct{ Value string }

// Get retrieves node enduser_messages.http.virus_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpVirusSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpVirusSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.virus_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpVirusSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpVirusSubject(client, e.Value)
}

// EnduserMessagesHttpVirusscanDesc represents the enduser_messages.http.virusscan_desc node and implements sophos.Node
type EnduserMessagesHttpVirusscanDesc struct{ Value string }

// Get retrieves node enduser_messages.http.virusscan_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpVirusscanDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpVirusscanDesc(client)
	return err
}

// Update PUT's' enduser_messages.http.virusscan_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpVirusscanDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpVirusscanDesc(client, e.Value)
}

// EnduserMessagesHttpVirusscanSubject represents the enduser_messages.http.virusscan_subject node and implements sophos.Node
type EnduserMessagesHttpVirusscanSubject struct{ Value string }

// Get retrieves node enduser_messages.http.virusscan_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpVirusscanSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesHttpVirusscanSubject(client)
	return err
}

// Update PUT's' enduser_messages.http.virusscan_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesHttpVirusscanSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesHttpVirusscanSubject(client, e.Value)
}

// EnduserMessagesMailReleaseErrDesc represents the enduser_messages.mail.release_err_desc node and implements sophos.Node
type EnduserMessagesMailReleaseErrDesc struct{ Value string }

// Get retrieves node enduser_messages.mail.release_err_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesMailReleaseErrDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesMailReleaseErrDesc(client)
	return err
}

// Update PUT's' enduser_messages.mail.release_err_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesMailReleaseErrDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesMailReleaseErrDesc(client, e.Value)
}

// EnduserMessagesMailReleaseErrSubject represents the enduser_messages.mail.release_err_subject node and implements sophos.Node
type EnduserMessagesMailReleaseErrSubject struct{ Value string }

// Get retrieves node enduser_messages.mail.release_err_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesMailReleaseErrSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesMailReleaseErrSubject(client)
	return err
}

// Update PUT's' enduser_messages.mail.release_err_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesMailReleaseErrSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesMailReleaseErrSubject(client, e.Value)
}

// EnduserMessagesMailReleasedDesc represents the enduser_messages.mail.released_desc node and implements sophos.Node
type EnduserMessagesMailReleasedDesc struct{ Value string }

// Get retrieves node enduser_messages.mail.released_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesMailReleasedDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesMailReleasedDesc(client)
	return err
}

// Update PUT's' enduser_messages.mail.released_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesMailReleasedDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesMailReleasedDesc(client, e.Value)
}

// EnduserMessagesMailReleasedSubject represents the enduser_messages.mail.released_subject node and implements sophos.Node
type EnduserMessagesMailReleasedSubject struct{ Value string }

// Get retrieves node enduser_messages.mail.released_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesMailReleasedSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesMailReleasedSubject(client)
	return err
}

// Update PUT's' enduser_messages.mail.released_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesMailReleasedSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesMailReleasedSubject(client, e.Value)
}

// EnduserMessagesPop3BlockedDesc represents the enduser_messages.pop3.blocked_desc node and implements sophos.Node
type EnduserMessagesPop3BlockedDesc struct{ Value string }

// Get retrieves node enduser_messages.pop3.blocked_desc's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesPop3BlockedDesc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesPop3BlockedDesc(client)
	return err
}

// Update PUT's' enduser_messages.pop3.blocked_desc's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesPop3BlockedDesc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesPop3BlockedDesc(client, e.Value)
}

// EnduserMessagesPop3BlockedSubject represents the enduser_messages.pop3.blocked_subject node and implements sophos.Node
type EnduserMessagesPop3BlockedSubject struct{ Value string }

// Get retrieves node enduser_messages.pop3.blocked_subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesPop3BlockedSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesPop3BlockedSubject(client)
	return err
}

// Update PUT's' enduser_messages.pop3.blocked_subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesPop3BlockedSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesPop3BlockedSubject(client, e.Value)
}

// EnduserMessagesSpxInternalErrorBody represents the enduser_messages.spx.internal_error.body node and implements sophos.Node
type EnduserMessagesSpxInternalErrorBody struct{ Value string }

// Get retrieves node enduser_messages.spx.internal_error.body's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxInternalErrorBody) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxInternalErrorBody(client)
	return err
}

// Update PUT's' enduser_messages.spx.internal_error.body's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxInternalErrorBody) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxInternalErrorBody(client, e.Value)
}

// EnduserMessagesSpxInternalErrorSubject represents the enduser_messages.spx.internal_error.subject node and implements sophos.Node
type EnduserMessagesSpxInternalErrorSubject struct{ Value string }

// Get retrieves node enduser_messages.spx.internal_error.subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxInternalErrorSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxInternalErrorSubject(client)
	return err
}

// Update PUT's' enduser_messages.spx.internal_error.subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxInternalErrorSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxInternalErrorSubject(client, e.Value)
}

// EnduserMessagesSpxInternalErrorSenderBody represents the enduser_messages.spx.internal_error_sender.body node and implements sophos.Node
type EnduserMessagesSpxInternalErrorSenderBody struct{ Value string }

// Get retrieves node enduser_messages.spx.internal_error_sender.body's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxInternalErrorSenderBody) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxInternalErrorSenderBody(client)
	return err
}

// Update PUT's' enduser_messages.spx.internal_error_sender.body's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxInternalErrorSenderBody) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxInternalErrorSenderBody(client, e.Value)
}

// EnduserMessagesSpxInternalErrorSenderSubject represents the enduser_messages.spx.internal_error_sender.subject node and implements sophos.Node
type EnduserMessagesSpxInternalErrorSenderSubject struct{ Value string }

// Get retrieves node enduser_messages.spx.internal_error_sender.subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxInternalErrorSenderSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxInternalErrorSenderSubject(client)
	return err
}

// Update PUT's' enduser_messages.spx.internal_error_sender.subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxInternalErrorSenderSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxInternalErrorSenderSubject(client, e.Value)
}

// EnduserMessagesSpxPasswordNoSpecCharsBody represents the enduser_messages.spx.password_no_spec_chars.body node and implements sophos.Node
type EnduserMessagesSpxPasswordNoSpecCharsBody struct{ Value string }

// Get retrieves node enduser_messages.spx.password_no_spec_chars.body's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNoSpecCharsBody) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxPasswordNoSpecCharsBody(client)
	return err
}

// Update PUT's' enduser_messages.spx.password_no_spec_chars.body's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNoSpecCharsBody) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxPasswordNoSpecCharsBody(client, e.Value)
}

// EnduserMessagesSpxPasswordNoSpecCharsSubject represents the enduser_messages.spx.password_no_spec_chars.subject node and implements sophos.Node
type EnduserMessagesSpxPasswordNoSpecCharsSubject struct{ Value string }

// Get retrieves node enduser_messages.spx.password_no_spec_chars.subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNoSpecCharsSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxPasswordNoSpecCharsSubject(client)
	return err
}

// Update PUT's' enduser_messages.spx.password_no_spec_chars.subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNoSpecCharsSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxPasswordNoSpecCharsSubject(client, e.Value)
}

// EnduserMessagesSpxPasswordNotLongEnoughBody represents the enduser_messages.spx.password_not_long_enough.body node and implements sophos.Node
type EnduserMessagesSpxPasswordNotLongEnoughBody struct{ Value string }

// Get retrieves node enduser_messages.spx.password_not_long_enough.body's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNotLongEnoughBody) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxPasswordNotLongEnoughBody(client)
	return err
}

// Update PUT's' enduser_messages.spx.password_not_long_enough.body's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNotLongEnoughBody) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxPasswordNotLongEnoughBody(client, e.Value)
}

// EnduserMessagesSpxPasswordNotLongEnoughSubject represents the enduser_messages.spx.password_not_long_enough.subject node and implements sophos.Node
type EnduserMessagesSpxPasswordNotLongEnoughSubject struct{ Value string }

// Get retrieves node enduser_messages.spx.password_not_long_enough.subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNotLongEnoughSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxPasswordNotLongEnoughSubject(client)
	return err
}

// Update PUT's' enduser_messages.spx.password_not_long_enough.subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNotLongEnoughSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxPasswordNotLongEnoughSubject(client, e.Value)
}

// EnduserMessagesSpxPasswordNotPresentedBody represents the enduser_messages.spx.password_not_presented.body node and implements sophos.Node
type EnduserMessagesSpxPasswordNotPresentedBody struct{ Value string }

// Get retrieves node enduser_messages.spx.password_not_presented.body's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNotPresentedBody) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxPasswordNotPresentedBody(client)
	return err
}

// Update PUT's' enduser_messages.spx.password_not_presented.body's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNotPresentedBody) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxPasswordNotPresentedBody(client, e.Value)
}

// EnduserMessagesSpxPasswordNotPresentedSubject represents the enduser_messages.spx.password_not_presented.subject node and implements sophos.Node
type EnduserMessagesSpxPasswordNotPresentedSubject struct{ Value string }

// Get retrieves node enduser_messages.spx.password_not_presented.subject's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNotPresentedSubject) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxPasswordNotPresentedSubject(client)
	return err
}

// Update PUT's' enduser_messages.spx.password_not_presented.subject's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxPasswordNotPresentedSubject) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxPasswordNotPresentedSubject(client, e.Value)
}

// EnduserMessagesSpxUrlNotFoundMessage represents the enduser_messages.spx.url_not_found.message node and implements sophos.Node
type EnduserMessagesSpxUrlNotFoundMessage struct{ Value string }

// Get retrieves node enduser_messages.spx.url_not_found.message's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxUrlNotFoundMessage) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSpxUrlNotFoundMessage(client)
	return err
}

// Update PUT's' enduser_messages.spx.url_not_found.message's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSpxUrlNotFoundMessage) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSpxUrlNotFoundMessage(client, e.Value)
}

// EnduserMessagesSquidCacheAdmin represents the enduser_messages.squid.cache_admin node and implements sophos.Node
type EnduserMessagesSquidCacheAdmin struct{ Value string }

// Get retrieves node enduser_messages.squid.cache_admin's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSquidCacheAdmin) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSquidCacheAdmin(client)
	return err
}

// Update PUT's' enduser_messages.squid.cache_admin's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSquidCacheAdmin) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSquidCacheAdmin(client, e.Value)
}

// EnduserMessagesSquidCacheAdminMessage represents the enduser_messages.squid.cache_admin_message node and implements sophos.Node
type EnduserMessagesSquidCacheAdminMessage struct{ Value string }

// Get retrieves node enduser_messages.squid.cache_admin_message's value from the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSquidCacheAdminMessage) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEnduserMessagesSquidCacheAdminMessage(client)
	return err
}

// Update PUT's' enduser_messages.squid.cache_admin_message's value to the gateway utilizing a sophos.ClientInterface
func (e *EnduserMessagesSquidCacheAdminMessage) Update(client sophos.ClientInterface) (err error) {
	return UpdateEnduserMessagesSquidCacheAdminMessage(client, e.Value)
}

// EppAllowedNetworks represents the epp.allowed_networks node and implements sophos.Node
type EppAllowedNetworks struct{ Value []string }

// Get retrieves node epp.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (e *EppAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppAllowedNetworks(client)
	return err
}

// Update PUT's' epp.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (e *EppAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppAllowedNetworks(client, e.Value)
}

// EppCertificate represents the epp.certificate node and implements sophos.Node
type EppCertificate struct{ Value string }

// Get retrieves node epp.certificate's value from the gateway utilizing a sophos.ClientInterface
func (e *EppCertificate) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppCertificate(client)
	return err
}

// Update PUT's' epp.certificate's value to the gateway utilizing a sophos.ClientInterface
func (e *EppCertificate) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppCertificate(client, e.Value)
}

// EppCity represents the epp.city node and implements sophos.Node
type EppCity struct{ Value string }

// Get retrieves node epp.city's value from the gateway utilizing a sophos.ClientInterface
func (e *EppCity) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppCity(client)
	return err
}

// Update PUT's' epp.city's value to the gateway utilizing a sophos.ClientInterface
func (e *EppCity) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppCity(client, e.Value)
}

// EppCountry represents the epp.country node and implements sophos.Node
type EppCountry struct{ Value string }

// Get retrieves node epp.country's value from the gateway utilizing a sophos.ClientInterface
func (e *EppCountry) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppCountry(client)
	return err
}

// Update PUT's' epp.country's value to the gateway utilizing a sophos.ClientInterface
func (e *EppCountry) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppCountry(client, e.Value)
}

// EppDefaultEndpointsGroup represents the epp.default_endpoints_group node and implements sophos.Node
type EppDefaultEndpointsGroup struct{ Value string }

// Get retrieves node epp.default_endpoints_group's value from the gateway utilizing a sophos.ClientInterface
func (e *EppDefaultEndpointsGroup) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppDefaultEndpointsGroup(client)
	return err
}

// Update PUT's' epp.default_endpoints_group's value to the gateway utilizing a sophos.ClientInterface
func (e *EppDefaultEndpointsGroup) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppDefaultEndpointsGroup(client, e.Value)
}

// EppDevices represents the epp.devices node and implements sophos.Node
type EppDevices struct{ Value []interface{} }

// Get retrieves node epp.devices's value from the gateway utilizing a sophos.ClientInterface
func (e *EppDevices) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppDevices(client)
	return err
}

// Update PUT's' epp.devices's value to the gateway utilizing a sophos.ClientInterface
func (e *EppDevices) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppDevices(client, e.Value)
}

// EppEmail represents the epp.email node and implements sophos.Node
type EppEmail struct{ Value string }

// Get retrieves node epp.email's value from the gateway utilizing a sophos.ClientInterface
func (e *EppEmail) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppEmail(client)
	return err
}

// Update PUT's' epp.email's value to the gateway utilizing a sophos.ClientInterface
func (e *EppEmail) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppEmail(client, e.Value)
}

// EppEndpoints represents the epp.endpoints node and implements sophos.Node
type EppEndpoints struct{ Value []interface{} }

// Get retrieves node epp.endpoints's value from the gateway utilizing a sophos.ClientInterface
func (e *EppEndpoints) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppEndpoints(client)
	return err
}

// Update PUT's' epp.endpoints's value to the gateway utilizing a sophos.ClientInterface
func (e *EppEndpoints) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppEndpoints(client, e.Value)
}

// EppEndpointsGroups represents the epp.endpoints_groups node and implements sophos.Node
type EppEndpointsGroups struct{ Value []string }

// Get retrieves node epp.endpoints_groups's value from the gateway utilizing a sophos.ClientInterface
func (e *EppEndpointsGroups) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppEndpointsGroups(client)
	return err
}

// Update PUT's' epp.endpoints_groups's value to the gateway utilizing a sophos.ClientInterface
func (e *EppEndpointsGroups) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppEndpointsGroups(client, e.Value)
}

// EppExceptionsAv represents the epp.exceptions.av node and implements sophos.Node
type EppExceptionsAv struct{ Value []interface{} }

// Get retrieves node epp.exceptions.av's value from the gateway utilizing a sophos.ClientInterface
func (e *EppExceptionsAv) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppExceptionsAv(client)
	return err
}

// Update PUT's' epp.exceptions.av's value to the gateway utilizing a sophos.ClientInterface
func (e *EppExceptionsAv) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppExceptionsAv(client, e.Value)
}

// EppExceptionsDc represents the epp.exceptions.dc node and implements sophos.Node
type EppExceptionsDc struct{ Value []interface{} }

// Get retrieves node epp.exceptions.dc's value from the gateway utilizing a sophos.ClientInterface
func (e *EppExceptionsDc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppExceptionsDc(client)
	return err
}

// Update PUT's' epp.exceptions.dc's value to the gateway utilizing a sophos.ClientInterface
func (e *EppExceptionsDc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppExceptionsDc(client, e.Value)
}

// EppFallbackUrl represents the epp.fallback_url node and implements sophos.Node
type EppFallbackUrl struct{ Value string }

// Get retrieves node epp.fallback_url's value from the gateway utilizing a sophos.ClientInterface
func (e *EppFallbackUrl) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppFallbackUrl(client)
	return err
}

// Update PUT's' epp.fallback_url's value to the gateway utilizing a sophos.ClientInterface
func (e *EppFallbackUrl) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppFallbackUrl(client, e.Value)
}

// EppMagnetPassword represents the epp.magnet_password node and implements sophos.Node
type EppMagnetPassword struct{ Value string }

// Get retrieves node epp.magnet_password's value from the gateway utilizing a sophos.ClientInterface
func (e *EppMagnetPassword) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppMagnetPassword(client)
	return err
}

// Update PUT's' epp.magnet_password's value to the gateway utilizing a sophos.ClientInterface
func (e *EppMagnetPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppMagnetPassword(client, e.Value)
}

// EppMagnetUsername represents the epp.magnet_username node and implements sophos.Node
type EppMagnetUsername struct{ Value string }

// Get retrieves node epp.magnet_username's value from the gateway utilizing a sophos.ClientInterface
func (e *EppMagnetUsername) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppMagnetUsername(client)
	return err
}

// Update PUT's' epp.magnet_username's value to the gateway utilizing a sophos.ClientInterface
func (e *EppMagnetUsername) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppMagnetUsername(client, e.Value)
}

// EppOrganization represents the epp.organization node and implements sophos.Node
type EppOrganization struct{ Value string }

// Get retrieves node epp.organization's value from the gateway utilizing a sophos.ClientInterface
func (e *EppOrganization) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppOrganization(client)
	return err
}

// Update PUT's' epp.organization's value to the gateway utilizing a sophos.ClientInterface
func (e *EppOrganization) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppOrganization(client, e.Value)
}

// EppParentProxyHost represents the epp.parent_proxy_host node and implements sophos.Node
type EppParentProxyHost struct{ Value string }

// Get retrieves node epp.parent_proxy_host's value from the gateway utilizing a sophos.ClientInterface
func (e *EppParentProxyHost) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppParentProxyHost(client)
	return err
}

// Update PUT's' epp.parent_proxy_host's value to the gateway utilizing a sophos.ClientInterface
func (e *EppParentProxyHost) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppParentProxyHost(client, e.Value)
}

// EppParentProxyPort represents the epp.parent_proxy_port node and implements sophos.Node
type EppParentProxyPort struct{ Value int64 }

// Get retrieves node epp.parent_proxy_port's value from the gateway utilizing a sophos.ClientInterface
func (e *EppParentProxyPort) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppParentProxyPort(client)
	return err
}

// Update PUT's' epp.parent_proxy_port's value to the gateway utilizing a sophos.ClientInterface
func (e *EppParentProxyPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppParentProxyPort(client, e.Value)
}

// EppParentProxyStatus represents the epp.parent_proxy_status node and implements sophos.Node
type EppParentProxyStatus struct{ Value bool }

// Get retrieves node epp.parent_proxy_status's value from the gateway utilizing a sophos.ClientInterface
func (e *EppParentProxyStatus) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppParentProxyStatus(client)
	return err
}

// Update PUT's' epp.parent_proxy_status's value to the gateway utilizing a sophos.ClientInterface
func (e *EppParentProxyStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppParentProxyStatus(client, e.Value)
}

// EppPoliciesAv represents the epp.policies.av node and implements sophos.Node
type EppPoliciesAv struct{ Value []string }

// Get retrieves node epp.policies.av's value from the gateway utilizing a sophos.ClientInterface
func (e *EppPoliciesAv) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppPoliciesAv(client)
	return err
}

// Update PUT's' epp.policies.av's value to the gateway utilizing a sophos.ClientInterface
func (e *EppPoliciesAv) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppPoliciesAv(client, e.Value)
}

// EppPoliciesDc represents the epp.policies.dc node and implements sophos.Node
type EppPoliciesDc struct{ Value []string }

// Get retrieves node epp.policies.dc's value from the gateway utilizing a sophos.ClientInterface
func (e *EppPoliciesDc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppPoliciesDc(client)
	return err
}

// Update PUT's' epp.policies.dc's value to the gateway utilizing a sophos.ClientInterface
func (e *EppPoliciesDc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppPoliciesDc(client, e.Value)
}

// EppPort represents the epp.port node and implements sophos.Node
type EppPort struct{ Value int64 }

// Get retrieves node epp.port's value from the gateway utilizing a sophos.ClientInterface
func (e *EppPort) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppPort(client)
	return err
}

// Update PUT's' epp.port's value to the gateway utilizing a sophos.ClientInterface
func (e *EppPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppPort(client, e.Value)
}

// EppPrivateKey represents the epp.private_key node and implements sophos.Node
type EppPrivateKey struct{ Value string }

// Get retrieves node epp.private_key's value from the gateway utilizing a sophos.ClientInterface
func (e *EppPrivateKey) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppPrivateKey(client)
	return err
}

// Update PUT's' epp.private_key's value to the gateway utilizing a sophos.ClientInterface
func (e *EppPrivateKey) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppPrivateKey(client, e.Value)
}

// EppRegistrationToken represents the epp.registration_token node and implements sophos.Node
type EppRegistrationToken struct{ Value string }

// Get retrieves node epp.registration_token's value from the gateway utilizing a sophos.ClientInterface
func (e *EppRegistrationToken) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppRegistrationToken(client)
	return err
}

// Update PUT's' epp.registration_token's value to the gateway utilizing a sophos.ClientInterface
func (e *EppRegistrationToken) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppRegistrationToken(client, e.Value)
}

// EppStatusAv represents the epp.status.av node and implements sophos.Node
type EppStatusAv struct{ Value bool }

// Get retrieves node epp.status.av's value from the gateway utilizing a sophos.ClientInterface
func (e *EppStatusAv) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppStatusAv(client)
	return err
}

// Update PUT's' epp.status.av's value to the gateway utilizing a sophos.ClientInterface
func (e *EppStatusAv) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppStatusAv(client, e.Value)
}

// EppStatusBroker represents the epp.status.broker node and implements sophos.Node
type EppStatusBroker struct{ Value bool }

// Get retrieves node epp.status.broker's value from the gateway utilizing a sophos.ClientInterface
func (e *EppStatusBroker) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppStatusBroker(client)
	return err
}

// Update PUT's' epp.status.broker's value to the gateway utilizing a sophos.ClientInterface
func (e *EppStatusBroker) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppStatusBroker(client, e.Value)
}

// EppStatusDc represents the epp.status.dc node and implements sophos.Node
type EppStatusDc struct{ Value bool }

// Get retrieves node epp.status.dc's value from the gateway utilizing a sophos.ClientInterface
func (e *EppStatusDc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppStatusDc(client)
	return err
}

// Update PUT's' epp.status.dc's value to the gateway utilizing a sophos.ClientInterface
func (e *EppStatusDc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppStatusDc(client, e.Value)
}

// EppStatusEpp represents the epp.status.epp node and implements sophos.Node
type EppStatusEpp struct{ Value bool }

// Get retrieves node epp.status.epp's value from the gateway utilizing a sophos.ClientInterface
func (e *EppStatusEpp) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppStatusEpp(client)
	return err
}

// Update PUT's' epp.status.epp's value to the gateway utilizing a sophos.ClientInterface
func (e *EppStatusEpp) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppStatusEpp(client, e.Value)
}

// EppStatusWc represents the epp.status.wc node and implements sophos.Node
type EppStatusWc struct{ Value bool }

// Get retrieves node epp.status.wc's value from the gateway utilizing a sophos.ClientInterface
func (e *EppStatusWc) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppStatusWc(client)
	return err
}

// Update PUT's' epp.status.wc's value to the gateway utilizing a sophos.ClientInterface
func (e *EppStatusWc) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppStatusWc(client, e.Value)
}

// EppTamperPassword represents the epp.tamper_password node and implements sophos.Node
type EppTamperPassword struct{ Value string }

// Get retrieves node epp.tamper_password's value from the gateway utilizing a sophos.ClientInterface
func (e *EppTamperPassword) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppTamperPassword(client)
	return err
}

// Update PUT's' epp.tamper_password's value to the gateway utilizing a sophos.ClientInterface
func (e *EppTamperPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppTamperPassword(client, e.Value)
}

// EppVersion represents the epp.version node and implements sophos.Node
type EppVersion struct{ Value string }

// Get retrieves node epp.version's value from the gateway utilizing a sophos.ClientInterface
func (e *EppVersion) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppVersion(client)
	return err
}

// Update PUT's' epp.version's value to the gateway utilizing a sophos.ClientInterface
func (e *EppVersion) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppVersion(client, e.Value)
}

// EppWdxToken represents the epp.wdx_token node and implements sophos.Node
type EppWdxToken struct{ Value string }

// Get retrieves node epp.wdx_token's value from the gateway utilizing a sophos.ClientInterface
func (e *EppWdxToken) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetEppWdxToken(client)
	return err
}

// Update PUT's' epp.wdx_token's value to the gateway utilizing a sophos.ClientInterface
func (e *EppWdxToken) Update(client sophos.ClientInterface) (err error) {
	return UpdateEppWdxToken(client, e.Value)
}

// ExecutiveReportDailyArchive represents the executive_report.daily.archive node and implements sophos.Node
type ExecutiveReportDailyArchive struct{ Value bool }

// Get retrieves node executive_report.daily.archive's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyArchive) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportDailyArchive(client)
	return err
}

// Update PUT's' executive_report.daily.archive's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyArchive) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportDailyArchive(client, e.Value)
}

// ExecutiveReportDailyKeep represents the executive_report.daily.keep node and implements sophos.Node
type ExecutiveReportDailyKeep struct{ Value int64 }

// Get retrieves node executive_report.daily.keep's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyKeep) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportDailyKeep(client)
	return err
}

// Update PUT's' executive_report.daily.keep's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyKeep) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportDailyKeep(client, e.Value)
}

// ExecutiveReportDailyPdfrecipients represents the executive_report.daily.pdfrecipients node and implements sophos.Node
type ExecutiveReportDailyPdfrecipients struct{ Value []interface{} }

// Get retrieves node executive_report.daily.pdfrecipients's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyPdfrecipients) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportDailyPdfrecipients(client)
	return err
}

// Update PUT's' executive_report.daily.pdfrecipients's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyPdfrecipients) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportDailyPdfrecipients(client, e.Value)
}

// ExecutiveReportDailyRecipients represents the executive_report.daily.recipients node and implements sophos.Node
type ExecutiveReportDailyRecipients struct{ Value []string }

// Get retrieves node executive_report.daily.recipients's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyRecipients) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportDailyRecipients(client)
	return err
}

// Update PUT's' executive_report.daily.recipients's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyRecipients) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportDailyRecipients(client, e.Value)
}

// ExecutiveReportDailyStatus represents the executive_report.daily.status node and implements sophos.Node
type ExecutiveReportDailyStatus struct{ Value bool }

// Get retrieves node executive_report.daily.status's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyStatus) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportDailyStatus(client)
	return err
}

// Update PUT's' executive_report.daily.status's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportDailyStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportDailyStatus(client, e.Value)
}

// ExecutiveReportMonthlyArchive represents the executive_report.monthly.archive node and implements sophos.Node
type ExecutiveReportMonthlyArchive struct{ Value bool }

// Get retrieves node executive_report.monthly.archive's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyArchive) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportMonthlyArchive(client)
	return err
}

// Update PUT's' executive_report.monthly.archive's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyArchive) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportMonthlyArchive(client, e.Value)
}

// ExecutiveReportMonthlyKeep represents the executive_report.monthly.keep node and implements sophos.Node
type ExecutiveReportMonthlyKeep struct{ Value int64 }

// Get retrieves node executive_report.monthly.keep's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyKeep) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportMonthlyKeep(client)
	return err
}

// Update PUT's' executive_report.monthly.keep's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyKeep) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportMonthlyKeep(client, e.Value)
}

// ExecutiveReportMonthlyPdfrecipients represents the executive_report.monthly.pdfrecipients node and implements sophos.Node
type ExecutiveReportMonthlyPdfrecipients struct{ Value []interface{} }

// Get retrieves node executive_report.monthly.pdfrecipients's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyPdfrecipients) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportMonthlyPdfrecipients(client)
	return err
}

// Update PUT's' executive_report.monthly.pdfrecipients's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyPdfrecipients) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportMonthlyPdfrecipients(client, e.Value)
}

// ExecutiveReportMonthlyRecipients represents the executive_report.monthly.recipients node and implements sophos.Node
type ExecutiveReportMonthlyRecipients struct{ Value []interface{} }

// Get retrieves node executive_report.monthly.recipients's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyRecipients) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportMonthlyRecipients(client)
	return err
}

// Update PUT's' executive_report.monthly.recipients's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyRecipients) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportMonthlyRecipients(client, e.Value)
}

// ExecutiveReportMonthlyStatus represents the executive_report.monthly.status node and implements sophos.Node
type ExecutiveReportMonthlyStatus struct{ Value bool }

// Get retrieves node executive_report.monthly.status's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyStatus) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportMonthlyStatus(client)
	return err
}

// Update PUT's' executive_report.monthly.status's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportMonthlyStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportMonthlyStatus(client, e.Value)
}

// ExecutiveReportWeeklyArchive represents the executive_report.weekly.archive node and implements sophos.Node
type ExecutiveReportWeeklyArchive struct{ Value bool }

// Get retrieves node executive_report.weekly.archive's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyArchive) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportWeeklyArchive(client)
	return err
}

// Update PUT's' executive_report.weekly.archive's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyArchive) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportWeeklyArchive(client, e.Value)
}

// ExecutiveReportWeeklyFirstDayOfWeek represents the executive_report.weekly.first_day_of_week node and implements sophos.Node
type ExecutiveReportWeeklyFirstDayOfWeek struct{ Value map[string]interface{} }

// Get retrieves node executive_report.weekly.first_day_of_week's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyFirstDayOfWeek) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportWeeklyFirstDayOfWeek(client)
	return err
}

// Update PUT's' executive_report.weekly.first_day_of_week's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyFirstDayOfWeek) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportWeeklyFirstDayOfWeek(client, e.Value)
}

// ExecutiveReportWeeklyKeep represents the executive_report.weekly.keep node and implements sophos.Node
type ExecutiveReportWeeklyKeep struct{ Value int64 }

// Get retrieves node executive_report.weekly.keep's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyKeep) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportWeeklyKeep(client)
	return err
}

// Update PUT's' executive_report.weekly.keep's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyKeep) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportWeeklyKeep(client, e.Value)
}

// ExecutiveReportWeeklyPdfrecipients represents the executive_report.weekly.pdfrecipients node and implements sophos.Node
type ExecutiveReportWeeklyPdfrecipients struct{ Value []interface{} }

// Get retrieves node executive_report.weekly.pdfrecipients's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyPdfrecipients) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportWeeklyPdfrecipients(client)
	return err
}

// Update PUT's' executive_report.weekly.pdfrecipients's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyPdfrecipients) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportWeeklyPdfrecipients(client, e.Value)
}

// ExecutiveReportWeeklyRecipients represents the executive_report.weekly.recipients node and implements sophos.Node
type ExecutiveReportWeeklyRecipients struct{ Value []interface{} }

// Get retrieves node executive_report.weekly.recipients's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyRecipients) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportWeeklyRecipients(client)
	return err
}

// Update PUT's' executive_report.weekly.recipients's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyRecipients) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportWeeklyRecipients(client, e.Value)
}

// ExecutiveReportWeeklyStatus represents the executive_report.weekly.status node and implements sophos.Node
type ExecutiveReportWeeklyStatus struct{ Value bool }

// Get retrieves node executive_report.weekly.status's value from the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyStatus) Get(client sophos.ClientInterface) (err error) {
	e.Value, err = GetExecutiveReportWeeklyStatus(client)
	return err
}

// Update PUT's' executive_report.weekly.status's value to the gateway utilizing a sophos.ClientInterface
func (e *ExecutiveReportWeeklyStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateExecutiveReportWeeklyStatus(client, e.Value)
}

// FloodProtectionIcmpDstBurst represents the flood_protection.icmp.dst_burst node and implements sophos.Node
type FloodProtectionIcmpDstBurst struct{ Value int64 }

// Get retrieves node flood_protection.icmp.dst_burst's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpDstBurst) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpDstBurst(client)
	return err
}

// Update PUT's' flood_protection.icmp.dst_burst's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpDstBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpDstBurst(client, f.Value)
}

// FloodProtectionIcmpDstExpire represents the flood_protection.icmp.dst_expire node and implements sophos.Node
type FloodProtectionIcmpDstExpire struct{ Value int64 }

// Get retrieves node flood_protection.icmp.dst_expire's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpDstExpire) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpDstExpire(client)
	return err
}

// Update PUT's' flood_protection.icmp.dst_expire's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpDstExpire) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpDstExpire(client, f.Value)
}

// FloodProtectionIcmpDstGcInterval represents the flood_protection.icmp.dst_gc_interval node and implements sophos.Node
type FloodProtectionIcmpDstGcInterval struct{ Value int64 }

// Get retrieves node flood_protection.icmp.dst_gc_interval's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpDstGcInterval) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpDstGcInterval(client)
	return err
}

// Update PUT's' flood_protection.icmp.dst_gc_interval's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpDstGcInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpDstGcInterval(client, f.Value)
}

// FloodProtectionIcmpDstRate represents the flood_protection.icmp.dst_rate node and implements sophos.Node
type FloodProtectionIcmpDstRate struct{ Value int64 }

// Get retrieves node flood_protection.icmp.dst_rate's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpDstRate) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpDstRate(client)
	return err
}

// Update PUT's' flood_protection.icmp.dst_rate's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpDstRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpDstRate(client, f.Value)
}

// FloodProtectionIcmpLog represents the flood_protection.icmp.log node and implements sophos.Node
type FloodProtectionIcmpLog struct{ Value string }

// Get retrieves node flood_protection.icmp.log's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpLog) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpLog(client)
	return err
}

// Update PUT's' flood_protection.icmp.log's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpLog) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpLog(client, f.Value)
}

// FloodProtectionIcmpLogLimitBurst represents the flood_protection.icmp.log_limit_burst node and implements sophos.Node
type FloodProtectionIcmpLogLimitBurst struct{ Value int64 }

// Get retrieves node flood_protection.icmp.log_limit_burst's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpLogLimitBurst) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpLogLimitBurst(client)
	return err
}

// Update PUT's' flood_protection.icmp.log_limit_burst's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpLogLimitBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpLogLimitBurst(client, f.Value)
}

// FloodProtectionIcmpLogLimitRate represents the flood_protection.icmp.log_limit_rate node and implements sophos.Node
type FloodProtectionIcmpLogLimitRate struct{ Value int64 }

// Get retrieves node flood_protection.icmp.log_limit_rate's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpLogLimitRate) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpLogLimitRate(client)
	return err
}

// Update PUT's' flood_protection.icmp.log_limit_rate's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpLogLimitRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpLogLimitRate(client, f.Value)
}

// FloodProtectionIcmpMode represents the flood_protection.icmp.mode node and implements sophos.Node
type FloodProtectionIcmpMode struct{ Value string }

// Get retrieves node flood_protection.icmp.mode's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpMode) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpMode(client)
	return err
}

// Update PUT's' flood_protection.icmp.mode's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpMode(client, f.Value)
}

// FloodProtectionIcmpSrcBurst represents the flood_protection.icmp.src_burst node and implements sophos.Node
type FloodProtectionIcmpSrcBurst struct{ Value int64 }

// Get retrieves node flood_protection.icmp.src_burst's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpSrcBurst) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpSrcBurst(client)
	return err
}

// Update PUT's' flood_protection.icmp.src_burst's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpSrcBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpSrcBurst(client, f.Value)
}

// FloodProtectionIcmpSrcExpire represents the flood_protection.icmp.src_expire node and implements sophos.Node
type FloodProtectionIcmpSrcExpire struct{ Value int64 }

// Get retrieves node flood_protection.icmp.src_expire's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpSrcExpire) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpSrcExpire(client)
	return err
}

// Update PUT's' flood_protection.icmp.src_expire's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpSrcExpire) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpSrcExpire(client, f.Value)
}

// FloodProtectionIcmpSrcGcInterval represents the flood_protection.icmp.src_gc_interval node and implements sophos.Node
type FloodProtectionIcmpSrcGcInterval struct{ Value int64 }

// Get retrieves node flood_protection.icmp.src_gc_interval's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpSrcGcInterval) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpSrcGcInterval(client)
	return err
}

// Update PUT's' flood_protection.icmp.src_gc_interval's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpSrcGcInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpSrcGcInterval(client, f.Value)
}

// FloodProtectionIcmpSrcRate represents the flood_protection.icmp.src_rate node and implements sophos.Node
type FloodProtectionIcmpSrcRate struct{ Value int64 }

// Get retrieves node flood_protection.icmp.src_rate's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpSrcRate) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpSrcRate(client)
	return err
}

// Update PUT's' flood_protection.icmp.src_rate's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpSrcRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpSrcRate(client, f.Value)
}

// FloodProtectionIcmpStatus represents the flood_protection.icmp.status node and implements sophos.Node
type FloodProtectionIcmpStatus struct{ Value bool }

// Get retrieves node flood_protection.icmp.status's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpStatus) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionIcmpStatus(client)
	return err
}

// Update PUT's' flood_protection.icmp.status's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionIcmpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionIcmpStatus(client, f.Value)
}

// FloodProtectionSynDstBurst represents the flood_protection.syn.dst_burst node and implements sophos.Node
type FloodProtectionSynDstBurst struct{ Value int64 }

// Get retrieves node flood_protection.syn.dst_burst's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynDstBurst) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynDstBurst(client)
	return err
}

// Update PUT's' flood_protection.syn.dst_burst's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynDstBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynDstBurst(client, f.Value)
}

// FloodProtectionSynDstExpire represents the flood_protection.syn.dst_expire node and implements sophos.Node
type FloodProtectionSynDstExpire struct{ Value int64 }

// Get retrieves node flood_protection.syn.dst_expire's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynDstExpire) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynDstExpire(client)
	return err
}

// Update PUT's' flood_protection.syn.dst_expire's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynDstExpire) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynDstExpire(client, f.Value)
}

// FloodProtectionSynDstGcInterval represents the flood_protection.syn.dst_gc_interval node and implements sophos.Node
type FloodProtectionSynDstGcInterval struct{ Value int64 }

// Get retrieves node flood_protection.syn.dst_gc_interval's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynDstGcInterval) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynDstGcInterval(client)
	return err
}

// Update PUT's' flood_protection.syn.dst_gc_interval's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynDstGcInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynDstGcInterval(client, f.Value)
}

// FloodProtectionSynDstRate represents the flood_protection.syn.dst_rate node and implements sophos.Node
type FloodProtectionSynDstRate struct{ Value int64 }

// Get retrieves node flood_protection.syn.dst_rate's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynDstRate) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynDstRate(client)
	return err
}

// Update PUT's' flood_protection.syn.dst_rate's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynDstRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynDstRate(client, f.Value)
}

// FloodProtectionSynLog represents the flood_protection.syn.log node and implements sophos.Node
type FloodProtectionSynLog struct{ Value string }

// Get retrieves node flood_protection.syn.log's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynLog) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynLog(client)
	return err
}

// Update PUT's' flood_protection.syn.log's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynLog) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynLog(client, f.Value)
}

// FloodProtectionSynLogLimitBurst represents the flood_protection.syn.log_limit_burst node and implements sophos.Node
type FloodProtectionSynLogLimitBurst struct{ Value int64 }

// Get retrieves node flood_protection.syn.log_limit_burst's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynLogLimitBurst) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynLogLimitBurst(client)
	return err
}

// Update PUT's' flood_protection.syn.log_limit_burst's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynLogLimitBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynLogLimitBurst(client, f.Value)
}

// FloodProtectionSynLogLimitRate represents the flood_protection.syn.log_limit_rate node and implements sophos.Node
type FloodProtectionSynLogLimitRate struct{ Value int64 }

// Get retrieves node flood_protection.syn.log_limit_rate's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynLogLimitRate) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynLogLimitRate(client)
	return err
}

// Update PUT's' flood_protection.syn.log_limit_rate's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynLogLimitRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynLogLimitRate(client, f.Value)
}

// FloodProtectionSynMode represents the flood_protection.syn.mode node and implements sophos.Node
type FloodProtectionSynMode struct{ Value string }

// Get retrieves node flood_protection.syn.mode's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynMode) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynMode(client)
	return err
}

// Update PUT's' flood_protection.syn.mode's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynMode(client, f.Value)
}

// FloodProtectionSynSrcBurst represents the flood_protection.syn.src_burst node and implements sophos.Node
type FloodProtectionSynSrcBurst struct{ Value int64 }

// Get retrieves node flood_protection.syn.src_burst's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynSrcBurst) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynSrcBurst(client)
	return err
}

// Update PUT's' flood_protection.syn.src_burst's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynSrcBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynSrcBurst(client, f.Value)
}

// FloodProtectionSynSrcExpire represents the flood_protection.syn.src_expire node and implements sophos.Node
type FloodProtectionSynSrcExpire struct{ Value int64 }

// Get retrieves node flood_protection.syn.src_expire's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynSrcExpire) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynSrcExpire(client)
	return err
}

// Update PUT's' flood_protection.syn.src_expire's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynSrcExpire) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynSrcExpire(client, f.Value)
}

// FloodProtectionSynSrcGcInterval represents the flood_protection.syn.src_gc_interval node and implements sophos.Node
type FloodProtectionSynSrcGcInterval struct{ Value int64 }

// Get retrieves node flood_protection.syn.src_gc_interval's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynSrcGcInterval) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynSrcGcInterval(client)
	return err
}

// Update PUT's' flood_protection.syn.src_gc_interval's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynSrcGcInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynSrcGcInterval(client, f.Value)
}

// FloodProtectionSynSrcRate represents the flood_protection.syn.src_rate node and implements sophos.Node
type FloodProtectionSynSrcRate struct{ Value int64 }

// Get retrieves node flood_protection.syn.src_rate's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynSrcRate) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynSrcRate(client)
	return err
}

// Update PUT's' flood_protection.syn.src_rate's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynSrcRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynSrcRate(client, f.Value)
}

// FloodProtectionSynStatus represents the flood_protection.syn.status node and implements sophos.Node
type FloodProtectionSynStatus struct{ Value bool }

// Get retrieves node flood_protection.syn.status's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynStatus) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionSynStatus(client)
	return err
}

// Update PUT's' flood_protection.syn.status's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionSynStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionSynStatus(client, f.Value)
}

// FloodProtectionUdpDstBurst represents the flood_protection.udp.dst_burst node and implements sophos.Node
type FloodProtectionUdpDstBurst struct{ Value int64 }

// Get retrieves node flood_protection.udp.dst_burst's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpDstBurst) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpDstBurst(client)
	return err
}

// Update PUT's' flood_protection.udp.dst_burst's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpDstBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpDstBurst(client, f.Value)
}

// FloodProtectionUdpDstExpire represents the flood_protection.udp.dst_expire node and implements sophos.Node
type FloodProtectionUdpDstExpire struct{ Value int64 }

// Get retrieves node flood_protection.udp.dst_expire's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpDstExpire) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpDstExpire(client)
	return err
}

// Update PUT's' flood_protection.udp.dst_expire's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpDstExpire) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpDstExpire(client, f.Value)
}

// FloodProtectionUdpDstGcInterval represents the flood_protection.udp.dst_gc_interval node and implements sophos.Node
type FloodProtectionUdpDstGcInterval struct{ Value int64 }

// Get retrieves node flood_protection.udp.dst_gc_interval's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpDstGcInterval) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpDstGcInterval(client)
	return err
}

// Update PUT's' flood_protection.udp.dst_gc_interval's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpDstGcInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpDstGcInterval(client, f.Value)
}

// FloodProtectionUdpDstRate represents the flood_protection.udp.dst_rate node and implements sophos.Node
type FloodProtectionUdpDstRate struct{ Value int64 }

// Get retrieves node flood_protection.udp.dst_rate's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpDstRate) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpDstRate(client)
	return err
}

// Update PUT's' flood_protection.udp.dst_rate's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpDstRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpDstRate(client, f.Value)
}

// FloodProtectionUdpLog represents the flood_protection.udp.log node and implements sophos.Node
type FloodProtectionUdpLog struct{ Value string }

// Get retrieves node flood_protection.udp.log's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpLog) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpLog(client)
	return err
}

// Update PUT's' flood_protection.udp.log's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpLog) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpLog(client, f.Value)
}

// FloodProtectionUdpLogLimitBurst represents the flood_protection.udp.log_limit_burst node and implements sophos.Node
type FloodProtectionUdpLogLimitBurst struct{ Value int64 }

// Get retrieves node flood_protection.udp.log_limit_burst's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpLogLimitBurst) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpLogLimitBurst(client)
	return err
}

// Update PUT's' flood_protection.udp.log_limit_burst's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpLogLimitBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpLogLimitBurst(client, f.Value)
}

// FloodProtectionUdpLogLimitRate represents the flood_protection.udp.log_limit_rate node and implements sophos.Node
type FloodProtectionUdpLogLimitRate struct{ Value int64 }

// Get retrieves node flood_protection.udp.log_limit_rate's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpLogLimitRate) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpLogLimitRate(client)
	return err
}

// Update PUT's' flood_protection.udp.log_limit_rate's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpLogLimitRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpLogLimitRate(client, f.Value)
}

// FloodProtectionUdpMode represents the flood_protection.udp.mode node and implements sophos.Node
type FloodProtectionUdpMode struct{ Value string }

// Get retrieves node flood_protection.udp.mode's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpMode) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpMode(client)
	return err
}

// Update PUT's' flood_protection.udp.mode's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpMode(client, f.Value)
}

// FloodProtectionUdpSrcBurst represents the flood_protection.udp.src_burst node and implements sophos.Node
type FloodProtectionUdpSrcBurst struct{ Value int64 }

// Get retrieves node flood_protection.udp.src_burst's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpSrcBurst) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpSrcBurst(client)
	return err
}

// Update PUT's' flood_protection.udp.src_burst's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpSrcBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpSrcBurst(client, f.Value)
}

// FloodProtectionUdpSrcExpire represents the flood_protection.udp.src_expire node and implements sophos.Node
type FloodProtectionUdpSrcExpire struct{ Value int64 }

// Get retrieves node flood_protection.udp.src_expire's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpSrcExpire) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpSrcExpire(client)
	return err
}

// Update PUT's' flood_protection.udp.src_expire's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpSrcExpire) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpSrcExpire(client, f.Value)
}

// FloodProtectionUdpSrcGcInterval represents the flood_protection.udp.src_gc_interval node and implements sophos.Node
type FloodProtectionUdpSrcGcInterval struct{ Value int64 }

// Get retrieves node flood_protection.udp.src_gc_interval's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpSrcGcInterval) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpSrcGcInterval(client)
	return err
}

// Update PUT's' flood_protection.udp.src_gc_interval's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpSrcGcInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpSrcGcInterval(client, f.Value)
}

// FloodProtectionUdpSrcRate represents the flood_protection.udp.src_rate node and implements sophos.Node
type FloodProtectionUdpSrcRate struct{ Value int64 }

// Get retrieves node flood_protection.udp.src_rate's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpSrcRate) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpSrcRate(client)
	return err
}

// Update PUT's' flood_protection.udp.src_rate's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpSrcRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpSrcRate(client, f.Value)
}

// FloodProtectionUdpStatus represents the flood_protection.udp.status node and implements sophos.Node
type FloodProtectionUdpStatus struct{ Value bool }

// Get retrieves node flood_protection.udp.status's value from the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpStatus) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFloodProtectionUdpStatus(client)
	return err
}

// Update PUT's' flood_protection.udp.status's value to the gateway utilizing a sophos.ClientInterface
func (f *FloodProtectionUdpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateFloodProtectionUdpStatus(client, f.Value)
}

// FtpAllowedClients represents the ftp.allowed_clients node and implements sophos.Node
type FtpAllowedClients struct{ Value []interface{} }

// Get retrieves node ftp.allowed_clients's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpAllowedClients) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpAllowedClients(client)
	return err
}

// Update PUT's' ftp.allowed_clients's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpAllowedClients) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpAllowedClients(client, f.Value)
}

// FtpAllowedServers represents the ftp.allowed_servers node and implements sophos.Node
type FtpAllowedServers struct{ Value []string }

// Get retrieves node ftp.allowed_servers's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpAllowedServers) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpAllowedServers(client)
	return err
}

// Update PUT's' ftp.allowed_servers's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpAllowedServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpAllowedServers(client, f.Value)
}

// FtpCffAv represents the ftp.cff_av node and implements sophos.Node
type FtpCffAv struct{ Value bool }

// Get retrieves node ftp.cff_av's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpCffAv) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpCffAv(client)
	return err
}

// Update PUT's' ftp.cff_av's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpCffAv) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpCffAv(client, f.Value)
}

// FtpCffAvEngines represents the ftp.cff_av_engines node and implements sophos.Node
type FtpCffAvEngines struct{ Value string }

// Get retrieves node ftp.cff_av_engines's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpCffAvEngines) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpCffAvEngines(client)
	return err
}

// Update PUT's' ftp.cff_av_engines's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpCffAvEngines) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpCffAvEngines(client, f.Value)
}

// FtpCffFileExtensions represents the ftp.cff_file_extensions node and implements sophos.Node
type FtpCffFileExtensions struct{ Value []interface{} }

// Get retrieves node ftp.cff_file_extensions's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpCffFileExtensions) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpCffFileExtensions(client)
	return err
}

// Update PUT's' ftp.cff_file_extensions's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpCffFileExtensions) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpCffFileExtensions(client, f.Value)
}

// FtpExceptions represents the ftp.exceptions node and implements sophos.Node
type FtpExceptions struct{ Value []interface{} }

// Get retrieves node ftp.exceptions's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpExceptions) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpExceptions(client)
	return err
}

// Update PUT's' ftp.exceptions's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpExceptions) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpExceptions(client, f.Value)
}

// FtpMaxFileSize represents the ftp.max_file_size node and implements sophos.Node
type FtpMaxFileSize struct{ Value int64 }

// Get retrieves node ftp.max_file_size's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpMaxFileSize) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpMaxFileSize(client)
	return err
}

// Update PUT's' ftp.max_file_size's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpMaxFileSize) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpMaxFileSize(client, f.Value)
}

// FtpMsWinMode represents the ftp.ms_win_mode node and implements sophos.Node
type FtpMsWinMode struct{ Value bool }

// Get retrieves node ftp.ms_win_mode's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpMsWinMode) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpMsWinMode(client)
	return err
}

// Update PUT's' ftp.ms_win_mode's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpMsWinMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpMsWinMode(client, f.Value)
}

// FtpOperationMode represents the ftp.operation_mode node and implements sophos.Node
type FtpOperationMode struct{ Value string }

// Get retrieves node ftp.operation_mode's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpOperationMode) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpOperationMode(client)
	return err
}

// Update PUT's' ftp.operation_mode's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpOperationMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpOperationMode(client, f.Value)
}

// FtpRestrictedServers represents the ftp.restricted_servers node and implements sophos.Node
type FtpRestrictedServers struct{ Value []string }

// Get retrieves node ftp.restricted_servers's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpRestrictedServers) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpRestrictedServers(client)
	return err
}

// Update PUT's' ftp.restricted_servers's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpRestrictedServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpRestrictedServers(client, f.Value)
}

// FtpStatus represents the ftp.status node and implements sophos.Node
type FtpStatus struct{ Value bool }

// Get retrieves node ftp.status's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpStatus) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpStatus(client)
	return err
}

// Update PUT's' ftp.status's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpStatus(client, f.Value)
}

// FtpTransparentSkip represents the ftp.transparent_skip node and implements sophos.Node
type FtpTransparentSkip struct{ Value []interface{} }

// Get retrieves node ftp.transparent_skip's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpTransparentSkip) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpTransparentSkip(client)
	return err
}

// Update PUT's' ftp.transparent_skip's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpTransparentSkip) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpTransparentSkip(client, f.Value)
}

// FtpTransparentSkipAutoPf represents the ftp.transparent_skip_auto_pf node and implements sophos.Node
type FtpTransparentSkipAutoPf struct{ Value bool }

// Get retrieves node ftp.transparent_skip_auto_pf's value from the gateway utilizing a sophos.ClientInterface
func (f *FtpTransparentSkipAutoPf) Get(client sophos.ClientInterface) (err error) {
	f.Value, err = GetFtpTransparentSkipAutoPf(client)
	return err
}

// Update PUT's' ftp.transparent_skip_auto_pf's value to the gateway utilizing a sophos.ClientInterface
func (f *FtpTransparentSkipAutoPf) Update(client sophos.ClientInterface) (err error) {
	return UpdateFtpTransparentSkipAutoPf(client, f.Value)
}

// GenericProxyRules represents the generic_proxy.rules node and implements sophos.Node
type GenericProxyRules struct{ Value []interface{} }

// Get retrieves node generic_proxy.rules's value from the gateway utilizing a sophos.ClientInterface
func (g *GenericProxyRules) Get(client sophos.ClientInterface) (err error) {
	g.Value, err = GetGenericProxyRules(client)
	return err
}

// Update PUT's' generic_proxy.rules's value to the gateway utilizing a sophos.ClientInterface
func (g *GenericProxyRules) Update(client sophos.ClientInterface) (err error) {
	return UpdateGenericProxyRules(client, g.Value)
}

// GeoipCountriesDst represents the geoip.countries_dst node and implements sophos.Node
type GeoipCountriesDst struct{ Value []string }

// Get retrieves node geoip.countries_dst's value from the gateway utilizing a sophos.ClientInterface
func (g *GeoipCountriesDst) Get(client sophos.ClientInterface) (err error) {
	g.Value, err = GetGeoipCountriesDst(client)
	return err
}

// Update PUT's' geoip.countries_dst's value to the gateway utilizing a sophos.ClientInterface
func (g *GeoipCountriesDst) Update(client sophos.ClientInterface) (err error) {
	return UpdateGeoipCountriesDst(client, g.Value)
}

// GeoipCountriesSrc represents the geoip.countries_src node and implements sophos.Node
type GeoipCountriesSrc struct{ Value []string }

// Get retrieves node geoip.countries_src's value from the gateway utilizing a sophos.ClientInterface
func (g *GeoipCountriesSrc) Get(client sophos.ClientInterface) (err error) {
	g.Value, err = GetGeoipCountriesSrc(client)
	return err
}

// Update PUT's' geoip.countries_src's value to the gateway utilizing a sophos.ClientInterface
func (g *GeoipCountriesSrc) Update(client sophos.ClientInterface) (err error) {
	return UpdateGeoipCountriesSrc(client, g.Value)
}

// GeoipExceptions represents the geoip.exceptions node and implements sophos.Node
type GeoipExceptions struct{ Value []interface{} }

// Get retrieves node geoip.exceptions's value from the gateway utilizing a sophos.ClientInterface
func (g *GeoipExceptions) Get(client sophos.ClientInterface) (err error) {
	g.Value, err = GetGeoipExceptions(client)
	return err
}

// Update PUT's' geoip.exceptions's value to the gateway utilizing a sophos.ClientInterface
func (g *GeoipExceptions) Update(client sophos.ClientInterface) (err error) {
	return UpdateGeoipExceptions(client, g.Value)
}

// GeoipLog represents the geoip.log node and implements sophos.Node
type GeoipLog struct{ Value string }

// Get retrieves node geoip.log's value from the gateway utilizing a sophos.ClientInterface
func (g *GeoipLog) Get(client sophos.ClientInterface) (err error) {
	g.Value, err = GetGeoipLog(client)
	return err
}

// Update PUT's' geoip.log's value to the gateway utilizing a sophos.ClientInterface
func (g *GeoipLog) Update(client sophos.ClientInterface) (err error) {
	return UpdateGeoipLog(client, g.Value)
}

// GeoipStatus represents the geoip.status node and implements sophos.Node
type GeoipStatus struct{ Value bool }

// Get retrieves node geoip.status's value from the gateway utilizing a sophos.ClientInterface
func (g *GeoipStatus) Get(client sophos.ClientInterface) (err error) {
	g.Value, err = GetGeoipStatus(client)
	return err
}

// Update PUT's' geoip.status's value to the gateway utilizing a sophos.ClientInterface
func (g *GeoipStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateGeoipStatus(client, g.Value)
}

// H323AllowedNetworks represents the h323.allowed_networks node and implements sophos.Node
type H323AllowedNetworks struct{ Value []interface{} }

// Get retrieves node h323.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (h *H323AllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetH323AllowedNetworks(client)
	return err
}

// Update PUT's' h323.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (h *H323AllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateH323AllowedNetworks(client, h.Value)
}

// H323LogRelated represents the h323.log_related node and implements sophos.Node
type H323LogRelated struct{ Value bool }

// Get retrieves node h323.log_related's value from the gateway utilizing a sophos.ClientInterface
func (h *H323LogRelated) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetH323LogRelated(client)
	return err
}

// Update PUT's' h323.log_related's value to the gateway utilizing a sophos.ClientInterface
func (h *H323LogRelated) Update(client sophos.ClientInterface) (err error) {
	return UpdateH323LogRelated(client, h.Value)
}

// H323Servers represents the h323.servers node and implements sophos.Node
type H323Servers struct{ Value []interface{} }

// Get retrieves node h323.servers's value from the gateway utilizing a sophos.ClientInterface
func (h *H323Servers) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetH323Servers(client)
	return err
}

// Update PUT's' h323.servers's value to the gateway utilizing a sophos.ClientInterface
func (h *H323Servers) Update(client sophos.ClientInterface) (err error) {
	return UpdateH323Servers(client, h.Value)
}

// H323Status represents the h323.status node and implements sophos.Node
type H323Status struct{ Value bool }

// Get retrieves node h323.status's value from the gateway utilizing a sophos.ClientInterface
func (h *H323Status) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetH323Status(client)
	return err
}

// Update PUT's' h323.status's value to the gateway utilizing a sophos.ClientInterface
func (h *H323Status) Update(client sophos.ClientInterface) (err error) {
	return UpdateH323Status(client, h.Value)
}

// HaAdvancedAutojoin represents the ha.advanced.autojoin node and implements sophos.Node
type HaAdvancedAutojoin struct{ Value bool }

// Get retrieves node ha.advanced.autojoin's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedAutojoin) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedAutojoin(client)
	return err
}

// Update PUT's' ha.advanced.autojoin's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedAutojoin) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedAutojoin(client, h.Value)
}

// HaAdvancedColdRollback represents the ha.advanced.cold_rollback node and implements sophos.Node
type HaAdvancedColdRollback struct{ Value bool }

// Get retrieves node ha.advanced.cold_rollback's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedColdRollback) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedColdRollback(client)
	return err
}

// Update PUT's' ha.advanced.cold_rollback's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedColdRollback) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedColdRollback(client, h.Value)
}

// HaAdvancedHttpPersistenceTime represents the ha.advanced.http_persistence_time node and implements sophos.Node
type HaAdvancedHttpPersistenceTime struct{ Value map[string]interface{} }

// Get retrieves node ha.advanced.http_persistence_time's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedHttpPersistenceTime) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedHttpPersistenceTime(client)
	return err
}

// Update PUT's' ha.advanced.http_persistence_time's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedHttpPersistenceTime) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedHttpPersistenceTime(client, h.Value)
}

// HaAdvancedLoadTakeover represents the ha.advanced.load_takeover node and implements sophos.Node
type HaAdvancedLoadTakeover struct{ Value int64 }

// Get retrieves node ha.advanced.load_takeover's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedLoadTakeover) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedLoadTakeover(client)
	return err
}

// Update PUT's' ha.advanced.load_takeover's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedLoadTakeover) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedLoadTakeover(client, h.Value)
}

// HaAdvancedLoadWarn represents the ha.advanced.load_warn node and implements sophos.Node
type HaAdvancedLoadWarn struct{ Value int64 }

// Get retrieves node ha.advanced.load_warn's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedLoadWarn) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedLoadWarn(client)
	return err
}

// Update PUT's' ha.advanced.load_warn's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedLoadWarn) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedLoadWarn(client, h.Value)
}

// HaAdvancedMaxNodes represents the ha.advanced.max_nodes node and implements sophos.Node
type HaAdvancedMaxNodes struct{ Value int64 }

// Get retrieves node ha.advanced.max_nodes's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedMaxNodes) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedMaxNodes(client)
	return err
}

// Update PUT's' ha.advanced.max_nodes's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedMaxNodes) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedMaxNodes(client, h.Value)
}

// HaAdvancedMtu represents the ha.advanced.mtu node and implements sophos.Node
type HaAdvancedMtu struct{ Value string }

// Get retrieves node ha.advanced.mtu's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedMtu) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedMtu(client)
	return err
}

// Update PUT's' ha.advanced.mtu's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedMtu) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedMtu(client, h.Value)
}

// HaAdvancedNetconsole represents the ha.advanced.netconsole node and implements sophos.Node
type HaAdvancedNetconsole struct{ Value bool }

// Get retrieves node ha.advanced.netconsole's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedNetconsole) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedNetconsole(client)
	return err
}

// Update PUT's' ha.advanced.netconsole's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedNetconsole) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedNetconsole(client, h.Value)
}

// HaAdvancedPreempt represents the ha.advanced.preempt node and implements sophos.Node
type HaAdvancedPreempt struct{ Value string }

// Get retrieves node ha.advanced.preempt's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedPreempt) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedPreempt(client)
	return err
}

// Update PUT's' ha.advanced.preempt's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedPreempt) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedPreempt(client, h.Value)
}

// HaAdvancedUniqueId represents the ha.advanced.unique_id node and implements sophos.Node
type HaAdvancedUniqueId struct{ Value int64 }

// Get retrieves node ha.advanced.unique_id's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedUniqueId) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedUniqueId(client)
	return err
}

// Update PUT's' ha.advanced.unique_id's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedUniqueId) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedUniqueId(client, h.Value)
}

// HaAdvancedVirtualMac represents the ha.advanced.virtual_mac node and implements sophos.Node
type HaAdvancedVirtualMac struct{ Value bool }

// Get retrieves node ha.advanced.virtual_mac's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedVirtualMac) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAdvancedVirtualMac(client)
	return err
}

// Update PUT's' ha.advanced.virtual_mac's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAdvancedVirtualMac) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAdvancedVirtualMac(client, h.Value)
}

// HaAwsCloudwatchProfile represents the ha.aws.cloudwatch.profile node and implements sophos.Node
type HaAwsCloudwatchProfile struct{ Value string }

// Get retrieves node ha.aws.cloudwatch.profile's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsCloudwatchProfile) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsCloudwatchProfile(client)
	return err
}

// Update PUT's' ha.aws.cloudwatch.profile's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsCloudwatchProfile) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsCloudwatchProfile(client, h.Value)
}

// HaAwsCloudwatchStatus represents the ha.aws.cloudwatch.status node and implements sophos.Node
type HaAwsCloudwatchStatus struct{ Value bool }

// Get retrieves node ha.aws.cloudwatch.status's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsCloudwatchStatus) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsCloudwatchStatus(client)
	return err
}

// Update PUT's' ha.aws.cloudwatch.status's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsCloudwatchStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsCloudwatchStatus(client, h.Value)
}

// HaAwsConfdBackup represents the ha.aws.confd.backup node and implements sophos.Node
type HaAwsConfdBackup struct{ Value bool }

// Get retrieves node ha.aws.confd.backup's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsConfdBackup) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsConfdBackup(client)
	return err
}

// Update PUT's' ha.aws.confd.backup's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsConfdBackup) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsConfdBackup(client, h.Value)
}

// HaAwsConfdBackupInterval represents the ha.aws.confd.backup_interval node and implements sophos.Node
type HaAwsConfdBackupInterval struct{ Value int64 }

// Get retrieves node ha.aws.confd.backup_interval's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsConfdBackupInterval) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsConfdBackupInterval(client)
	return err
}

// Update PUT's' ha.aws.confd.backup_interval's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsConfdBackupInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsConfdBackupInterval(client, h.Value)
}

// HaAwsConfdRestore represents the ha.aws.confd.restore node and implements sophos.Node
type HaAwsConfdRestore struct{ Value bool }

// Get retrieves node ha.aws.confd.restore's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsConfdRestore) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsConfdRestore(client)
	return err
}

// Update PUT's' ha.aws.confd.restore's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsConfdRestore) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsConfdRestore(client, h.Value)
}

// HaAwsConfdRestoreDone represents the ha.aws.confd.restore_done node and implements sophos.Node
type HaAwsConfdRestoreDone struct{ Value bool }

// Get retrieves node ha.aws.confd.restore_done's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsConfdRestoreDone) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsConfdRestoreDone(client)
	return err
}

// Update PUT's' ha.aws.confd.restore_done's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsConfdRestoreDone) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsConfdRestoreDone(client, h.Value)
}

// HaAwsElasticIp represents the ha.aws.elastic_ip node and implements sophos.Node
type HaAwsElasticIp struct{ Value string }

// Get retrieves node ha.aws.elastic_ip's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsElasticIp) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsElasticIp(client)
	return err
}

// Update PUT's' ha.aws.elastic_ip's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsElasticIp) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsElasticIp(client, h.Value)
}

// HaAwsPostgresArchiveTimeout represents the ha.aws.postgres.archive_timeout node and implements sophos.Node
type HaAwsPostgresArchiveTimeout struct{ Value int64 }

// Get retrieves node ha.aws.postgres.archive_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsPostgresArchiveTimeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsPostgresArchiveTimeout(client)
	return err
}

// Update PUT's' ha.aws.postgres.archive_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsPostgresArchiveTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsPostgresArchiveTimeout(client, h.Value)
}

// HaAwsPostgresBackup represents the ha.aws.postgres.backup node and implements sophos.Node
type HaAwsPostgresBackup struct{ Value bool }

// Get retrieves node ha.aws.postgres.backup's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsPostgresBackup) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsPostgresBackup(client)
	return err
}

// Update PUT's' ha.aws.postgres.backup's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsPostgresBackup) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsPostgresBackup(client, h.Value)
}

// HaAwsPostgresBaseBackupInterval represents the ha.aws.postgres.base_backup_interval node and implements sophos.Node
type HaAwsPostgresBaseBackupInterval struct{ Value int64 }

// Get retrieves node ha.aws.postgres.base_backup_interval's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsPostgresBaseBackupInterval) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsPostgresBaseBackupInterval(client)
	return err
}

// Update PUT's' ha.aws.postgres.base_backup_interval's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsPostgresBaseBackupInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsPostgresBaseBackupInterval(client, h.Value)
}

// HaAwsPostgresRestore represents the ha.aws.postgres.restore node and implements sophos.Node
type HaAwsPostgresRestore struct{ Value bool }

// Get retrieves node ha.aws.postgres.restore's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsPostgresRestore) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsPostgresRestore(client)
	return err
}

// Update PUT's' ha.aws.postgres.restore's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsPostgresRestore) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsPostgresRestore(client, h.Value)
}

// HaAwsS3Bucket represents the ha.aws.s3_bucket node and implements sophos.Node
type HaAwsS3Bucket struct{ Value string }

// Get retrieves node ha.aws.s3_bucket's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsS3Bucket) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsS3Bucket(client)
	return err
}

// Update PUT's' ha.aws.s3_bucket's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsS3Bucket) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsS3Bucket(client, h.Value)
}

// HaAwsStackName represents the ha.aws.stack_name node and implements sophos.Node
type HaAwsStackName struct{ Value string }

// Get retrieves node ha.aws.stack_name's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsStackName) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsStackName(client)
	return err
}

// Update PUT's' ha.aws.stack_name's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsStackName) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsStackName(client, h.Value)
}

// HaAwsSyslogBackup represents the ha.aws.syslog.backup node and implements sophos.Node
type HaAwsSyslogBackup struct{ Value bool }

// Get retrieves node ha.aws.syslog.backup's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsSyslogBackup) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsSyslogBackup(client)
	return err
}

// Update PUT's' ha.aws.syslog.backup's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsSyslogBackup) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsSyslogBackup(client, h.Value)
}

// HaAwsSyslogRestore represents the ha.aws.syslog.restore node and implements sophos.Node
type HaAwsSyslogRestore struct{ Value bool }

// Get retrieves node ha.aws.syslog.restore's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsSyslogRestore) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsSyslogRestore(client)
	return err
}

// Update PUT's' ha.aws.syslog.restore's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsSyslogRestore) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsSyslogRestore(client, h.Value)
}

// HaAwsSyslogRestorePeriod represents the ha.aws.syslog.restore_period node and implements sophos.Node
type HaAwsSyslogRestorePeriod struct{ Value int64 }

// Get retrieves node ha.aws.syslog.restore_period's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsSyslogRestorePeriod) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsSyslogRestorePeriod(client)
	return err
}

// Update PUT's' ha.aws.syslog.restore_period's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsSyslogRestorePeriod) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsSyslogRestorePeriod(client, h.Value)
}

// HaAwsTrustedNetwork represents the ha.aws.trusted_network node and implements sophos.Node
type HaAwsTrustedNetwork struct{ Value string }

// Get retrieves node ha.aws.trusted_network's value from the gateway utilizing a sophos.ClientInterface
func (h *HaAwsTrustedNetwork) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaAwsTrustedNetwork(client)
	return err
}

// Update PUT's' ha.aws.trusted_network's value to the gateway utilizing a sophos.ClientInterface
func (h *HaAwsTrustedNetwork) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaAwsTrustedNetwork(client, h.Value)
}

// HaClusterFtp represents the ha.cluster.ftp node and implements sophos.Node
type HaClusterFtp struct{ Value []interface{} }

// Get retrieves node ha.cluster.ftp's value from the gateway utilizing a sophos.ClientInterface
func (h *HaClusterFtp) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaClusterFtp(client)
	return err
}

// Update PUT's' ha.cluster.ftp's value to the gateway utilizing a sophos.ClientInterface
func (h *HaClusterFtp) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaClusterFtp(client, h.Value)
}

// HaClusterHttp represents the ha.cluster.http node and implements sophos.Node
type HaClusterHttp struct{ Value []interface{} }

// Get retrieves node ha.cluster.http's value from the gateway utilizing a sophos.ClientInterface
func (h *HaClusterHttp) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaClusterHttp(client)
	return err
}

// Update PUT's' ha.cluster.http's value to the gateway utilizing a sophos.ClientInterface
func (h *HaClusterHttp) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaClusterHttp(client, h.Value)
}

// HaClusterIpsec represents the ha.cluster.ipsec node and implements sophos.Node
type HaClusterIpsec struct{ Value []interface{} }

// Get retrieves node ha.cluster.ipsec's value from the gateway utilizing a sophos.ClientInterface
func (h *HaClusterIpsec) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaClusterIpsec(client)
	return err
}

// Update PUT's' ha.cluster.ipsec's value to the gateway utilizing a sophos.ClientInterface
func (h *HaClusterIpsec) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaClusterIpsec(client, h.Value)
}

// HaClusterPop3 represents the ha.cluster.pop3 node and implements sophos.Node
type HaClusterPop3 struct{ Value []interface{} }

// Get retrieves node ha.cluster.pop3's value from the gateway utilizing a sophos.ClientInterface
func (h *HaClusterPop3) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaClusterPop3(client)
	return err
}

// Update PUT's' ha.cluster.pop3's value to the gateway utilizing a sophos.ClientInterface
func (h *HaClusterPop3) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaClusterPop3(client, h.Value)
}

// HaClusterSmtp represents the ha.cluster.smtp node and implements sophos.Node
type HaClusterSmtp struct{ Value []interface{} }

// Get retrieves node ha.cluster.smtp's value from the gateway utilizing a sophos.ClientInterface
func (h *HaClusterSmtp) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaClusterSmtp(client)
	return err
}

// Update PUT's' ha.cluster.smtp's value to the gateway utilizing a sophos.ClientInterface
func (h *HaClusterSmtp) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaClusterSmtp(client, h.Value)
}

// HaClusterSnort represents the ha.cluster.snort node and implements sophos.Node
type HaClusterSnort struct{ Value []interface{} }

// Get retrieves node ha.cluster.snort's value from the gateway utilizing a sophos.ClientInterface
func (h *HaClusterSnort) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaClusterSnort(client)
	return err
}

// Update PUT's' ha.cluster.snort's value to the gateway utilizing a sophos.ClientInterface
func (h *HaClusterSnort) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaClusterSnort(client, h.Value)
}

// HaClusterWaf represents the ha.cluster.waf node and implements sophos.Node
type HaClusterWaf struct{ Value []interface{} }

// Get retrieves node ha.cluster.waf's value from the gateway utilizing a sophos.ClientInterface
func (h *HaClusterWaf) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaClusterWaf(client)
	return err
}

// Update PUT's' ha.cluster.waf's value to the gateway utilizing a sophos.ClientInterface
func (h *HaClusterWaf) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaClusterWaf(client, h.Value)
}

// HaDeviceName represents the ha.device_name node and implements sophos.Node
type HaDeviceName struct{ Value string }

// Get retrieves node ha.device_name's value from the gateway utilizing a sophos.ClientInterface
func (h *HaDeviceName) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaDeviceName(client)
	return err
}

// Update PUT's' ha.device_name's value to the gateway utilizing a sophos.ClientInterface
func (h *HaDeviceName) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaDeviceName(client, h.Value)
}

// HaItfhw represents the ha.itfhw node and implements sophos.Node
type HaItfhw struct{ Value string }

// Get retrieves node ha.itfhw's value from the gateway utilizing a sophos.ClientInterface
func (h *HaItfhw) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaItfhw(client)
	return err
}

// Update PUT's' ha.itfhw's value to the gateway utilizing a sophos.ClientInterface
func (h *HaItfhw) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaItfhw(client, h.Value)
}

// HaItfhwBackup represents the ha.itfhw_backup node and implements sophos.Node
type HaItfhwBackup struct{ Value string }

// Get retrieves node ha.itfhw_backup's value from the gateway utilizing a sophos.ClientInterface
func (h *HaItfhwBackup) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaItfhwBackup(client)
	return err
}

// Update PUT's' ha.itfhw_backup's value to the gateway utilizing a sophos.ClientInterface
func (h *HaItfhwBackup) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaItfhwBackup(client, h.Value)
}

// HaMasterIp represents the ha.master_ip node and implements sophos.Node
type HaMasterIp struct{ Value string }

// Get retrieves node ha.master_ip's value from the gateway utilizing a sophos.ClientInterface
func (h *HaMasterIp) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaMasterIp(client)
	return err
}

// Update PUT's' ha.master_ip's value to the gateway utilizing a sophos.ClientInterface
func (h *HaMasterIp) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaMasterIp(client, h.Value)
}

// HaMode represents the ha.mode node and implements sophos.Node
type HaMode struct{ Value string }

// Get retrieves node ha.mode's value from the gateway utilizing a sophos.ClientInterface
func (h *HaMode) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaMode(client)
	return err
}

// Update PUT's' ha.mode's value to the gateway utilizing a sophos.ClientInterface
func (h *HaMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaMode(client, h.Value)
}

// HaNodeId represents the ha.node_id node and implements sophos.Node
type HaNodeId struct{ Value map[string]interface{} }

// Get retrieves node ha.node_id's value from the gateway utilizing a sophos.ClientInterface
func (h *HaNodeId) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaNodeId(client)
	return err
}

// Update PUT's' ha.node_id's value to the gateway utilizing a sophos.ClientInterface
func (h *HaNodeId) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaNodeId(client, h.Value)
}

// HaPassword represents the ha.password node and implements sophos.Node
type HaPassword struct{ Value string }

// Get retrieves node ha.password's value from the gateway utilizing a sophos.ClientInterface
func (h *HaPassword) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaPassword(client)
	return err
}

// Update PUT's' ha.password's value to the gateway utilizing a sophos.ClientInterface
func (h *HaPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaPassword(client, h.Value)
}

// HaPostgresSecret represents the ha.postgres_secret node and implements sophos.Node
type HaPostgresSecret struct{ Value string }

// Get retrieves node ha.postgres_secret's value from the gateway utilizing a sophos.ClientInterface
func (h *HaPostgresSecret) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaPostgresSecret(client)
	return err
}

// Update PUT's' ha.postgres_secret's value to the gateway utilizing a sophos.ClientInterface
func (h *HaPostgresSecret) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaPostgresSecret(client, h.Value)
}

// HaSlaveIp represents the ha.slave_ip node and implements sophos.Node
type HaSlaveIp struct{ Value string }

// Get retrieves node ha.slave_ip's value from the gateway utilizing a sophos.ClientInterface
func (h *HaSlaveIp) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaSlaveIp(client)
	return err
}

// Update PUT's' ha.slave_ip's value to the gateway utilizing a sophos.ClientInterface
func (h *HaSlaveIp) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaSlaveIp(client, h.Value)
}

// HaStatus represents the ha.status node and implements sophos.Node
type HaStatus struct{ Value string }

// Get retrieves node ha.status's value from the gateway utilizing a sophos.ClientInterface
func (h *HaStatus) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaStatus(client)
	return err
}

// Update PUT's' ha.status's value to the gateway utilizing a sophos.ClientInterface
func (h *HaStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaStatus(client, h.Value)
}

// HaSyncConntrack represents the ha.sync.conntrack node and implements sophos.Node
type HaSyncConntrack struct{ Value bool }

// Get retrieves node ha.sync.conntrack's value from the gateway utilizing a sophos.ClientInterface
func (h *HaSyncConntrack) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaSyncConntrack(client)
	return err
}

// Update PUT's' ha.sync.conntrack's value to the gateway utilizing a sophos.ClientInterface
func (h *HaSyncConntrack) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaSyncConntrack(client, h.Value)
}

// HaSyncDatabase represents the ha.sync.database node and implements sophos.Node
type HaSyncDatabase struct{ Value bool }

// Get retrieves node ha.sync.database's value from the gateway utilizing a sophos.ClientInterface
func (h *HaSyncDatabase) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaSyncDatabase(client)
	return err
}

// Update PUT's' ha.sync.database's value to the gateway utilizing a sophos.ClientInterface
func (h *HaSyncDatabase) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaSyncDatabase(client, h.Value)
}

// HaSyncFiles represents the ha.sync.files node and implements sophos.Node
type HaSyncFiles struct{ Value bool }

// Get retrieves node ha.sync.files's value from the gateway utilizing a sophos.ClientInterface
func (h *HaSyncFiles) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaSyncFiles(client)
	return err
}

// Update PUT's' ha.sync.files's value to the gateway utilizing a sophos.ClientInterface
func (h *HaSyncFiles) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaSyncFiles(client, h.Value)
}

// HaSyncIpsec represents the ha.sync.ipsec node and implements sophos.Node
type HaSyncIpsec struct{ Value bool }

// Get retrieves node ha.sync.ipsec's value from the gateway utilizing a sophos.ClientInterface
func (h *HaSyncIpsec) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaSyncIpsec(client)
	return err
}

// Update PUT's' ha.sync.ipsec's value to the gateway utilizing a sophos.ClientInterface
func (h *HaSyncIpsec) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaSyncIpsec(client, h.Value)
}

// HaSyncSyslog represents the ha.sync.syslog node and implements sophos.Node
type HaSyncSyslog struct{ Value bool }

// Get retrieves node ha.sync.syslog's value from the gateway utilizing a sophos.ClientInterface
func (h *HaSyncSyslog) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaSyncSyslog(client)
	return err
}

// Update PUT's' ha.sync.syslog's value to the gateway utilizing a sophos.ClientInterface
func (h *HaSyncSyslog) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaSyncSyslog(client, h.Value)
}

// HaTimesDeadTime represents the ha.times.dead_time node and implements sophos.Node
type HaTimesDeadTime struct{ Value int64 }

// Get retrieves node ha.times.dead_time's value from the gateway utilizing a sophos.ClientInterface
func (h *HaTimesDeadTime) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaTimesDeadTime(client)
	return err
}

// Update PUT's' ha.times.dead_time's value to the gateway utilizing a sophos.ClientInterface
func (h *HaTimesDeadTime) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaTimesDeadTime(client, h.Value)
}

// HaTimesLoadTime represents the ha.times.load_time node and implements sophos.Node
type HaTimesLoadTime struct{ Value int64 }

// Get retrieves node ha.times.load_time's value from the gateway utilizing a sophos.ClientInterface
func (h *HaTimesLoadTime) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHaTimesLoadTime(client)
	return err
}

// Update PUT's' ha.times.load_time's value to the gateway utilizing a sophos.ClientInterface
func (h *HaTimesLoadTime) Update(client sophos.ClientInterface) (err error) {
	return UpdateHaTimesLoadTime(client, h.Value)
}

// HotspotCert represents the hotspot.cert node and implements sophos.Node
type HotspotCert struct{ Value string }

// Get retrieves node hotspot.cert's value from the gateway utilizing a sophos.ClientInterface
func (h *HotspotCert) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHotspotCert(client)
	return err
}

// Update PUT's' hotspot.cert's value to the gateway utilizing a sophos.ClientInterface
func (h *HotspotCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateHotspotCert(client, h.Value)
}

// HotspotDeleteDays represents the hotspot.delete_days node and implements sophos.Node
type HotspotDeleteDays struct{ Value int64 }

// Get retrieves node hotspot.delete_days's value from the gateway utilizing a sophos.ClientInterface
func (h *HotspotDeleteDays) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHotspotDeleteDays(client)
	return err
}

// Update PUT's' hotspot.delete_days's value to the gateway utilizing a sophos.ClientInterface
func (h *HotspotDeleteDays) Update(client sophos.ClientInterface) (err error) {
	return UpdateHotspotDeleteDays(client, h.Value)
}

// HotspotSslPortal represents the hotspot.ssl_portal node and implements sophos.Node
type HotspotSslPortal struct{ Value bool }

// Get retrieves node hotspot.ssl_portal's value from the gateway utilizing a sophos.ClientInterface
func (h *HotspotSslPortal) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHotspotSslPortal(client)
	return err
}

// Update PUT's' hotspot.ssl_portal's value to the gateway utilizing a sophos.ClientInterface
func (h *HotspotSslPortal) Update(client sophos.ClientInterface) (err error) {
	return UpdateHotspotSslPortal(client, h.Value)
}

// HotspotStatus represents the hotspot.status node and implements sophos.Node
type HotspotStatus struct{ Value bool }

// Get retrieves node hotspot.status's value from the gateway utilizing a sophos.ClientInterface
func (h *HotspotStatus) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHotspotStatus(client)
	return err
}

// Update PUT's' hotspot.status's value to the gateway utilizing a sophos.ClientInterface
func (h *HotspotStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateHotspotStatus(client, h.Value)
}

// HotspotTransparentSkip represents the hotspot.transparent_skip node and implements sophos.Node
type HotspotTransparentSkip struct{ Value []interface{} }

// Get retrieves node hotspot.transparent_skip's value from the gateway utilizing a sophos.ClientInterface
func (h *HotspotTransparentSkip) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHotspotTransparentSkip(client)
	return err
}

// Update PUT's' hotspot.transparent_skip's value to the gateway utilizing a sophos.ClientInterface
func (h *HotspotTransparentSkip) Update(client sophos.ClientInterface) (err error) {
	return UpdateHotspotTransparentSkip(client, h.Value)
}

// HttpAdSsoInterfaces represents the http.ad_sso_interfaces node and implements sophos.Node
type HttpAdSsoInterfaces struct{ Value []interface{} }

// Get retrieves node http.ad_sso_interfaces's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAdSsoInterfaces) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAdSsoInterfaces(client)
	return err
}

// Update PUT's' http.ad_sso_interfaces's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAdSsoInterfaces) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAdSsoInterfaces(client, h.Value)
}

// HttpAdssoRedirectUseHostname represents the http.adsso_redirect_use_hostname node and implements sophos.Node
type HttpAdssoRedirectUseHostname struct{ Value bool }

// Get retrieves node http.adsso_redirect_use_hostname's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAdssoRedirectUseHostname) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAdssoRedirectUseHostname(client)
	return err
}

// Update PUT's' http.adsso_redirect_use_hostname's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAdssoRedirectUseHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAdssoRedirectUseHostname(client, h.Value)
}

// HttpAllowSsl3 represents the http.allow_ssl3 node and implements sophos.Node
type HttpAllowSsl3 struct{ Value bool }

// Get retrieves node http.allow_ssl3's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAllowSsl3) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAllowSsl3(client)
	return err
}

// Update PUT's' http.allow_ssl3's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAllowSsl3) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAllowSsl3(client, h.Value)
}

// HttpAllowTls12 represents the http.allow_tls_1_2 node and implements sophos.Node
type HttpAllowTls12 struct{ Value bool }

// Get retrieves node http.allow_tls_1_2's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAllowTls12) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAllowTls12(client)
	return err
}

// Update PUT's' http.allow_tls_1_2's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAllowTls12) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAllowTls12(client, h.Value)
}

// HttpAllowedPuas represents the http.allowed_puas node and implements sophos.Node
type HttpAllowedPuas struct{ Value []interface{} }

// Get retrieves node http.allowed_puas's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAllowedPuas) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAllowedPuas(client)
	return err
}

// Update PUT's' http.allowed_puas's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAllowedPuas) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAllowedPuas(client, h.Value)
}

// HttpAllowedTargetServices represents the http.allowed_target_services node and implements sophos.Node
type HttpAllowedTargetServices struct{ Value []string }

// Get retrieves node http.allowed_target_services's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAllowedTargetServices) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAllowedTargetServices(client)
	return err
}

// Update PUT's' http.allowed_target_services's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAllowedTargetServices) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAllowedTargetServices(client, h.Value)
}

// HttpAuaMaxconns represents the http.aua_maxconns node and implements sophos.Node
type HttpAuaMaxconns struct{ Value int64 }

// Get retrieves node http.aua_maxconns's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAuaMaxconns) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAuaMaxconns(client)
	return err
}

// Update PUT's' http.aua_maxconns's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAuaMaxconns) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAuaMaxconns(client, h.Value)
}

// HttpAuaTimeout represents the http.aua_timeout node and implements sophos.Node
type HttpAuaTimeout struct{ Value int64 }

// Get retrieves node http.aua_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAuaTimeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAuaTimeout(client)
	return err
}

// Update PUT's' http.aua_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAuaTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAuaTimeout(client, h.Value)
}

// HttpAuthCacheSize represents the http.auth_cache_size node and implements sophos.Node
type HttpAuthCacheSize struct{ Value int64 }

// Get retrieves node http.auth_cache_size's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAuthCacheSize) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAuthCacheSize(client)
	return err
}

// Update PUT's' http.auth_cache_size's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAuthCacheSize) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAuthCacheSize(client, h.Value)
}

// HttpAuthCacheTtl represents the http.auth_cache_ttl node and implements sophos.Node
type HttpAuthCacheTtl struct{ Value int64 }

// Get retrieves node http.auth_cache_ttl's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAuthCacheTtl) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAuthCacheTtl(client)
	return err
}

// Update PUT's' http.auth_cache_ttl's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAuthCacheTtl) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAuthCacheTtl(client, h.Value)
}

// HttpAuthRealm represents the http.auth_realm node and implements sophos.Node
type HttpAuthRealm struct{ Value string }

// Get retrieves node http.auth_realm's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAuthRealm) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAuthRealm(client)
	return err
}

// Update PUT's' http.auth_realm's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAuthRealm) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAuthRealm(client, h.Value)
}

// HttpAuthUsercacheTtl represents the http.auth_usercache_ttl node and implements sophos.Node
type HttpAuthUsercacheTtl struct{ Value int64 }

// Get retrieves node http.auth_usercache_ttl's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpAuthUsercacheTtl) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpAuthUsercacheTtl(client)
	return err
}

// Update PUT's' http.auth_usercache_ttl's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpAuthUsercacheTtl) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpAuthUsercacheTtl(client, h.Value)
}

// HttpBlockUnscannable represents the http.block_unscannable node and implements sophos.Node
type HttpBlockUnscannable struct{ Value bool }

// Get retrieves node http.block_unscannable's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpBlockUnscannable) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpBlockUnscannable(client)
	return err
}

// Update PUT's' http.block_unscannable's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpBlockUnscannable) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpBlockUnscannable(client, h.Value)
}

// HttpBypassStreaming represents the http.bypass_streaming node and implements sophos.Node
type HttpBypassStreaming struct{ Value bool }

// Get retrieves node http.bypass_streaming's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpBypassStreaming) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpBypassStreaming(client)
	return err
}

// Update PUT's' http.bypass_streaming's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpBypassStreaming) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpBypassStreaming(client, h.Value)
}

// HttpCaList represents the http.ca_list node and implements sophos.Node
type HttpCaList struct{ Value []interface{} }

// Get retrieves node http.ca_list's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpCaList) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpCaList(client)
	return err
}

// Update PUT's' http.ca_list's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpCaList) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpCaList(client, h.Value)
}

// HttpCacheIgnoresCookies represents the http.cache_ignores_cookies node and implements sophos.Node
type HttpCacheIgnoresCookies struct{ Value bool }

// Get retrieves node http.cache_ignores_cookies's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpCacheIgnoresCookies) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpCacheIgnoresCookies(client)
	return err
}

// Update PUT's' http.cache_ignores_cookies's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpCacheIgnoresCookies) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpCacheIgnoresCookies(client, h.Value)
}

// HttpCachessl represents the http.cachessl node and implements sophos.Node
type HttpCachessl struct{ Value bool }

// Get retrieves node http.cachessl's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpCachessl) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpCachessl(client)
	return err
}

// Update PUT's' http.cachessl's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpCachessl) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpCachessl(client, h.Value)
}

// HttpCaching represents the http.caching node and implements sophos.Node
type HttpCaching struct{ Value bool }

// Get retrieves node http.caching's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpCaching) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpCaching(client)
	return err
}

// Update PUT's' http.caching's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpCaching) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpCaching(client, h.Value)
}

// HttpCertcache represents the http.certcache node and implements sophos.Node
type HttpCertcache struct{ Value string }

// Get retrieves node http.certcache's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpCertcache) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpCertcache(client)
	return err
}

// Update PUT's' http.certcache's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpCertcache) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpCertcache(client, h.Value)
}

// HttpCertstore represents the http.certstore node and implements sophos.Node
type HttpCertstore struct{ Value string }

// Get retrieves node http.certstore's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpCertstore) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpCertstore(client)
	return err
}

// Update PUT's' http.certstore's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpCertstore) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpCertstore(client, h.Value)
}

// HttpCffOverrideUsers represents the http.cff_override_users node and implements sophos.Node
type HttpCffOverrideUsers struct{ Value []interface{} }

// Get retrieves node http.cff_override_users's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpCffOverrideUsers) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpCffOverrideUsers(client)
	return err
}

// Update PUT's' http.cff_override_users's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpCffOverrideUsers) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpCffOverrideUsers(client, h.Value)
}

// HttpClientTimeout represents the http.client_timeout node and implements sophos.Node
type HttpClientTimeout struct{ Value int64 }

// Get retrieves node http.client_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpClientTimeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpClientTimeout(client)
	return err
}

// Update PUT's' http.client_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpClientTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpClientTimeout(client, h.Value)
}

// HttpConfLockWorkaround represents the http.conf_lock_workaround node and implements sophos.Node
type HttpConfLockWorkaround struct{ Value bool }

// Get retrieves node http.conf_lock_workaround's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpConfLockWorkaround) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpConfLockWorkaround(client)
	return err
}

// Update PUT's' http.conf_lock_workaround's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpConfLockWorkaround) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpConfLockWorkaround(client, h.Value)
}

// HttpConnectTimeout represents the http.connect_timeout node and implements sophos.Node
type HttpConnectTimeout struct{ Value int64 }

// Get retrieves node http.connect_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpConnectTimeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpConnectTimeout(client)
	return err
}

// Update PUT's' http.connect_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpConnectTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpConnectTimeout(client, h.Value)
}

// HttpConnectV6Timeout represents the http.connect_v6_timeout node and implements sophos.Node
type HttpConnectV6Timeout struct{ Value map[string]interface{} }

// Get retrieves node http.connect_v6_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpConnectV6Timeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpConnectV6Timeout(client)
	return err
}

// Update PUT's' http.connect_v6_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpConnectV6Timeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpConnectV6Timeout(client, h.Value)
}

// HttpConnlimit represents the http.connlimit node and implements sophos.Node
type HttpConnlimit struct{ Value int64 }

// Get retrieves node http.connlimit's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpConnlimit) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpConnlimit(client)
	return err
}

// Update PUT's' http.connlimit's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpConnlimit) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpConnlimit(client, h.Value)
}

// HttpCtypeInspectBody represents the http.ctype_inspect_body node and implements sophos.Node
type HttpCtypeInspectBody struct{ Value bool }

// Get retrieves node http.ctype_inspect_body's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpCtypeInspectBody) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpCtypeInspectBody(client)
	return err
}

// Update PUT's' http.ctype_inspect_body's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpCtypeInspectBody) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpCtypeInspectBody(client, h.Value)
}

// HttpCtypeUnpackArchive represents the http.ctype_unpack_archive node and implements sophos.Node
type HttpCtypeUnpackArchive struct{ Value bool }

// Get retrieves node http.ctype_unpack_archive's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpCtypeUnpackArchive) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpCtypeUnpackArchive(client)
	return err
}

// Update PUT's' http.ctype_unpack_archive's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpCtypeUnpackArchive) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpCtypeUnpackArchive(client, h.Value)
}

// HttpDebug represents the http.debug node and implements sophos.Node
type HttpDebug struct{ Value []interface{} }

// Get retrieves node http.debug's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpDebug) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpDebug(client)
	return err
}

// Update PUT's' http.debug's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpDebug(client, h.Value)
}

// HttpDefaultblockaction represents the http.defaultblockaction node and implements sophos.Node
type HttpDefaultblockaction struct{ Value string }

// Get retrieves node http.defaultblockaction's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpDefaultblockaction) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpDefaultblockaction(client)
	return err
}

// Update PUT's' http.defaultblockaction's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpDefaultblockaction) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpDefaultblockaction(client, h.Value)
}

// HttpDeferagents represents the http.deferagents node and implements sophos.Node
type HttpDeferagents struct{ Value []string }

// Get retrieves node http.deferagents's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpDeferagents) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpDeferagents(client)
	return err
}

// Update PUT's' http.deferagents's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpDeferagents) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpDeferagents(client, h.Value)
}

// HttpDeferlength represents the http.deferlength node and implements sophos.Node
type HttpDeferlength struct{ Value int64 }

// Get retrieves node http.deferlength's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpDeferlength) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpDeferlength(client)
	return err
}

// Update PUT's' http.deferlength's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpDeferlength) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpDeferlength(client, h.Value)
}

// HttpDisplayHttpBlockpageExplicitMode represents the http.display_http_blockpage_explicit_mode node and implements sophos.Node
type HttpDisplayHttpBlockpageExplicitMode struct{ Value bool }

// Get retrieves node http.display_http_blockpage_explicit_mode's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpDisplayHttpBlockpageExplicitMode) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpDisplayHttpBlockpageExplicitMode(client)
	return err
}

// Update PUT's' http.display_http_blockpage_explicit_mode's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpDisplayHttpBlockpageExplicitMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpDisplayHttpBlockpageExplicitMode(client, h.Value)
}

// HttpDisplayIntro represents the http.display_intro node and implements sophos.Node
type HttpDisplayIntro struct{ Value bool }

// Get retrieves node http.display_intro's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpDisplayIntro) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpDisplayIntro(client)
	return err
}

// Update PUT's' http.display_intro's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpDisplayIntro) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpDisplayIntro(client, h.Value)
}

// HttpDownloadManagerDefaultCharset represents the http.download_manager_default_charset node and implements sophos.Node
type HttpDownloadManagerDefaultCharset struct{ Value string }

// Get retrieves node http.download_manager_default_charset's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpDownloadManagerDefaultCharset) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpDownloadManagerDefaultCharset(client)
	return err
}

// Update PUT's' http.download_manager_default_charset's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpDownloadManagerDefaultCharset) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpDownloadManagerDefaultCharset(client, h.Value)
}

// HttpEdirDelayBasicAuth represents the http.edir_delay_basic_auth node and implements sophos.Node
type HttpEdirDelayBasicAuth struct{ Value bool }

// Get retrieves node http.edir_delay_basic_auth's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpEdirDelayBasicAuth) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpEdirDelayBasicAuth(client)
	return err
}

// Update PUT's' http.edir_delay_basic_auth's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpEdirDelayBasicAuth) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpEdirDelayBasicAuth(client, h.Value)
}

// HttpEnableOutInterface represents the http.enable_out_interface node and implements sophos.Node
type HttpEnableOutInterface struct{ Value bool }

// Get retrieves node http.enable_out_interface's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpEnableOutInterface) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpEnableOutInterface(client)
	return err
}

// Update PUT's' http.enable_out_interface's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpEnableOutInterface) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpEnableOutInterface(client, h.Value)
}

// HttpEppQuotaAction represents the http.epp_quota_action node and implements sophos.Node
type HttpEppQuotaAction struct{ Value string }

// Get retrieves node http.epp_quota_action's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpEppQuotaAction) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpEppQuotaAction(client)
	return err
}

// Update PUT's' http.epp_quota_action's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpEppQuotaAction) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpEppQuotaAction(client, h.Value)
}

// HttpExceptions represents the http.exceptions node and implements sophos.Node
type HttpExceptions struct{ Value []string }

// Get retrieves node http.exceptions's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpExceptions) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpExceptions(client)
	return err
}

// Update PUT's' http.exceptions's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpExceptions) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpExceptions(client, h.Value)
}

// HttpForcedCachingExtension represents the http.forced_caching_extension node and implements sophos.Node
type HttpForcedCachingExtension struct{ Value []string }

// Get retrieves node http.forced_caching_extension's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingExtension) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpForcedCachingExtension(client)
	return err
}

// Update PUT's' http.forced_caching_extension's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingExtension) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpForcedCachingExtension(client, h.Value)
}

// HttpForcedCachingNeverCachePrefix represents the http.forced_caching_never_cache_prefix node and implements sophos.Node
type HttpForcedCachingNeverCachePrefix struct{ Value []string }

// Get retrieves node http.forced_caching_never_cache_prefix's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingNeverCachePrefix) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpForcedCachingNeverCachePrefix(client)
	return err
}

// Update PUT's' http.forced_caching_never_cache_prefix's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingNeverCachePrefix) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpForcedCachingNeverCachePrefix(client, h.Value)
}

// HttpForcedCachingStatus represents the http.forced_caching_status node and implements sophos.Node
type HttpForcedCachingStatus struct{ Value bool }

// Get retrieves node http.forced_caching_status's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingStatus) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpForcedCachingStatus(client)
	return err
}

// Update PUT's' http.forced_caching_status's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpForcedCachingStatus(client, h.Value)
}

// HttpForcedCachingTtl represents the http.forced_caching_ttl node and implements sophos.Node
type HttpForcedCachingTtl struct{ Value int64 }

// Get retrieves node http.forced_caching_ttl's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingTtl) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpForcedCachingTtl(client)
	return err
}

// Update PUT's' http.forced_caching_ttl's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingTtl) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpForcedCachingTtl(client, h.Value)
}

// HttpForcedCachingUserAgentPrefix represents the http.forced_caching_user_agent_prefix node and implements sophos.Node
type HttpForcedCachingUserAgentPrefix struct{ Value []string }

// Get retrieves node http.forced_caching_user_agent_prefix's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingUserAgentPrefix) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpForcedCachingUserAgentPrefix(client)
	return err
}

// Update PUT's' http.forced_caching_user_agent_prefix's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpForcedCachingUserAgentPrefix) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpForcedCachingUserAgentPrefix(client, h.Value)
}

// HttpHttpLoopbackDetect represents the http.http_loopback_detect node and implements sophos.Node
type HttpHttpLoopbackDetect struct{ Value bool }

// Get retrieves node http.http_loopback_detect's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpHttpLoopbackDetect) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpHttpLoopbackDetect(client)
	return err
}

// Update PUT's' http.http_loopback_detect's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpHttpLoopbackDetect) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpHttpLoopbackDetect(client, h.Value)
}

// HttpIeSslBlockpageWorkaround represents the http.ie_ssl_blockpage_workaround node and implements sophos.Node
type HttpIeSslBlockpageWorkaround struct{ Value bool }

// Get retrieves node http.ie_ssl_blockpage_workaround's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpIeSslBlockpageWorkaround) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpIeSslBlockpageWorkaround(client)
	return err
}

// Update PUT's' http.ie_ssl_blockpage_workaround's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpIeSslBlockpageWorkaround) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpIeSslBlockpageWorkaround(client, h.Value)
}

// HttpLimitAdSsoInterfaces represents the http.limit_ad_sso_interfaces node and implements sophos.Node
type HttpLimitAdSsoInterfaces struct{ Value bool }

// Get retrieves node http.limit_ad_sso_interfaces's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpLimitAdSsoInterfaces) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpLimitAdSsoInterfaces(client)
	return err
}

// Update PUT's' http.limit_ad_sso_interfaces's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpLimitAdSsoInterfaces) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpLimitAdSsoInterfaces(client, h.Value)
}

// HttpLocalSiteList represents the http.local_site_list node and implements sophos.Node
type HttpLocalSiteList struct{ Value []interface{} }

// Get retrieves node http.local_site_list's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpLocalSiteList) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpLocalSiteList(client)
	return err
}

// Update PUT's' http.local_site_list's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpLocalSiteList) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpLocalSiteList(client, h.Value)
}

// HttpMaxContentEncoding represents the http.max_content_encoding node and implements sophos.Node
type HttpMaxContentEncoding struct{ Value int64 }

// Get retrieves node http.max_content_encoding's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpMaxContentEncoding) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpMaxContentEncoding(client)
	return err
}

// Update PUT's' http.max_content_encoding's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpMaxContentEncoding) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpMaxContentEncoding(client, h.Value)
}

// HttpMaxTempfileSize represents the http.max_tempfile_size node and implements sophos.Node
type HttpMaxTempfileSize struct{ Value int64 }

// Get retrieves node http.max_tempfile_size's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpMaxTempfileSize) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpMaxTempfileSize(client)
	return err
}

// Update PUT's' http.max_tempfile_size's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpMaxTempfileSize) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpMaxTempfileSize(client, h.Value)
}

// HttpMaxthreads represents the http.maxthreads node and implements sophos.Node
type HttpMaxthreads struct{ Value int64 }

// Get retrieves node http.maxthreads's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpMaxthreads) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpMaxthreads(client)
	return err
}

// Update PUT's' http.maxthreads's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpMaxthreads) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpMaxthreads(client, h.Value)
}

// HttpMaxthreadsUnused represents the http.maxthreads_unused node and implements sophos.Node
type HttpMaxthreadsUnused struct{ Value int64 }

// Get retrieves node http.maxthreads_unused's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpMaxthreadsUnused) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpMaxthreadsUnused(client)
	return err
}

// Update PUT's' http.maxthreads_unused's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpMaxthreadsUnused) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpMaxthreadsUnused(client, h.Value)
}

// HttpModulepath represents the http.modulepath node and implements sophos.Node
type HttpModulepath struct{ Value string }

// Get retrieves node http.modulepath's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpModulepath) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpModulepath(client)
	return err
}

// Update PUT's' http.modulepath's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpModulepath) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpModulepath(client, h.Value)
}

// HttpModules represents the http.modules node and implements sophos.Node
type HttpModules struct{ Value []string }

// Get retrieves node http.modules's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpModules) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpModules(client)
	return err
}

// Update PUT's' http.modules's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpModules) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpModules(client, h.Value)
}

// HttpNoscancontent represents the http.noscancontent node and implements sophos.Node
type HttpNoscancontent struct{ Value []string }

// Get retrieves node http.noscancontent's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpNoscancontent) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpNoscancontent(client)
	return err
}

// Update PUT's' http.noscancontent's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpNoscancontent) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpNoscancontent(client, h.Value)
}

// HttpOpendirectoryKeytab represents the http.opendirectory_keytab node and implements sophos.Node
type HttpOpendirectoryKeytab struct{ Value string }

// Get retrieves node http.opendirectory_keytab's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpOpendirectoryKeytab) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpOpendirectoryKeytab(client)
	return err
}

// Update PUT's' http.opendirectory_keytab's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpOpendirectoryKeytab) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpOpendirectoryKeytab(client, h.Value)
}

// HttpPacFile represents the http.pac_file node and implements sophos.Node
type HttpPacFile struct{ Value string }

// Get retrieves node http.pac_file's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpPacFile) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpPacFile(client)
	return err
}

// Update PUT's' http.pac_file's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpPacFile) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpPacFile(client, h.Value)
}

// HttpParentProxyHost represents the http.parent_proxy_host node and implements sophos.Node
type HttpParentProxyHost struct{ Value string }

// Get retrieves node http.parent_proxy_host's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpParentProxyHost) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpParentProxyHost(client)
	return err
}

// Update PUT's' http.parent_proxy_host's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpParentProxyHost) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpParentProxyHost(client, h.Value)
}

// HttpParentProxyPort represents the http.parent_proxy_port node and implements sophos.Node
type HttpParentProxyPort struct{ Value int64 }

// Get retrieves node http.parent_proxy_port's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpParentProxyPort) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpParentProxyPort(client)
	return err
}

// Update PUT's' http.parent_proxy_port's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpParentProxyPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpParentProxyPort(client, h.Value)
}

// HttpParentProxyStatus represents the http.parent_proxy_status node and implements sophos.Node
type HttpParentProxyStatus struct{ Value bool }

// Get retrieves node http.parent_proxy_status's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpParentProxyStatus) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpParentProxyStatus(client)
	return err
}

// Update PUT's' http.parent_proxy_status's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpParentProxyStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpParentProxyStatus(client, h.Value)
}

// HttpPassthroughId represents the http.passthrough_id node and implements sophos.Node
type HttpPassthroughId struct{ Value string }

// Get retrieves node http.passthrough_id's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpPassthroughId) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpPassthroughId(client)
	return err
}

// Update PUT's' http.passthrough_id's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpPassthroughId) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpPassthroughId(client, h.Value)
}

// HttpPharmingProtection represents the http.pharming_protection node and implements sophos.Node
type HttpPharmingProtection struct{ Value bool }

// Get retrieves node http.pharming_protection's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpPharmingProtection) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpPharmingProtection(client)
	return err
}

// Update PUT's' http.pharming_protection's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpPharmingProtection) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpPharmingProtection(client, h.Value)
}

// HttpPort represents the http.port node and implements sophos.Node
type HttpPort struct{ Value int64 }

// Get retrieves node http.port's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpPort) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpPort(client)
	return err
}

// Update PUT's' http.port's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpPort(client, h.Value)
}

// HttpPortalCert represents the http.portal_cert node and implements sophos.Node
type HttpPortalCert struct{ Value string }

// Get retrieves node http.portal_cert's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalCert) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpPortalCert(client)
	return err
}

// Update PUT's' http.portal_cert's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpPortalCert(client, h.Value)
}

// HttpPortalCertChain represents the http.portal_cert_chain node and implements sophos.Node
type HttpPortalCertChain struct{ Value []interface{} }

// Get retrieves node http.portal_cert_chain's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalCertChain) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpPortalCertChain(client)
	return err
}

// Update PUT's' http.portal_cert_chain's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalCertChain) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpPortalCertChain(client, h.Value)
}

// HttpPortalDomain represents the http.portal_domain node and implements sophos.Node
type HttpPortalDomain struct{ Value string }

// Get retrieves node http.portal_domain's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalDomain) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpPortalDomain(client)
	return err
}

// Update PUT's' http.portal_domain's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalDomain) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpPortalDomain(client, h.Value)
}

// HttpPortalHosts represents the http.portal_hosts node and implements sophos.Node
type HttpPortalHosts struct{ Value []interface{} }

// Get retrieves node http.portal_hosts's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalHosts) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpPortalHosts(client)
	return err
}

// Update PUT's' http.portal_hosts's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalHosts) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpPortalHosts(client, h.Value)
}

// HttpPortalUseCert represents the http.portal_use_cert node and implements sophos.Node
type HttpPortalUseCert struct{ Value bool }

// Get retrieves node http.portal_use_cert's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalUseCert) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpPortalUseCert(client)
	return err
}

// Update PUT's' http.portal_use_cert's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpPortalUseCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpPortalUseCert(client, h.Value)
}

// HttpProceedCacheTimeout represents the http.proceed_cache_timeout node and implements sophos.Node
type HttpProceedCacheTimeout struct{ Value int64 }

// Get retrieves node http.proceed_cache_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpProceedCacheTimeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpProceedCacheTimeout(client)
	return err
}

// Update PUT's' http.proceed_cache_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpProceedCacheTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpProceedCacheTimeout(client, h.Value)
}

// HttpProfiles represents the http.profiles node and implements sophos.Node
type HttpProfiles struct{ Value []string }

// Get retrieves node http.profiles's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpProfiles) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpProfiles(client)
	return err
}

// Update PUT's' http.profiles's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpProfiles) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpProfiles(client, h.Value)
}

// HttpQuotaSliceTime represents the http.quota_slice_time node and implements sophos.Node
type HttpQuotaSliceTime struct{ Value int64 }

// Get retrieves node http.quota_slice_time's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpQuotaSliceTime) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpQuotaSliceTime(client)
	return err
}

// Update PUT's' http.quota_slice_time's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpQuotaSliceTime) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpQuotaSliceTime(client, h.Value)
}

// HttpRemoveRequest represents the http.remove_request node and implements sophos.Node
type HttpRemoveRequest struct{ Value []interface{} }

// Get retrieves node http.remove_request's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpRemoveRequest) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpRemoveRequest(client)
	return err
}

// Update PUT's' http.remove_request's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpRemoveRequest) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpRemoveRequest(client, h.Value)
}

// HttpRemoveResponse represents the http.remove_response node and implements sophos.Node
type HttpRemoveResponse struct{ Value []string }

// Get retrieves node http.remove_response's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpRemoveResponse) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpRemoveResponse(client)
	return err
}

// Update PUT's' http.remove_response's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpRemoveResponse) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpRemoveResponse(client, h.Value)
}

// HttpResponseTimeout represents the http.response_timeout node and implements sophos.Node
type HttpResponseTimeout struct{ Value int64 }

// Get retrieves node http.response_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpResponseTimeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpResponseTimeout(client)
	return err
}

// Update PUT's' http.response_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpResponseTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpResponseTimeout(client, h.Value)
}

// HttpScLocalDb represents the http.sc_local_db node and implements sophos.Node
type HttpScLocalDb struct{ Value string }

// Get retrieves node http.sc_local_db's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpScLocalDb) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpScLocalDb(client)
	return err
}

// Update PUT's' http.sc_local_db's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpScLocalDb) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpScLocalDb(client, h.Value)
}

// HttpScanEppTraffic represents the http.scan_epp_traffic node and implements sophos.Node
type HttpScanEppTraffic struct{ Value bool }

// Get retrieves node http.scan_epp_traffic's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpScanEppTraffic) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpScanEppTraffic(client)
	return err
}

// Update PUT's' http.scan_epp_traffic's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpScanEppTraffic) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpScanEppTraffic(client, h.Value)
}

// HttpSearchdomain represents the http.searchdomain node and implements sophos.Node
type HttpSearchdomain struct{ Value string }

// Get retrieves node http.searchdomain's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpSearchdomain) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpSearchdomain(client)
	return err
}

// Update PUT's' http.searchdomain's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpSearchdomain) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpSearchdomain(client, h.Value)
}

// HttpStrictHttp represents the http.strict_http node and implements sophos.Node
type HttpStrictHttp struct{ Value bool }

// Get retrieves node http.strict_http's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpStrictHttp) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpStrictHttp(client)
	return err
}

// Update PUT's' http.strict_http's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpStrictHttp) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpStrictHttp(client, h.Value)
}

// HttpTlsciphersClient represents the http.tlsciphers_client node and implements sophos.Node
type HttpTlsciphersClient struct{ Value string }

// Get retrieves node http.tlsciphers_client's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpTlsciphersClient) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpTlsciphersClient(client)
	return err
}

// Update PUT's' http.tlsciphers_client's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpTlsciphersClient) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpTlsciphersClient(client, h.Value)
}

// HttpTlsciphersServer represents the http.tlsciphers_server node and implements sophos.Node
type HttpTlsciphersServer struct{ Value string }

// Get retrieves node http.tlsciphers_server's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpTlsciphersServer) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpTlsciphersServer(client)
	return err
}

// Update PUT's' http.tlsciphers_server's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpTlsciphersServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpTlsciphersServer(client, h.Value)
}

// HttpTmpfsUsageMinMemsize represents the http.tmpfs_usage_min_memsize node and implements sophos.Node
type HttpTmpfsUsageMinMemsize struct{ Value int64 }

// Get retrieves node http.tmpfs_usage_min_memsize's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpTmpfsUsageMinMemsize) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpTmpfsUsageMinMemsize(client)
	return err
}

// Update PUT's' http.tmpfs_usage_min_memsize's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpTmpfsUsageMinMemsize) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpTmpfsUsageMinMemsize(client, h.Value)
}

// HttpTransparentAuthTimeout represents the http.transparent_auth_timeout node and implements sophos.Node
type HttpTransparentAuthTimeout struct{ Value int64 }

// Get retrieves node http.transparent_auth_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpTransparentAuthTimeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpTransparentAuthTimeout(client)
	return err
}

// Update PUT's' http.transparent_auth_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpTransparentAuthTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpTransparentAuthTimeout(client, h.Value)
}

// HttpTransparentDstSkip represents the http.transparent_dst_skip node and implements sophos.Node
type HttpTransparentDstSkip struct{ Value []interface{} }

// Get retrieves node http.transparent_dst_skip's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpTransparentDstSkip) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpTransparentDstSkip(client)
	return err
}

// Update PUT's' http.transparent_dst_skip's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpTransparentDstSkip) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpTransparentDstSkip(client, h.Value)
}

// HttpTransparentSkipAutoPf represents the http.transparent_skip_auto_pf node and implements sophos.Node
type HttpTransparentSkipAutoPf struct{ Value bool }

// Get retrieves node http.transparent_skip_auto_pf's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpTransparentSkipAutoPf) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpTransparentSkipAutoPf(client)
	return err
}

// Update PUT's' http.transparent_skip_auto_pf's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpTransparentSkipAutoPf) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpTransparentSkipAutoPf(client, h.Value)
}

// HttpTransparentSrcSkip represents the http.transparent_src_skip node and implements sophos.Node
type HttpTransparentSrcSkip struct{ Value []interface{} }

// Get retrieves node http.transparent_src_skip's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpTransparentSrcSkip) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpTransparentSrcSkip(client)
	return err
}

// Update PUT's' http.transparent_src_skip's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpTransparentSrcSkip) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpTransparentSrcSkip(client, h.Value)
}

// HttpTunnelTimeout represents the http.tunnel_timeout node and implements sophos.Node
type HttpTunnelTimeout struct{ Value int64 }

// Get retrieves node http.tunnel_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpTunnelTimeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpTunnelTimeout(client)
	return err
}

// Update PUT's' http.tunnel_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpTunnelTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpTunnelTimeout(client, h.Value)
}

// HttpTunnelV6Timeout represents the http.tunnel_v6_timeout node and implements sophos.Node
type HttpTunnelV6Timeout struct{ Value map[string]interface{} }

// Get retrieves node http.tunnel_v6_timeout's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpTunnelV6Timeout) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpTunnelV6Timeout(client)
	return err
}

// Update PUT's' http.tunnel_v6_timeout's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpTunnelV6Timeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpTunnelV6Timeout(client, h.Value)
}

// HttpUndefercontent represents the http.undefercontent node and implements sophos.Node
type HttpUndefercontent struct{ Value []string }

// Get retrieves node http.undefercontent's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpUndefercontent) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpUndefercontent(client)
	return err
}

// Update PUT's' http.undefercontent's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpUndefercontent) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpUndefercontent(client, h.Value)
}

// HttpUndeferextension represents the http.undeferextension node and implements sophos.Node
type HttpUndeferextension struct{ Value []string }

// Get retrieves node http.undeferextension's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpUndeferextension) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpUndeferextension(client)
	return err
}

// Update PUT's' http.undeferextension's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpUndeferextension) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpUndeferextension(client, h.Value)
}

// HttpUrlFilteringRedirectUrl represents the http.url_filtering_redirect_url node and implements sophos.Node
type HttpUrlFilteringRedirectUrl struct{ Value string }

// Get retrieves node http.url_filtering_redirect_url's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpUrlFilteringRedirectUrl) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpUrlFilteringRedirectUrl(client)
	return err
}

// Update PUT's' http.url_filtering_redirect_url's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpUrlFilteringRedirectUrl) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpUrlFilteringRedirectUrl(client, h.Value)
}

// HttpUseDstaddrForGeopiplookup represents the http.use_dstaddr_for_geopiplookup node and implements sophos.Node
type HttpUseDstaddrForGeopiplookup struct{ Value bool }

// Get retrieves node http.use_dstaddr_for_geopiplookup's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpUseDstaddrForGeopiplookup) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpUseDstaddrForGeopiplookup(client)
	return err
}

// Update PUT's' http.use_dstaddr_for_geopiplookup's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpUseDstaddrForGeopiplookup) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpUseDstaddrForGeopiplookup(client, h.Value)
}

// HttpUseKrb5Adsso represents the http.use_krb5_adsso node and implements sophos.Node
type HttpUseKrb5Adsso struct{ Value bool }

// Get retrieves node http.use_krb5_adsso's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpUseKrb5Adsso) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpUseKrb5Adsso(client)
	return err
}

// Update PUT's' http.use_krb5_adsso's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpUseKrb5Adsso) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpUseKrb5Adsso(client, h.Value)
}

// HttpUseSni represents the http.use_sni node and implements sophos.Node
type HttpUseSni struct{ Value bool }

// Get retrieves node http.use_sni's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpUseSni) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpUseSni(client)
	return err
}

// Update PUT's' http.use_sni's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpUseSni) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpUseSni(client, h.Value)
}

// HttpUseSxlUrid represents the http.use_sxl_urid node and implements sophos.Node
type HttpUseSxlUrid struct{ Value bool }

// Get retrieves node http.use_sxl_urid's value from the gateway utilizing a sophos.ClientInterface
func (h *HttpUseSxlUrid) Get(client sophos.ClientInterface) (err error) {
	h.Value, err = GetHttpUseSxlUrid(client)
	return err
}

// Update PUT's' http.use_sxl_urid's value to the gateway utilizing a sophos.ClientInterface
func (h *HttpUseSxlUrid) Update(client sophos.ClientInterface) (err error) {
	return UpdateHttpUseSxlUrid(client, h.Value)
}

// IcmpForward represents the icmp.forward node and implements sophos.Node
type IcmpForward struct{ Value bool }

// Get retrieves node icmp.forward's value from the gateway utilizing a sophos.ClientInterface
func (i *IcmpForward) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIcmpForward(client)
	return err
}

// Update PUT's' icmp.forward's value to the gateway utilizing a sophos.ClientInterface
func (i *IcmpForward) Update(client sophos.ClientInterface) (err error) {
	return UpdateIcmpForward(client, i.Value)
}

// IcmpInput represents the icmp.input node and implements sophos.Node
type IcmpInput struct{ Value bool }

// Get retrieves node icmp.input's value from the gateway utilizing a sophos.ClientInterface
func (i *IcmpInput) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIcmpInput(client)
	return err
}

// Update PUT's' icmp.input's value to the gateway utilizing a sophos.ClientInterface
func (i *IcmpInput) Update(client sophos.ClientInterface) (err error) {
	return UpdateIcmpInput(client, i.Value)
}

// IcmpLogRedirect represents the icmp.log_redirect node and implements sophos.Node
type IcmpLogRedirect struct{ Value bool }

// Get retrieves node icmp.log_redirect's value from the gateway utilizing a sophos.ClientInterface
func (i *IcmpLogRedirect) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIcmpLogRedirect(client)
	return err
}

// Update PUT's' icmp.log_redirect's value to the gateway utilizing a sophos.ClientInterface
func (i *IcmpLogRedirect) Update(client sophos.ClientInterface) (err error) {
	return UpdateIcmpLogRedirect(client, i.Value)
}

// IcmpPingForward represents the icmp.ping.forward node and implements sophos.Node
type IcmpPingForward struct{ Value bool }

// Get retrieves node icmp.ping.forward's value from the gateway utilizing a sophos.ClientInterface
func (i *IcmpPingForward) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIcmpPingForward(client)
	return err
}

// Update PUT's' icmp.ping.forward's value to the gateway utilizing a sophos.ClientInterface
func (i *IcmpPingForward) Update(client sophos.ClientInterface) (err error) {
	return UpdateIcmpPingForward(client, i.Value)
}

// IcmpPingInput represents the icmp.ping.input node and implements sophos.Node
type IcmpPingInput struct{ Value bool }

// Get retrieves node icmp.ping.input's value from the gateway utilizing a sophos.ClientInterface
func (i *IcmpPingInput) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIcmpPingInput(client)
	return err
}

// Update PUT's' icmp.ping.input's value to the gateway utilizing a sophos.ClientInterface
func (i *IcmpPingInput) Update(client sophos.ClientInterface) (err error) {
	return UpdateIcmpPingInput(client, i.Value)
}

// IcmpPingOutput represents the icmp.ping.output node and implements sophos.Node
type IcmpPingOutput struct{ Value bool }

// Get retrieves node icmp.ping.output's value from the gateway utilizing a sophos.ClientInterface
func (i *IcmpPingOutput) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIcmpPingOutput(client)
	return err
}

// Update PUT's' icmp.ping.output's value to the gateway utilizing a sophos.ClientInterface
func (i *IcmpPingOutput) Update(client sophos.ClientInterface) (err error) {
	return UpdateIcmpPingOutput(client, i.Value)
}

// IcmpSecure represents the icmp.secure node and implements sophos.Node
type IcmpSecure struct{ Value bool }

// Get retrieves node icmp.secure's value from the gateway utilizing a sophos.ClientInterface
func (i *IcmpSecure) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIcmpSecure(client)
	return err
}

// Update PUT's' icmp.secure's value to the gateway utilizing a sophos.ClientInterface
func (i *IcmpSecure) Update(client sophos.ClientInterface) (err error) {
	return UpdateIcmpSecure(client, i.Value)
}

// IcmpTracerouteForward represents the icmp.traceroute.forward node and implements sophos.Node
type IcmpTracerouteForward struct{ Value bool }

// Get retrieves node icmp.traceroute.forward's value from the gateway utilizing a sophos.ClientInterface
func (i *IcmpTracerouteForward) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIcmpTracerouteForward(client)
	return err
}

// Update PUT's' icmp.traceroute.forward's value to the gateway utilizing a sophos.ClientInterface
func (i *IcmpTracerouteForward) Update(client sophos.ClientInterface) (err error) {
	return UpdateIcmpTracerouteForward(client, i.Value)
}

// IcmpTracerouteInput represents the icmp.traceroute.input node and implements sophos.Node
type IcmpTracerouteInput struct{ Value bool }

// Get retrieves node icmp.traceroute.input's value from the gateway utilizing a sophos.ClientInterface
func (i *IcmpTracerouteInput) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIcmpTracerouteInput(client)
	return err
}

// Update PUT's' icmp.traceroute.input's value to the gateway utilizing a sophos.ClientInterface
func (i *IcmpTracerouteInput) Update(client sophos.ClientInterface) (err error) {
	return UpdateIcmpTracerouteInput(client, i.Value)
}

// IdentForward represents the ident.forward node and implements sophos.Node
type IdentForward struct{ Value bool }

// Get retrieves node ident.forward's value from the gateway utilizing a sophos.ClientInterface
func (i *IdentForward) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIdentForward(client)
	return err
}

// Update PUT's' ident.forward's value to the gateway utilizing a sophos.ClientInterface
func (i *IdentForward) Update(client sophos.ClientInterface) (err error) {
	return UpdateIdentForward(client, i.Value)
}

// IdentResponse represents the ident.response node and implements sophos.Node
type IdentResponse struct{ Value string }

// Get retrieves node ident.response's value from the gateway utilizing a sophos.ClientInterface
func (i *IdentResponse) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIdentResponse(client)
	return err
}

// Update PUT's' ident.response's value to the gateway utilizing a sophos.ClientInterface
func (i *IdentResponse) Update(client sophos.ClientInterface) (err error) {
	return UpdateIdentResponse(client, i.Value)
}

// IdentStatus represents the ident.status node and implements sophos.Node
type IdentStatus struct{ Value bool }

// Get retrieves node ident.status's value from the gateway utilizing a sophos.ClientInterface
func (i *IdentStatus) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIdentStatus(client)
	return err
}

// Update PUT's' ident.status's value to the gateway utilizing a sophos.ClientInterface
func (i *IdentStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateIdentStatus(client, i.Value)
}

// InterfacesAdvancedArpAnnounce represents the interfaces.advanced.arp_announce node and implements sophos.Node
type InterfacesAdvancedArpAnnounce struct{ Value map[string]interface{} }

// Get retrieves node interfaces.advanced.arp_announce's value from the gateway utilizing a sophos.ClientInterface
func (i *InterfacesAdvancedArpAnnounce) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetInterfacesAdvancedArpAnnounce(client)
	return err
}

// Update PUT's' interfaces.advanced.arp_announce's value to the gateway utilizing a sophos.ClientInterface
func (i *InterfacesAdvancedArpAnnounce) Update(client sophos.ClientInterface) (err error) {
	return UpdateInterfacesAdvancedArpAnnounce(client, i.Value)
}

// InterfacesAdvancedArpIgnore represents the interfaces.advanced.arp_ignore node and implements sophos.Node
type InterfacesAdvancedArpIgnore struct{ Value map[string]interface{} }

// Get retrieves node interfaces.advanced.arp_ignore's value from the gateway utilizing a sophos.ClientInterface
func (i *InterfacesAdvancedArpIgnore) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetInterfacesAdvancedArpIgnore(client)
	return err
}

// Update PUT's' interfaces.advanced.arp_ignore's value to the gateway utilizing a sophos.ClientInterface
func (i *InterfacesAdvancedArpIgnore) Update(client sophos.ClientInterface) (err error) {
	return UpdateInterfacesAdvancedArpIgnore(client, i.Value)
}

// InterfacesAdvancedDefaultMetric represents the interfaces.advanced.default_metric node and implements sophos.Node
type InterfacesAdvancedDefaultMetric struct{ Value int64 }

// Get retrieves node interfaces.advanced.default_metric's value from the gateway utilizing a sophos.ClientInterface
func (i *InterfacesAdvancedDefaultMetric) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetInterfacesAdvancedDefaultMetric(client)
	return err
}

// Update PUT's' interfaces.advanced.default_metric's value to the gateway utilizing a sophos.ClientInterface
func (i *InterfacesAdvancedDefaultMetric) Update(client sophos.ClientInterface) (err error) {
	return UpdateInterfacesAdvancedDefaultMetric(client, i.Value)
}

// InterfacesInterfaces represents the interfaces.interfaces node and implements sophos.Node
type InterfacesInterfaces struct{ Value []string }

// Get retrieves node interfaces.interfaces's value from the gateway utilizing a sophos.ClientInterface
func (i *InterfacesInterfaces) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetInterfacesInterfaces(client)
	return err
}

// Update PUT's' interfaces.interfaces's value to the gateway utilizing a sophos.ClientInterface
func (i *InterfacesInterfaces) Update(client sophos.ClientInterface) (err error) {
	return UpdateInterfacesInterfaces(client, i.Value)
}

// IpsDnsServers represents the ips.dns_servers node and implements sophos.Node
type IpsDnsServers struct{ Value []interface{} }

// Get retrieves node ips.dns_servers's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsDnsServers) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsDnsServers(client)
	return err
}

// Update PUT's' ips.dns_servers's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsDnsServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsDnsServers(client, i.Value)
}

// IpsEngine represents the ips.engine node and implements sophos.Node
type IpsEngine struct{ Value string }

// Get retrieves node ips.engine's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsEngine) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsEngine(client)
	return err
}

// Update PUT's' ips.engine's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsEngine) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsEngine(client, i.Value)
}

// IpsExceptions represents the ips.exceptions node and implements sophos.Node
type IpsExceptions struct{ Value []string }

// Get retrieves node ips.exceptions's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsExceptions) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsExceptions(client)
	return err
}

// Update PUT's' ips.exceptions's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsExceptions) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsExceptions(client, i.Value)
}

// IpsFailopen represents the ips.failopen node and implements sophos.Node
type IpsFailopen struct{ Value bool }

// Get retrieves node ips.failopen's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsFailopen) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsFailopen(client)
	return err
}

// Update PUT's' ips.failopen's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsFailopen) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsFailopen(client, i.Value)
}

// IpsFileBasedRules represents the ips.file_based_rules node and implements sophos.Node
type IpsFileBasedRules struct{ Value bool }

// Get retrieves node ips.file_based_rules's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsFileBasedRules) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsFileBasedRules(client)
	return err
}

// Update PUT's' ips.file_based_rules's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsFileBasedRules) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsFileBasedRules(client, i.Value)
}

// IpsGroups represents the ips.groups node and implements sophos.Node
type IpsGroups struct{ Value []string }

// Get retrieves node ips.groups's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsGroups) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsGroups(client)
	return err
}

// Update PUT's' ips.groups's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsGroups) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsGroups(client, i.Value)
}

// IpsHttpServers represents the ips.http_servers node and implements sophos.Node
type IpsHttpServers struct{ Value []interface{} }

// Get retrieves node ips.http_servers's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsHttpServers) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsHttpServers(client)
	return err
}

// Update PUT's' ips.http_servers's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsHttpServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsHttpServers(client, i.Value)
}

// IpsIpsfbAlertInterval represents the ips.ipsfb.alert_interval node and implements sophos.Node
type IpsIpsfbAlertInterval struct{ Value int64 }

// Get retrieves node ips.ipsfb.alert_interval's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsIpsfbAlertInterval) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsIpsfbAlertInterval(client)
	return err
}

// Update PUT's' ips.ipsfb.alert_interval's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsIpsfbAlertInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsIpsfbAlertInterval(client, i.Value)
}

// IpsIpsfbConfigInterval represents the ips.ipsfb.config_interval node and implements sophos.Node
type IpsIpsfbConfigInterval struct{ Value int64 }

// Get retrieves node ips.ipsfb.config_interval's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsIpsfbConfigInterval) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsIpsfbConfigInterval(client)
	return err
}

// Update PUT's' ips.ipsfb.config_interval's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsIpsfbConfigInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsIpsfbConfigInterval(client, i.Value)
}

// IpsIpsfbDebug represents the ips.ipsfb.debug node and implements sophos.Node
type IpsIpsfbDebug struct{ Value bool }

// Get retrieves node ips.ipsfb.debug's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsIpsfbDebug) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsIpsfbDebug(client)
	return err
}

// Update PUT's' ips.ipsfb.debug's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsIpsfbDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsIpsfbDebug(client, i.Value)
}

// IpsLocalNetworks represents the ips.local_networks node and implements sophos.Node
type IpsLocalNetworks struct{ Value []string }

// Get retrieves node ips.local_networks's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsLocalNetworks) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsLocalNetworks(client)
	return err
}

// Update PUT's' ips.local_networks's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsLocalNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsLocalNetworks(client, i.Value)
}

// IpsNumInstances represents the ips.num_instances node and implements sophos.Node
type IpsNumInstances struct{ Value map[string]interface{} }

// Get retrieves node ips.num_instances's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsNumInstances) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsNumInstances(client)
	return err
}

// Update PUT's' ips.num_instances's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsNumInstances) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsNumInstances(client, i.Value)
}

// IpsPatternChannel represents the ips.pattern_channel node and implements sophos.Node
type IpsPatternChannel struct{ Value string }

// Get retrieves node ips.pattern_channel's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsPatternChannel) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsPatternChannel(client)
	return err
}

// Update PUT's' ips.pattern_channel's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsPatternChannel) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsPatternChannel(client, i.Value)
}

// IpsPolicy represents the ips.policy node and implements sophos.Node
type IpsPolicy struct{ Value string }

// Get retrieves node ips.policy's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsPolicy) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsPolicy(client)
	return err
}

// Update PUT's' ips.policy's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsPolicy) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsPolicy(client, i.Value)
}

// IpsQueueLength represents the ips.queue_length node and implements sophos.Node
type IpsQueueLength struct{ Value int64 }

// Get retrieves node ips.queue_length's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsQueueLength) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsQueueLength(client)
	return err
}

// Update PUT's' ips.queue_length's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsQueueLength) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsQueueLength(client, i.Value)
}

// IpsQueueThreshold represents the ips.queue_threshold node and implements sophos.Node
type IpsQueueThreshold struct{ Value map[string]interface{} }

// Get retrieves node ips.queue_threshold's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsQueueThreshold) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsQueueThreshold(client)
	return err
}

// Update PUT's' ips.queue_threshold's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsQueueThreshold) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsQueueThreshold(client, i.Value)
}

// IpsReloadMethod represents the ips.reload_method node and implements sophos.Node
type IpsReloadMethod struct{ Value string }

// Get retrieves node ips.reload_method's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsReloadMethod) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsReloadMethod(client)
	return err
}

// Update PUT's' ips.reload_method's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsReloadMethod) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsReloadMethod(client, i.Value)
}

// IpsRestartPolicy represents the ips.restart_policy node and implements sophos.Node
type IpsRestartPolicy struct{ Value string }

// Get retrieves node ips.restart_policy's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsRestartPolicy) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsRestartPolicy(client)
	return err
}

// Update PUT's' ips.restart_policy's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsRestartPolicy) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsRestartPolicy(client, i.Value)
}

// IpsRuleModifiers represents the ips.rule_modifiers node and implements sophos.Node
type IpsRuleModifiers struct{ Value []interface{} }

// Get retrieves node ips.rule_modifiers's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsRuleModifiers) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsRuleModifiers(client)
	return err
}

// Update PUT's' ips.rule_modifiers's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsRuleModifiers) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsRuleModifiers(client, i.Value)
}

// IpsRules represents the ips.rules node and implements sophos.Node
type IpsRules struct{ Value []interface{} }

// Get retrieves node ips.rules's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsRules) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsRules(client)
	return err
}

// Update PUT's' ips.rules's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsRules) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsRules(client, i.Value)
}

// IpsSkipAcks represents the ips.skip_acks node and implements sophos.Node
type IpsSkipAcks struct{ Value bool }

// Get retrieves node ips.skip_acks's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsSkipAcks) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsSkipAcks(client)
	return err
}

// Update PUT's' ips.skip_acks's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsSkipAcks) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsSkipAcks(client, i.Value)
}

// IpsSmtpServers represents the ips.smtp_servers node and implements sophos.Node
type IpsSmtpServers struct{ Value []interface{} }

// Get retrieves node ips.smtp_servers's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsSmtpServers) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsSmtpServers(client)
	return err
}

// Update PUT's' ips.smtp_servers's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsSmtpServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsSmtpServers(client, i.Value)
}

// IpsSnortsettingsMaxQueuedBytes represents the ips.snortsettings.max_queued_bytes node and implements sophos.Node
type IpsSnortsettingsMaxQueuedBytes struct{ Value map[string]interface{} }

// Get retrieves node ips.snortsettings.max_queued_bytes's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMaxQueuedBytes) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsSnortsettingsMaxQueuedBytes(client)
	return err
}

// Update PUT's' ips.snortsettings.max_queued_bytes's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMaxQueuedBytes) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsSnortsettingsMaxQueuedBytes(client, i.Value)
}

// IpsSnortsettingsMaxQueuedSegs represents the ips.snortsettings.max_queued_segs node and implements sophos.Node
type IpsSnortsettingsMaxQueuedSegs struct{ Value map[string]interface{} }

// Get retrieves node ips.snortsettings.max_queued_segs's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMaxQueuedSegs) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsSnortsettingsMaxQueuedSegs(client)
	return err
}

// Update PUT's' ips.snortsettings.max_queued_segs's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMaxQueuedSegs) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsSnortsettingsMaxQueuedSegs(client, i.Value)
}

// IpsSnortsettingsMaxTcp represents the ips.snortsettings.max_tcp node and implements sophos.Node
type IpsSnortsettingsMaxTcp struct{ Value map[string]interface{} }

// Get retrieves node ips.snortsettings.max_tcp's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMaxTcp) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsSnortsettingsMaxTcp(client)
	return err
}

// Update PUT's' ips.snortsettings.max_tcp's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMaxTcp) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsSnortsettingsMaxTcp(client, i.Value)
}

// IpsSnortsettingsMaxUdp represents the ips.snortsettings.max_udp node and implements sophos.Node
type IpsSnortsettingsMaxUdp struct{ Value map[string]interface{} }

// Get retrieves node ips.snortsettings.max_udp's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMaxUdp) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsSnortsettingsMaxUdp(client)
	return err
}

// Update PUT's' ips.snortsettings.max_udp's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMaxUdp) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsSnortsettingsMaxUdp(client, i.Value)
}

// IpsSnortsettingsMemcap represents the ips.snortsettings.memcap node and implements sophos.Node
type IpsSnortsettingsMemcap struct{ Value map[string]interface{} }

// Get retrieves node ips.snortsettings.memcap's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMemcap) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsSnortsettingsMemcap(client)
	return err
}

// Update PUT's' ips.snortsettings.memcap's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsMemcap) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsSnortsettingsMemcap(client, i.Value)
}

// IpsSnortsettingsSearchMethod represents the ips.snortsettings.search_method node and implements sophos.Node
type IpsSnortsettingsSearchMethod struct{ Value string }

// Get retrieves node ips.snortsettings.search_method's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsSearchMethod) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsSnortsettingsSearchMethod(client)
	return err
}

// Update PUT's' ips.snortsettings.search_method's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsSnortsettingsSearchMethod) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsSnortsettingsSearchMethod(client, i.Value)
}

// IpsSqlServers represents the ips.sql_servers node and implements sophos.Node
type IpsSqlServers struct{ Value []interface{} }

// Get retrieves node ips.sql_servers's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsSqlServers) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsSqlServers(client)
	return err
}

// Update PUT's' ips.sql_servers's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsSqlServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsSqlServers(client, i.Value)
}

// IpsStatus represents the ips.status node and implements sophos.Node
type IpsStatus struct{ Value bool }

// Get retrieves node ips.status's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsStatus) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsStatus(client)
	return err
}

// Update PUT's' ips.status's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsStatus(client, i.Value)
}

// IpsecAdvancedCrlAutoFetching represents the ipsec.advanced.crl_auto_fetching node and implements sophos.Node
type IpsecAdvancedCrlAutoFetching struct{ Value bool }

// Get retrieves node ipsec.advanced.crl_auto_fetching's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedCrlAutoFetching) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedCrlAutoFetching(client)
	return err
}

// Update PUT's' ipsec.advanced.crl_auto_fetching's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedCrlAutoFetching) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedCrlAutoFetching(client, i.Value)
}

// IpsecAdvancedCrlStrictPolicy represents the ipsec.advanced.crl_strict_policy node and implements sophos.Node
type IpsecAdvancedCrlStrictPolicy struct{ Value bool }

// Get retrieves node ipsec.advanced.crl_strict_policy's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedCrlStrictPolicy) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedCrlStrictPolicy(client)
	return err
}

// Update PUT's' ipsec.advanced.crl_strict_policy's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedCrlStrictPolicy) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedCrlStrictPolicy(client, i.Value)
}

// IpsecAdvancedDeadPeerDetection represents the ipsec.advanced.dead_peer_detection node and implements sophos.Node
type IpsecAdvancedDeadPeerDetection struct{ Value bool }

// Get retrieves node ipsec.advanced.dead_peer_detection's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedDeadPeerDetection) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedDeadPeerDetection(client)
	return err
}

// Update PUT's' ipsec.advanced.dead_peer_detection's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedDeadPeerDetection) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedDeadPeerDetection(client, i.Value)
}

// IpsecAdvancedIkeDebug represents the ipsec.advanced.ike_debug node and implements sophos.Node
type IpsecAdvancedIkeDebug struct{ Value []interface{} }

// Get retrieves node ipsec.advanced.ike_debug's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedIkeDebug) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedIkeDebug(client)
	return err
}

// Update PUT's' ipsec.advanced.ike_debug's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedIkeDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedIkeDebug(client, i.Value)
}

// IpsecAdvancedIkePort represents the ipsec.advanced.ike_port node and implements sophos.Node
type IpsecAdvancedIkePort struct{ Value int64 }

// Get retrieves node ipsec.advanced.ike_port's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedIkePort) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedIkePort(client)
	return err
}

// Update PUT's' ipsec.advanced.ike_port's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedIkePort) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedIkePort(client, i.Value)
}

// IpsecAdvancedMetric represents the ipsec.advanced.metric node and implements sophos.Node
type IpsecAdvancedMetric struct{ Value map[string]interface{} }

// Get retrieves node ipsec.advanced.metric's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedMetric) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedMetric(client)
	return err
}

// Update PUT's' ipsec.advanced.metric's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedMetric) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedMetric(client, i.Value)
}

// IpsecAdvancedNatTraversal represents the ipsec.advanced.nat_traversal node and implements sophos.Node
type IpsecAdvancedNatTraversal struct{ Value bool }

// Get retrieves node ipsec.advanced.nat_traversal's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedNatTraversal) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedNatTraversal(client)
	return err
}

// Update PUT's' ipsec.advanced.nat_traversal's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedNatTraversal) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedNatTraversal(client, i.Value)
}

// IpsecAdvancedNatTraversalKeepalive represents the ipsec.advanced.nat_traversal_keepalive node and implements sophos.Node
type IpsecAdvancedNatTraversalKeepalive struct{ Value int64 }

// Get retrieves node ipsec.advanced.nat_traversal_keepalive's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedNatTraversalKeepalive) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedNatTraversalKeepalive(client)
	return err
}

// Update PUT's' ipsec.advanced.nat_traversal_keepalive's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedNatTraversalKeepalive) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedNatTraversalKeepalive(client, i.Value)
}

// IpsecAdvancedProbePsk represents the ipsec.advanced.probe_psk node and implements sophos.Node
type IpsecAdvancedProbePsk struct{ Value bool }

// Get retrieves node ipsec.advanced.probe_psk's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedProbePsk) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedProbePsk(client)
	return err
}

// Update PUT's' ipsec.advanced.probe_psk's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedProbePsk) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedProbePsk(client, i.Value)
}

// IpsecAdvancedPskVpnId represents the ipsec.advanced.psk_vpn_id node and implements sophos.Node
type IpsecAdvancedPskVpnId struct{ Value string }

// Get retrieves node ipsec.advanced.psk_vpn_id's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedPskVpnId) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedPskVpnId(client)
	return err
}

// Update PUT's' ipsec.advanced.psk_vpn_id's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedPskVpnId) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedPskVpnId(client, i.Value)
}

// IpsecAdvancedPskVpnIdType represents the ipsec.advanced.psk_vpn_id_type node and implements sophos.Node
type IpsecAdvancedPskVpnIdType struct{ Value string }

// Get retrieves node ipsec.advanced.psk_vpn_id_type's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedPskVpnIdType) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecAdvancedPskVpnIdType(client)
	return err
}

// Update PUT's' ipsec.advanced.psk_vpn_id_type's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecAdvancedPskVpnIdType) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecAdvancedPskVpnIdType(client, i.Value)
}

// IpsecConnections represents the ipsec.connections node and implements sophos.Node
type IpsecConnections struct{ Value []string }

// Get retrieves node ipsec.connections's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecConnections) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecConnections(client)
	return err
}

// Update PUT's' ipsec.connections's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecConnections) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecConnections(client, i.Value)
}

// IpsecLocalRsa represents the ipsec.local_rsa node and implements sophos.Node
type IpsecLocalRsa struct{ Value string }

// Get retrieves node ipsec.local_rsa's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecLocalRsa) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecLocalRsa(client)
	return err
}

// Update PUT's' ipsec.local_rsa's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecLocalRsa) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecLocalRsa(client, i.Value)
}

// IpsecLocalX509 represents the ipsec.local_x509 node and implements sophos.Node
type IpsecLocalX509 struct{ Value string }

// Get retrieves node ipsec.local_x509's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecLocalX509) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecLocalX509(client)
	return err
}

// Update PUT's' ipsec.local_x509's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecLocalX509) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecLocalX509(client, i.Value)
}

// IpsecStatus represents the ipsec.status node and implements sophos.Node
type IpsecStatus struct{ Value bool }

// Get retrieves node ipsec.status's value from the gateway utilizing a sophos.ClientInterface
func (i *IpsecStatus) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpsecStatus(client)
	return err
}

// Update PUT's' ipsec.status's value to the gateway utilizing a sophos.ClientInterface
func (i *IpsecStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpsecStatus(client, i.Value)
}

// Ipv6AdvancedHopLimit represents the ipv6.advanced.hop_limit node and implements sophos.Node
type Ipv6AdvancedHopLimit struct{ Value int64 }

// Get retrieves node ipv6.advanced.hop_limit's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedHopLimit) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6AdvancedHopLimit(client)
	return err
}

// Update PUT's' ipv6.advanced.hop_limit's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedHopLimit) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6AdvancedHopLimit(client, i.Value)
}

// Ipv6AdvancedMaxInterval represents the ipv6.advanced.max_interval node and implements sophos.Node
type Ipv6AdvancedMaxInterval struct{ Value int64 }

// Get retrieves node ipv6.advanced.max_interval's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedMaxInterval) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6AdvancedMaxInterval(client)
	return err
}

// Update PUT's' ipv6.advanced.max_interval's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedMaxInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6AdvancedMaxInterval(client, i.Value)
}

// Ipv6AdvancedMinInterval represents the ipv6.advanced.min_interval node and implements sophos.Node
type Ipv6AdvancedMinInterval struct{ Value int64 }

// Get retrieves node ipv6.advanced.min_interval's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedMinInterval) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6AdvancedMinInterval(client)
	return err
}

// Update PUT's' ipv6.advanced.min_interval's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedMinInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6AdvancedMinInterval(client, i.Value)
}

// Ipv6AdvancedPreference represents the ipv6.advanced.preference node and implements sophos.Node
type Ipv6AdvancedPreference struct{ Value string }

// Get retrieves node ipv6.advanced.preference's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedPreference) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6AdvancedPreference(client)
	return err
}

// Update PUT's' ipv6.advanced.preference's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedPreference) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6AdvancedPreference(client, i.Value)
}

// Ipv6AdvancedReachableTime represents the ipv6.advanced.reachable_time node and implements sophos.Node
type Ipv6AdvancedReachableTime struct{ Value map[string]interface{} }

// Get retrieves node ipv6.advanced.reachable_time's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedReachableTime) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6AdvancedReachableTime(client)
	return err
}

// Update PUT's' ipv6.advanced.reachable_time's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedReachableTime) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6AdvancedReachableTime(client, i.Value)
}

// Ipv6AdvancedRetransTime represents the ipv6.advanced.retrans_time node and implements sophos.Node
type Ipv6AdvancedRetransTime struct{ Value map[string]interface{} }

// Get retrieves node ipv6.advanced.retrans_time's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedRetransTime) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6AdvancedRetransTime(client)
	return err
}

// Update PUT's' ipv6.advanced.retrans_time's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6AdvancedRetransTime) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6AdvancedRetransTime(client, i.Value)
}

// Ipv6BrokerAuthentication represents the ipv6.broker.authentication node and implements sophos.Node
type Ipv6BrokerAuthentication struct{ Value string }

// Get retrieves node ipv6.broker.authentication's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerAuthentication) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6BrokerAuthentication(client)
	return err
}

// Update PUT's' ipv6.broker.authentication's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerAuthentication) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6BrokerAuthentication(client, i.Value)
}

// Ipv6BrokerInterface represents the ipv6.broker.interface node and implements sophos.Node
type Ipv6BrokerInterface struct{ Value string }

// Get retrieves node ipv6.broker.interface's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerInterface) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6BrokerInterface(client)
	return err
}

// Update PUT's' ipv6.broker.interface's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerInterface) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6BrokerInterface(client, i.Value)
}

// Ipv6BrokerPassword represents the ipv6.broker.password node and implements sophos.Node
type Ipv6BrokerPassword struct{ Value string }

// Get retrieves node ipv6.broker.password's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerPassword) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6BrokerPassword(client)
	return err
}

// Update PUT's' ipv6.broker.password's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6BrokerPassword(client, i.Value)
}

// Ipv6BrokerProtocol represents the ipv6.broker.protocol node and implements sophos.Node
type Ipv6BrokerProtocol struct{ Value string }

// Get retrieves node ipv6.broker.protocol's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerProtocol) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6BrokerProtocol(client)
	return err
}

// Update PUT's' ipv6.broker.protocol's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerProtocol) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6BrokerProtocol(client, i.Value)
}

// Ipv6BrokerServer represents the ipv6.broker.server node and implements sophos.Node
type Ipv6BrokerServer struct{ Value string }

// Get retrieves node ipv6.broker.server's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerServer) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6BrokerServer(client)
	return err
}

// Update PUT's' ipv6.broker.server's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6BrokerServer(client, i.Value)
}

// Ipv6BrokerStatus represents the ipv6.broker.status node and implements sophos.Node
type Ipv6BrokerStatus struct{ Value bool }

// Get retrieves node ipv6.broker.status's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerStatus) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6BrokerStatus(client)
	return err
}

// Update PUT's' ipv6.broker.status's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6BrokerStatus(client, i.Value)
}

// Ipv6BrokerTunnelId represents the ipv6.broker.tunnel_id node and implements sophos.Node
type Ipv6BrokerTunnelId struct{ Value string }

// Get retrieves node ipv6.broker.tunnel_id's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerTunnelId) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6BrokerTunnelId(client)
	return err
}

// Update PUT's' ipv6.broker.tunnel_id's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerTunnelId) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6BrokerTunnelId(client, i.Value)
}

// Ipv6BrokerUsername represents the ipv6.broker.username node and implements sophos.Node
type Ipv6BrokerUsername struct{ Value string }

// Get retrieves node ipv6.broker.username's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerUsername) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6BrokerUsername(client)
	return err
}

// Update PUT's' ipv6.broker.username's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6BrokerUsername) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6BrokerUsername(client, i.Value)
}

// Ipv6Nat64Address represents the ipv6.nat64.address node and implements sophos.Node
type Ipv6Nat64Address struct{ Value string }

// Get retrieves node ipv6.nat64.address's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Nat64Address) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Nat64Address(client)
	return err
}

// Update PUT's' ipv6.nat64.address's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Nat64Address) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Nat64Address(client, i.Value)
}

// Ipv6Nat64Dns64V6Only represents the ipv6.nat64.dns64_v6only node and implements sophos.Node
type Ipv6Nat64Dns64V6Only struct{ Value bool }

// Get retrieves node ipv6.nat64.dns64_v6only's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Nat64Dns64V6Only) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Nat64Dns64V6Only(client)
	return err
}

// Update PUT's' ipv6.nat64.dns64_v6only's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Nat64Dns64V6Only) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Nat64Dns64V6Only(client, i.Value)
}

// Ipv6Nat64Prefix represents the ipv6.nat64.prefix node and implements sophos.Node
type Ipv6Nat64Prefix struct{ Value string }

// Get retrieves node ipv6.nat64.prefix's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Nat64Prefix) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Nat64Prefix(client)
	return err
}

// Update PUT's' ipv6.nat64.prefix's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Nat64Prefix) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Nat64Prefix(client, i.Value)
}

// Ipv6Nat64Status represents the ipv6.nat64.status node and implements sophos.Node
type Ipv6Nat64Status struct{ Value bool }

// Get retrieves node ipv6.nat64.status's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Nat64Status) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Nat64Status(client)
	return err
}

// Update PUT's' ipv6.nat64.status's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Nat64Status) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Nat64Status(client, i.Value)
}

// Ipv6Prefer represents the ipv6.prefer node and implements sophos.Node
type Ipv6Prefer struct{ Value bool }

// Get retrieves node ipv6.prefer's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Prefer) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Prefer(client)
	return err
}

// Update PUT's' ipv6.prefer's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Prefer) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Prefer(client, i.Value)
}

// Ipv6Prefixes represents the ipv6.prefixes node and implements sophos.Node
type Ipv6Prefixes struct{ Value []interface{} }

// Get retrieves node ipv6.prefixes's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Prefixes) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Prefixes(client)
	return err
}

// Update PUT's' ipv6.prefixes's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Prefixes) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Prefixes(client, i.Value)
}

// Ipv6Renumbering represents the ipv6.renumbering node and implements sophos.Node
type Ipv6Renumbering struct{ Value bool }

// Get retrieves node ipv6.renumbering's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Renumbering) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Renumbering(client)
	return err
}

// Update PUT's' ipv6.renumbering's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Renumbering) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Renumbering(client, i.Value)
}

// Ipv6Six2FourInterface represents the ipv6.six2four.interface node and implements sophos.Node
type Ipv6Six2FourInterface struct{ Value string }

// Get retrieves node ipv6.six2four.interface's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Six2FourInterface) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Six2FourInterface(client)
	return err
}

// Update PUT's' ipv6.six2four.interface's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Six2FourInterface) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Six2FourInterface(client, i.Value)
}

// Ipv6Six2FourServer represents the ipv6.six2four.server node and implements sophos.Node
type Ipv6Six2FourServer struct{ Value string }

// Get retrieves node ipv6.six2four.server's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Six2FourServer) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Six2FourServer(client)
	return err
}

// Update PUT's' ipv6.six2four.server's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Six2FourServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Six2FourServer(client, i.Value)
}

// Ipv6Six2FourStatus represents the ipv6.six2four.status node and implements sophos.Node
type Ipv6Six2FourStatus struct{ Value bool }

// Get retrieves node ipv6.six2four.status's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Six2FourStatus) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Six2FourStatus(client)
	return err
}

// Update PUT's' ipv6.six2four.status's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Six2FourStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Six2FourStatus(client, i.Value)
}

// Ipv6Status represents the ipv6.status node and implements sophos.Node
type Ipv6Status struct{ Value bool }

// Get retrieves node ipv6.status's value from the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Status) Get(client sophos.ClientInterface) (err error) {
	i.Value, err = GetIpv6Status(client)
	return err
}

// Update PUT's' ipv6.status's value to the gateway utilizing a sophos.ClientInterface
func (i *Ipv6Status) Update(client sophos.ClientInterface) (err error) {
	return UpdateIpv6Status(client, i.Value)
}

// LicensingActiveIps represents the licensing.active_ips node and implements sophos.Node
type LicensingActiveIps struct{ Value []string }

// Get retrieves node licensing.active_ips's value from the gateway utilizing a sophos.ClientInterface
func (l *LicensingActiveIps) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLicensingActiveIps(client)
	return err
}

// Update PUT's' licensing.active_ips's value to the gateway utilizing a sophos.ClientInterface
func (l *LicensingActiveIps) Update(client sophos.ClientInterface) (err error) {
	return UpdateLicensingActiveIps(client, l.Value)
}

// LicensingLicense represents the licensing.license node and implements sophos.Node
type LicensingLicense struct{ Value string }

// Get retrieves node licensing.license's value from the gateway utilizing a sophos.ClientInterface
func (l *LicensingLicense) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLicensingLicense(client)
	return err
}

// Update PUT's' licensing.license's value to the gateway utilizing a sophos.ClientInterface
func (l *LicensingLicense) Update(client sophos.ClientInterface) (err error) {
	return UpdateLicensingLicense(client, l.Value)
}

// LicensingUserLimitExceeded represents the licensing.user_limit_exceeded node and implements sophos.Node
type LicensingUserLimitExceeded struct{ Value map[string]interface{} }

// Get retrieves node licensing.user_limit_exceeded's value from the gateway utilizing a sophos.ClientInterface
func (l *LicensingUserLimitExceeded) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLicensingUserLimitExceeded(client)
	return err
}

// Update PUT's' licensing.user_limit_exceeded's value to the gateway utilizing a sophos.ClientInterface
func (l *LicensingUserLimitExceeded) Update(client sophos.ClientInterface) (err error) {
	return UpdateLicensingUserLimitExceeded(client, l.Value)
}

// LinkAggregationGroups represents the link_aggregation.groups node and implements sophos.Node
type LinkAggregationGroups struct{ Value []string }

// Get retrieves node link_aggregation.groups's value from the gateway utilizing a sophos.ClientInterface
func (l *LinkAggregationGroups) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLinkAggregationGroups(client)
	return err
}

// Update PUT's' link_aggregation.groups's value to the gateway utilizing a sophos.ClientInterface
func (l *LinkAggregationGroups) Update(client sophos.ClientInterface) (err error) {
	return UpdateLinkAggregationGroups(client, l.Value)
}

// LoadbalanceHttpErrorCode represents the loadbalance.http_error_code node and implements sophos.Node
type LoadbalanceHttpErrorCode struct{ Value int64 }

// Get retrieves node loadbalance.http_error_code's value from the gateway utilizing a sophos.ClientInterface
func (l *LoadbalanceHttpErrorCode) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLoadbalanceHttpErrorCode(client)
	return err
}

// Update PUT's' loadbalance.http_error_code's value to the gateway utilizing a sophos.ClientInterface
func (l *LoadbalanceHttpErrorCode) Update(client sophos.ClientInterface) (err error) {
	return UpdateLoadbalanceHttpErrorCode(client, l.Value)
}

// LoadbalanceRules represents the loadbalance.rules node and implements sophos.Node
type LoadbalanceRules struct{ Value []interface{} }

// Get retrieves node loadbalance.rules's value from the gateway utilizing a sophos.ClientInterface
func (l *LoadbalanceRules) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLoadbalanceRules(client)
	return err
}

// Update PUT's' loadbalance.rules's value to the gateway utilizing a sophos.ClientInterface
func (l *LoadbalanceRules) Update(client sophos.ClientInterface) (err error) {
	return UpdateLoadbalanceRules(client, l.Value)
}

// LogfilesLocalActionOne represents the logfiles.local.action_one node and implements sophos.Node
type LogfilesLocalActionOne struct{ Value string }

// Get retrieves node logfiles.local.action_one's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalActionOne) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesLocalActionOne(client)
	return err
}

// Update PUT's' logfiles.local.action_one's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalActionOne) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesLocalActionOne(client, l.Value)
}

// LogfilesLocalActionThree represents the logfiles.local.action_three node and implements sophos.Node
type LogfilesLocalActionThree struct{ Value string }

// Get retrieves node logfiles.local.action_three's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalActionThree) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesLocalActionThree(client)
	return err
}

// Update PUT's' logfiles.local.action_three's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalActionThree) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesLocalActionThree(client, l.Value)
}

// LogfilesLocalActionTwo represents the logfiles.local.action_two node and implements sophos.Node
type LogfilesLocalActionTwo struct{ Value string }

// Get retrieves node logfiles.local.action_two's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalActionTwo) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesLocalActionTwo(client)
	return err
}

// Update PUT's' logfiles.local.action_two's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalActionTwo) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesLocalActionTwo(client, l.Value)
}

// LogfilesLocalDeleteAfterDays represents the logfiles.local.delete_after_days node and implements sophos.Node
type LogfilesLocalDeleteAfterDays struct{ Value map[string]interface{} }

// Get retrieves node logfiles.local.delete_after_days's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalDeleteAfterDays) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesLocalDeleteAfterDays(client)
	return err
}

// Update PUT's' logfiles.local.delete_after_days's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalDeleteAfterDays) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesLocalDeleteAfterDays(client, l.Value)
}

// LogfilesLocalPercentageOne represents the logfiles.local.percentage_one node and implements sophos.Node
type LogfilesLocalPercentageOne struct{ Value int64 }

// Get retrieves node logfiles.local.percentage_one's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalPercentageOne) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesLocalPercentageOne(client)
	return err
}

// Update PUT's' logfiles.local.percentage_one's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalPercentageOne) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesLocalPercentageOne(client, l.Value)
}

// LogfilesLocalPercentageThree represents the logfiles.local.percentage_three node and implements sophos.Node
type LogfilesLocalPercentageThree struct{ Value int64 }

// Get retrieves node logfiles.local.percentage_three's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalPercentageThree) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesLocalPercentageThree(client)
	return err
}

// Update PUT's' logfiles.local.percentage_three's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalPercentageThree) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesLocalPercentageThree(client, l.Value)
}

// LogfilesLocalPercentageTwo represents the logfiles.local.percentage_two node and implements sophos.Node
type LogfilesLocalPercentageTwo struct{ Value int64 }

// Get retrieves node logfiles.local.percentage_two's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalPercentageTwo) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesLocalPercentageTwo(client)
	return err
}

// Update PUT's' logfiles.local.percentage_two's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalPercentageTwo) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesLocalPercentageTwo(client, l.Value)
}

// LogfilesLocalStatus represents the logfiles.local.status node and implements sophos.Node
type LogfilesLocalStatus struct{ Value bool }

// Get retrieves node logfiles.local.status's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalStatus) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesLocalStatus(client)
	return err
}

// Update PUT's' logfiles.local.status's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesLocalStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesLocalStatus(client, l.Value)
}

// LogfilesRemoteFtpService represents the logfiles.remote.ftp_service node and implements sophos.Node
type LogfilesRemoteFtpService struct{ Value string }

// Get retrieves node logfiles.remote.ftp_service's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteFtpService) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesRemoteFtpService(client)
	return err
}

// Update PUT's' logfiles.remote.ftp_service's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteFtpService) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesRemoteFtpService(client, l.Value)
}

// LogfilesRemoteHost represents the logfiles.remote.host node and implements sophos.Node
type LogfilesRemoteHost struct{ Value string }

// Get retrieves node logfiles.remote.host's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteHost) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesRemoteHost(client)
	return err
}

// Update PUT's' logfiles.remote.host's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteHost) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesRemoteHost(client, l.Value)
}

// LogfilesRemotePass represents the logfiles.remote.pass node and implements sophos.Node
type LogfilesRemotePass struct{ Value string }

// Get retrieves node logfiles.remote.pass's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemotePass) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesRemotePass(client)
	return err
}

// Update PUT's' logfiles.remote.pass's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemotePass) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesRemotePass(client, l.Value)
}

// LogfilesRemotePath represents the logfiles.remote.path node and implements sophos.Node
type LogfilesRemotePath struct{ Value string }

// Get retrieves node logfiles.remote.path's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemotePath) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesRemotePath(client)
	return err
}

// Update PUT's' logfiles.remote.path's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemotePath) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesRemotePath(client, l.Value)
}

// LogfilesRemoteSmbWorkgroup represents the logfiles.remote.smb_workgroup node and implements sophos.Node
type LogfilesRemoteSmbWorkgroup struct{ Value string }

// Get retrieves node logfiles.remote.smb_workgroup's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteSmbWorkgroup) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesRemoteSmbWorkgroup(client)
	return err
}

// Update PUT's' logfiles.remote.smb_workgroup's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteSmbWorkgroup) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesRemoteSmbWorkgroup(client, l.Value)
}

// LogfilesRemoteSmtpAddress represents the logfiles.remote.smtp_address node and implements sophos.Node
type LogfilesRemoteSmtpAddress struct{ Value string }

// Get retrieves node logfiles.remote.smtp_address's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteSmtpAddress) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesRemoteSmtpAddress(client)
	return err
}

// Update PUT's' logfiles.remote.smtp_address's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteSmtpAddress) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesRemoteSmtpAddress(client, l.Value)
}

// LogfilesRemoteStatus represents the logfiles.remote.status node and implements sophos.Node
type LogfilesRemoteStatus struct{ Value bool }

// Get retrieves node logfiles.remote.status's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteStatus) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesRemoteStatus(client)
	return err
}

// Update PUT's' logfiles.remote.status's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesRemoteStatus(client, l.Value)
}

// LogfilesRemoteType represents the logfiles.remote.type node and implements sophos.Node
type LogfilesRemoteType struct{ Value string }

// Get retrieves node logfiles.remote.type's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteType) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesRemoteType(client)
	return err
}

// Update PUT's' logfiles.remote.type's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteType) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesRemoteType(client, l.Value)
}

// LogfilesRemoteUser represents the logfiles.remote.user node and implements sophos.Node
type LogfilesRemoteUser struct{ Value string }

// Get retrieves node logfiles.remote.user's value from the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteUser) Get(client sophos.ClientInterface) (err error) {
	l.Value, err = GetLogfilesRemoteUser(client)
	return err
}

// Update PUT's' logfiles.remote.user's value to the gateway utilizing a sophos.ClientInterface
func (l *LogfilesRemoteUser) Update(client sophos.ClientInterface) (err error) {
	return UpdateLogfilesRemoteUser(client, l.Value)
}

// MasqRules represents the masq.rules node and implements sophos.Node
type MasqRules struct{ Value []string }

// Get retrieves node masq.rules's value from the gateway utilizing a sophos.ClientInterface
func (m *MasqRules) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMasqRules(client)
	return err
}

// Update PUT's' masq.rules's value to the gateway utilizing a sophos.ClientInterface
func (m *MasqRules) Update(client sophos.ClientInterface) (err error) {
	return UpdateMasqRules(client, m.Value)
}

// MigrationAccessToken represents the migration.access_token node and implements sophos.Node
type MigrationAccessToken struct{ Value string }

// Get retrieves node migration.access_token's value from the gateway utilizing a sophos.ClientInterface
func (m *MigrationAccessToken) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMigrationAccessToken(client)
	return err
}

// Update PUT's' migration.access_token's value to the gateway utilizing a sophos.ClientInterface
func (m *MigrationAccessToken) Update(client sophos.ClientInterface) (err error) {
	return UpdateMigrationAccessToken(client, m.Value)
}

// MigrationLocalOverride represents the migration.local_override node and implements sophos.Node
type MigrationLocalOverride struct{ Value bool }

// Get retrieves node migration.local_override's value from the gateway utilizing a sophos.ClientInterface
func (m *MigrationLocalOverride) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMigrationLocalOverride(client)
	return err
}

// Update PUT's' migration.local_override's value to the gateway utilizing a sophos.ClientInterface
func (m *MigrationLocalOverride) Update(client sophos.ClientInterface) (err error) {
	return UpdateMigrationLocalOverride(client, m.Value)
}

// MigrationRefreshToken represents the migration.refresh_token node and implements sophos.Node
type MigrationRefreshToken struct{ Value string }

// Get retrieves node migration.refresh_token's value from the gateway utilizing a sophos.ClientInterface
func (m *MigrationRefreshToken) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMigrationRefreshToken(client)
	return err
}

// Update PUT's' migration.refresh_token's value to the gateway utilizing a sophos.ClientInterface
func (m *MigrationRefreshToken) Update(client sophos.ClientInterface) (err error) {
	return UpdateMigrationRefreshToken(client, m.Value)
}

// MigrationTabVisibility represents the migration.tab_visibility node and implements sophos.Node
type MigrationTabVisibility struct{ Value string }

// Get retrieves node migration.tab_visibility's value from the gateway utilizing a sophos.ClientInterface
func (m *MigrationTabVisibility) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMigrationTabVisibility(client)
	return err
}

// Update PUT's' migration.tab_visibility's value to the gateway utilizing a sophos.ClientInterface
func (m *MigrationTabVisibility) Update(client sophos.ClientInterface) (err error) {
	return UpdateMigrationTabVisibility(client, m.Value)
}

// MigrationToolsetVersion represents the migration.toolset_version node and implements sophos.Node
type MigrationToolsetVersion struct{ Value string }

// Get retrieves node migration.toolset_version's value from the gateway utilizing a sophos.ClientInterface
func (m *MigrationToolsetVersion) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMigrationToolsetVersion(client)
	return err
}

// Update PUT's' migration.toolset_version's value to the gateway utilizing a sophos.ClientInterface
func (m *MigrationToolsetVersion) Update(client sophos.ClientInterface) (err error) {
	return UpdateMigrationToolsetVersion(client, m.Value)
}

// MigrationUtmVersion represents the migration.utm_version node and implements sophos.Node
type MigrationUtmVersion struct{ Value string }

// Get retrieves node migration.utm_version's value from the gateway utilizing a sophos.ClientInterface
func (m *MigrationUtmVersion) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMigrationUtmVersion(client)
	return err
}

// Update PUT's' migration.utm_version's value to the gateway utilizing a sophos.ClientInterface
func (m *MigrationUtmVersion) Update(client sophos.ClientInterface) (err error) {
	return UpdateMigrationUtmVersion(client, m.Value)
}

// MobileControlCa represents the mobile_control.ca node and implements sophos.Node
type MobileControlCa struct{ Value string }

// Get retrieves node mobile_control.ca's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlCa) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlCa(client)
	return err
}

// Update PUT's' mobile_control.ca's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlCa) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlCa(client, m.Value)
}

// MobileControlConfigCisco represents the mobile_control.config.cisco node and implements sophos.Node
type MobileControlConfigCisco struct{ Value bool }

// Get retrieves node mobile_control.config.cisco's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigCisco) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlConfigCisco(client)
	return err
}

// Update PUT's' mobile_control.config.cisco's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigCisco) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlConfigCisco(client, m.Value)
}

// MobileControlConfigEapMethod represents the mobile_control.config.eap_method node and implements sophos.Node
type MobileControlConfigEapMethod struct{ Value string }

// Get retrieves node mobile_control.config.eap_method's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigEapMethod) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlConfigEapMethod(client)
	return err
}

// Update PUT's' mobile_control.config.eap_method's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigEapMethod) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlConfigEapMethod(client, m.Value)
}

// MobileControlConfigForcePush represents the mobile_control.config.force_push node and implements sophos.Node
type MobileControlConfigForcePush struct{ Value bool }

// Get retrieves node mobile_control.config.force_push's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigForcePush) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlConfigForcePush(client)
	return err
}

// Update PUT's' mobile_control.config.force_push's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigForcePush) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlConfigForcePush(client, m.Value)
}

// MobileControlConfigL2Tp represents the mobile_control.config.l2tp node and implements sophos.Node
type MobileControlConfigL2Tp struct{ Value bool }

// Get retrieves node mobile_control.config.l2tp's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigL2Tp) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlConfigL2Tp(client)
	return err
}

// Update PUT's' mobile_control.config.l2tp's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigL2Tp) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlConfigL2Tp(client, m.Value)
}

// MobileControlConfigWifiNetworks represents the mobile_control.config.wifi_networks node and implements sophos.Node
type MobileControlConfigWifiNetworks struct{ Value []interface{} }

// Get retrieves node mobile_control.config.wifi_networks's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigWifiNetworks) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlConfigWifiNetworks(client)
	return err
}

// Update PUT's' mobile_control.config.wifi_networks's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlConfigWifiNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlConfigWifiNetworks(client, m.Value)
}

// MobileControlCustomer represents the mobile_control.customer node and implements sophos.Node
type MobileControlCustomer struct{ Value string }

// Get retrieves node mobile_control.customer's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlCustomer) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlCustomer(client)
	return err
}

// Update PUT's' mobile_control.customer's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlCustomer) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlCustomer(client, m.Value)
}

// MobileControlDebug represents the mobile_control.debug node and implements sophos.Node
type MobileControlDebug struct{ Value bool }

// Get retrieves node mobile_control.debug's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlDebug) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlDebug(client)
	return err
}

// Update PUT's' mobile_control.debug's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlDebug(client, m.Value)
}

// MobileControlNacCisco represents the mobile_control.nac.cisco node and implements sophos.Node
type MobileControlNacCisco struct{ Value bool }

// Get retrieves node mobile_control.nac.cisco's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacCisco) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlNacCisco(client)
	return err
}

// Update PUT's' mobile_control.nac.cisco's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacCisco) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlNacCisco(client, m.Value)
}

// MobileControlNacDenyAllVpn represents the mobile_control.nac.deny_all_vpn node and implements sophos.Node
type MobileControlNacDenyAllVpn struct{ Value bool }

// Get retrieves node mobile_control.nac.deny_all_vpn's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacDenyAllVpn) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlNacDenyAllVpn(client)
	return err
}

// Update PUT's' mobile_control.nac.deny_all_vpn's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacDenyAllVpn) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlNacDenyAllVpn(client, m.Value)
}

// MobileControlNacL2Tp represents the mobile_control.nac.l2tp node and implements sophos.Node
type MobileControlNacL2Tp struct{ Value bool }

// Get retrieves node mobile_control.nac.l2tp's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacL2Tp) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlNacL2Tp(client)
	return err
}

// Update PUT's' mobile_control.nac.l2tp's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacL2Tp) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlNacL2Tp(client, m.Value)
}

// MobileControlNacMacsAllowed represents the mobile_control.nac.macs_allowed node and implements sophos.Node
type MobileControlNacMacsAllowed struct{ Value string }

// Get retrieves node mobile_control.nac.macs_allowed's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacMacsAllowed) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlNacMacsAllowed(client)
	return err
}

// Update PUT's' mobile_control.nac.macs_allowed's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacMacsAllowed) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlNacMacsAllowed(client, m.Value)
}

// MobileControlNacMacsDenied represents the mobile_control.nac.macs_denied node and implements sophos.Node
type MobileControlNacMacsDenied struct{ Value string }

// Get retrieves node mobile_control.nac.macs_denied's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacMacsDenied) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlNacMacsDenied(client)
	return err
}

// Update PUT's' mobile_control.nac.macs_denied's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacMacsDenied) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlNacMacsDenied(client, m.Value)
}

// MobileControlNacPollInterval represents the mobile_control.nac.poll_interval node and implements sophos.Node
type MobileControlNacPollInterval struct{ Value int64 }

// Get retrieves node mobile_control.nac.poll_interval's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacPollInterval) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlNacPollInterval(client)
	return err
}

// Update PUT's' mobile_control.nac.poll_interval's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacPollInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlNacPollInterval(client, m.Value)
}

// MobileControlNacUsersDenied represents the mobile_control.nac.users_denied node and implements sophos.Node
type MobileControlNacUsersDenied struct{ Value []interface{} }

// Get retrieves node mobile_control.nac.users_denied's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacUsersDenied) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlNacUsersDenied(client)
	return err
}

// Update PUT's' mobile_control.nac.users_denied's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacUsersDenied) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlNacUsersDenied(client, m.Value)
}

// MobileControlNacWifiNetworks represents the mobile_control.nac.wifi_networks node and implements sophos.Node
type MobileControlNacWifiNetworks struct{ Value []interface{} }

// Get retrieves node mobile_control.nac.wifi_networks's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacWifiNetworks) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlNacWifiNetworks(client)
	return err
}

// Update PUT's' mobile_control.nac.wifi_networks's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlNacWifiNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlNacWifiNetworks(client, m.Value)
}

// MobileControlPassword represents the mobile_control.password node and implements sophos.Node
type MobileControlPassword struct{ Value string }

// Get retrieves node mobile_control.password's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlPassword) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlPassword(client)
	return err
}

// Update PUT's' mobile_control.password's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlPassword(client, m.Value)
}

// MobileControlServer represents the mobile_control.server node and implements sophos.Node
type MobileControlServer struct{ Value string }

// Get retrieves node mobile_control.server's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlServer) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlServer(client)
	return err
}

// Update PUT's' mobile_control.server's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlServer(client, m.Value)
}

// MobileControlStatus represents the mobile_control.status node and implements sophos.Node
type MobileControlStatus struct{ Value bool }

// Get retrieves node mobile_control.status's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlStatus) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlStatus(client)
	return err
}

// Update PUT's' mobile_control.status's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlStatus(client, m.Value)
}

// MobileControlUsername represents the mobile_control.username node and implements sophos.Node
type MobileControlUsername struct{ Value string }

// Get retrieves node mobile_control.username's value from the gateway utilizing a sophos.ClientInterface
func (m *MobileControlUsername) Get(client sophos.ClientInterface) (err error) {
	m.Value, err = GetMobileControlUsername(client)
	return err
}

// Update PUT's' mobile_control.username's value to the gateway utilizing a sophos.ClientInterface
func (m *MobileControlUsername) Update(client sophos.ClientInterface) (err error) {
	return UpdateMobileControlUsername(client, m.Value)
}

// NatRules represents the nat.rules node and implements sophos.Node
type NatRules struct{ Value []string }

// Get retrieves node nat.rules's value from the gateway utilizing a sophos.ClientInterface
func (n *NatRules) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNatRules(client)
	return err
}

// Update PUT's' nat.rules's value to the gateway utilizing a sophos.ClientInterface
func (n *NatRules) Update(client sophos.ClientInterface) (err error) {
	return UpdateNatRules(client, n.Value)
}

// NotificationsDeviceInfo represents the notifications.device_info node and implements sophos.Node
type NotificationsDeviceInfo struct{ Value string }

// Get retrieves node notifications.device_info's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsDeviceInfo) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsDeviceInfo(client)
	return err
}

// Update PUT's' notifications.device_info's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsDeviceInfo) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsDeviceInfo(client, n.Value)
}

// NotificationsLimiting represents the notifications.limiting node and implements sophos.Node
type NotificationsLimiting struct{ Value bool }

// Get retrieves node notifications.limiting's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsLimiting) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsLimiting(client)
	return err
}

// Update PUT's' notifications.limiting's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsLimiting) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsLimiting(client, n.Value)
}

// NotificationsOverlay represents the notifications.overlay node and implements sophos.Node
type NotificationsOverlay struct{ Value []interface{} }

// Get retrieves node notifications.overlay's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsOverlay) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsOverlay(client)
	return err
}

// Update PUT's' notifications.overlay's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsOverlay) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsOverlay(client, n.Value)
}

// NotificationsRebootReason represents the notifications.reboot_reason node and implements sophos.Node
type NotificationsRebootReason struct{ Value map[string]interface{} }

// Get retrieves node notifications.reboot_reason's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsRebootReason) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsRebootReason(client)
	return err
}

// Update PUT's' notifications.reboot_reason's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsRebootReason) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsRebootReason(client, n.Value)
}

// NotificationsRecipients represents the notifications.recipients node and implements sophos.Node
type NotificationsRecipients struct{ Value []string }

// Get retrieves node notifications.recipients's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsRecipients) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsRecipients(client)
	return err
}

// Update PUT's' notifications.recipients's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsRecipients) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsRecipients(client, n.Value)
}

// NotificationsSender represents the notifications.sender node and implements sophos.Node
type NotificationsSender struct{ Value string }

// Get retrieves node notifications.sender's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSender) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsSender(client)
	return err
}

// Update PUT's' notifications.sender's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSender) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsSender(client, n.Value)
}

// NotificationsSmtpAuthentication represents the notifications.smtp.authentication node and implements sophos.Node
type NotificationsSmtpAuthentication struct{ Value bool }

// Get retrieves node notifications.smtp.authentication's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpAuthentication) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsSmtpAuthentication(client)
	return err
}

// Update PUT's' notifications.smtp.authentication's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpAuthentication) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsSmtpAuthentication(client, n.Value)
}

// NotificationsSmtpPassword represents the notifications.smtp.password node and implements sophos.Node
type NotificationsSmtpPassword struct{ Value string }

// Get retrieves node notifications.smtp.password's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpPassword) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsSmtpPassword(client)
	return err
}

// Update PUT's' notifications.smtp.password's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsSmtpPassword(client, n.Value)
}

// NotificationsSmtpPort represents the notifications.smtp.port node and implements sophos.Node
type NotificationsSmtpPort struct{ Value int64 }

// Get retrieves node notifications.smtp.port's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpPort) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsSmtpPort(client)
	return err
}

// Update PUT's' notifications.smtp.port's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsSmtpPort(client, n.Value)
}

// NotificationsSmtpServer represents the notifications.smtp.server node and implements sophos.Node
type NotificationsSmtpServer struct{ Value string }

// Get retrieves node notifications.smtp.server's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpServer) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsSmtpServer(client)
	return err
}

// Update PUT's' notifications.smtp.server's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsSmtpServer(client, n.Value)
}

// NotificationsSmtpStatus represents the notifications.smtp.status node and implements sophos.Node
type NotificationsSmtpStatus struct{ Value bool }

// Get retrieves node notifications.smtp.status's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpStatus) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsSmtpStatus(client)
	return err
}

// Update PUT's' notifications.smtp.status's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsSmtpStatus(client, n.Value)
}

// NotificationsSmtpTls represents the notifications.smtp.tls node and implements sophos.Node
type NotificationsSmtpTls struct{ Value bool }

// Get retrieves node notifications.smtp.tls's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpTls) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsSmtpTls(client)
	return err
}

// Update PUT's' notifications.smtp.tls's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpTls) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsSmtpTls(client, n.Value)
}

// NotificationsSmtpUsername represents the notifications.smtp.username node and implements sophos.Node
type NotificationsSmtpUsername struct{ Value string }

// Get retrieves node notifications.smtp.username's value from the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpUsername) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNotificationsSmtpUsername(client)
	return err
}

// Update PUT's' notifications.smtp.username's value to the gateway utilizing a sophos.ClientInterface
func (n *NotificationsSmtpUsername) Update(client sophos.ClientInterface) (err error) {
	return UpdateNotificationsSmtpUsername(client, n.Value)
}

// NtpAllowedNetworks represents the ntp.allowed_networks node and implements sophos.Node
type NtpAllowedNetworks struct{ Value []string }

// Get retrieves node ntp.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (n *NtpAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNtpAllowedNetworks(client)
	return err
}

// Update PUT's' ntp.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (n *NtpAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateNtpAllowedNetworks(client, n.Value)
}

// NtpServers represents the ntp.servers node and implements sophos.Node
type NtpServers struct{ Value []string }

// Get retrieves node ntp.servers's value from the gateway utilizing a sophos.ClientInterface
func (n *NtpServers) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNtpServers(client)
	return err
}

// Update PUT's' ntp.servers's value to the gateway utilizing a sophos.ClientInterface
func (n *NtpServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateNtpServers(client, n.Value)
}

// NtpStatus represents the ntp.status node and implements sophos.Node
type NtpStatus struct{ Value bool }

// Get retrieves node ntp.status's value from the gateway utilizing a sophos.ClientInterface
func (n *NtpStatus) Get(client sophos.ClientInterface) (err error) {
	n.Value, err = GetNtpStatus(client)
	return err
}

// Update PUT's' ntp.status's value to the gateway utilizing a sophos.ClientInterface
func (n *NtpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateNtpStatus(client, n.Value)
}

// PacketfilterAdvancedBlockInvalidCtPackets represents the packetfilter.advanced.block_invalid_ct_packets node and implements sophos.Node
type PacketfilterAdvancedBlockInvalidCtPackets struct{ Value bool }

// Get retrieves node packetfilter.advanced.block_invalid_ct_packets's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedBlockInvalidCtPackets) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedBlockInvalidCtPackets(client)
	return err
}

// Update PUT's' packetfilter.advanced.block_invalid_ct_packets's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedBlockInvalidCtPackets) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedBlockInvalidCtPackets(client, p.Value)
}

// PacketfilterAdvancedCheckPacketLength represents the packetfilter.advanced.check_packet_length node and implements sophos.Node
type PacketfilterAdvancedCheckPacketLength struct{ Value bool }

// Get retrieves node packetfilter.advanced.check_packet_length's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedCheckPacketLength) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedCheckPacketLength(client)
	return err
}

// Update PUT's' packetfilter.advanced.check_packet_length's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedCheckPacketLength) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedCheckPacketLength(client, p.Value)
}

// PacketfilterAdvancedConntrackHelpers represents the packetfilter.advanced.conntrack_helpers node and implements sophos.Node
type PacketfilterAdvancedConntrackHelpers struct{ Value []string }

// Get retrieves node packetfilter.advanced.conntrack_helpers's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedConntrackHelpers) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedConntrackHelpers(client)
	return err
}

// Update PUT's' packetfilter.advanced.conntrack_helpers's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedConntrackHelpers) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedConntrackHelpers(client, p.Value)
}

// PacketfilterAdvancedFtpPorts represents the packetfilter.advanced.ftp_ports node and implements sophos.Node
type PacketfilterAdvancedFtpPorts struct{ Value []int64 }

// Get retrieves node packetfilter.advanced.ftp_ports's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedFtpPorts) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedFtpPorts(client)
	return err
}

// Update PUT's' packetfilter.advanced.ftp_ports's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedFtpPorts) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedFtpPorts(client, p.Value)
}

// PacketfilterAdvancedLogBroadcasts represents the packetfilter.advanced.log_broadcasts node and implements sophos.Node
type PacketfilterAdvancedLogBroadcasts struct{ Value bool }

// Get retrieves node packetfilter.advanced.log_broadcasts's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogBroadcasts) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedLogBroadcasts(client)
	return err
}

// Update PUT's' packetfilter.advanced.log_broadcasts's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogBroadcasts) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedLogBroadcasts(client, p.Value)
}

// PacketfilterAdvancedLogDnsRequests represents the packetfilter.advanced.log_dns_requests node and implements sophos.Node
type PacketfilterAdvancedLogDnsRequests struct{ Value bool }

// Get retrieves node packetfilter.advanced.log_dns_requests's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogDnsRequests) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedLogDnsRequests(client)
	return err
}

// Update PUT's' packetfilter.advanced.log_dns_requests's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogDnsRequests) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedLogDnsRequests(client, p.Value)
}

// PacketfilterAdvancedLogFtpData represents the packetfilter.advanced.log_ftp_data node and implements sophos.Node
type PacketfilterAdvancedLogFtpData struct{ Value bool }

// Get retrieves node packetfilter.advanced.log_ftp_data's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogFtpData) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedLogFtpData(client)
	return err
}

// Update PUT's' packetfilter.advanced.log_ftp_data's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogFtpData) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedLogFtpData(client, p.Value)
}

// PacketfilterAdvancedLogInvalid represents the packetfilter.advanced.log_invalid node and implements sophos.Node
type PacketfilterAdvancedLogInvalid struct{ Value map[string]interface{} }

// Get retrieves node packetfilter.advanced.log_invalid's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogInvalid) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedLogInvalid(client)
	return err
}

// Update PUT's' packetfilter.advanced.log_invalid's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogInvalid) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedLogInvalid(client, p.Value)
}

// PacketfilterAdvancedLogMcast represents the packetfilter.advanced.log_mcast node and implements sophos.Node
type PacketfilterAdvancedLogMcast struct{ Value bool }

// Get retrieves node packetfilter.advanced.log_mcast's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogMcast) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedLogMcast(client)
	return err
}

// Update PUT's' packetfilter.advanced.log_mcast's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogMcast) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedLogMcast(client, p.Value)
}

// PacketfilterAdvancedLogStrictTcpState represents the packetfilter.advanced.log_strict_tcp_state node and implements sophos.Node
type PacketfilterAdvancedLogStrictTcpState struct{ Value string }

// Get retrieves node packetfilter.advanced.log_strict_tcp_state's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogStrictTcpState) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedLogStrictTcpState(client)
	return err
}

// Update PUT's' packetfilter.advanced.log_strict_tcp_state's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedLogStrictTcpState) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedLogStrictTcpState(client, p.Value)
}

// PacketfilterAdvancedNoErrorReplay represents the packetfilter.advanced.no_error_replay node and implements sophos.Node
type PacketfilterAdvancedNoErrorReplay struct{ Value bool }

// Get retrieves node packetfilter.advanced.no_error_replay's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedNoErrorReplay) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedNoErrorReplay(client)
	return err
}

// Update PUT's' packetfilter.advanced.no_error_replay's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedNoErrorReplay) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedNoErrorReplay(client, p.Value)
}

// PacketfilterAdvancedOptimizeIpset represents the packetfilter.advanced.optimize.ipset node and implements sophos.Node
type PacketfilterAdvancedOptimizeIpset struct{ Value string }

// Get retrieves node packetfilter.advanced.optimize.ipset's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedOptimizeIpset) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedOptimizeIpset(client)
	return err
}

// Update PUT's' packetfilter.advanced.optimize.ipset's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedOptimizeIpset) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedOptimizeIpset(client, p.Value)
}

// PacketfilterAdvancedOptimizePorts represents the packetfilter.advanced.optimize.ports node and implements sophos.Node
type PacketfilterAdvancedOptimizePorts struct{ Value bool }

// Get retrieves node packetfilter.advanced.optimize.ports's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedOptimizePorts) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedOptimizePorts(client)
	return err
}

// Update PUT's' packetfilter.advanced.optimize.ports's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedOptimizePorts) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedOptimizePorts(client, p.Value)
}

// PacketfilterAdvancedSpoofProtection represents the packetfilter.advanced.spoof_protection node and implements sophos.Node
type PacketfilterAdvancedSpoofProtection struct{ Value string }

// Get retrieves node packetfilter.advanced.spoof_protection's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedSpoofProtection) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedSpoofProtection(client)
	return err
}

// Update PUT's' packetfilter.advanced.spoof_protection's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedSpoofProtection) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedSpoofProtection(client, p.Value)
}

// PacketfilterAdvancedStrictTcpState represents the packetfilter.advanced.strict_tcp_state node and implements sophos.Node
type PacketfilterAdvancedStrictTcpState struct{ Value bool }

// Get retrieves node packetfilter.advanced.strict_tcp_state's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedStrictTcpState) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedStrictTcpState(client)
	return err
}

// Update PUT's' packetfilter.advanced.strict_tcp_state's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedStrictTcpState) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedStrictTcpState(client, p.Value)
}

// PacketfilterAdvancedTcpMaxRetrans represents the packetfilter.advanced.tcp_max_retrans node and implements sophos.Node
type PacketfilterAdvancedTcpMaxRetrans struct{ Value int64 }

// Get retrieves node packetfilter.advanced.tcp_max_retrans's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedTcpMaxRetrans) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedTcpMaxRetrans(client)
	return err
}

// Update PUT's' packetfilter.advanced.tcp_max_retrans's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedTcpMaxRetrans) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedTcpMaxRetrans(client, p.Value)
}

// PacketfilterAdvancedTcpWindowScaling represents the packetfilter.advanced.tcp_window_scaling node and implements sophos.Node
type PacketfilterAdvancedTcpWindowScaling struct{ Value bool }

// Get retrieves node packetfilter.advanced.tcp_window_scaling's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedTcpWindowScaling) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterAdvancedTcpWindowScaling(client)
	return err
}

// Update PUT's' packetfilter.advanced.tcp_window_scaling's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterAdvancedTcpWindowScaling) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterAdvancedTcpWindowScaling(client, p.Value)
}

// PacketfilterRules represents the packetfilter.rules node and implements sophos.Node
type PacketfilterRules struct{ Value []string }

// Get retrieves node packetfilter.rules's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterRules) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterRules(client)
	return err
}

// Update PUT's' packetfilter.rules's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterRules) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterRules(client, p.Value)
}

// PacketfilterRulesAuto represents the packetfilter.rules_auto node and implements sophos.Node
type PacketfilterRulesAuto struct{ Value []string }

// Get retrieves node packetfilter.rules_auto's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterRulesAuto) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterRulesAuto(client)
	return err
}

// Update PUT's' packetfilter.rules_auto's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterRulesAuto) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterRulesAuto(client, p.Value)
}

// PacketfilterRulesBack represents the packetfilter.rules_back node and implements sophos.Node
type PacketfilterRulesBack struct{ Value string }

// Get retrieves node packetfilter.rules_back's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterRulesBack) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterRulesBack(client)
	return err
}

// Update PUT's' packetfilter.rules_back's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterRulesBack) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterRulesBack(client, p.Value)
}

// PacketfilterRulesFront represents the packetfilter.rules_front node and implements sophos.Node
type PacketfilterRulesFront struct{ Value string }

// Get retrieves node packetfilter.rules_front's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterRulesFront) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterRulesFront(client)
	return err
}

// Update PUT's' packetfilter.rules_front's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterRulesFront) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterRulesFront(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackGenericTimeout represents the packetfilter.timeouts.ip_conntrack_generic_timeout node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackGenericTimeout struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_generic_timeout's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackGenericTimeout) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackGenericTimeout(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_generic_timeout's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackGenericTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackGenericTimeout(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackIcmpTimeout represents the packetfilter.timeouts.ip_conntrack_icmp_timeout node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackIcmpTimeout struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_icmp_timeout's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackIcmpTimeout) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackIcmpTimeout(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_icmp_timeout's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackIcmpTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackIcmpTimeout(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutClose represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_close node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutClose struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_tcp_timeout_close's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutClose) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackTcpTimeoutClose(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_tcp_timeout_close's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutClose) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutClose(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_close_wait node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_tcp_timeout_close_wait's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_tcp_timeout_close_wait's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutEstablished represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_established node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutEstablished struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_tcp_timeout_established's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutEstablished) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackTcpTimeoutEstablished(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_tcp_timeout_established's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutEstablished) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutEstablished(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutFinWait represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_fin_wait node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutFinWait struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_tcp_timeout_fin_wait's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutFinWait) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackTcpTimeoutFinWait(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_tcp_timeout_fin_wait's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutFinWait) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutFinWait(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutLastAck represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_last_ack node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutLastAck struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_tcp_timeout_last_ack's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutLastAck) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackTcpTimeoutLastAck(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_tcp_timeout_last_ack's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutLastAck) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutLastAck(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_max_retrans node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_tcp_timeout_max_retrans's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_tcp_timeout_max_retrans's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_recv node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_recv's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_recv's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutSynSent represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_sent node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutSynSent struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_sent's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutSynSent) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackTcpTimeoutSynSent(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_sent's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutSynSent) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutSynSent(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_time_wait node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_tcp_timeout_time_wait's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_tcp_timeout_time_wait's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackUdpTimeout represents the packetfilter.timeouts.ip_conntrack_udp_timeout node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackUdpTimeout struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_udp_timeout's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackUdpTimeout) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackUdpTimeout(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_udp_timeout's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackUdpTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackUdpTimeout(client, p.Value)
}

// PacketfilterTimeoutsIpConntrackUdpTimeoutStream represents the packetfilter.timeouts.ip_conntrack_udp_timeout_stream node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackUdpTimeoutStream struct{ Value int64 }

// Get retrieves node packetfilter.timeouts.ip_conntrack_udp_timeout_stream's value from the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackUdpTimeoutStream) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPacketfilterTimeoutsIpConntrackUdpTimeoutStream(client)
	return err
}

// Update PUT's' packetfilter.timeouts.ip_conntrack_udp_timeout_stream's value to the gateway utilizing a sophos.ClientInterface
func (p *PacketfilterTimeoutsIpConntrackUdpTimeoutStream) Update(client sophos.ClientInterface) (err error) {
	return UpdatePacketfilterTimeoutsIpConntrackUdpTimeoutStream(client, p.Value)
}

// PasswdLoginuserClearpass represents the passwd.loginuser.clearpass node and implements sophos.Node
type PasswdLoginuserClearpass struct{ Value string }

// Get retrieves node passwd.loginuser.clearpass's value from the gateway utilizing a sophos.ClientInterface
func (p *PasswdLoginuserClearpass) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPasswdLoginuserClearpass(client)
	return err
}

// Update PUT's' passwd.loginuser.clearpass's value to the gateway utilizing a sophos.ClientInterface
func (p *PasswdLoginuserClearpass) Update(client sophos.ClientInterface) (err error) {
	return UpdatePasswdLoginuserClearpass(client, p.Value)
}

// PasswdLoginuserCryptpass represents the passwd.loginuser.cryptpass node and implements sophos.Node
type PasswdLoginuserCryptpass struct{ Value string }

// Get retrieves node passwd.loginuser.cryptpass's value from the gateway utilizing a sophos.ClientInterface
func (p *PasswdLoginuserCryptpass) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPasswdLoginuserCryptpass(client)
	return err
}

// Update PUT's' passwd.loginuser.cryptpass's value to the gateway utilizing a sophos.ClientInterface
func (p *PasswdLoginuserCryptpass) Update(client sophos.ClientInterface) (err error) {
	return UpdatePasswdLoginuserCryptpass(client, p.Value)
}

// PasswdRootClearpass represents the passwd.root.clearpass node and implements sophos.Node
type PasswdRootClearpass struct{ Value string }

// Get retrieves node passwd.root.clearpass's value from the gateway utilizing a sophos.ClientInterface
func (p *PasswdRootClearpass) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPasswdRootClearpass(client)
	return err
}

// Update PUT's' passwd.root.clearpass's value to the gateway utilizing a sophos.ClientInterface
func (p *PasswdRootClearpass) Update(client sophos.ClientInterface) (err error) {
	return UpdatePasswdRootClearpass(client, p.Value)
}

// PasswdRootCryptpass represents the passwd.root.cryptpass node and implements sophos.Node
type PasswdRootCryptpass struct{ Value string }

// Get retrieves node passwd.root.cryptpass's value from the gateway utilizing a sophos.ClientInterface
func (p *PasswdRootCryptpass) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPasswdRootCryptpass(client)
	return err
}

// Update PUT's' passwd.root.cryptpass's value to the gateway utilizing a sophos.ClientInterface
func (p *PasswdRootCryptpass) Update(client sophos.ClientInterface) (err error) {
	return UpdatePasswdRootCryptpass(client, p.Value)
}

// PdfPaper represents the pdf.paper node and implements sophos.Node
type PdfPaper struct{ Value string }

// Get retrieves node pdf.paper's value from the gateway utilizing a sophos.ClientInterface
func (p *PdfPaper) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPdfPaper(client)
	return err
}

// Update PUT's' pdf.paper's value to the gateway utilizing a sophos.ClientInterface
func (p *PdfPaper) Update(client sophos.ClientInterface) (err error) {
	return UpdatePdfPaper(client, p.Value)
}

// PimSmAutoPfOut represents the pim_sm.auto_pf_out node and implements sophos.Node
type PimSmAutoPfOut struct{ Value string }

// Get retrieves node pim_sm.auto_pf_out's value from the gateway utilizing a sophos.ClientInterface
func (p *PimSmAutoPfOut) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPimSmAutoPfOut(client)
	return err
}

// Update PUT's' pim_sm.auto_pf_out's value to the gateway utilizing a sophos.ClientInterface
func (p *PimSmAutoPfOut) Update(client sophos.ClientInterface) (err error) {
	return UpdatePimSmAutoPfOut(client, p.Value)
}

// PimSmAutoPfrule represents the pim_sm.auto_pfrule node and implements sophos.Node
type PimSmAutoPfrule struct{ Value bool }

// Get retrieves node pim_sm.auto_pfrule's value from the gateway utilizing a sophos.ClientInterface
func (p *PimSmAutoPfrule) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPimSmAutoPfrule(client)
	return err
}

// Update PUT's' pim_sm.auto_pfrule's value to the gateway utilizing a sophos.ClientInterface
func (p *PimSmAutoPfrule) Update(client sophos.ClientInterface) (err error) {
	return UpdatePimSmAutoPfrule(client, p.Value)
}

// PimSmDebug represents the pim_sm.debug node and implements sophos.Node
type PimSmDebug struct{ Value bool }

// Get retrieves node pim_sm.debug's value from the gateway utilizing a sophos.ClientInterface
func (p *PimSmDebug) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPimSmDebug(client)
	return err
}

// Update PUT's' pim_sm.debug's value to the gateway utilizing a sophos.ClientInterface
func (p *PimSmDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdatePimSmDebug(client, p.Value)
}

// PimSmInterfaces represents the pim_sm.interfaces node and implements sophos.Node
type PimSmInterfaces struct{ Value []interface{} }

// Get retrieves node pim_sm.interfaces's value from the gateway utilizing a sophos.ClientInterface
func (p *PimSmInterfaces) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPimSmInterfaces(client)
	return err
}

// Update PUT's' pim_sm.interfaces's value to the gateway utilizing a sophos.ClientInterface
func (p *PimSmInterfaces) Update(client sophos.ClientInterface) (err error) {
	return UpdatePimSmInterfaces(client, p.Value)
}

// PimSmRpRouters represents the pim_sm.rp_routers node and implements sophos.Node
type PimSmRpRouters struct{ Value []interface{} }

// Get retrieves node pim_sm.rp_routers's value from the gateway utilizing a sophos.ClientInterface
func (p *PimSmRpRouters) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPimSmRpRouters(client)
	return err
}

// Update PUT's' pim_sm.rp_routers's value to the gateway utilizing a sophos.ClientInterface
func (p *PimSmRpRouters) Update(client sophos.ClientInterface) (err error) {
	return UpdatePimSmRpRouters(client, p.Value)
}

// PimSmSptSwitchBytes represents the pim_sm.spt_switch_bytes node and implements sophos.Node
type PimSmSptSwitchBytes struct{ Value int64 }

// Get retrieves node pim_sm.spt_switch_bytes's value from the gateway utilizing a sophos.ClientInterface
func (p *PimSmSptSwitchBytes) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPimSmSptSwitchBytes(client)
	return err
}

// Update PUT's' pim_sm.spt_switch_bytes's value to the gateway utilizing a sophos.ClientInterface
func (p *PimSmSptSwitchBytes) Update(client sophos.ClientInterface) (err error) {
	return UpdatePimSmSptSwitchBytes(client, p.Value)
}

// PimSmSptSwitchStatus represents the pim_sm.spt_switch_status node and implements sophos.Node
type PimSmSptSwitchStatus struct{ Value bool }

// Get retrieves node pim_sm.spt_switch_status's value from the gateway utilizing a sophos.ClientInterface
func (p *PimSmSptSwitchStatus) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPimSmSptSwitchStatus(client)
	return err
}

// Update PUT's' pim_sm.spt_switch_status's value to the gateway utilizing a sophos.ClientInterface
func (p *PimSmSptSwitchStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdatePimSmSptSwitchStatus(client, p.Value)
}

// PimSmStatus represents the pim_sm.status node and implements sophos.Node
type PimSmStatus struct{ Value bool }

// Get retrieves node pim_sm.status's value from the gateway utilizing a sophos.ClientInterface
func (p *PimSmStatus) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPimSmStatus(client)
	return err
}

// Update PUT's' pim_sm.status's value to the gateway utilizing a sophos.ClientInterface
func (p *PimSmStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdatePimSmStatus(client, p.Value)
}

// Pop3AllowedClients represents the pop3.allowed_clients node and implements sophos.Node
type Pop3AllowedClients struct{ Value []interface{} }

// Get retrieves node pop3.allowed_clients's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3AllowedClients) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3AllowedClients(client)
	return err
}

// Update PUT's' pop3.allowed_clients's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3AllowedClients) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3AllowedClients(client, p.Value)
}

// Pop3AllowedServers represents the pop3.allowed_servers node and implements sophos.Node
type Pop3AllowedServers struct{ Value []string }

// Get retrieves node pop3.allowed_servers's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3AllowedServers) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3AllowedServers(client)
	return err
}

// Update PUT's' pop3.allowed_servers's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3AllowedServers) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3AllowedServers(client, p.Value)
}

// Pop3CffAsMarker represents the pop3.cff_as_marker node and implements sophos.Node
type Pop3CffAsMarker struct{ Value string }

// Get retrieves node pop3.cff_as_marker's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffAsMarker) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3CffAsMarker(client)
	return err
}

// Update PUT's' pop3.cff_as_marker's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffAsMarker) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3CffAsMarker(client, p.Value)
}

// Pop3CffAv represents the pop3.cff_av node and implements sophos.Node
type Pop3CffAv struct{ Value bool }

// Get retrieves node pop3.cff_av's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffAv) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3CffAv(client)
	return err
}

// Update PUT's' pop3.cff_av's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffAv) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3CffAv(client, p.Value)
}

// Pop3CffAvAction represents the pop3.cff_av_action node and implements sophos.Node
type Pop3CffAvAction struct{ Value string }

// Get retrieves node pop3.cff_av_action's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffAvAction) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3CffAvAction(client)
	return err
}

// Update PUT's' pop3.cff_av_action's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffAvAction) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3CffAvAction(client, p.Value)
}

// Pop3CffAvEngines represents the pop3.cff_av_engines node and implements sophos.Node
type Pop3CffAvEngines struct{ Value string }

// Get retrieves node pop3.cff_av_engines's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffAvEngines) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3CffAvEngines(client)
	return err
}

// Update PUT's' pop3.cff_av_engines's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffAvEngines) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3CffAvEngines(client, p.Value)
}

// Pop3CffFileExtensions represents the pop3.cff_file_extensions node and implements sophos.Node
type Pop3CffFileExtensions struct{ Value []string }

// Get retrieves node pop3.cff_file_extensions's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffFileExtensions) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3CffFileExtensions(client)
	return err
}

// Update PUT's' pop3.cff_file_extensions's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3CffFileExtensions) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3CffFileExtensions(client, p.Value)
}

// Pop3DirectlyDeleteQuarantined represents the pop3.directly_delete_quarantined node and implements sophos.Node
type Pop3DirectlyDeleteQuarantined struct{ Value bool }

// Get retrieves node pop3.directly_delete_quarantined's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3DirectlyDeleteQuarantined) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3DirectlyDeleteQuarantined(client)
	return err
}

// Update PUT's' pop3.directly_delete_quarantined's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3DirectlyDeleteQuarantined) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3DirectlyDeleteQuarantined(client, p.Value)
}

// Pop3Exceptions represents the pop3.exceptions node and implements sophos.Node
type Pop3Exceptions struct{ Value []interface{} }

// Get retrieves node pop3.exceptions's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3Exceptions) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3Exceptions(client)
	return err
}

// Update PUT's' pop3.exceptions's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3Exceptions) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3Exceptions(client, p.Value)
}

// Pop3KnownServers represents the pop3.known_servers node and implements sophos.Node
type Pop3KnownServers struct{ Value []interface{} }

// Get retrieves node pop3.known_servers's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3KnownServers) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3KnownServers(client)
	return err
}

// Update PUT's' pop3.known_servers's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3KnownServers) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3KnownServers(client, p.Value)
}

// Pop3MaxMessageSize represents the pop3.max_message_size node and implements sophos.Node
type Pop3MaxMessageSize struct{ Value int64 }

// Get retrieves node pop3.max_message_size's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3MaxMessageSize) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3MaxMessageSize(client)
	return err
}

// Update PUT's' pop3.max_message_size's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3MaxMessageSize) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3MaxMessageSize(client, p.Value)
}

// Pop3PrefetchingInterval represents the pop3.prefetching.interval node and implements sophos.Node
type Pop3PrefetchingInterval struct{ Value int64 }

// Get retrieves node pop3.prefetching.interval's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3PrefetchingInterval) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3PrefetchingInterval(client)
	return err
}

// Update PUT's' pop3.prefetching.interval's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3PrefetchingInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3PrefetchingInterval(client, p.Value)
}

// Pop3PrefetchingOptimizeStorage represents the pop3.prefetching.optimize_storage node and implements sophos.Node
type Pop3PrefetchingOptimizeStorage struct{ Value bool }

// Get retrieves node pop3.prefetching.optimize_storage's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3PrefetchingOptimizeStorage) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3PrefetchingOptimizeStorage(client)
	return err
}

// Update PUT's' pop3.prefetching.optimize_storage's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3PrefetchingOptimizeStorage) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3PrefetchingOptimizeStorage(client, p.Value)
}

// Pop3PrefetchingStatus represents the pop3.prefetching.status node and implements sophos.Node
type Pop3PrefetchingStatus struct{ Value bool }

// Get retrieves node pop3.prefetching.status's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3PrefetchingStatus) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3PrefetchingStatus(client)
	return err
}

// Update PUT's' pop3.prefetching.status's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3PrefetchingStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3PrefetchingStatus(client, p.Value)
}

// Pop3PrefetchingStorageMinHoldDays represents the pop3.prefetching.storage_min_hold_days node and implements sophos.Node
type Pop3PrefetchingStorageMinHoldDays struct{ Value int64 }

// Get retrieves node pop3.prefetching.storage_min_hold_days's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3PrefetchingStorageMinHoldDays) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3PrefetchingStorageMinHoldDays(client)
	return err
}

// Update PUT's' pop3.prefetching.storage_min_hold_days's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3PrefetchingStorageMinHoldDays) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3PrefetchingStorageMinHoldDays(client, p.Value)
}

// Pop3QuarantineUnscannable represents the pop3.quarantine_unscannable node and implements sophos.Node
type Pop3QuarantineUnscannable struct{ Value bool }

// Get retrieves node pop3.quarantine_unscannable's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3QuarantineUnscannable) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3QuarantineUnscannable(client)
	return err
}

// Update PUT's' pop3.quarantine_unscannable's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3QuarantineUnscannable) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3QuarantineUnscannable(client, p.Value)
}

// Pop3SandboxMaxFilesizeMb represents the pop3.sandbox_max_filesize_mb node and implements sophos.Node
type Pop3SandboxMaxFilesizeMb struct{ Value int64 }

// Get retrieves node pop3.sandbox_max_filesize_mb's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3SandboxMaxFilesizeMb) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3SandboxMaxFilesizeMb(client)
	return err
}

// Update PUT's' pop3.sandbox_max_filesize_mb's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3SandboxMaxFilesizeMb) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3SandboxMaxFilesizeMb(client, p.Value)
}

// Pop3SandboxScanStatus represents the pop3.sandbox_scan_status node and implements sophos.Node
type Pop3SandboxScanStatus struct{ Value bool }

// Get retrieves node pop3.sandbox_scan_status's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3SandboxScanStatus) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3SandboxScanStatus(client)
	return err
}

// Update PUT's' pop3.sandbox_scan_status's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3SandboxScanStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3SandboxScanStatus(client, p.Value)
}

// Pop3ScanTls represents the pop3.scan_tls node and implements sophos.Node
type Pop3ScanTls struct{ Value bool }

// Get retrieves node pop3.scan_tls's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3ScanTls) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3ScanTls(client)
	return err
}

// Update PUT's' pop3.scan_tls's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3ScanTls) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3ScanTls(client, p.Value)
}

// Pop3SenderBlacklist represents the pop3.sender_blacklist node and implements sophos.Node
type Pop3SenderBlacklist struct{ Value []interface{} }

// Get retrieves node pop3.sender_blacklist's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3SenderBlacklist) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3SenderBlacklist(client)
	return err
}

// Update PUT's' pop3.sender_blacklist's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3SenderBlacklist) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3SenderBlacklist(client, p.Value)
}

// Pop3Spam represents the pop3.spam node and implements sophos.Node
type Pop3Spam struct{ Value string }

// Get retrieves node pop3.spam's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3Spam) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3Spam(client)
	return err
}

// Update PUT's' pop3.spam's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3Spam) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3Spam(client, p.Value)
}

// Pop3SpamExpressions represents the pop3.spam_expressions node and implements sophos.Node
type Pop3SpamExpressions struct{ Value []interface{} }

// Get retrieves node pop3.spam_expressions's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3SpamExpressions) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3SpamExpressions(client)
	return err
}

// Update PUT's' pop3.spam_expressions's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3SpamExpressions) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3SpamExpressions(client, p.Value)
}

// Pop3Spamplus represents the pop3.spamplus node and implements sophos.Node
type Pop3Spamplus struct{ Value string }

// Get retrieves node pop3.spamplus's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3Spamplus) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3Spamplus(client)
	return err
}

// Update PUT's' pop3.spamplus's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3Spamplus) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3Spamplus(client, p.Value)
}

// Pop3Spamstatus represents the pop3.spamstatus node and implements sophos.Node
type Pop3Spamstatus struct{ Value bool }

// Get retrieves node pop3.spamstatus's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3Spamstatus) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3Spamstatus(client)
	return err
}

// Update PUT's' pop3.spamstatus's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3Spamstatus) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3Spamstatus(client, p.Value)
}

// Pop3Status represents the pop3.status node and implements sophos.Node
type Pop3Status struct{ Value bool }

// Get retrieves node pop3.status's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3Status) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3Status(client)
	return err
}

// Update PUT's' pop3.status's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3Status) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3Status(client, p.Value)
}

// Pop3TlsCert represents the pop3.tls_cert node and implements sophos.Node
type Pop3TlsCert struct{ Value string }

// Get retrieves node pop3.tls_cert's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3TlsCert) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3TlsCert(client)
	return err
}

// Update PUT's' pop3.tls_cert's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3TlsCert) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3TlsCert(client, p.Value)
}

// Pop3TransparentSkip represents the pop3.transparent_skip node and implements sophos.Node
type Pop3TransparentSkip struct{ Value []interface{} }

// Get retrieves node pop3.transparent_skip's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3TransparentSkip) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3TransparentSkip(client)
	return err
}

// Update PUT's' pop3.transparent_skip's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3TransparentSkip) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3TransparentSkip(client, p.Value)
}

// Pop3TransparentSkipAutoPf represents the pop3.transparent_skip_auto_pf node and implements sophos.Node
type Pop3TransparentSkipAutoPf struct{ Value bool }

// Get retrieves node pop3.transparent_skip_auto_pf's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3TransparentSkipAutoPf) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3TransparentSkipAutoPf(client)
	return err
}

// Update PUT's' pop3.transparent_skip_auto_pf's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3TransparentSkipAutoPf) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3TransparentSkipAutoPf(client, p.Value)
}

// Pop3UserCharset represents the pop3.user_charset node and implements sophos.Node
type Pop3UserCharset struct{ Value string }

// Get retrieves node pop3.user_charset's value from the gateway utilizing a sophos.ClientInterface
func (p *Pop3UserCharset) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPop3UserCharset(client)
	return err
}

// Update PUT's' pop3.user_charset's value to the gateway utilizing a sophos.ClientInterface
func (p *Pop3UserCharset) Update(client sophos.ClientInterface) (err error) {
	return UpdatePop3UserCharset(client, p.Value)
}

// PortalAllowAnyUser represents the portal.allow_any_user node and implements sophos.Node
type PortalAllowAnyUser struct{ Value bool }

// Get retrieves node portal.allow_any_user's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalAllowAnyUser) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalAllowAnyUser(client)
	return err
}

// Update PUT's' portal.allow_any_user's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalAllowAnyUser) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalAllowAnyUser(client, p.Value)
}

// PortalAllowedNetworks represents the portal.allowed_networks node and implements sophos.Node
type PortalAllowedNetworks struct{ Value []string }

// Get retrieves node portal.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalAllowedNetworks(client)
	return err
}

// Update PUT's' portal.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalAllowedNetworks(client, p.Value)
}

// PortalAllowedUsers represents the portal.allowed_users node and implements sophos.Node
type PortalAllowedUsers struct{ Value []interface{} }

// Get retrieves node portal.allowed_users's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalAllowedUsers) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalAllowedUsers(client)
	return err
}

// Update PUT's' portal.allowed_users's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalAllowedUsers) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalAllowedUsers(client, p.Value)
}

// PortalHideItems represents the portal.hide_items node and implements sophos.Node
type PortalHideItems struct{ Value []interface{} }

// Get retrieves node portal.hide_items's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalHideItems) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalHideItems(client)
	return err
}

// Update PUT's' portal.hide_items's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalHideItems) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalHideItems(client, p.Value)
}

// PortalHostname represents the portal.hostname node and implements sophos.Node
type PortalHostname struct{ Value string }

// Get retrieves node portal.hostname's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalHostname) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalHostname(client)
	return err
}

// Update PUT's' portal.hostname's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalHostname(client, p.Value)
}

// PortalInterfaceAddress represents the portal.interface_address node and implements sophos.Node
type PortalInterfaceAddress struct{ Value string }

// Get retrieves node portal.interface_address's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalInterfaceAddress) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalInterfaceAddress(client)
	return err
}

// Update PUT's' portal.interface_address's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalInterfaceAddress) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalInterfaceAddress(client, p.Value)
}

// PortalLanguage represents the portal.language node and implements sophos.Node
type PortalLanguage struct{ Value string }

// Get retrieves node portal.language's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalLanguage) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalLanguage(client)
	return err
}

// Update PUT's' portal.language's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalLanguage) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalLanguage(client, p.Value)
}

// PortalPersistentCookies represents the portal.persistent_cookies node and implements sophos.Node
type PortalPersistentCookies struct{ Value bool }

// Get retrieves node portal.persistent_cookies's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalPersistentCookies) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalPersistentCookies(client)
	return err
}

// Update PUT's' portal.persistent_cookies's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalPersistentCookies) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalPersistentCookies(client, p.Value)
}

// PortalPort represents the portal.port node and implements sophos.Node
type PortalPort struct{ Value int64 }

// Get retrieves node portal.port's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalPort) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalPort(client)
	return err
}

// Update PUT's' portal.port's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalPort) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalPort(client, p.Value)
}

// PortalStatus represents the portal.status node and implements sophos.Node
type PortalStatus struct{ Value bool }

// Get retrieves node portal.status's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalStatus) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalStatus(client)
	return err
}

// Update PUT's' portal.status's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalStatus(client, p.Value)
}

// PortalWelcomeMsg represents the portal.welcome_msg node and implements sophos.Node
type PortalWelcomeMsg struct{ Value string }

// Get retrieves node portal.welcome_msg's value from the gateway utilizing a sophos.ClientInterface
func (p *PortalWelcomeMsg) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPortalWelcomeMsg(client)
	return err
}

// Update PUT's' portal.welcome_msg's value to the gateway utilizing a sophos.ClientInterface
func (p *PortalWelcomeMsg) Update(client sophos.ClientInterface) (err error) {
	return UpdatePortalWelcomeMsg(client, p.Value)
}

// PsdAction represents the psd.action node and implements sophos.Node
type PsdAction struct{ Value string }

// Get retrieves node psd.action's value from the gateway utilizing a sophos.ClientInterface
func (p *PsdAction) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPsdAction(client)
	return err
}

// Update PUT's' psd.action's value to the gateway utilizing a sophos.ClientInterface
func (p *PsdAction) Update(client sophos.ClientInterface) (err error) {
	return UpdatePsdAction(client, p.Value)
}

// PsdDelayThreshold represents the psd.delay_threshold node and implements sophos.Node
type PsdDelayThreshold struct{ Value int64 }

// Get retrieves node psd.delay_threshold's value from the gateway utilizing a sophos.ClientInterface
func (p *PsdDelayThreshold) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPsdDelayThreshold(client)
	return err
}

// Update PUT's' psd.delay_threshold's value to the gateway utilizing a sophos.ClientInterface
func (p *PsdDelayThreshold) Update(client sophos.ClientInterface) (err error) {
	return UpdatePsdDelayThreshold(client, p.Value)
}

// PsdHiPortsWeight represents the psd.hi_ports_weight node and implements sophos.Node
type PsdHiPortsWeight struct{ Value int64 }

// Get retrieves node psd.hi_ports_weight's value from the gateway utilizing a sophos.ClientInterface
func (p *PsdHiPortsWeight) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPsdHiPortsWeight(client)
	return err
}

// Update PUT's' psd.hi_ports_weight's value to the gateway utilizing a sophos.ClientInterface
func (p *PsdHiPortsWeight) Update(client sophos.ClientInterface) (err error) {
	return UpdatePsdHiPortsWeight(client, p.Value)
}

// PsdLoPortsWeight represents the psd.lo_ports_weight node and implements sophos.Node
type PsdLoPortsWeight struct{ Value int64 }

// Get retrieves node psd.lo_ports_weight's value from the gateway utilizing a sophos.ClientInterface
func (p *PsdLoPortsWeight) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPsdLoPortsWeight(client)
	return err
}

// Update PUT's' psd.lo_ports_weight's value to the gateway utilizing a sophos.ClientInterface
func (p *PsdLoPortsWeight) Update(client sophos.ClientInterface) (err error) {
	return UpdatePsdLoPortsWeight(client, p.Value)
}

// PsdLogLimiterBurst represents the psd.log_limiter.burst node and implements sophos.Node
type PsdLogLimiterBurst struct{ Value int64 }

// Get retrieves node psd.log_limiter.burst's value from the gateway utilizing a sophos.ClientInterface
func (p *PsdLogLimiterBurst) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPsdLogLimiterBurst(client)
	return err
}

// Update PUT's' psd.log_limiter.burst's value to the gateway utilizing a sophos.ClientInterface
func (p *PsdLogLimiterBurst) Update(client sophos.ClientInterface) (err error) {
	return UpdatePsdLogLimiterBurst(client, p.Value)
}

// PsdLogLimiterRate represents the psd.log_limiter.rate node and implements sophos.Node
type PsdLogLimiterRate struct{ Value int64 }

// Get retrieves node psd.log_limiter.rate's value from the gateway utilizing a sophos.ClientInterface
func (p *PsdLogLimiterRate) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPsdLogLimiterRate(client)
	return err
}

// Update PUT's' psd.log_limiter.rate's value to the gateway utilizing a sophos.ClientInterface
func (p *PsdLogLimiterRate) Update(client sophos.ClientInterface) (err error) {
	return UpdatePsdLogLimiterRate(client, p.Value)
}

// PsdLogLimiterStatus represents the psd.log_limiter.status node and implements sophos.Node
type PsdLogLimiterStatus struct{ Value bool }

// Get retrieves node psd.log_limiter.status's value from the gateway utilizing a sophos.ClientInterface
func (p *PsdLogLimiterStatus) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPsdLogLimiterStatus(client)
	return err
}

// Update PUT's' psd.log_limiter.status's value to the gateway utilizing a sophos.ClientInterface
func (p *PsdLogLimiterStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdatePsdLogLimiterStatus(client, p.Value)
}

// PsdStatus represents the psd.status node and implements sophos.Node
type PsdStatus struct{ Value bool }

// Get retrieves node psd.status's value from the gateway utilizing a sophos.ClientInterface
func (p *PsdStatus) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPsdStatus(client)
	return err
}

// Update PUT's' psd.status's value to the gateway utilizing a sophos.ClientInterface
func (p *PsdStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdatePsdStatus(client, p.Value)
}

// PsdWeightThreshold represents the psd.weight_threshold node and implements sophos.Node
type PsdWeightThreshold struct{ Value int64 }

// Get retrieves node psd.weight_threshold's value from the gateway utilizing a sophos.ClientInterface
func (p *PsdWeightThreshold) Get(client sophos.ClientInterface) (err error) {
	p.Value, err = GetPsdWeightThreshold(client)
	return err
}

// Update PUT's' psd.weight_threshold's value to the gateway utilizing a sophos.ClientInterface
func (p *PsdWeightThreshold) Update(client sophos.ClientInterface) (err error) {
	return UpdatePsdWeightThreshold(client, p.Value)
}

// QosAdvancedEcn represents the qos.advanced.ecn node and implements sophos.Node
type QosAdvancedEcn struct{ Value int64 }

// Get retrieves node qos.advanced.ecn's value from the gateway utilizing a sophos.ClientInterface
func (q *QosAdvancedEcn) Get(client sophos.ClientInterface) (err error) {
	q.Value, err = GetQosAdvancedEcn(client)
	return err
}

// Update PUT's' qos.advanced.ecn's value to the gateway utilizing a sophos.ClientInterface
func (q *QosAdvancedEcn) Update(client sophos.ClientInterface) (err error) {
	return UpdateQosAdvancedEcn(client, q.Value)
}

// QosAdvancedKeepClassAfterEncap represents the qos.advanced.keep_class_after_encap node and implements sophos.Node
type QosAdvancedKeepClassAfterEncap struct{ Value bool }

// Get retrieves node qos.advanced.keep_class_after_encap's value from the gateway utilizing a sophos.ClientInterface
func (q *QosAdvancedKeepClassAfterEncap) Get(client sophos.ClientInterface) (err error) {
	q.Value, err = GetQosAdvancedKeepClassAfterEncap(client)
	return err
}

// Update PUT's' qos.advanced.keep_class_after_encap's value to the gateway utilizing a sophos.ClientInterface
func (q *QosAdvancedKeepClassAfterEncap) Update(client sophos.ClientInterface) (err error) {
	return UpdateQosAdvancedKeepClassAfterEncap(client, q.Value)
}

// QosInterfaces represents the qos.interfaces node and implements sophos.Node
type QosInterfaces struct{ Value []string }

// Get retrieves node qos.interfaces's value from the gateway utilizing a sophos.ClientInterface
func (q *QosInterfaces) Get(client sophos.ClientInterface) (err error) {
	q.Value, err = GetQosInterfaces(client)
	return err
}

// Update PUT's' qos.interfaces's value to the gateway utilizing a sophos.ClientInterface
func (q *QosInterfaces) Update(client sophos.ClientInterface) (err error) {
	return UpdateQosInterfaces(client, q.Value)
}

// QuarantineKeepDbLogDays represents the quarantine.keep_db_log_days node and implements sophos.Node
type QuarantineKeepDbLogDays struct{ Value int64 }

// Get retrieves node quarantine.keep_db_log_days's value from the gateway utilizing a sophos.ClientInterface
func (q *QuarantineKeepDbLogDays) Get(client sophos.ClientInterface) (err error) {
	q.Value, err = GetQuarantineKeepDbLogDays(client)
	return err
}

// Update PUT's' quarantine.keep_db_log_days's value to the gateway utilizing a sophos.ClientInterface
func (q *QuarantineKeepDbLogDays) Update(client sophos.ClientInterface) (err error) {
	return UpdateQuarantineKeepDbLogDays(client, q.Value)
}

// QuarantineKeepQuarantineDays represents the quarantine.keep_quarantine_days node and implements sophos.Node
type QuarantineKeepQuarantineDays struct{ Value int64 }

// Get retrieves node quarantine.keep_quarantine_days's value from the gateway utilizing a sophos.ClientInterface
func (q *QuarantineKeepQuarantineDays) Get(client sophos.ClientInterface) (err error) {
	q.Value, err = GetQuarantineKeepQuarantineDays(client)
	return err
}

// Update PUT's' quarantine.keep_quarantine_days's value to the gateway utilizing a sophos.ClientInterface
func (q *QuarantineKeepQuarantineDays) Update(client sophos.ClientInterface) (err error) {
	return UpdateQuarantineKeepQuarantineDays(client, q.Value)
}

// RedActivateProvFw represents the red.activate_prov_fw node and implements sophos.Node
type RedActivateProvFw struct{ Value bool }

// Get retrieves node red.activate_prov_fw's value from the gateway utilizing a sophos.ClientInterface
func (r *RedActivateProvFw) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedActivateProvFw(client)
	return err
}

// Update PUT's' red.activate_prov_fw's value to the gateway utilizing a sophos.ClientInterface
func (r *RedActivateProvFw) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedActivateProvFw(client, r.Value)
}

// RedAuthorization represents the red.authorization node and implements sophos.Node
type RedAuthorization struct{ Value bool }

// Get retrieves node red.authorization's value from the gateway utilizing a sophos.ClientInterface
func (r *RedAuthorization) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedAuthorization(client)
	return err
}

// Update PUT's' red.authorization's value to the gateway utilizing a sophos.ClientInterface
func (r *RedAuthorization) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedAuthorization(client, r.Value)
}

// RedCaSettingsCity represents the red.ca_settings.city node and implements sophos.Node
type RedCaSettingsCity struct{ Value string }

// Get retrieves node red.ca_settings.city's value from the gateway utilizing a sophos.ClientInterface
func (r *RedCaSettingsCity) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedCaSettingsCity(client)
	return err
}

// Update PUT's' red.ca_settings.city's value to the gateway utilizing a sophos.ClientInterface
func (r *RedCaSettingsCity) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedCaSettingsCity(client, r.Value)
}

// RedCaSettingsCountry represents the red.ca_settings.country node and implements sophos.Node
type RedCaSettingsCountry struct{ Value string }

// Get retrieves node red.ca_settings.country's value from the gateway utilizing a sophos.ClientInterface
func (r *RedCaSettingsCountry) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedCaSettingsCountry(client)
	return err
}

// Update PUT's' red.ca_settings.country's value to the gateway utilizing a sophos.ClientInterface
func (r *RedCaSettingsCountry) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedCaSettingsCountry(client, r.Value)
}

// RedCaSettingsEmail represents the red.ca_settings.email node and implements sophos.Node
type RedCaSettingsEmail struct{ Value string }

// Get retrieves node red.ca_settings.email's value from the gateway utilizing a sophos.ClientInterface
func (r *RedCaSettingsEmail) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedCaSettingsEmail(client)
	return err
}

// Update PUT's' red.ca_settings.email's value to the gateway utilizing a sophos.ClientInterface
func (r *RedCaSettingsEmail) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedCaSettingsEmail(client, r.Value)
}

// RedCaSettingsOrganization represents the red.ca_settings.organization node and implements sophos.Node
type RedCaSettingsOrganization struct{ Value string }

// Get retrieves node red.ca_settings.organization's value from the gateway utilizing a sophos.ClientInterface
func (r *RedCaSettingsOrganization) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedCaSettingsOrganization(client)
	return err
}

// Update PUT's' red.ca_settings.organization's value to the gateway utilizing a sophos.ClientInterface
func (r *RedCaSettingsOrganization) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedCaSettingsOrganization(client, r.Value)
}

// RedClients represents the red.clients node and implements sophos.Node
type RedClients struct{ Value []interface{} }

// Get retrieves node red.clients's value from the gateway utilizing a sophos.ClientInterface
func (r *RedClients) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedClients(client)
	return err
}

// Update PUT's' red.clients's value to the gateway utilizing a sophos.ClientInterface
func (r *RedClients) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedClients(client, r.Value)
}

// RedDeauthTimeout represents the red.deauth_timeout node and implements sophos.Node
type RedDeauthTimeout struct{ Value string }

// Get retrieves node red.deauth_timeout's value from the gateway utilizing a sophos.ClientInterface
func (r *RedDeauthTimeout) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedDeauthTimeout(client)
	return err
}

// Update PUT's' red.deauth_timeout's value to the gateway utilizing a sophos.ClientInterface
func (r *RedDeauthTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedDeauthTimeout(client, r.Value)
}

// RedOverlayFwEnabled represents the red.overlay_fw_enabled node and implements sophos.Node
type RedOverlayFwEnabled struct{ Value bool }

// Get retrieves node red.overlay_fw_enabled's value from the gateway utilizing a sophos.ClientInterface
func (r *RedOverlayFwEnabled) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedOverlayFwEnabled(client)
	return err
}

// Update PUT's' red.overlay_fw_enabled's value to the gateway utilizing a sophos.ClientInterface
func (r *RedOverlayFwEnabled) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedOverlayFwEnabled(client, r.Value)
}

// RedRegistryCert represents the red.registry_cert node and implements sophos.Node
type RedRegistryCert struct{ Value string }

// Get retrieves node red.registry_cert's value from the gateway utilizing a sophos.ClientInterface
func (r *RedRegistryCert) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedRegistryCert(client)
	return err
}

// Update PUT's' red.registry_cert's value to the gateway utilizing a sophos.ClientInterface
func (r *RedRegistryCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedRegistryCert(client, r.Value)
}

// RedRegistryId represents the red.registry_id node and implements sophos.Node
type RedRegistryId struct{ Value string }

// Get retrieves node red.registry_id's value from the gateway utilizing a sophos.ClientInterface
func (r *RedRegistryId) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedRegistryId(client)
	return err
}

// Update PUT's' red.registry_id's value to the gateway utilizing a sophos.ClientInterface
func (r *RedRegistryId) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedRegistryId(client, r.Value)
}

// RedRegistryKey represents the red.registry_key node and implements sophos.Node
type RedRegistryKey struct{ Value string }

// Get retrieves node red.registry_key's value from the gateway utilizing a sophos.ClientInterface
func (r *RedRegistryKey) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedRegistryKey(client)
	return err
}

// Update PUT's' red.registry_key's value to the gateway utilizing a sophos.ClientInterface
func (r *RedRegistryKey) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedRegistryKey(client, r.Value)
}

// RedServerCert represents the red.server_cert node and implements sophos.Node
type RedServerCert struct{ Value string }

// Get retrieves node red.server_cert's value from the gateway utilizing a sophos.ClientInterface
func (r *RedServerCert) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedServerCert(client)
	return err
}

// Update PUT's' red.server_cert's value to the gateway utilizing a sophos.ClientInterface
func (r *RedServerCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedServerCert(client, r.Value)
}

// RedServers represents the red.servers node and implements sophos.Node
type RedServers struct{ Value []interface{} }

// Get retrieves node red.servers's value from the gateway utilizing a sophos.ClientInterface
func (r *RedServers) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedServers(client)
	return err
}

// Update PUT's' red.servers's value to the gateway utilizing a sophos.ClientInterface
func (r *RedServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedServers(client, r.Value)
}

// RedStatus represents the red.status node and implements sophos.Node
type RedStatus struct{ Value bool }

// Get retrieves node red.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RedStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedStatus(client)
	return err
}

// Update PUT's' red.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RedStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedStatus(client, r.Value)
}

// RedTls12Only represents the red.tls_1_2_only node and implements sophos.Node
type RedTls12Only struct{ Value bool }

// Get retrieves node red.tls_1_2_only's value from the gateway utilizing a sophos.ClientInterface
func (r *RedTls12Only) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRedTls12Only(client)
	return err
}

// Update PUT's' red.tls_1_2_only's value to the gateway utilizing a sophos.ClientInterface
func (r *RedTls12Only) Update(client sophos.ClientInterface) (err error) {
	return UpdateRedTls12Only(client, r.Value)
}

// RemoteAccessAdvancedMsdns1 represents the remote_access.advanced.msdns1 node and implements sophos.Node
type RemoteAccessAdvancedMsdns1 struct{ Value string }

// Get retrieves node remote_access.advanced.msdns1's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMsdns1) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessAdvancedMsdns1(client)
	return err
}

// Update PUT's' remote_access.advanced.msdns1's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMsdns1) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessAdvancedMsdns1(client, r.Value)
}

// RemoteAccessAdvancedMsdns2 represents the remote_access.advanced.msdns2 node and implements sophos.Node
type RemoteAccessAdvancedMsdns2 struct{ Value string }

// Get retrieves node remote_access.advanced.msdns2's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMsdns2) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessAdvancedMsdns2(client)
	return err
}

// Update PUT's' remote_access.advanced.msdns2's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMsdns2) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessAdvancedMsdns2(client, r.Value)
}

// RemoteAccessAdvancedMsdomain represents the remote_access.advanced.msdomain node and implements sophos.Node
type RemoteAccessAdvancedMsdomain struct{ Value string }

// Get retrieves node remote_access.advanced.msdomain's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMsdomain) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessAdvancedMsdomain(client)
	return err
}

// Update PUT's' remote_access.advanced.msdomain's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMsdomain) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessAdvancedMsdomain(client, r.Value)
}

// RemoteAccessAdvancedMswins1 represents the remote_access.advanced.mswins1 node and implements sophos.Node
type RemoteAccessAdvancedMswins1 struct{ Value string }

// Get retrieves node remote_access.advanced.mswins1's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMswins1) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessAdvancedMswins1(client)
	return err
}

// Update PUT's' remote_access.advanced.mswins1's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMswins1) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessAdvancedMswins1(client, r.Value)
}

// RemoteAccessAdvancedMswins2 represents the remote_access.advanced.mswins2 node and implements sophos.Node
type RemoteAccessAdvancedMswins2 struct{ Value string }

// Get retrieves node remote_access.advanced.mswins2's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMswins2) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessAdvancedMswins2(client)
	return err
}

// Update PUT's' remote_access.advanced.mswins2's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessAdvancedMswins2) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessAdvancedMswins2(client, r.Value)
}

// RemoteAccessCisco represents the remote_access.cisco node and implements sophos.Node
type RemoteAccessCisco struct{ Value string }

// Get retrieves node remote_access.cisco's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessCisco) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessCisco(client)
	return err
}

// Update PUT's' remote_access.cisco's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessCisco) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessCisco(client, r.Value)
}

// RemoteAccessClientlessVpnDebug represents the remote_access.clientless_vpn.debug node and implements sophos.Node
type RemoteAccessClientlessVpnDebug struct{ Value bool }

// Get retrieves node remote_access.clientless_vpn.debug's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessClientlessVpnDebug) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessClientlessVpnDebug(client)
	return err
}

// Update PUT's' remote_access.clientless_vpn.debug's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessClientlessVpnDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessClientlessVpnDebug(client, r.Value)
}

// RemoteAccessClientlessVpnStatus represents the remote_access.clientless_vpn.status node and implements sophos.Node
type RemoteAccessClientlessVpnStatus struct{ Value bool }

// Get retrieves node remote_access.clientless_vpn.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessClientlessVpnStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessClientlessVpnStatus(client)
	return err
}

// Update PUT's' remote_access.clientless_vpn.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessClientlessVpnStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessClientlessVpnStatus(client, r.Value)
}

// RemoteAccessL2Tp represents the remote_access.l2tp node and implements sophos.Node
type RemoteAccessL2Tp struct{ Value string }

// Get retrieves node remote_access.l2tp's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessL2Tp) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessL2Tp(client)
	return err
}

// Update PUT's' remote_access.l2tp's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessL2Tp) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessL2Tp(client, r.Value)
}

// RemoteAccessPptpAaa represents the remote_access.pptp.aaa node and implements sophos.Node
type RemoteAccessPptpAaa struct{ Value []string }

// Get retrieves node remote_access.pptp.aaa's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpAaa) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpAaa(client)
	return err
}

// Update PUT's' remote_access.pptp.aaa's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpAaa) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpAaa(client, r.Value)
}

// RemoteAccessPptpAuthentication represents the remote_access.pptp.authentication node and implements sophos.Node
type RemoteAccessPptpAuthentication struct{ Value string }

// Get retrieves node remote_access.pptp.authentication's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpAuthentication) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpAuthentication(client)
	return err
}

// Update PUT's' remote_access.pptp.authentication's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpAuthentication) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpAuthentication(client, r.Value)
}

// RemoteAccessPptpDebug represents the remote_access.pptp.debug node and implements sophos.Node
type RemoteAccessPptpDebug struct{ Value bool }

// Get retrieves node remote_access.pptp.debug's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpDebug) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpDebug(client)
	return err
}

// Update PUT's' remote_access.pptp.debug's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpDebug(client, r.Value)
}

// RemoteAccessPptpEncryption represents the remote_access.pptp.encryption node and implements sophos.Node
type RemoteAccessPptpEncryption struct{ Value string }

// Get retrieves node remote_access.pptp.encryption's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpEncryption) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpEncryption(client)
	return err
}

// Update PUT's' remote_access.pptp.encryption's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpEncryption) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpEncryption(client, r.Value)
}

// RemoteAccessPptpIpAssignmentDhcp represents the remote_access.pptp.ip_assignment_dhcp node and implements sophos.Node
type RemoteAccessPptpIpAssignmentDhcp struct{ Value string }

// Get retrieves node remote_access.pptp.ip_assignment_dhcp's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIpAssignmentDhcp) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpIpAssignmentDhcp(client)
	return err
}

// Update PUT's' remote_access.pptp.ip_assignment_dhcp's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIpAssignmentDhcp) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpIpAssignmentDhcp(client, r.Value)
}

// RemoteAccessPptpIpAssignmentDhcpInterface represents the remote_access.pptp.ip_assignment_dhcp_interface node and implements sophos.Node
type RemoteAccessPptpIpAssignmentDhcpInterface struct{ Value string }

// Get retrieves node remote_access.pptp.ip_assignment_dhcp_interface's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIpAssignmentDhcpInterface) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpIpAssignmentDhcpInterface(client)
	return err
}

// Update PUT's' remote_access.pptp.ip_assignment_dhcp_interface's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIpAssignmentDhcpInterface) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpIpAssignmentDhcpInterface(client, r.Value)
}

// RemoteAccessPptpIpAssignmentMode represents the remote_access.pptp.ip_assignment_mode node and implements sophos.Node
type RemoteAccessPptpIpAssignmentMode struct{ Value string }

// Get retrieves node remote_access.pptp.ip_assignment_mode's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIpAssignmentMode) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpIpAssignmentMode(client)
	return err
}

// Update PUT's' remote_access.pptp.ip_assignment_mode's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIpAssignmentMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpIpAssignmentMode(client, r.Value)
}

// RemoteAccessPptpIpAssignmentPool represents the remote_access.pptp.ip_assignment_pool node and implements sophos.Node
type RemoteAccessPptpIpAssignmentPool struct{ Value string }

// Get retrieves node remote_access.pptp.ip_assignment_pool's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIpAssignmentPool) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpIpAssignmentPool(client)
	return err
}

// Update PUT's' remote_access.pptp.ip_assignment_pool's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIpAssignmentPool) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpIpAssignmentPool(client, r.Value)
}

// RemoteAccessPptpIphoneConnectionName represents the remote_access.pptp.iphone_connection_name node and implements sophos.Node
type RemoteAccessPptpIphoneConnectionName struct{ Value string }

// Get retrieves node remote_access.pptp.iphone_connection_name's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIphoneConnectionName) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpIphoneConnectionName(client)
	return err
}

// Update PUT's' remote_access.pptp.iphone_connection_name's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIphoneConnectionName) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpIphoneConnectionName(client, r.Value)
}

// RemoteAccessPptpIphoneHostname represents the remote_access.pptp.iphone_hostname node and implements sophos.Node
type RemoteAccessPptpIphoneHostname struct{ Value string }

// Get retrieves node remote_access.pptp.iphone_hostname's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIphoneHostname) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpIphoneHostname(client)
	return err
}

// Update PUT's' remote_access.pptp.iphone_hostname's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIphoneHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpIphoneHostname(client, r.Value)
}

// RemoteAccessPptpIphoneStatus represents the remote_access.pptp.iphone_status node and implements sophos.Node
type RemoteAccessPptpIphoneStatus struct{ Value bool }

// Get retrieves node remote_access.pptp.iphone_status's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIphoneStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpIphoneStatus(client)
	return err
}

// Update PUT's' remote_access.pptp.iphone_status's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpIphoneStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpIphoneStatus(client, r.Value)
}

// RemoteAccessPptpMtu represents the remote_access.pptp.mtu node and implements sophos.Node
type RemoteAccessPptpMtu struct{ Value int64 }

// Get retrieves node remote_access.pptp.mtu's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpMtu) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpMtu(client)
	return err
}

// Update PUT's' remote_access.pptp.mtu's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpMtu) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpMtu(client, r.Value)
}

// RemoteAccessPptpStatus represents the remote_access.pptp.status node and implements sophos.Node
type RemoteAccessPptpStatus struct{ Value bool }

// Get retrieves node remote_access.pptp.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteAccessPptpStatus(client)
	return err
}

// Update PUT's' remote_access.pptp.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteAccessPptpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteAccessPptpStatus(client, r.Value)
}

// RemoteSyslogBuffer represents the remote_syslog.buffer node and implements sophos.Node
type RemoteSyslogBuffer struct{ Value int64 }

// Get retrieves node remote_syslog.buffer's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteSyslogBuffer) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteSyslogBuffer(client)
	return err
}

// Update PUT's' remote_syslog.buffer's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteSyslogBuffer) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteSyslogBuffer(client, r.Value)
}

// RemoteSyslogLogs represents the remote_syslog.logs node and implements sophos.Node
type RemoteSyslogLogs struct{ Value []interface{} }

// Get retrieves node remote_syslog.logs's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteSyslogLogs) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteSyslogLogs(client)
	return err
}

// Update PUT's' remote_syslog.logs's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteSyslogLogs) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteSyslogLogs(client, r.Value)
}

// RemoteSyslogStatus represents the remote_syslog.status node and implements sophos.Node
type RemoteSyslogStatus struct{ Value bool }

// Get retrieves node remote_syslog.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteSyslogStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteSyslogStatus(client)
	return err
}

// Update PUT's' remote_syslog.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteSyslogStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteSyslogStatus(client, r.Value)
}

// RemoteSyslogTarget represents the remote_syslog.target node and implements sophos.Node
type RemoteSyslogTarget struct{ Value []interface{} }

// Get retrieves node remote_syslog.target's value from the gateway utilizing a sophos.ClientInterface
func (r *RemoteSyslogTarget) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRemoteSyslogTarget(client)
	return err
}

// Update PUT's' remote_syslog.target's value to the gateway utilizing a sophos.ClientInterface
func (r *RemoteSyslogTarget) Update(client sophos.ClientInterface) (err error) {
	return UpdateRemoteSyslogTarget(client, r.Value)
}

// ReportingAccountingKeepdays represents the reporting.accounting_keepdays node and implements sophos.Node
type ReportingAccountingKeepdays struct{ Value int64 }

// Get retrieves node reporting.accounting_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAccountingKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAccountingKeepdays(client)
	return err
}

// Update PUT's' reporting.accounting_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAccountingKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAccountingKeepdays(client, r.Value)
}

// ReportingAccountingStatus represents the reporting.accounting_status node and implements sophos.Node
type ReportingAccountingStatus struct{ Value bool }

// Get retrieves node reporting.accounting_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAccountingStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAccountingStatus(client)
	return err
}

// Update PUT's' reporting.accounting_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAccountingStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAccountingStatus(client, r.Value)
}

// ReportingAnonymizing represents the reporting.anonymizing node and implements sophos.Node
type ReportingAnonymizing struct{ Value bool }

// Get retrieves node reporting.anonymizing's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAnonymizing) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAnonymizing(client)
	return err
}

// Update PUT's' reporting.anonymizing's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAnonymizing) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAnonymizing(client, r.Value)
}

// ReportingAppctrlKeepdays represents the reporting.appctrl_keepdays node and implements sophos.Node
type ReportingAppctrlKeepdays struct{ Value int64 }

// Get retrieves node reporting.appctrl_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAppctrlKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAppctrlKeepdays(client)
	return err
}

// Update PUT's' reporting.appctrl_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAppctrlKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAppctrlKeepdays(client, r.Value)
}

// ReportingAppctrlStatus represents the reporting.appctrl_status node and implements sophos.Node
type ReportingAppctrlStatus struct{ Value bool }

// Get retrieves node reporting.appctrl_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAppctrlStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAppctrlStatus(client)
	return err
}

// Update PUT's' reporting.appctrl_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAppctrlStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAppctrlStatus(client, r.Value)
}

// ReportingAtpKeepdays represents the reporting.atp_keepdays node and implements sophos.Node
type ReportingAtpKeepdays struct{ Value int64 }

// Get retrieves node reporting.atp_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAtpKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAtpKeepdays(client)
	return err
}

// Update PUT's' reporting.atp_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAtpKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAtpKeepdays(client, r.Value)
}

// ReportingAtpReset represents the reporting.atp_reset node and implements sophos.Node
type ReportingAtpReset struct{ Value map[string]interface{} }

// Get retrieves node reporting.atp_reset's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAtpReset) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAtpReset(client)
	return err
}

// Update PUT's' reporting.atp_reset's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAtpReset) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAtpReset(client, r.Value)
}

// ReportingAtpStatus represents the reporting.atp_status node and implements sophos.Node
type ReportingAtpStatus struct{ Value bool }

// Get retrieves node reporting.atp_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAtpStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAtpStatus(client)
	return err
}

// Update PUT's' reporting.atp_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAtpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAtpStatus(client, r.Value)
}

// ReportingAuthenticationKeepdays represents the reporting.authentication_keepdays node and implements sophos.Node
type ReportingAuthenticationKeepdays struct{ Value int64 }

// Get retrieves node reporting.authentication_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAuthenticationKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAuthenticationKeepdays(client)
	return err
}

// Update PUT's' reporting.authentication_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAuthenticationKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAuthenticationKeepdays(client, r.Value)
}

// ReportingAuthenticationStatus represents the reporting.authentication_status node and implements sophos.Node
type ReportingAuthenticationStatus struct{ Value bool }

// Get retrieves node reporting.authentication_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingAuthenticationStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingAuthenticationStatus(client)
	return err
}

// Update PUT's' reporting.authentication_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingAuthenticationStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingAuthenticationStatus(client, r.Value)
}

// ReportingCsvSeparator represents the reporting.csv_separator node and implements sophos.Node
type ReportingCsvSeparator struct{ Value string }

// Get retrieves node reporting.csv_separator's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingCsvSeparator) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingCsvSeparator(client)
	return err
}

// Update PUT's' reporting.csv_separator's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingCsvSeparator) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingCsvSeparator(client, r.Value)
}

// ReportingEmailsecurityImport represents the reporting.emailsecurity_import node and implements sophos.Node
type ReportingEmailsecurityImport struct{ Value []interface{} }

// Get retrieves node reporting.emailsecurity_import's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingEmailsecurityImport) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingEmailsecurityImport(client)
	return err
}

// Update PUT's' reporting.emailsecurity_import's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingEmailsecurityImport) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingEmailsecurityImport(client, r.Value)
}

// ReportingEmailsecurityKeepdays represents the reporting.emailsecurity_keepdays node and implements sophos.Node
type ReportingEmailsecurityKeepdays struct{ Value int64 }

// Get retrieves node reporting.emailsecurity_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingEmailsecurityKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingEmailsecurityKeepdays(client)
	return err
}

// Update PUT's' reporting.emailsecurity_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingEmailsecurityKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingEmailsecurityKeepdays(client, r.Value)
}

// ReportingEmailsecurityStatus represents the reporting.emailsecurity_status node and implements sophos.Node
type ReportingEmailsecurityStatus struct{ Value bool }

// Get retrieves node reporting.emailsecurity_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingEmailsecurityStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingEmailsecurityStatus(client)
	return err
}

// Update PUT's' reporting.emailsecurity_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingEmailsecurityStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingEmailsecurityStatus(client, r.Value)
}

// ReportingEnableVpnAccounting represents the reporting.enable_vpn_accounting node and implements sophos.Node
type ReportingEnableVpnAccounting struct{ Value bool }

// Get retrieves node reporting.enable_vpn_accounting's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingEnableVpnAccounting) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingEnableVpnAccounting(client)
	return err
}

// Update PUT's' reporting.enable_vpn_accounting's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingEnableVpnAccounting) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingEnableVpnAccounting(client, r.Value)
}

// ReportingHideAccountingips represents the reporting.hide_accountingips node and implements sophos.Node
type ReportingHideAccountingips struct{ Value []interface{} }

// Get retrieves node reporting.hide_accountingips's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideAccountingips) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingHideAccountingips(client)
	return err
}

// Update PUT's' reporting.hide_accountingips's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideAccountingips) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingHideAccountingips(client, r.Value)
}

// ReportingHideMailaddresses represents the reporting.hide_mailaddresses node and implements sophos.Node
type ReportingHideMailaddresses struct{ Value []interface{} }

// Get retrieves node reporting.hide_mailaddresses's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideMailaddresses) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingHideMailaddresses(client)
	return err
}

// Update PUT's' reporting.hide_mailaddresses's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideMailaddresses) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingHideMailaddresses(client, r.Value)
}

// ReportingHideMaildomains represents the reporting.hide_maildomains node and implements sophos.Node
type ReportingHideMaildomains struct{ Value []interface{} }

// Get retrieves node reporting.hide_maildomains's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideMaildomains) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingHideMaildomains(client)
	return err
}

// Update PUT's' reporting.hide_maildomains's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideMaildomains) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingHideMaildomains(client, r.Value)
}

// ReportingHideNetsecips represents the reporting.hide_netsecips node and implements sophos.Node
type ReportingHideNetsecips struct{ Value []interface{} }

// Get retrieves node reporting.hide_netsecips's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideNetsecips) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingHideNetsecips(client)
	return err
}

// Update PUT's' reporting.hide_netsecips's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideNetsecips) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingHideNetsecips(client, r.Value)
}

// ReportingHideWebdomains represents the reporting.hide_webdomains node and implements sophos.Node
type ReportingHideWebdomains struct{ Value []interface{} }

// Get retrieves node reporting.hide_webdomains's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideWebdomains) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingHideWebdomains(client)
	return err
}

// Update PUT's' reporting.hide_webdomains's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingHideWebdomains) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingHideWebdomains(client, r.Value)
}

// ReportingIpsImport represents the reporting.ips_import node and implements sophos.Node
type ReportingIpsImport struct{ Value []interface{} }

// Get retrieves node reporting.ips_import's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingIpsImport) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingIpsImport(client)
	return err
}

// Update PUT's' reporting.ips_import's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingIpsImport) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingIpsImport(client, r.Value)
}

// ReportingIpsKeepdays represents the reporting.ips_keepdays node and implements sophos.Node
type ReportingIpsKeepdays struct{ Value int64 }

// Get retrieves node reporting.ips_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingIpsKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingIpsKeepdays(client)
	return err
}

// Update PUT's' reporting.ips_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingIpsKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingIpsKeepdays(client, r.Value)
}

// ReportingIpsStatus represents the reporting.ips_status node and implements sophos.Node
type ReportingIpsStatus struct{ Value bool }

// Get retrieves node reporting.ips_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingIpsStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingIpsStatus(client)
	return err
}

// Update PUT's' reporting.ips_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingIpsStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingIpsStatus(client, r.Value)
}

// ReportingPacketfilterImport represents the reporting.packetfilter_import node and implements sophos.Node
type ReportingPacketfilterImport struct{ Value []interface{} }

// Get retrieves node reporting.packetfilter_import's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingPacketfilterImport) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingPacketfilterImport(client)
	return err
}

// Update PUT's' reporting.packetfilter_import's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingPacketfilterImport) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingPacketfilterImport(client, r.Value)
}

// ReportingPacketfilterKeepdays represents the reporting.packetfilter_keepdays node and implements sophos.Node
type ReportingPacketfilterKeepdays struct{ Value int64 }

// Get retrieves node reporting.packetfilter_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingPacketfilterKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingPacketfilterKeepdays(client)
	return err
}

// Update PUT's' reporting.packetfilter_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingPacketfilterKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingPacketfilterKeepdays(client, r.Value)
}

// ReportingPacketfilterStatus represents the reporting.packetfilter_status node and implements sophos.Node
type ReportingPacketfilterStatus struct{ Value bool }

// Get retrieves node reporting.packetfilter_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingPacketfilterStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingPacketfilterStatus(client)
	return err
}

// Update PUT's' reporting.packetfilter_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingPacketfilterStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingPacketfilterStatus(client, r.Value)
}

// ReportingPassword1 represents the reporting.password1 node and implements sophos.Node
type ReportingPassword1 struct{ Value string }

// Get retrieves node reporting.password1's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingPassword1) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingPassword1(client)
	return err
}

// Update PUT's' reporting.password1's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingPassword1) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingPassword1(client, r.Value)
}

// ReportingPassword2 represents the reporting.password2 node and implements sophos.Node
type ReportingPassword2 struct{ Value string }

// Get retrieves node reporting.password2's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingPassword2) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingPassword2(client)
	return err
}

// Update PUT's' reporting.password2's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingPassword2) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingPassword2(client, r.Value)
}

// ReportingSandboxKeepdays represents the reporting.sandbox_keepdays node and implements sophos.Node
type ReportingSandboxKeepdays struct{ Value int64 }

// Get retrieves node reporting.sandbox_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingSandboxKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingSandboxKeepdays(client)
	return err
}

// Update PUT's' reporting.sandbox_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingSandboxKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingSandboxKeepdays(client, r.Value)
}

// ReportingUserlogFromLogs represents the reporting.userlog_from_logs node and implements sophos.Node
type ReportingUserlogFromLogs struct{ Value bool }

// Get retrieves node reporting.userlog_from_logs's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingUserlogFromLogs) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingUserlogFromLogs(client)
	return err
}

// Update PUT's' reporting.userlog_from_logs's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingUserlogFromLogs) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingUserlogFromLogs(client, r.Value)
}

// ReportingVpnKeepdays represents the reporting.vpn_keepdays node and implements sophos.Node
type ReportingVpnKeepdays struct{ Value int64 }

// Get retrieves node reporting.vpn_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingVpnKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingVpnKeepdays(client)
	return err
}

// Update PUT's' reporting.vpn_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingVpnKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingVpnKeepdays(client, r.Value)
}

// ReportingVpnStatus represents the reporting.vpn_status node and implements sophos.Node
type ReportingVpnStatus struct{ Value bool }

// Get retrieves node reporting.vpn_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingVpnStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingVpnStatus(client)
	return err
}

// Update PUT's' reporting.vpn_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingVpnStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingVpnStatus(client, r.Value)
}

// ReportingWafKeepdays represents the reporting.waf_keepdays node and implements sophos.Node
type ReportingWafKeepdays struct{ Value int64 }

// Get retrieves node reporting.waf_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingWafKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingWafKeepdays(client)
	return err
}

// Update PUT's' reporting.waf_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingWafKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingWafKeepdays(client, r.Value)
}

// ReportingWafStatus represents the reporting.waf_status node and implements sophos.Node
type ReportingWafStatus struct{ Value bool }

// Get retrieves node reporting.waf_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingWafStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingWafStatus(client)
	return err
}

// Update PUT's' reporting.waf_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingWafStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingWafStatus(client, r.Value)
}

// ReportingWebsecurityDetail represents the reporting.websecurity_detail node and implements sophos.Node
type ReportingWebsecurityDetail struct{ Value map[string]interface{} }

// Get retrieves node reporting.websecurity_detail's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingWebsecurityDetail) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingWebsecurityDetail(client)
	return err
}

// Update PUT's' reporting.websecurity_detail's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingWebsecurityDetail) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingWebsecurityDetail(client, r.Value)
}

// ReportingWebsecurityImport represents the reporting.websecurity_import node and implements sophos.Node
type ReportingWebsecurityImport struct{ Value []interface{} }

// Get retrieves node reporting.websecurity_import's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingWebsecurityImport) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingWebsecurityImport(client)
	return err
}

// Update PUT's' reporting.websecurity_import's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingWebsecurityImport) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingWebsecurityImport(client, r.Value)
}

// ReportingWebsecurityKeepdays represents the reporting.websecurity_keepdays node and implements sophos.Node
type ReportingWebsecurityKeepdays struct{ Value int64 }

// Get retrieves node reporting.websecurity_keepdays's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingWebsecurityKeepdays) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingWebsecurityKeepdays(client)
	return err
}

// Update PUT's' reporting.websecurity_keepdays's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingWebsecurityKeepdays) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingWebsecurityKeepdays(client, r.Value)
}

// ReportingWebsecurityStatus represents the reporting.websecurity_status node and implements sophos.Node
type ReportingWebsecurityStatus struct{ Value bool }

// Get retrieves node reporting.websecurity_status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReportingWebsecurityStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReportingWebsecurityStatus(client)
	return err
}

// Update PUT's' reporting.websecurity_status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReportingWebsecurityStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReportingWebsecurityStatus(client, r.Value)
}

// ReverseProxyAuaRefreshEnabled represents the reverse_proxy.aua_refresh_enabled node and implements sophos.Node
type ReverseProxyAuaRefreshEnabled struct{ Value bool }

// Get retrieves node reverse_proxy.aua_refresh_enabled's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyAuaRefreshEnabled) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyAuaRefreshEnabled(client)
	return err
}

// Update PUT's' reverse_proxy.aua_refresh_enabled's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyAuaRefreshEnabled) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyAuaRefreshEnabled(client, r.Value)
}

// ReverseProxyAuaRefreshInterval represents the reverse_proxy.aua_refresh_interval node and implements sophos.Node
type ReverseProxyAuaRefreshInterval struct{ Value int64 }

// Get retrieves node reverse_proxy.aua_refresh_interval's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyAuaRefreshInterval) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyAuaRefreshInterval(client)
	return err
}

// Update PUT's' reverse_proxy.aua_refresh_interval's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyAuaRefreshInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyAuaRefreshInterval(client, r.Value)
}

// ReverseProxyBlacklistDnsrblZones represents the reverse_proxy.blacklist.dnsrbl_zones node and implements sophos.Node
type ReverseProxyBlacklistDnsrblZones struct{ Value []string }

// Get retrieves node reverse_proxy.blacklist.dnsrbl_zones's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyBlacklistDnsrblZones) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyBlacklistDnsrblZones(client)
	return err
}

// Update PUT's' reverse_proxy.blacklist.dnsrbl_zones's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyBlacklistDnsrblZones) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyBlacklistDnsrblZones(client, r.Value)
}

// ReverseProxyBlacklistGeoipCodes represents the reverse_proxy.blacklist.geoip_codes node and implements sophos.Node
type ReverseProxyBlacklistGeoipCodes struct{ Value []string }

// Get retrieves node reverse_proxy.blacklist.geoip_codes's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyBlacklistGeoipCodes) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyBlacklistGeoipCodes(client)
	return err
}

// Update PUT's' reverse_proxy.blacklist.geoip_codes's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyBlacklistGeoipCodes) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyBlacklistGeoipCodes(client, r.Value)
}

// ReverseProxyCookiesignkey represents the reverse_proxy.cookiesignkey node and implements sophos.Node
type ReverseProxyCookiesignkey struct{ Value string }

// Get retrieves node reverse_proxy.cookiesignkey's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyCookiesignkey) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyCookiesignkey(client)
	return err
}

// Update PUT's' reverse_proxy.cookiesignkey's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyCookiesignkey) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyCookiesignkey(client, r.Value)
}

// ReverseProxyCssdHostname represents the reverse_proxy.cssd_hostname node and implements sophos.Node
type ReverseProxyCssdHostname struct{ Value string }

// Get retrieves node reverse_proxy.cssd_hostname's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyCssdHostname) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyCssdHostname(client)
	return err
}

// Update PUT's' reverse_proxy.cssd_hostname's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyCssdHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyCssdHostname(client, r.Value)
}

// ReverseProxyCssdPort represents the reverse_proxy.cssd_port node and implements sophos.Node
type ReverseProxyCssdPort struct{ Value map[string]interface{} }

// Get retrieves node reverse_proxy.cssd_port's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyCssdPort) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyCssdPort(client)
	return err
}

// Update PUT's' reverse_proxy.cssd_port's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyCssdPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyCssdPort(client, r.Value)
}

// ReverseProxyCustomThreatFiltersEnabled represents the reverse_proxy.custom_threat_filters_enabled node and implements sophos.Node
type ReverseProxyCustomThreatFiltersEnabled struct{ Value bool }

// Get retrieves node reverse_proxy.custom_threat_filters_enabled's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyCustomThreatFiltersEnabled) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyCustomThreatFiltersEnabled(client)
	return err
}

// Update PUT's' reverse_proxy.custom_threat_filters_enabled's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyCustomThreatFiltersEnabled) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyCustomThreatFiltersEnabled(client, r.Value)
}

// ReverseProxyFormhardeningSecret represents the reverse_proxy.formhardening_secret node and implements sophos.Node
type ReverseProxyFormhardeningSecret struct{ Value string }

// Get retrieves node reverse_proxy.formhardening_secret's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyFormhardeningSecret) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyFormhardeningSecret(client)
	return err
}

// Update PUT's' reverse_proxy.formhardening_secret's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyFormhardeningSecret) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyFormhardeningSecret(client, r.Value)
}

// ReverseProxyKeepalive represents the reverse_proxy.keepalive node and implements sophos.Node
type ReverseProxyKeepalive struct{ Value bool }

// Get retrieves node reverse_proxy.keepalive's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyKeepalive) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyKeepalive(client)
	return err
}

// Update PUT's' reverse_proxy.keepalive's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyKeepalive) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyKeepalive(client, r.Value)
}

// ReverseProxyManualmode represents the reverse_proxy.manualmode node and implements sophos.Node
type ReverseProxyManualmode struct{ Value bool }

// Get retrieves node reverse_proxy.manualmode's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyManualmode) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyManualmode(client)
	return err
}

// Update PUT's' reverse_proxy.manualmode's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyManualmode) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyManualmode(client, r.Value)
}

// ReverseProxyMaxConnectionsPerChild represents the reverse_proxy.max_connections_per_child node and implements sophos.Node
type ReverseProxyMaxConnectionsPerChild struct{ Value map[string]interface{} }

// Get retrieves node reverse_proxy.max_connections_per_child's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxConnectionsPerChild) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMaxConnectionsPerChild(client)
	return err
}

// Update PUT's' reverse_proxy.max_connections_per_child's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxConnectionsPerChild) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMaxConnectionsPerChild(client, r.Value)
}

// ReverseProxyMaxPreforkProcesses represents the reverse_proxy.max_prefork_processes node and implements sophos.Node
type ReverseProxyMaxPreforkProcesses struct{ Value int64 }

// Get retrieves node reverse_proxy.max_prefork_processes's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxPreforkProcesses) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMaxPreforkProcesses(client)
	return err
}

// Update PUT's' reverse_proxy.max_prefork_processes's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxPreforkProcesses) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMaxPreforkProcesses(client, r.Value)
}

// ReverseProxyMaxProcesses represents the reverse_proxy.max_processes node and implements sophos.Node
type ReverseProxyMaxProcesses struct{ Value int64 }

// Get retrieves node reverse_proxy.max_processes's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxProcesses) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMaxProcesses(client)
	return err
}

// Update PUT's' reverse_proxy.max_processes's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxProcesses) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMaxProcesses(client, r.Value)
}

// ReverseProxyMaxSessionFiles represents the reverse_proxy.max_session_files node and implements sophos.Node
type ReverseProxyMaxSessionFiles struct{ Value int64 }

// Get retrieves node reverse_proxy.max_session_files's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxSessionFiles) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMaxSessionFiles(client)
	return err
}

// Update PUT's' reverse_proxy.max_session_files's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxSessionFiles) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMaxSessionFiles(client, r.Value)
}

// ReverseProxyMaxSpareProcesses represents the reverse_proxy.max_spare_processes node and implements sophos.Node
type ReverseProxyMaxSpareProcesses struct{ Value int64 }

// Get retrieves node reverse_proxy.max_spare_processes's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxSpareProcesses) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMaxSpareProcesses(client)
	return err
}

// Update PUT's' reverse_proxy.max_spare_processes's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxSpareProcesses) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMaxSpareProcesses(client, r.Value)
}

// ReverseProxyMaxSpareThreads represents the reverse_proxy.max_spare_threads node and implements sophos.Node
type ReverseProxyMaxSpareThreads struct{ Value int64 }

// Get retrieves node reverse_proxy.max_spare_threads's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxSpareThreads) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMaxSpareThreads(client)
	return err
}

// Update PUT's' reverse_proxy.max_spare_threads's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxSpareThreads) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMaxSpareThreads(client, r.Value)
}

// ReverseProxyMaxThreadsPerProcess represents the reverse_proxy.max_threads_per_process node and implements sophos.Node
type ReverseProxyMaxThreadsPerProcess struct{ Value int64 }

// Get retrieves node reverse_proxy.max_threads_per_process's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxThreadsPerProcess) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMaxThreadsPerProcess(client)
	return err
}

// Update PUT's' reverse_proxy.max_threads_per_process's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMaxThreadsPerProcess) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMaxThreadsPerProcess(client, r.Value)
}

// ReverseProxyMinSpareProcesses represents the reverse_proxy.min_spare_processes node and implements sophos.Node
type ReverseProxyMinSpareProcesses struct{ Value int64 }

// Get retrieves node reverse_proxy.min_spare_processes's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMinSpareProcesses) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMinSpareProcesses(client)
	return err
}

// Update PUT's' reverse_proxy.min_spare_processes's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMinSpareProcesses) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMinSpareProcesses(client, r.Value)
}

// ReverseProxyMinSpareThreads represents the reverse_proxy.min_spare_threads node and implements sophos.Node
type ReverseProxyMinSpareThreads struct{ Value int64 }

// Get retrieves node reverse_proxy.min_spare_threads's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMinSpareThreads) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMinSpareThreads(client)
	return err
}

// Update PUT's' reverse_proxy.min_spare_threads's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMinSpareThreads) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMinSpareThreads(client, r.Value)
}

// ReverseProxyMinTls represents the reverse_proxy.min_tls node and implements sophos.Node
type ReverseProxyMinTls struct{ Value string }

// Get retrieves node reverse_proxy.min_tls's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMinTls) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMinTls(client)
	return err
}

// Update PUT's' reverse_proxy.min_tls's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMinTls) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMinTls(client, r.Value)
}

// ReverseProxyModsecurityBeta represents the reverse_proxy.modsecurity_beta node and implements sophos.Node
type ReverseProxyModsecurityBeta struct{ Value bool }

// Get retrieves node reverse_proxy.modsecurity_beta's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyModsecurityBeta) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyModsecurityBeta(client)
	return err
}

// Update PUT's' reverse_proxy.modsecurity_beta's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyModsecurityBeta) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyModsecurityBeta(client, r.Value)
}

// ReverseProxyMpmMode represents the reverse_proxy.mpm_mode node and implements sophos.Node
type ReverseProxyMpmMode struct{ Value string }

// Get retrieves node reverse_proxy.mpm_mode's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMpmMode) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyMpmMode(client)
	return err
}

// Update PUT's' reverse_proxy.mpm_mode's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyMpmMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyMpmMode(client, r.Value)
}

// ReverseProxyPatternversion represents the reverse_proxy.patternversion node and implements sophos.Node
type ReverseProxyPatternversion struct{ Value string }

// Get retrieves node reverse_proxy.patternversion's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyPatternversion) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyPatternversion(client)
	return err
}

// Update PUT's' reverse_proxy.patternversion's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyPatternversion) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyPatternversion(client, r.Value)
}

// ReverseProxyPort represents the reverse_proxy.port node and implements sophos.Node
type ReverseProxyPort struct{ Value int64 }

// Get retrieves node reverse_proxy.port's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyPort) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyPort(client)
	return err
}

// Update PUT's' reverse_proxy.port's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyPort(client, r.Value)
}

// ReverseProxyProxyprotocol represents the reverse_proxy.proxyprotocol node and implements sophos.Node
type ReverseProxyProxyprotocol struct{ Value bool }

// Get retrieves node reverse_proxy.proxyprotocol's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyProxyprotocol) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyProxyprotocol(client)
	return err
}

// Update PUT's' reverse_proxy.proxyprotocol's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyProxyprotocol) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyProxyprotocol(client, r.Value)
}

// ReverseProxyRequestLineLimit represents the reverse_proxy.request_line_limit node and implements sophos.Node
type ReverseProxyRequestLineLimit struct{ Value map[string]interface{} }

// Get retrieves node reverse_proxy.request_line_limit's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyRequestLineLimit) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyRequestLineLimit(client)
	return err
}

// Update PUT's' reverse_proxy.request_line_limit's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyRequestLineLimit) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyRequestLineLimit(client, r.Value)
}

// ReverseProxySlowhttpExceptions represents the reverse_proxy.slowhttp_exceptions node and implements sophos.Node
type ReverseProxySlowhttpExceptions struct{ Value []interface{} }

// Get retrieves node reverse_proxy.slowhttp_exceptions's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpExceptions) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxySlowhttpExceptions(client)
	return err
}

// Update PUT's' reverse_proxy.slowhttp_exceptions's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpExceptions) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxySlowhttpExceptions(client, r.Value)
}

// ReverseProxySlowhttpRequestHeaderTimeoutBase represents the reverse_proxy.slowhttp_request_header_timeout_base node and implements sophos.Node
type ReverseProxySlowhttpRequestHeaderTimeoutBase struct{ Value int64 }

// Get retrieves node reverse_proxy.slowhttp_request_header_timeout_base's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpRequestHeaderTimeoutBase) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxySlowhttpRequestHeaderTimeoutBase(client)
	return err
}

// Update PUT's' reverse_proxy.slowhttp_request_header_timeout_base's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpRequestHeaderTimeoutBase) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxySlowhttpRequestHeaderTimeoutBase(client, r.Value)
}

// ReverseProxySlowhttpRequestHeaderTimeoutEnabled represents the reverse_proxy.slowhttp_request_header_timeout_enabled node and implements sophos.Node
type ReverseProxySlowhttpRequestHeaderTimeoutEnabled struct{ Value bool }

// Get retrieves node reverse_proxy.slowhttp_request_header_timeout_enabled's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpRequestHeaderTimeoutEnabled) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxySlowhttpRequestHeaderTimeoutEnabled(client)
	return err
}

// Update PUT's' reverse_proxy.slowhttp_request_header_timeout_enabled's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpRequestHeaderTimeoutEnabled) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxySlowhttpRequestHeaderTimeoutEnabled(client, r.Value)
}

// ReverseProxySlowhttpRequestHeaderTimeoutMax represents the reverse_proxy.slowhttp_request_header_timeout_max node and implements sophos.Node
type ReverseProxySlowhttpRequestHeaderTimeoutMax struct{ Value int64 }

// Get retrieves node reverse_proxy.slowhttp_request_header_timeout_max's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpRequestHeaderTimeoutMax) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxySlowhttpRequestHeaderTimeoutMax(client)
	return err
}

// Update PUT's' reverse_proxy.slowhttp_request_header_timeout_max's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpRequestHeaderTimeoutMax) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxySlowhttpRequestHeaderTimeoutMax(client, r.Value)
}

// ReverseProxySlowhttpRequestHeaderTimeoutRate represents the reverse_proxy.slowhttp_request_header_timeout_rate node and implements sophos.Node
type ReverseProxySlowhttpRequestHeaderTimeoutRate struct{ Value int64 }

// Get retrieves node reverse_proxy.slowhttp_request_header_timeout_rate's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpRequestHeaderTimeoutRate) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxySlowhttpRequestHeaderTimeoutRate(client)
	return err
}

// Update PUT's' reverse_proxy.slowhttp_request_header_timeout_rate's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxySlowhttpRequestHeaderTimeoutRate) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxySlowhttpRequestHeaderTimeoutRate(client, r.Value)
}

// ReverseProxyStatus represents the reverse_proxy.status node and implements sophos.Node
type ReverseProxyStatus struct{ Value bool }

// Get retrieves node reverse_proxy.status's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyStatus(client)
	return err
}

// Update PUT's' reverse_proxy.status's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyStatus(client, r.Value)
}

// ReverseProxyTraceEnabled represents the reverse_proxy.trace_enabled node and implements sophos.Node
type ReverseProxyTraceEnabled struct{ Value bool }

// Get retrieves node reverse_proxy.trace_enabled's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyTraceEnabled) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyTraceEnabled(client)
	return err
}

// Update PUT's' reverse_proxy.trace_enabled's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyTraceEnabled) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyTraceEnabled(client, r.Value)
}

// ReverseProxyUrlhardeningsignkey represents the reverse_proxy.urlhardeningsignkey node and implements sophos.Node
type ReverseProxyUrlhardeningsignkey struct{ Value string }

// Get retrieves node reverse_proxy.urlhardeningsignkey's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyUrlhardeningsignkey) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyUrlhardeningsignkey(client)
	return err
}

// Update PUT's' reverse_proxy.urlhardeningsignkey's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyUrlhardeningsignkey) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyUrlhardeningsignkey(client, r.Value)
}

// ReverseProxyWhatkilledus represents the reverse_proxy.whatkilledus node and implements sophos.Node
type ReverseProxyWhatkilledus struct{ Value bool }

// Get retrieves node reverse_proxy.whatkilledus's value from the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyWhatkilledus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetReverseProxyWhatkilledus(client)
	return err
}

// Update PUT's' reverse_proxy.whatkilledus's value to the gateway utilizing a sophos.ClientInterface
func (r *ReverseProxyWhatkilledus) Update(client sophos.ClientInterface) (err error) {
	return UpdateReverseProxyWhatkilledus(client, r.Value)
}

// RoutesPolicy represents the routes.policy node and implements sophos.Node
type RoutesPolicy struct{ Value []interface{} }

// Get retrieves node routes.policy's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutesPolicy) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutesPolicy(client)
	return err
}

// Update PUT's' routes.policy's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutesPolicy) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutesPolicy(client, r.Value)
}

// RoutesStatic represents the routes.static node and implements sophos.Node
type RoutesStatic struct{ Value []string }

// Get retrieves node routes.static's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutesStatic) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutesStatic(client)
	return err
}

// Update PUT's' routes.static's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutesStatic) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutesStatic(client, r.Value)
}

// RoutingBgpMaximumPaths represents the routing.bgp.maximum_paths node and implements sophos.Node
type RoutingBgpMaximumPaths struct{ Value map[string]interface{} }

// Get retrieves node routing.bgp.maximum_paths's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpMaximumPaths) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingBgpMaximumPaths(client)
	return err
}

// Update PUT's' routing.bgp.maximum_paths's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpMaximumPaths) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingBgpMaximumPaths(client, r.Value)
}

// RoutingBgpMaximumPathsIbgp represents the routing.bgp.maximum_paths_ibgp node and implements sophos.Node
type RoutingBgpMaximumPathsIbgp struct{ Value map[string]interface{} }

// Get retrieves node routing.bgp.maximum_paths_ibgp's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpMaximumPathsIbgp) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingBgpMaximumPathsIbgp(client)
	return err
}

// Update PUT's' routing.bgp.maximum_paths_ibgp's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpMaximumPathsIbgp) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingBgpMaximumPathsIbgp(client, r.Value)
}

// RoutingBgpMultipleAs represents the routing.bgp.multiple_as node and implements sophos.Node
type RoutingBgpMultipleAs struct{ Value bool }

// Get retrieves node routing.bgp.multiple_as's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpMultipleAs) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingBgpMultipleAs(client)
	return err
}

// Update PUT's' routing.bgp.multiple_as's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpMultipleAs) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingBgpMultipleAs(client, r.Value)
}

// RoutingBgpStatus represents the routing.bgp.status node and implements sophos.Node
type RoutingBgpStatus struct{ Value bool }

// Get retrieves node routing.bgp.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingBgpStatus(client)
	return err
}

// Update PUT's' routing.bgp.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingBgpStatus(client, r.Value)
}

// RoutingBgpStrictMatch represents the routing.bgp.strict_match node and implements sophos.Node
type RoutingBgpStrictMatch struct{ Value bool }

// Get retrieves node routing.bgp.strict_match's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpStrictMatch) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingBgpStrictMatch(client)
	return err
}

// Update PUT's' routing.bgp.strict_match's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpStrictMatch) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingBgpStrictMatch(client, r.Value)
}

// RoutingBgpSystems represents the routing.bgp.systems node and implements sophos.Node
type RoutingBgpSystems struct{ Value []interface{} }

// Get retrieves node routing.bgp.systems's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpSystems) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingBgpSystems(client)
	return err
}

// Update PUT's' routing.bgp.systems's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingBgpSystems) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingBgpSystems(client, r.Value)
}

// RoutingOspfAbrType represents the routing.ospf.abr_type node and implements sophos.Node
type RoutingOspfAbrType struct{ Value string }

// Get retrieves node routing.ospf.abr_type's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfAbrType) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfAbrType(client)
	return err
}

// Update PUT's' routing.ospf.abr_type's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfAbrType) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfAbrType(client, r.Value)
}

// RoutingOspfAreas represents the routing.ospf.areas node and implements sophos.Node
type RoutingOspfAreas struct{ Value []interface{} }

// Get retrieves node routing.ospf.areas's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfAreas) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfAreas(client)
	return err
}

// Update PUT's' routing.ospf.areas's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfAreas) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfAreas(client, r.Value)
}

// RoutingOspfDefaultInformation represents the routing.ospf.default_information node and implements sophos.Node
type RoutingOspfDefaultInformation struct{ Value string }

// Get retrieves node routing.ospf.default_information's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfDefaultInformation) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfDefaultInformation(client)
	return err
}

// Update PUT's' routing.ospf.default_information's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfDefaultInformation) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfDefaultInformation(client, r.Value)
}

// RoutingOspfDefaultRouteMetric represents the routing.ospf.default_route_metric node and implements sophos.Node
type RoutingOspfDefaultRouteMetric struct{ Value int64 }

// Get retrieves node routing.ospf.default_route_metric's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfDefaultRouteMetric) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfDefaultRouteMetric(client)
	return err
}

// Update PUT's' routing.ospf.default_route_metric's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfDefaultRouteMetric) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfDefaultRouteMetric(client, r.Value)
}

// RoutingOspfRedistributeBgpMetric represents the routing.ospf.redistribute.bgp.metric node and implements sophos.Node
type RoutingOspfRedistributeBgpMetric struct{ Value int64 }

// Get retrieves node routing.ospf.redistribute.bgp.metric's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeBgpMetric) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfRedistributeBgpMetric(client)
	return err
}

// Update PUT's' routing.ospf.redistribute.bgp.metric's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeBgpMetric) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfRedistributeBgpMetric(client, r.Value)
}

// RoutingOspfRedistributeBgpStatus represents the routing.ospf.redistribute.bgp.status node and implements sophos.Node
type RoutingOspfRedistributeBgpStatus struct{ Value bool }

// Get retrieves node routing.ospf.redistribute.bgp.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeBgpStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfRedistributeBgpStatus(client)
	return err
}

// Update PUT's' routing.ospf.redistribute.bgp.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeBgpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfRedistributeBgpStatus(client, r.Value)
}

// RoutingOspfRedistributeConnectedMetric represents the routing.ospf.redistribute.connected.metric node and implements sophos.Node
type RoutingOspfRedistributeConnectedMetric struct{ Value int64 }

// Get retrieves node routing.ospf.redistribute.connected.metric's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeConnectedMetric) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfRedistributeConnectedMetric(client)
	return err
}

// Update PUT's' routing.ospf.redistribute.connected.metric's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeConnectedMetric) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfRedistributeConnectedMetric(client, r.Value)
}

// RoutingOspfRedistributeConnectedStatus represents the routing.ospf.redistribute.connected.status node and implements sophos.Node
type RoutingOspfRedistributeConnectedStatus struct{ Value bool }

// Get retrieves node routing.ospf.redistribute.connected.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeConnectedStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfRedistributeConnectedStatus(client)
	return err
}

// Update PUT's' routing.ospf.redistribute.connected.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeConnectedStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfRedistributeConnectedStatus(client, r.Value)
}

// RoutingOspfRedistributeIpsecStatus represents the routing.ospf.redistribute.ipsec.status node and implements sophos.Node
type RoutingOspfRedistributeIpsecStatus struct{ Value bool }

// Get retrieves node routing.ospf.redistribute.ipsec.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeIpsecStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfRedistributeIpsecStatus(client)
	return err
}

// Update PUT's' routing.ospf.redistribute.ipsec.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeIpsecStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfRedistributeIpsecStatus(client, r.Value)
}

// RoutingOspfRedistributeSslVpnStatus represents the routing.ospf.redistribute.ssl_vpn.status node and implements sophos.Node
type RoutingOspfRedistributeSslVpnStatus struct{ Value bool }

// Get retrieves node routing.ospf.redistribute.ssl_vpn.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeSslVpnStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfRedistributeSslVpnStatus(client)
	return err
}

// Update PUT's' routing.ospf.redistribute.ssl_vpn.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeSslVpnStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfRedistributeSslVpnStatus(client, r.Value)
}

// RoutingOspfRedistributeStaticMetric represents the routing.ospf.redistribute.static.metric node and implements sophos.Node
type RoutingOspfRedistributeStaticMetric struct{ Value int64 }

// Get retrieves node routing.ospf.redistribute.static.metric's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeStaticMetric) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfRedistributeStaticMetric(client)
	return err
}

// Update PUT's' routing.ospf.redistribute.static.metric's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeStaticMetric) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfRedistributeStaticMetric(client, r.Value)
}

// RoutingOspfRedistributeStaticStatus represents the routing.ospf.redistribute.static.status node and implements sophos.Node
type RoutingOspfRedistributeStaticStatus struct{ Value bool }

// Get retrieves node routing.ospf.redistribute.static.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeStaticStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfRedistributeStaticStatus(client)
	return err
}

// Update PUT's' routing.ospf.redistribute.static.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRedistributeStaticStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfRedistributeStaticStatus(client, r.Value)
}

// RoutingOspfReferenceBandwidth represents the routing.ospf.reference_bandwidth node and implements sophos.Node
type RoutingOspfReferenceBandwidth struct{ Value map[string]interface{} }

// Get retrieves node routing.ospf.reference_bandwidth's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfReferenceBandwidth) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfReferenceBandwidth(client)
	return err
}

// Update PUT's' routing.ospf.reference_bandwidth's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfReferenceBandwidth) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfReferenceBandwidth(client, r.Value)
}

// RoutingOspfRouterId represents the routing.ospf.router_id node and implements sophos.Node
type RoutingOspfRouterId struct{ Value string }

// Get retrieves node routing.ospf.router_id's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRouterId) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfRouterId(client)
	return err
}

// Update PUT's' routing.ospf.router_id's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfRouterId) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfRouterId(client, r.Value)
}

// RoutingOspfStatus represents the routing.ospf.status node and implements sophos.Node
type RoutingOspfStatus struct{ Value bool }

// Get retrieves node routing.ospf.status's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfStatus) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingOspfStatus(client)
	return err
}

// Update PUT's' routing.ospf.status's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingOspfStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingOspfStatus(client, r.Value)
}

// RoutingQuaggaAllowedNetworks represents the routing.quagga.allowed_networks node and implements sophos.Node
type RoutingQuaggaAllowedNetworks struct{ Value []interface{} }

// Get retrieves node routing.quagga.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingQuaggaAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingQuaggaAllowedNetworks(client)
	return err
}

// Update PUT's' routing.quagga.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingQuaggaAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingQuaggaAllowedNetworks(client, r.Value)
}

// RoutingQuaggaEnablePassword represents the routing.quagga.enable_password node and implements sophos.Node
type RoutingQuaggaEnablePassword struct{ Value string }

// Get retrieves node routing.quagga.enable_password's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingQuaggaEnablePassword) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingQuaggaEnablePassword(client)
	return err
}

// Update PUT's' routing.quagga.enable_password's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingQuaggaEnablePassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingQuaggaEnablePassword(client, r.Value)
}

// RoutingQuaggaLinkDetect represents the routing.quagga.link_detect node and implements sophos.Node
type RoutingQuaggaLinkDetect struct{ Value bool }

// Get retrieves node routing.quagga.link_detect's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingQuaggaLinkDetect) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingQuaggaLinkDetect(client)
	return err
}

// Update PUT's' routing.quagga.link_detect's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingQuaggaLinkDetect) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingQuaggaLinkDetect(client, r.Value)
}

// RoutingQuaggaPassword represents the routing.quagga.password node and implements sophos.Node
type RoutingQuaggaPassword struct{ Value string }

// Get retrieves node routing.quagga.password's value from the gateway utilizing a sophos.ClientInterface
func (r *RoutingQuaggaPassword) Get(client sophos.ClientInterface) (err error) {
	r.Value, err = GetRoutingQuaggaPassword(client)
	return err
}

// Update PUT's' routing.quagga.password's value to the gateway utilizing a sophos.ClientInterface
func (r *RoutingQuaggaPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateRoutingQuaggaPassword(client, r.Value)
}

// SandboxReportdDebug represents the sandbox_reportd.debug node and implements sophos.Node
type SandboxReportdDebug struct{ Value string }

// Get retrieves node sandbox_reportd.debug's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxReportdDebug) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxReportdDebug(client)
	return err
}

// Update PUT's' sandbox_reportd.debug's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxReportdDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxReportdDebug(client, s.Value)
}

// SandboxReportdPollInterval represents the sandbox_reportd.poll_interval node and implements sophos.Node
type SandboxReportdPollInterval struct{ Value int64 }

// Get retrieves node sandbox_reportd.poll_interval's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxReportdPollInterval) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxReportdPollInterval(client)
	return err
}

// Update PUT's' sandbox_reportd.poll_interval's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxReportdPollInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxReportdPollInterval(client, s.Value)
}

// SandboxReportdRequestTimeout represents the sandbox_reportd.request_timeout node and implements sophos.Node
type SandboxReportdRequestTimeout struct{ Value int64 }

// Get retrieves node sandbox_reportd.request_timeout's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxReportdRequestTimeout) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxReportdRequestTimeout(client)
	return err
}

// Update PUT's' sandbox_reportd.request_timeout's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxReportdRequestTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxReportdRequestTimeout(client, s.Value)
}

// SandboxReportdRetryTimes represents the sandbox_reportd.retry_times node and implements sophos.Node
type SandboxReportdRetryTimes struct{ Value int64 }

// Get retrieves node sandbox_reportd.retry_times's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxReportdRetryTimes) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxReportdRetryTimes(client)
	return err
}

// Update PUT's' sandbox_reportd.retry_times's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxReportdRetryTimes) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxReportdRetryTimes(client, s.Value)
}

// SandboxdBypassSandboxLimit represents the sandboxd.bypass_sandbox_limit node and implements sophos.Node
type SandboxdBypassSandboxLimit struct{ Value int64 }

// Get retrieves node sandboxd.bypass_sandbox_limit's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdBypassSandboxLimit) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdBypassSandboxLimit(client)
	return err
}

// Update PUT's' sandboxd.bypass_sandbox_limit's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdBypassSandboxLimit) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdBypassSandboxLimit(client, s.Value)
}

// SandboxdCacheExpire represents the sandboxd.cache_expire node and implements sophos.Node
type SandboxdCacheExpire struct{ Value int64 }

// Get retrieves node sandboxd.cache_expire's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCacheExpire) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdCacheExpire(client)
	return err
}

// Update PUT's' sandboxd.cache_expire's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCacheExpire) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdCacheExpire(client, s.Value)
}

// SandboxdCertstore represents the sandboxd.certstore node and implements sophos.Node
type SandboxdCertstore struct{ Value string }

// Get retrieves node sandboxd.certstore's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCertstore) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdCertstore(client)
	return err
}

// Update PUT's' sandboxd.certstore's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCertstore) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdCertstore(client, s.Value)
}

// SandboxdClientTimeout represents the sandboxd.client_timeout node and implements sophos.Node
type SandboxdClientTimeout struct{ Value int64 }

// Get retrieves node sandboxd.client_timeout's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdClientTimeout) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdClientTimeout(client)
	return err
}

// Update PUT's' sandboxd.client_timeout's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdClientTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdClientTimeout(client, s.Value)
}

// SandboxdCloudPollInterval represents the sandboxd.cloud_poll_interval node and implements sophos.Node
type SandboxdCloudPollInterval struct{ Value int64 }

// Get retrieves node sandboxd.cloud_poll_interval's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCloudPollInterval) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdCloudPollInterval(client)
	return err
}

// Update PUT's' sandboxd.cloud_poll_interval's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCloudPollInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdCloudPollInterval(client, s.Value)
}

// SandboxdCloudPollRequestMaximum represents the sandboxd.cloud_poll_request_maximum node and implements sophos.Node
type SandboxdCloudPollRequestMaximum struct{ Value int64 }

// Get retrieves node sandboxd.cloud_poll_request_maximum's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCloudPollRequestMaximum) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdCloudPollRequestMaximum(client)
	return err
}

// Update PUT's' sandboxd.cloud_poll_request_maximum's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCloudPollRequestMaximum) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdCloudPollRequestMaximum(client, s.Value)
}

// SandboxdCloudPollTimeout represents the sandboxd.cloud_poll_timeout node and implements sophos.Node
type SandboxdCloudPollTimeout struct{ Value int64 }

// Get retrieves node sandboxd.cloud_poll_timeout's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCloudPollTimeout) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdCloudPollTimeout(client)
	return err
}

// Update PUT's' sandboxd.cloud_poll_timeout's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdCloudPollTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdCloudPollTimeout(client, s.Value)
}

// SandboxdConnectTimeout represents the sandboxd.connect_timeout node and implements sophos.Node
type SandboxdConnectTimeout struct{ Value int64 }

// Get retrieves node sandboxd.connect_timeout's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdConnectTimeout) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdConnectTimeout(client)
	return err
}

// Update PUT's' sandboxd.connect_timeout's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdConnectTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdConnectTimeout(client, s.Value)
}

// SandboxdDebug represents the sandboxd.debug node and implements sophos.Node
type SandboxdDebug struct{ Value map[string]interface{} }

// Get retrieves node sandboxd.debug's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdDebug) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdDebug(client)
	return err
}

// Update PUT's' sandboxd.debug's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdDebug(client, s.Value)
}

// SandboxdDhparams2048 represents the sandboxd.dhparams_2048 node and implements sophos.Node
type SandboxdDhparams2048 struct{ Value string }

// Get retrieves node sandboxd.dhparams_2048's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdDhparams2048) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdDhparams2048(client)
	return err
}

// Update PUT's' sandboxd.dhparams_2048's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdDhparams2048) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdDhparams2048(client, s.Value)
}

// SandboxdEdgeServerCertValidation represents the sandboxd.edge_server_cert_validation node and implements sophos.Node
type SandboxdEdgeServerCertValidation struct{ Value bool }

// Get retrieves node sandboxd.edge_server_cert_validation's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdEdgeServerCertValidation) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdEdgeServerCertValidation(client)
	return err
}

// Update PUT's' sandboxd.edge_server_cert_validation's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdEdgeServerCertValidation) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdEdgeServerCertValidation(client, s.Value)
}

// SandboxdEdgeServerHost represents the sandboxd.edge_server_host node and implements sophos.Node
type SandboxdEdgeServerHost struct{ Value string }

// Get retrieves node sandboxd.edge_server_host's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdEdgeServerHost) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdEdgeServerHost(client)
	return err
}

// Update PUT's' sandboxd.edge_server_host's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdEdgeServerHost) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdEdgeServerHost(client, s.Value)
}

// SandboxdEdgeServerPort represents the sandboxd.edge_server_port node and implements sophos.Node
type SandboxdEdgeServerPort struct{ Value int64 }

// Get retrieves node sandboxd.edge_server_port's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdEdgeServerPort) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdEdgeServerPort(client)
	return err
}

// Update PUT's' sandboxd.edge_server_port's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdEdgeServerPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdEdgeServerPort(client, s.Value)
}

// SandboxdFiletypeSkiplist represents the sandboxd.filetype_skiplist node and implements sophos.Node
type SandboxdFiletypeSkiplist struct{ Value []interface{} }

// Get retrieves node sandboxd.filetype_skiplist's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdFiletypeSkiplist) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdFiletypeSkiplist(client)
	return err
}

// Update PUT's' sandboxd.filetype_skiplist's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdFiletypeSkiplist) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdFiletypeSkiplist(client, s.Value)
}

// SandboxdNumOfEventThreads represents the sandboxd.num_of_event_threads node and implements sophos.Node
type SandboxdNumOfEventThreads struct{ Value int64 }

// Get retrieves node sandboxd.num_of_event_threads's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdNumOfEventThreads) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdNumOfEventThreads(client)
	return err
}

// Update PUT's' sandboxd.num_of_event_threads's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdNumOfEventThreads) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdNumOfEventThreads(client, s.Value)
}

// SandboxdNumOfWorkerThreads represents the sandboxd.num_of_worker_threads node and implements sophos.Node
type SandboxdNumOfWorkerThreads struct{ Value int64 }

// Get retrieves node sandboxd.num_of_worker_threads's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdNumOfWorkerThreads) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdNumOfWorkerThreads(client)
	return err
}

// Update PUT's' sandboxd.num_of_worker_threads's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdNumOfWorkerThreads) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdNumOfWorkerThreads(client, s.Value)
}

// SandboxdResponseTimeout represents the sandboxd.response_timeout node and implements sophos.Node
type SandboxdResponseTimeout struct{ Value int64 }

// Get retrieves node sandboxd.response_timeout's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdResponseTimeout) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdResponseTimeout(client)
	return err
}

// Update PUT's' sandboxd.response_timeout's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdResponseTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdResponseTimeout(client, s.Value)
}

// SandboxdRetryIntervals represents the sandboxd.retry_intervals node and implements sophos.Node
type SandboxdRetryIntervals struct{ Value string }

// Get retrieves node sandboxd.retry_intervals's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdRetryIntervals) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdRetryIntervals(client)
	return err
}

// Update PUT's' sandboxd.retry_intervals's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdRetryIntervals) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdRetryIntervals(client, s.Value)
}

// SandboxdSandboxEnabled represents the sandboxd.sandbox_enabled node and implements sophos.Node
type SandboxdSandboxEnabled struct{ Value bool }

// Get retrieves node sandboxd.sandbox_enabled's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSandboxEnabled) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdSandboxEnabled(client)
	return err
}

// Update PUT's' sandboxd.sandbox_enabled's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSandboxEnabled) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdSandboxEnabled(client, s.Value)
}

// SandboxdSandboxdScoreThreshold represents the sandboxd.sandboxd_score_threshold node and implements sophos.Node
type SandboxdSandboxdScoreThreshold struct{ Value int64 }

// Get retrieves node sandboxd.sandboxd_score_threshold's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSandboxdScoreThreshold) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdSandboxdScoreThreshold(client)
	return err
}

// Update PUT's' sandboxd.sandboxd_score_threshold's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSandboxdScoreThreshold) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdSandboxdScoreThreshold(client, s.Value)
}

// SandboxdSbxVersion represents the sandboxd.sbx_version node and implements sophos.Node
type SandboxdSbxVersion struct{ Value int64 }

// Get retrieves node sandboxd.sbx_version's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSbxVersion) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdSbxVersion(client)
	return err
}

// Update PUT's' sandboxd.sbx_version's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSbxVersion) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdSbxVersion(client, s.Value)
}

// SandboxdSqliteBusyTimeout represents the sandboxd.sqlite_busy_timeout node and implements sophos.Node
type SandboxdSqliteBusyTimeout struct{ Value int64 }

// Get retrieves node sandboxd.sqlite_busy_timeout's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSqliteBusyTimeout) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdSqliteBusyTimeout(client)
	return err
}

// Update PUT's' sandboxd.sqlite_busy_timeout's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSqliteBusyTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdSqliteBusyTimeout(client, s.Value)
}

// SandboxdSslCertFile represents the sandboxd.ssl_cert_file node and implements sophos.Node
type SandboxdSslCertFile struct{ Value string }

// Get retrieves node sandboxd.ssl_cert_file's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSslCertFile) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdSslCertFile(client)
	return err
}

// Update PUT's' sandboxd.ssl_cert_file's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSslCertFile) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdSslCertFile(client, s.Value)
}

// SandboxdSslKeyFile represents the sandboxd.ssl_key_file node and implements sophos.Node
type SandboxdSslKeyFile struct{ Value string }

// Get retrieves node sandboxd.ssl_key_file's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSslKeyFile) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdSslKeyFile(client)
	return err
}

// Update PUT's' sandboxd.ssl_key_file's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSslKeyFile) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdSslKeyFile(client, s.Value)
}

// SandboxdSslciphers represents the sandboxd.sslciphers node and implements sophos.Node
type SandboxdSslciphers struct{ Value string }

// Get retrieves node sandboxd.sslciphers's value from the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSslciphers) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSandboxdSslciphers(client)
	return err
}

// Update PUT's' sandboxd.sslciphers's value to the gateway utilizing a sophos.ClientInterface
func (s *SandboxdSslciphers) Update(client sophos.ClientInterface) (err error) {
	return UpdateSandboxdSslciphers(client, s.Value)
}

// SettingsAdminEmail represents the settings.admin_email node and implements sophos.Node
type SettingsAdminEmail struct{ Value string }

// Get retrieves node settings.admin_email's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsAdminEmail) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsAdminEmail(client)
	return err
}

// Update PUT's' settings.admin_email's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsAdminEmail) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsAdminEmail(client, s.Value)
}

// SettingsBasicSetup represents the settings.basic_setup node and implements sophos.Node
type SettingsBasicSetup struct{ Value bool }

// Get retrieves node settings.basic_setup's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsBasicSetup) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsBasicSetup(client)
	return err
}

// Update PUT's' settings.basic_setup's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsBasicSetup) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsBasicSetup(client, s.Value)
}

// SettingsCcMode represents the settings.cc_mode node and implements sophos.Node
type SettingsCcMode struct{ Value bool }

// Get retrieves node settings.cc_mode's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsCcMode) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsCcMode(client)
	return err
}

// Update PUT's' settings.cc_mode's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsCcMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsCcMode(client, s.Value)
}

// SettingsCity represents the settings.city node and implements sophos.Node
type SettingsCity struct{ Value string }

// Get retrieves node settings.city's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsCity) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsCity(client)
	return err
}

// Update PUT's' settings.city's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsCity) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsCity(client, s.Value)
}

// SettingsCountry represents the settings.country node and implements sophos.Node
type SettingsCountry struct{ Value string }

// Get retrieves node settings.country's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsCountry) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsCountry(client)
	return err
}

// Update PUT's' settings.country's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsCountry) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsCountry(client, s.Value)
}

// SettingsExtraSwap represents the settings.extra_swap node and implements sophos.Node
type SettingsExtraSwap struct{ Value map[string]interface{} }

// Get retrieves node settings.extra_swap's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsExtraSwap) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsExtraSwap(client)
	return err
}

// Update PUT's' settings.extra_swap's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsExtraSwap) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsExtraSwap(client, s.Value)
}

// SettingsHostname represents the settings.hostname node and implements sophos.Node
type SettingsHostname struct{ Value string }

// Get retrieves node settings.hostname's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsHostname) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsHostname(client)
	return err
}

// Update PUT's' settings.hostname's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsHostname(client, s.Value)
}

// SettingsIcsaMode represents the settings.icsa_mode node and implements sophos.Node
type SettingsIcsaMode struct{ Value bool }

// Get retrieves node settings.icsa_mode's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsIcsaMode) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsIcsaMode(client)
	return err
}

// Update PUT's' settings.icsa_mode's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsIcsaMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsIcsaMode(client, s.Value)
}

// SettingsOrganization represents the settings.organization node and implements sophos.Node
type SettingsOrganization struct{ Value string }

// Get retrieves node settings.organization's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsOrganization) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsOrganization(client)
	return err
}

// Update PUT's' settings.organization's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsOrganization) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsOrganization(client, s.Value)
}

// SettingsPasswordComplexityMinDigits represents the settings.password_complexity.min_digits node and implements sophos.Node
type SettingsPasswordComplexityMinDigits struct{ Value int64 }

// Get retrieves node settings.password_complexity.min_digits's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinDigits) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsPasswordComplexityMinDigits(client)
	return err
}

// Update PUT's' settings.password_complexity.min_digits's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinDigits) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsPasswordComplexityMinDigits(client, s.Value)
}

// SettingsPasswordComplexityMinLength represents the settings.password_complexity.min_length node and implements sophos.Node
type SettingsPasswordComplexityMinLength struct{ Value int64 }

// Get retrieves node settings.password_complexity.min_length's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinLength) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsPasswordComplexityMinLength(client)
	return err
}

// Update PUT's' settings.password_complexity.min_length's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinLength) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsPasswordComplexityMinLength(client, s.Value)
}

// SettingsPasswordComplexityMinLowerChars represents the settings.password_complexity.min_lower_chars node and implements sophos.Node
type SettingsPasswordComplexityMinLowerChars struct{ Value int64 }

// Get retrieves node settings.password_complexity.min_lower_chars's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinLowerChars) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsPasswordComplexityMinLowerChars(client)
	return err
}

// Update PUT's' settings.password_complexity.min_lower_chars's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinLowerChars) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsPasswordComplexityMinLowerChars(client, s.Value)
}

// SettingsPasswordComplexityMinSpecialChars represents the settings.password_complexity.min_special_chars node and implements sophos.Node
type SettingsPasswordComplexityMinSpecialChars struct{ Value int64 }

// Get retrieves node settings.password_complexity.min_special_chars's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinSpecialChars) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsPasswordComplexityMinSpecialChars(client)
	return err
}

// Update PUT's' settings.password_complexity.min_special_chars's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinSpecialChars) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsPasswordComplexityMinSpecialChars(client, s.Value)
}

// SettingsPasswordComplexityMinUpperChars represents the settings.password_complexity.min_upper_chars node and implements sophos.Node
type SettingsPasswordComplexityMinUpperChars struct{ Value int64 }

// Get retrieves node settings.password_complexity.min_upper_chars's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinUpperChars) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsPasswordComplexityMinUpperChars(client)
	return err
}

// Update PUT's' settings.password_complexity.min_upper_chars's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityMinUpperChars) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsPasswordComplexityMinUpperChars(client, s.Value)
}

// SettingsPasswordComplexityStatus represents the settings.password_complexity.status node and implements sophos.Node
type SettingsPasswordComplexityStatus struct{ Value bool }

// Get retrieves node settings.password_complexity.status's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsPasswordComplexityStatus(client)
	return err
}

// Update PUT's' settings.password_complexity.status's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsPasswordComplexityStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsPasswordComplexityStatus(client, s.Value)
}

// SettingsPopularity represents the settings.popularity node and implements sophos.Node
type SettingsPopularity struct{ Value string }

// Get retrieves node settings.popularity's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsPopularity) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsPopularity(client)
	return err
}

// Update PUT's' settings.popularity's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsPopularity) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsPopularity(client, s.Value)
}

// SettingsRasUpdate represents the settings.ras_update node and implements sophos.Node
type SettingsRasUpdate struct{ Value string }

// Get retrieves node settings.ras_update's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsRasUpdate) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsRasUpdate(client)
	return err
}

// Update PUT's' settings.ras_update's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsRasUpdate) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsRasUpdate(client, s.Value)
}

// SettingsSystemId represents the settings.system_id node and implements sophos.Node
type SettingsSystemId struct{ Value string }

// Get retrieves node settings.system_id's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsSystemId) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsSystemId(client)
	return err
}

// Update PUT's' settings.system_id's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsSystemId) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsSystemId(client, s.Value)
}

// SettingsTimezone represents the settings.timezone node and implements sophos.Node
type SettingsTimezone struct{ Value string }

// Get retrieves node settings.timezone's value from the gateway utilizing a sophos.ClientInterface
func (s *SettingsTimezone) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSettingsTimezone(client)
	return err
}

// Update PUT's' settings.timezone's value to the gateway utilizing a sophos.ClientInterface
func (s *SettingsTimezone) Update(client sophos.ClientInterface) (err error) {
	return UpdateSettingsTimezone(client, s.Value)
}

// SipAllowedNetworks represents the sip.allowed_networks node and implements sophos.Node
type SipAllowedNetworks struct{ Value []string }

// Get retrieves node sip.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (s *SipAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSipAllowedNetworks(client)
	return err
}

// Update PUT's' sip.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (s *SipAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateSipAllowedNetworks(client, s.Value)
}

// SipExpectMode represents the sip.expect_mode node and implements sophos.Node
type SipExpectMode struct{ Value string }

// Get retrieves node sip.expect_mode's value from the gateway utilizing a sophos.ClientInterface
func (s *SipExpectMode) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSipExpectMode(client)
	return err
}

// Update PUT's' sip.expect_mode's value to the gateway utilizing a sophos.ClientInterface
func (s *SipExpectMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateSipExpectMode(client, s.Value)
}

// SipLogRelated represents the sip.log_related node and implements sophos.Node
type SipLogRelated struct{ Value bool }

// Get retrieves node sip.log_related's value from the gateway utilizing a sophos.ClientInterface
func (s *SipLogRelated) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSipLogRelated(client)
	return err
}

// Update PUT's' sip.log_related's value to the gateway utilizing a sophos.ClientInterface
func (s *SipLogRelated) Update(client sophos.ClientInterface) (err error) {
	return UpdateSipLogRelated(client, s.Value)
}

// SipServers represents the sip.servers node and implements sophos.Node
type SipServers struct{ Value []string }

// Get retrieves node sip.servers's value from the gateway utilizing a sophos.ClientInterface
func (s *SipServers) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSipServers(client)
	return err
}

// Update PUT's' sip.servers's value to the gateway utilizing a sophos.ClientInterface
func (s *SipServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateSipServers(client, s.Value)
}

// SipStatus represents the sip.status node and implements sophos.Node
type SipStatus struct{ Value bool }

// Get retrieves node sip.status's value from the gateway utilizing a sophos.ClientInterface
func (s *SipStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSipStatus(client)
	return err
}

// Update PUT's' sip.status's value to the gateway utilizing a sophos.ClientInterface
func (s *SipStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSipStatus(client, s.Value)
}

// SmsClientHostname represents the sms_client.hostname node and implements sophos.Node
type SmsClientHostname struct{ Value string }

// Get retrieves node sms_client.hostname's value from the gateway utilizing a sophos.ClientInterface
func (s *SmsClientHostname) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmsClientHostname(client)
	return err
}

// Update PUT's' sms_client.hostname's value to the gateway utilizing a sophos.ClientInterface
func (s *SmsClientHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmsClientHostname(client, s.Value)
}

// SmsClientName represents the sms_client.name node and implements sophos.Node
type SmsClientName struct{ Value string }

// Get retrieves node sms_client.name's value from the gateway utilizing a sophos.ClientInterface
func (s *SmsClientName) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmsClientName(client)
	return err
}

// Update PUT's' sms_client.name's value to the gateway utilizing a sophos.ClientInterface
func (s *SmsClientName) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmsClientName(client, s.Value)
}

// SmsClientPassword represents the sms_client.password node and implements sophos.Node
type SmsClientPassword struct{ Value string }

// Get retrieves node sms_client.password's value from the gateway utilizing a sophos.ClientInterface
func (s *SmsClientPassword) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmsClientPassword(client)
	return err
}

// Update PUT's' sms_client.password's value to the gateway utilizing a sophos.ClientInterface
func (s *SmsClientPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmsClientPassword(client, s.Value)
}

// SmsClientPort represents the sms_client.port node and implements sophos.Node
type SmsClientPort struct{ Value map[string]interface{} }

// Get retrieves node sms_client.port's value from the gateway utilizing a sophos.ClientInterface
func (s *SmsClientPort) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmsClientPort(client)
	return err
}

// Update PUT's' sms_client.port's value to the gateway utilizing a sophos.ClientInterface
func (s *SmsClientPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmsClientPort(client, s.Value)
}

// SmsClientStatus represents the sms_client.status node and implements sophos.Node
type SmsClientStatus struct{ Value bool }

// Get retrieves node sms_client.status's value from the gateway utilizing a sophos.ClientInterface
func (s *SmsClientStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmsClientStatus(client)
	return err
}

// Update PUT's' sms_client.status's value to the gateway utilizing a sophos.ClientInterface
func (s *SmsClientStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmsClientStatus(client, s.Value)
}

// SmsClientUsername represents the sms_client.username node and implements sophos.Node
type SmsClientUsername struct{ Value string }

// Get retrieves node sms_client.username's value from the gateway utilizing a sophos.ClientInterface
func (s *SmsClientUsername) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmsClientUsername(client)
	return err
}

// Update PUT's' sms_client.username's value to the gateway utilizing a sophos.ClientInterface
func (s *SmsClientUsername) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmsClientUsername(client, s.Value)
}

// SmtpAuthAaa represents the smtp.auth_aaa node and implements sophos.Node
type SmtpAuthAaa struct{ Value []interface{} }

// Get retrieves node smtp.auth_aaa's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpAuthAaa) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpAuthAaa(client)
	return err
}

// Update PUT's' smtp.auth_aaa's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpAuthAaa) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpAuthAaa(client, s.Value)
}

// SmtpAuthStatus represents the smtp.auth_status node and implements sophos.Node
type SmtpAuthStatus struct{ Value bool }

// Get retrieves node smtp.auth_status's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpAuthStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpAuthStatus(client)
	return err
}

// Update PUT's' smtp.auth_status's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpAuthStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpAuthStatus(client, s.Value)
}

// SmtpAvFooter represents the smtp.av_footer node and implements sophos.Node
type SmtpAvFooter struct{ Value string }

// Get retrieves node smtp.av_footer's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpAvFooter) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpAvFooter(client)
	return err
}

// Update PUT's' smtp.av_footer's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpAvFooter) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpAvFooter(client, s.Value)
}

// SmtpAvFooterStatus represents the smtp.av_footer_status node and implements sophos.Node
type SmtpAvFooterStatus struct{ Value bool }

// Get retrieves node smtp.av_footer_status's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpAvFooterStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpAvFooterStatus(client)
	return err
}

// Update PUT's' smtp.av_footer_status's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpAvFooterStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpAvFooterStatus(client, s.Value)
}

// SmtpBatvSecret represents the smtp.batv_secret node and implements sophos.Node
type SmtpBatvSecret struct{ Value string }

// Get retrieves node smtp.batv_secret's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpBatvSecret) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpBatvSecret(client)
	return err
}

// Update PUT's' smtp.batv_secret's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpBatvSecret) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpBatvSecret(client, s.Value)
}

// SmtpBlockerService represents the smtp.blocker_service node and implements sophos.Node
type SmtpBlockerService struct{ Value string }

// Get retrieves node smtp.blocker_service's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpBlockerService) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpBlockerService(client)
	return err
}

// Update PUT's' smtp.blocker_service's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpBlockerService) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpBlockerService(client, s.Value)
}

// SmtpCffAsMarker represents the smtp.cff_as_marker node and implements sophos.Node
type SmtpCffAsMarker struct{ Value string }

// Get retrieves node smtp.cff_as_marker's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpCffAsMarker) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpCffAsMarker(client)
	return err
}

// Update PUT's' smtp.cff_as_marker's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpCffAsMarker) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpCffAsMarker(client, s.Value)
}

// SmtpDkimDomains represents the smtp.dkim_domains node and implements sophos.Node
type SmtpDkimDomains struct{ Value []interface{} }

// Get retrieves node smtp.dkim_domains's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpDkimDomains) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpDkimDomains(client)
	return err
}

// Update PUT's' smtp.dkim_domains's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpDkimDomains) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpDkimDomains(client, s.Value)
}

// SmtpDkimPrivateKey represents the smtp.dkim_private_key node and implements sophos.Node
type SmtpDkimPrivateKey struct{ Value string }

// Get retrieves node smtp.dkim_private_key's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpDkimPrivateKey) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpDkimPrivateKey(client)
	return err
}

// Update PUT's' smtp.dkim_private_key's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpDkimPrivateKey) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpDkimPrivateKey(client, s.Value)
}

// SmtpDkimSelector represents the smtp.dkim_selector node and implements sophos.Node
type SmtpDkimSelector struct{ Value string }

// Get retrieves node smtp.dkim_selector's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpDkimSelector) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpDkimSelector(client)
	return err
}

// Update PUT's' smtp.dkim_selector's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpDkimSelector) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpDkimSelector(client, s.Value)
}

// SmtpEnableOldExpressionFilter represents the smtp.enable_old_expression_filter node and implements sophos.Node
type SmtpEnableOldExpressionFilter struct{ Value bool }

// Get retrieves node smtp.enable_old_expression_filter's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpEnableOldExpressionFilter) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpEnableOldExpressionFilter(client)
	return err
}

// Update PUT's' smtp.enable_old_expression_filter's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpEnableOldExpressionFilter) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpEnableOldExpressionFilter(client, s.Value)
}

// SmtpEncryptionUtility represents the smtp.encryption_utility node and implements sophos.Node
type SmtpEncryptionUtility struct{ Value string }

// Get retrieves node smtp.encryption_utility's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpEncryptionUtility) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpEncryptionUtility(client)
	return err
}

// Update PUT's' smtp.encryption_utility's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpEncryptionUtility) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpEncryptionUtility(client, s.Value)
}

// SmtpExceptions represents the smtp.exceptions node and implements sophos.Node
type SmtpExceptions struct{ Value []interface{} }

// Get retrieves node smtp.exceptions's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpExceptions) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpExceptions(client)
	return err
}

// Update PUT's' smtp.exceptions's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpExceptions) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpExceptions(client, s.Value)
}

// SmtpFootersMode represents the smtp.footers_mode node and implements sophos.Node
type SmtpFootersMode struct{ Value string }

// Get retrieves node smtp.footers_mode's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpFootersMode) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpFootersMode(client)
	return err
}

// Update PUT's' smtp.footers_mode's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpFootersMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpFootersMode(client, s.Value)
}

// SmtpGlobalAsReject represents the smtp.global_as_reject node and implements sophos.Node
type SmtpGlobalAsReject struct{ Value string }

// Get retrieves node smtp.global_as_reject's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpGlobalAsReject) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpGlobalAsReject(client)
	return err
}

// Update PUT's' smtp.global_as_reject's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpGlobalAsReject) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpGlobalAsReject(client, s.Value)
}

// SmtpGlobalAvReject represents the smtp.global_av_reject node and implements sophos.Node
type SmtpGlobalAvReject struct{ Value bool }

// Get retrieves node smtp.global_av_reject's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpGlobalAvReject) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpGlobalAvReject(client)
	return err
}

// Update PUT's' smtp.global_av_reject's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpGlobalAvReject) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpGlobalAvReject(client, s.Value)
}

// SmtpGlobalProfile represents the smtp.global_profile node and implements sophos.Node
type SmtpGlobalProfile struct{ Value string }

// Get retrieves node smtp.global_profile's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpGlobalProfile) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpGlobalProfile(client)
	return err
}

// Update PUT's' smtp.global_profile's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpGlobalProfile) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpGlobalProfile(client, s.Value)
}

// SmtpHostBlacklist represents the smtp.host_blacklist node and implements sophos.Node
type SmtpHostBlacklist struct{ Value []interface{} }

// Get retrieves node smtp.host_blacklist's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpHostBlacklist) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpHostBlacklist(client)
	return err
}

// Update PUT's' smtp.host_blacklist's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpHostBlacklist) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpHostBlacklist(client, s.Value)
}

// SmtpHostname represents the smtp.hostname node and implements sophos.Node
type SmtpHostname struct{ Value string }

// Get retrieves node smtp.hostname's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpHostname) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpHostname(client)
	return err
}

// Update PUT's' smtp.hostname's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpHostname(client, s.Value)
}

// SmtpMaxMessageSize represents the smtp.max_message_size node and implements sophos.Node
type SmtpMaxMessageSize struct{ Value int64 }

// Get retrieves node smtp.max_message_size's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpMaxMessageSize) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpMaxMessageSize(client)
	return err
}

// Update PUT's' smtp.max_message_size's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpMaxMessageSize) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpMaxMessageSize(client, s.Value)
}

// SmtpMode represents the smtp.mode node and implements sophos.Node
type SmtpMode struct{ Value string }

// Get retrieves node smtp.mode's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpMode) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpMode(client)
	return err
}

// Update PUT's' smtp.mode's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpMode) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpMode(client, s.Value)
}

// SmtpParentProxyAuthPass represents the smtp.parent_proxy_auth_pass node and implements sophos.Node
type SmtpParentProxyAuthPass struct{ Value string }

// Get retrieves node smtp.parent_proxy_auth_pass's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyAuthPass) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpParentProxyAuthPass(client)
	return err
}

// Update PUT's' smtp.parent_proxy_auth_pass's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyAuthPass) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpParentProxyAuthPass(client, s.Value)
}

// SmtpParentProxyAuthStatus represents the smtp.parent_proxy_auth_status node and implements sophos.Node
type SmtpParentProxyAuthStatus struct{ Value bool }

// Get retrieves node smtp.parent_proxy_auth_status's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyAuthStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpParentProxyAuthStatus(client)
	return err
}

// Update PUT's' smtp.parent_proxy_auth_status's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyAuthStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpParentProxyAuthStatus(client, s.Value)
}

// SmtpParentProxyAuthUser represents the smtp.parent_proxy_auth_user node and implements sophos.Node
type SmtpParentProxyAuthUser struct{ Value string }

// Get retrieves node smtp.parent_proxy_auth_user's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyAuthUser) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpParentProxyAuthUser(client)
	return err
}

// Update PUT's' smtp.parent_proxy_auth_user's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyAuthUser) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpParentProxyAuthUser(client, s.Value)
}

// SmtpParentProxyHost represents the smtp.parent_proxy_host node and implements sophos.Node
type SmtpParentProxyHost struct{ Value string }

// Get retrieves node smtp.parent_proxy_host's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyHost) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpParentProxyHost(client)
	return err
}

// Update PUT's' smtp.parent_proxy_host's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyHost) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpParentProxyHost(client, s.Value)
}

// SmtpParentProxyPort represents the smtp.parent_proxy_port node and implements sophos.Node
type SmtpParentProxyPort struct{ Value int64 }

// Get retrieves node smtp.parent_proxy_port's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyPort) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpParentProxyPort(client)
	return err
}

// Update PUT's' smtp.parent_proxy_port's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpParentProxyPort(client, s.Value)
}

// SmtpParentProxyStatus represents the smtp.parent_proxy_status node and implements sophos.Node
type SmtpParentProxyStatus struct{ Value bool }

// Get retrieves node smtp.parent_proxy_status's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpParentProxyStatus(client)
	return err
}

// Update PUT's' smtp.parent_proxy_status's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpParentProxyStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpParentProxyStatus(client, s.Value)
}

// SmtpPostmaster represents the smtp.postmaster node and implements sophos.Node
type SmtpPostmaster struct{ Value string }

// Get retrieves node smtp.postmaster's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpPostmaster) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpPostmaster(client)
	return err
}

// Update PUT's' smtp.postmaster's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpPostmaster) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpPostmaster(client, s.Value)
}

// SmtpProfiles represents the smtp.profiles node and implements sophos.Node
type SmtpProfiles struct{ Value []interface{} }

// Get retrieves node smtp.profiles's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpProfiles) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpProfiles(client)
	return err
}

// Update PUT's' smtp.profiles's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpProfiles) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpProfiles(client, s.Value)
}

// SmtpRecipientsMax represents the smtp.recipients_max node and implements sophos.Node
type SmtpRecipientsMax struct{ Value int64 }

// Get retrieves node smtp.recipients_max's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpRecipientsMax) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpRecipientsMax(client)
	return err
}

// Update PUT's' smtp.recipients_max's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpRecipientsMax) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpRecipientsMax(client, s.Value)
}

// SmtpRelays represents the smtp.relays node and implements sophos.Node
type SmtpRelays struct{ Value []interface{} }

// Get retrieves node smtp.relays's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpRelays) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpRelays(client)
	return err
}

// Update PUT's' smtp.relays's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpRelays) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpRelays(client, s.Value)
}

// SmtpScanOutgoingEmails represents the smtp.scan_outgoing_emails node and implements sophos.Node
type SmtpScanOutgoingEmails struct{ Value bool }

// Get retrieves node smtp.scan_outgoing_emails's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpScanOutgoingEmails) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpScanOutgoingEmails(client)
	return err
}

// Update PUT's' smtp.scan_outgoing_emails's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpScanOutgoingEmails) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpScanOutgoingEmails(client, s.Value)
}

// SmtpScannerPoolMaxPool represents the smtp.scanner_pool.max_pool node and implements sophos.Node
type SmtpScannerPoolMaxPool struct{ Value int64 }

// Get retrieves node smtp.scanner_pool.max_pool's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpScannerPoolMaxPool) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpScannerPoolMaxPool(client)
	return err
}

// Update PUT's' smtp.scanner_pool.max_pool's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpScannerPoolMaxPool) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpScannerPoolMaxPool(client, s.Value)
}

// SmtpScannerPoolThresholds represents the smtp.scanner_pool.thresholds node and implements sophos.Node
type SmtpScannerPoolThresholds struct{ Value []int64 }

// Get retrieves node smtp.scanner_pool.thresholds's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpScannerPoolThresholds) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpScannerPoolThresholds(client)
	return err
}

// Update PUT's' smtp.scanner_pool.thresholds's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpScannerPoolThresholds) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpScannerPoolThresholds(client, s.Value)
}

// SmtpScannerTimeout represents the smtp.scanner_timeout node and implements sophos.Node
type SmtpScannerTimeout struct{ Value int64 }

// Get retrieves node smtp.scanner_timeout's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpScannerTimeout) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpScannerTimeout(client)
	return err
}

// Update PUT's' smtp.scanner_timeout's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpScannerTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpScannerTimeout(client, s.Value)
}

// SmtpSmarthostAuth represents the smtp.smarthost_auth node and implements sophos.Node
type SmtpSmarthostAuth struct{ Value bool }

// Get retrieves node smtp.smarthost_auth's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostAuth) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpSmarthostAuth(client)
	return err
}

// Update PUT's' smtp.smarthost_auth's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostAuth) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpSmarthostAuth(client, s.Value)
}

// SmtpSmarthostHostname represents the smtp.smarthost_hostname node and implements sophos.Node
type SmtpSmarthostHostname struct{ Value string }

// Get retrieves node smtp.smarthost_hostname's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostHostname) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpSmarthostHostname(client)
	return err
}

// Update PUT's' smtp.smarthost_hostname's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpSmarthostHostname(client, s.Value)
}

// SmtpSmarthostPass represents the smtp.smarthost_pass node and implements sophos.Node
type SmtpSmarthostPass struct{ Value string }

// Get retrieves node smtp.smarthost_pass's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostPass) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpSmarthostPass(client)
	return err
}

// Update PUT's' smtp.smarthost_pass's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostPass) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpSmarthostPass(client, s.Value)
}

// SmtpSmarthostPort represents the smtp.smarthost_port node and implements sophos.Node
type SmtpSmarthostPort struct{ Value int64 }

// Get retrieves node smtp.smarthost_port's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostPort) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpSmarthostPort(client)
	return err
}

// Update PUT's' smtp.smarthost_port's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpSmarthostPort(client, s.Value)
}

// SmtpSmarthostStatus represents the smtp.smarthost_status node and implements sophos.Node
type SmtpSmarthostStatus struct{ Value bool }

// Get retrieves node smtp.smarthost_status's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpSmarthostStatus(client)
	return err
}

// Update PUT's' smtp.smarthost_status's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpSmarthostStatus(client, s.Value)
}

// SmtpSmarthostUser represents the smtp.smarthost_user node and implements sophos.Node
type SmtpSmarthostUser struct{ Value string }

// Get retrieves node smtp.smarthost_user's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostUser) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpSmarthostUser(client)
	return err
}

// Update PUT's' smtp.smarthost_user's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmarthostUser) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpSmarthostUser(client, s.Value)
}

// SmtpSmtpAcceptMax represents the smtp.smtp_accept_max node and implements sophos.Node
type SmtpSmtpAcceptMax struct{ Value int64 }

// Get retrieves node smtp.smtp_accept_max's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmtpAcceptMax) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpSmtpAcceptMax(client)
	return err
}

// Update PUT's' smtp.smtp_accept_max's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmtpAcceptMax) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpSmtpAcceptMax(client, s.Value)
}

// SmtpSmtpAcceptPerConnectionMax represents the smtp.smtp_accept_per_connection_max node and implements sophos.Node
type SmtpSmtpAcceptPerConnectionMax struct{ Value int64 }

// Get retrieves node smtp.smtp_accept_per_connection_max's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmtpAcceptPerConnectionMax) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpSmtpAcceptPerConnectionMax(client)
	return err
}

// Update PUT's' smtp.smtp_accept_per_connection_max's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmtpAcceptPerConnectionMax) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpSmtpAcceptPerConnectionMax(client, s.Value)
}

// SmtpSmtpAcceptPerHostMax represents the smtp.smtp_accept_per_host_max node and implements sophos.Node
type SmtpSmtpAcceptPerHostMax struct{ Value int64 }

// Get retrieves node smtp.smtp_accept_per_host_max's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmtpAcceptPerHostMax) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpSmtpAcceptPerHostMax(client)
	return err
}

// Update PUT's' smtp.smtp_accept_per_host_max's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpSmtpAcceptPerHostMax) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpSmtpAcceptPerHostMax(client, s.Value)
}

// SmtpStatus represents the smtp.status node and implements sophos.Node
type SmtpStatus struct{ Value bool }

// Get retrieves node smtp.status's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpStatus(client)
	return err
}

// Update PUT's' smtp.status's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpStatus(client, s.Value)
}

// SmtpTlsAvoid represents the smtp.tls_avoid node and implements sophos.Node
type SmtpTlsAvoid struct{ Value []interface{} }

// Get retrieves node smtp.tls_avoid's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpTlsAvoid) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpTlsAvoid(client)
	return err
}

// Update PUT's' smtp.tls_avoid's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpTlsAvoid) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpTlsAvoid(client, s.Value)
}

// SmtpTlsCert represents the smtp.tls_cert node and implements sophos.Node
type SmtpTlsCert struct{ Value string }

// Get retrieves node smtp.tls_cert's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpTlsCert) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpTlsCert(client)
	return err
}

// Update PUT's' smtp.tls_cert's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpTlsCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpTlsCert(client, s.Value)
}

// SmtpTlsRequire represents the smtp.tls_require node and implements sophos.Node
type SmtpTlsRequire struct{ Value []interface{} }

// Get retrieves node smtp.tls_require's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpTlsRequire) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpTlsRequire(client)
	return err
}

// Update PUT's' smtp.tls_require's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpTlsRequire) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpTlsRequire(client, s.Value)
}

// SmtpTlsRequireSenderDomains represents the smtp.tls_require_sender_domains node and implements sophos.Node
type SmtpTlsRequireSenderDomains struct{ Value []interface{} }

// Get retrieves node smtp.tls_require_sender_domains's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpTlsRequireSenderDomains) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpTlsRequireSenderDomains(client)
	return err
}

// Update PUT's' smtp.tls_require_sender_domains's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpTlsRequireSenderDomains) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpTlsRequireSenderDomains(client, s.Value)
}

// SmtpTransparent represents the smtp.transparent node and implements sophos.Node
type SmtpTransparent struct{ Value bool }

// Get retrieves node smtp.transparent's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpTransparent) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpTransparent(client)
	return err
}

// Update PUT's' smtp.transparent's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpTransparent) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpTransparent(client, s.Value)
}

// SmtpTransparentSkip represents the smtp.transparent_skip node and implements sophos.Node
type SmtpTransparentSkip struct{ Value []interface{} }

// Get retrieves node smtp.transparent_skip's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpTransparentSkip) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpTransparentSkip(client)
	return err
}

// Update PUT's' smtp.transparent_skip's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpTransparentSkip) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpTransparentSkip(client, s.Value)
}

// SmtpTransparentSkipAutoPf represents the smtp.transparent_skip_auto_pf node and implements sophos.Node
type SmtpTransparentSkipAutoPf struct{ Value bool }

// Get retrieves node smtp.transparent_skip_auto_pf's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpTransparentSkipAutoPf) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpTransparentSkipAutoPf(client)
	return err
}

// Update PUT's' smtp.transparent_skip_auto_pf's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpTransparentSkipAutoPf) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpTransparentSkipAutoPf(client, s.Value)
}

// SmtpUpstreamHosts represents the smtp.upstream_hosts node and implements sophos.Node
type SmtpUpstreamHosts struct{ Value []interface{} }

// Get retrieves node smtp.upstream_hosts's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpUpstreamHosts) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpUpstreamHosts(client)
	return err
}

// Update PUT's' smtp.upstream_hosts's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpUpstreamHosts) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpUpstreamHosts(client, s.Value)
}

// SmtpUpstreamHostsOnly represents the smtp.upstream_hosts_only node and implements sophos.Node
type SmtpUpstreamHostsOnly struct{ Value bool }

// Get retrieves node smtp.upstream_hosts_only's value from the gateway utilizing a sophos.ClientInterface
func (s *SmtpUpstreamHostsOnly) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSmtpUpstreamHostsOnly(client)
	return err
}

// Update PUT's' smtp.upstream_hosts_only's value to the gateway utilizing a sophos.ClientInterface
func (s *SmtpUpstreamHostsOnly) Update(client sophos.ClientInterface) (err error) {
	return UpdateSmtpUpstreamHostsOnly(client, s.Value)
}

// SnmpAllowedNetworks represents the snmp.allowed_networks node and implements sophos.Node
type SnmpAllowedNetworks struct{ Value []interface{} }

// Get retrieves node snmp.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpAllowedNetworks(client)
	return err
}

// Update PUT's' snmp.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpAllowedNetworks(client, s.Value)
}

// SnmpAuthPassword represents the snmp.auth_password node and implements sophos.Node
type SnmpAuthPassword struct{ Value string }

// Get retrieves node snmp.auth_password's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpAuthPassword) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpAuthPassword(client)
	return err
}

// Update PUT's' snmp.auth_password's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpAuthPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpAuthPassword(client, s.Value)
}

// SnmpAuthType represents the snmp.auth_type node and implements sophos.Node
type SnmpAuthType struct{ Value string }

// Get retrieves node snmp.auth_type's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpAuthType) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpAuthType(client)
	return err
}

// Update PUT's' snmp.auth_type's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpAuthType) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpAuthType(client, s.Value)
}

// SnmpCommunity represents the snmp.community node and implements sophos.Node
type SnmpCommunity struct{ Value string }

// Get retrieves node snmp.community's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpCommunity) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpCommunity(client)
	return err
}

// Update PUT's' snmp.community's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpCommunity) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpCommunity(client, s.Value)
}

// SnmpDeviceAdmin represents the snmp.device_admin node and implements sophos.Node
type SnmpDeviceAdmin struct{ Value string }

// Get retrieves node snmp.device_admin's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpDeviceAdmin) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpDeviceAdmin(client)
	return err
}

// Update PUT's' snmp.device_admin's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpDeviceAdmin) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpDeviceAdmin(client, s.Value)
}

// SnmpDeviceLocation represents the snmp.device_location node and implements sophos.Node
type SnmpDeviceLocation struct{ Value string }

// Get retrieves node snmp.device_location's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpDeviceLocation) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpDeviceLocation(client)
	return err
}

// Update PUT's' snmp.device_location's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpDeviceLocation) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpDeviceLocation(client, s.Value)
}

// SnmpDeviceName represents the snmp.device_name node and implements sophos.Node
type SnmpDeviceName struct{ Value string }

// Get retrieves node snmp.device_name's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpDeviceName) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpDeviceName(client)
	return err
}

// Update PUT's' snmp.device_name's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpDeviceName) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpDeviceName(client, s.Value)
}

// SnmpEncryptPassword represents the snmp.encrypt_password node and implements sophos.Node
type SnmpEncryptPassword struct{ Value string }

// Get retrieves node snmp.encrypt_password's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpEncryptPassword) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpEncryptPassword(client)
	return err
}

// Update PUT's' snmp.encrypt_password's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpEncryptPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpEncryptPassword(client, s.Value)
}

// SnmpEncryptType represents the snmp.encrypt_type node and implements sophos.Node
type SnmpEncryptType struct{ Value string }

// Get retrieves node snmp.encrypt_type's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpEncryptType) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpEncryptType(client)
	return err
}

// Update PUT's' snmp.encrypt_type's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpEncryptType) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpEncryptType(client, s.Value)
}

// SnmpStatus represents the snmp.status node and implements sophos.Node
type SnmpStatus struct{ Value bool }

// Get retrieves node snmp.status's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpStatus(client)
	return err
}

// Update PUT's' snmp.status's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpStatus(client, s.Value)
}

// SnmpTraps represents the snmp.traps node and implements sophos.Node
type SnmpTraps struct{ Value []interface{} }

// Get retrieves node snmp.traps's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpTraps) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpTraps(client)
	return err
}

// Update PUT's' snmp.traps's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpTraps) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpTraps(client, s.Value)
}

// SnmpTrapsUseOldOids represents the snmp.traps_use_old_oids node and implements sophos.Node
type SnmpTrapsUseOldOids struct{ Value bool }

// Get retrieves node snmp.traps_use_old_oids's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpTrapsUseOldOids) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpTrapsUseOldOids(client)
	return err
}

// Update PUT's' snmp.traps_use_old_oids's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpTrapsUseOldOids) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpTrapsUseOldOids(client, s.Value)
}

// SnmpUsername represents the snmp.username node and implements sophos.Node
type SnmpUsername struct{ Value string }

// Get retrieves node snmp.username's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpUsername) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpUsername(client)
	return err
}

// Update PUT's' snmp.username's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpUsername) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpUsername(client, s.Value)
}

// SnmpVersion represents the snmp.version node and implements sophos.Node
type SnmpVersion struct{ Value string }

// Get retrieves node snmp.version's value from the gateway utilizing a sophos.ClientInterface
func (s *SnmpVersion) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSnmpVersion(client)
	return err
}

// Update PUT's' snmp.version's value to the gateway utilizing a sophos.ClientInterface
func (s *SnmpVersion) Update(client sophos.ClientInterface) (err error) {
	return UpdateSnmpVersion(client, s.Value)
}

// SocksAaa represents the socks.aaa node and implements sophos.Node
type SocksAaa struct{ Value []string }

// Get retrieves node socks.aaa's value from the gateway utilizing a sophos.ClientInterface
func (s *SocksAaa) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSocksAaa(client)
	return err
}

// Update PUT's' socks.aaa's value to the gateway utilizing a sophos.ClientInterface
func (s *SocksAaa) Update(client sophos.ClientInterface) (err error) {
	return UpdateSocksAaa(client, s.Value)
}

// SocksAllowedNetworks represents the socks.allowed_networks node and implements sophos.Node
type SocksAllowedNetworks struct{ Value []string }

// Get retrieves node socks.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (s *SocksAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSocksAllowedNetworks(client)
	return err
}

// Update PUT's' socks.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (s *SocksAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateSocksAllowedNetworks(client, s.Value)
}

// SocksAuthentication represents the socks.authentication node and implements sophos.Node
type SocksAuthentication struct{ Value bool }

// Get retrieves node socks.authentication's value from the gateway utilizing a sophos.ClientInterface
func (s *SocksAuthentication) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSocksAuthentication(client)
	return err
}

// Update PUT's' socks.authentication's value to the gateway utilizing a sophos.ClientInterface
func (s *SocksAuthentication) Update(client sophos.ClientInterface) (err error) {
	return UpdateSocksAuthentication(client, s.Value)
}

// SocksStatus represents the socks.status node and implements sophos.Node
type SocksStatus struct{ Value bool }

// Get retrieves node socks.status's value from the gateway utilizing a sophos.ClientInterface
func (s *SocksStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSocksStatus(client)
	return err
}

// Update PUT's' socks.status's value to the gateway utilizing a sophos.ClientInterface
func (s *SocksStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSocksStatus(client, s.Value)
}

// SpxGlobalErrorNotificationTarget represents the spx.global.error_notification_target node and implements sophos.Node
type SpxGlobalErrorNotificationTarget struct{ Value string }

// Get retrieves node spx.global.error_notification_target's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalErrorNotificationTarget) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalErrorNotificationTarget(client)
	return err
}

// Update PUT's' spx.global.error_notification_target's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalErrorNotificationTarget) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalErrorNotificationTarget(client, s.Value)
}

// SpxGlobalExpirySettingsAllowSecureReplyDays represents the spx.global.expiry_settings.allow_secure_reply_days node and implements sophos.Node
type SpxGlobalExpirySettingsAllowSecureReplyDays struct{ Value int64 }

// Get retrieves node spx.global.expiry_settings.allow_secure_reply_days's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalExpirySettingsAllowSecureReplyDays) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalExpirySettingsAllowSecureReplyDays(client)
	return err
}

// Update PUT's' spx.global.expiry_settings.allow_secure_reply_days's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalExpirySettingsAllowSecureReplyDays) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalExpirySettingsAllowSecureReplyDays(client, s.Value)
}

// SpxGlobalExpirySettingsKeepDelayedMailDays represents the spx.global.expiry_settings.keep_delayed_mail_days node and implements sophos.Node
type SpxGlobalExpirySettingsKeepDelayedMailDays struct{ Value int64 }

// Get retrieves node spx.global.expiry_settings.keep_delayed_mail_days's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalExpirySettingsKeepDelayedMailDays) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalExpirySettingsKeepDelayedMailDays(client)
	return err
}

// Update PUT's' spx.global.expiry_settings.keep_delayed_mail_days's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalExpirySettingsKeepDelayedMailDays) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalExpirySettingsKeepDelayedMailDays(client, s.Value)
}

// SpxGlobalExpirySettingsKeepUnusedPwdDays represents the spx.global.expiry_settings.keep_unused_pwd_days node and implements sophos.Node
type SpxGlobalExpirySettingsKeepUnusedPwdDays struct{ Value int64 }

// Get retrieves node spx.global.expiry_settings.keep_unused_pwd_days's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalExpirySettingsKeepUnusedPwdDays) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalExpirySettingsKeepUnusedPwdDays(client)
	return err
}

// Update PUT's' spx.global.expiry_settings.keep_unused_pwd_days's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalExpirySettingsKeepUnusedPwdDays) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalExpirySettingsKeepUnusedPwdDays(client, s.Value)
}

// SpxGlobalExpirySettingsRegistrationReminderDays represents the spx.global.expiry_settings.registration_reminder_days node and implements sophos.Node
type SpxGlobalExpirySettingsRegistrationReminderDays struct{ Value int64 }

// Get retrieves node spx.global.expiry_settings.registration_reminder_days's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalExpirySettingsRegistrationReminderDays) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalExpirySettingsRegistrationReminderDays(client)
	return err
}

// Update PUT's' spx.global.expiry_settings.registration_reminder_days's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalExpirySettingsRegistrationReminderDays) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalExpirySettingsRegistrationReminderDays(client, s.Value)
}

// SpxGlobalPasswordStrengthMinLength represents the spx.global.password_strength.min_length node and implements sophos.Node
type SpxGlobalPasswordStrengthMinLength struct{ Value int64 }

// Get retrieves node spx.global.password_strength.min_length's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPasswordStrengthMinLength) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalPasswordStrengthMinLength(client)
	return err
}

// Update PUT's' spx.global.password_strength.min_length's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPasswordStrengthMinLength) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalPasswordStrengthMinLength(client, s.Value)
}

// SpxGlobalPasswordStrengthRequireSpecChars represents the spx.global.password_strength.require_spec_chars node and implements sophos.Node
type SpxGlobalPasswordStrengthRequireSpecChars struct{ Value bool }

// Get retrieves node spx.global.password_strength.require_spec_chars's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPasswordStrengthRequireSpecChars) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalPasswordStrengthRequireSpecChars(client)
	return err
}

// Update PUT's' spx.global.password_strength.require_spec_chars's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPasswordStrengthRequireSpecChars) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalPasswordStrengthRequireSpecChars(client, s.Value)
}

// SpxGlobalPortalSettingsAllowedNetworks represents the spx.global.portal_settings.allowed_networks node and implements sophos.Node
type SpxGlobalPortalSettingsAllowedNetworks struct{ Value []interface{} }

// Get retrieves node spx.global.portal_settings.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPortalSettingsAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalPortalSettingsAllowedNetworks(client)
	return err
}

// Update PUT's' spx.global.portal_settings.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPortalSettingsAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalPortalSettingsAllowedNetworks(client, s.Value)
}

// SpxGlobalPortalSettingsHostname represents the spx.global.portal_settings.hostname node and implements sophos.Node
type SpxGlobalPortalSettingsHostname struct{ Value string }

// Get retrieves node spx.global.portal_settings.hostname's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPortalSettingsHostname) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalPortalSettingsHostname(client)
	return err
}

// Update PUT's' spx.global.portal_settings.hostname's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPortalSettingsHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalPortalSettingsHostname(client, s.Value)
}

// SpxGlobalPortalSettingsInterfaceAddress represents the spx.global.portal_settings.interface_address node and implements sophos.Node
type SpxGlobalPortalSettingsInterfaceAddress struct{ Value string }

// Get retrieves node spx.global.portal_settings.interface_address's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPortalSettingsInterfaceAddress) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalPortalSettingsInterfaceAddress(client)
	return err
}

// Update PUT's' spx.global.portal_settings.interface_address's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPortalSettingsInterfaceAddress) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalPortalSettingsInterfaceAddress(client, s.Value)
}

// SpxGlobalPortalSettingsPort represents the spx.global.portal_settings.port node and implements sophos.Node
type SpxGlobalPortalSettingsPort struct{ Value int64 }

// Get retrieves node spx.global.portal_settings.port's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPortalSettingsPort) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalPortalSettingsPort(client)
	return err
}

// Update PUT's' spx.global.portal_settings.port's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPortalSettingsPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalPortalSettingsPort(client, s.Value)
}

// SpxGlobalPoweredByLogo represents the spx.global.powered_by_logo node and implements sophos.Node
type SpxGlobalPoweredByLogo struct{ Value string }

// Get retrieves node spx.global.powered_by_logo's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPoweredByLogo) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalPoweredByLogo(client)
	return err
}

// Update PUT's' spx.global.powered_by_logo's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalPoweredByLogo) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalPoweredByLogo(client, s.Value)
}

// SpxGlobalSpxPriority represents the spx.global.spx_priority node and implements sophos.Node
type SpxGlobalSpxPriority struct{ Value bool }

// Get retrieves node spx.global.spx_priority's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalSpxPriority) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalSpxPriority(client)
	return err
}

// Update PUT's' spx.global.spx_priority's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalSpxPriority) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalSpxPriority(client, s.Value)
}

// SpxGlobalStatus represents the spx.global.status node and implements sophos.Node
type SpxGlobalStatus struct{ Value bool }

// Get retrieves node spx.global.status's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxGlobalStatus(client)
	return err
}

// Update PUT's' spx.global.status's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxGlobalStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxGlobalStatus(client, s.Value)
}

// SpxSpxAuthPassword represents the spx.spx_auth.password node and implements sophos.Node
type SpxSpxAuthPassword struct{ Value string }

// Get retrieves node spx.spx_auth.password's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxSpxAuthPassword) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxSpxAuthPassword(client)
	return err
}

// Update PUT's' spx.spx_auth.password's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxSpxAuthPassword) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxSpxAuthPassword(client, s.Value)
}

// SpxSpxAuthPort represents the spx.spx_auth.port node and implements sophos.Node
type SpxSpxAuthPort struct{ Value int64 }

// Get retrieves node spx.spx_auth.port's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxSpxAuthPort) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxSpxAuthPort(client)
	return err
}

// Update PUT's' spx.spx_auth.port's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxSpxAuthPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxSpxAuthPort(client, s.Value)
}

// SpxSpxAuthServer represents the spx.spx_auth.server node and implements sophos.Node
type SpxSpxAuthServer struct{ Value string }

// Get retrieves node spx.spx_auth.server's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxSpxAuthServer) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxSpxAuthServer(client)
	return err
}

// Update PUT's' spx.spx_auth.server's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxSpxAuthServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxSpxAuthServer(client, s.Value)
}

// SpxSpxAuthUrl represents the spx.spx_auth.url node and implements sophos.Node
type SpxSpxAuthUrl struct{ Value string }

// Get retrieves node spx.spx_auth.url's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxSpxAuthUrl) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxSpxAuthUrl(client)
	return err
}

// Update PUT's' spx.spx_auth.url's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxSpxAuthUrl) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxSpxAuthUrl(client, s.Value)
}

// SpxTemplates represents the spx.templates node and implements sophos.Node
type SpxTemplates struct{ Value []string }

// Get retrieves node spx.templates's value from the gateway utilizing a sophos.ClientInterface
func (s *SpxTemplates) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSpxTemplates(client)
	return err
}

// Update PUT's' spx.templates's value to the gateway utilizing a sophos.ClientInterface
func (s *SpxTemplates) Update(client sophos.ClientInterface) (err error) {
	return UpdateSpxTemplates(client, s.Value)
}

// SshAllowedNetworks represents the ssh.allowed_networks node and implements sophos.Node
type SshAllowedNetworks struct{ Value []string }

// Get retrieves node ssh.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (s *SshAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSshAllowedNetworks(client)
	return err
}

// Update PUT's' ssh.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (s *SshAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateSshAllowedNetworks(client, s.Value)
}

// SshLoginKeys represents the ssh.login_keys node and implements sophos.Node
type SshLoginKeys struct{ Value []string }

// Get retrieves node ssh.login_keys's value from the gateway utilizing a sophos.ClientInterface
func (s *SshLoginKeys) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSshLoginKeys(client)
	return err
}

// Update PUT's' ssh.login_keys's value to the gateway utilizing a sophos.ClientInterface
func (s *SshLoginKeys) Update(client sophos.ClientInterface) (err error) {
	return UpdateSshLoginKeys(client, s.Value)
}

// SshPasswordAuth represents the ssh.password_auth node and implements sophos.Node
type SshPasswordAuth struct{ Value bool }

// Get retrieves node ssh.password_auth's value from the gateway utilizing a sophos.ClientInterface
func (s *SshPasswordAuth) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSshPasswordAuth(client)
	return err
}

// Update PUT's' ssh.password_auth's value to the gateway utilizing a sophos.ClientInterface
func (s *SshPasswordAuth) Update(client sophos.ClientInterface) (err error) {
	return UpdateSshPasswordAuth(client, s.Value)
}

// SshPort represents the ssh.port node and implements sophos.Node
type SshPort struct{ Value int64 }

// Get retrieves node ssh.port's value from the gateway utilizing a sophos.ClientInterface
func (s *SshPort) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSshPort(client)
	return err
}

// Update PUT's' ssh.port's value to the gateway utilizing a sophos.ClientInterface
func (s *SshPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateSshPort(client, s.Value)
}

// SshPubkeyAuth represents the ssh.pubkey_auth node and implements sophos.Node
type SshPubkeyAuth struct{ Value bool }

// Get retrieves node ssh.pubkey_auth's value from the gateway utilizing a sophos.ClientInterface
func (s *SshPubkeyAuth) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSshPubkeyAuth(client)
	return err
}

// Update PUT's' ssh.pubkey_auth's value to the gateway utilizing a sophos.ClientInterface
func (s *SshPubkeyAuth) Update(client sophos.ClientInterface) (err error) {
	return UpdateSshPubkeyAuth(client, s.Value)
}

// SshRootKeys represents the ssh.root_keys node and implements sophos.Node
type SshRootKeys struct{ Value []string }

// Get retrieves node ssh.root_keys's value from the gateway utilizing a sophos.ClientInterface
func (s *SshRootKeys) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSshRootKeys(client)
	return err
}

// Update PUT's' ssh.root_keys's value to the gateway utilizing a sophos.ClientInterface
func (s *SshRootKeys) Update(client sophos.ClientInterface) (err error) {
	return UpdateSshRootKeys(client, s.Value)
}

// SshRootLogin represents the ssh.root_login node and implements sophos.Node
type SshRootLogin struct{ Value string }

// Get retrieves node ssh.root_login's value from the gateway utilizing a sophos.ClientInterface
func (s *SshRootLogin) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSshRootLogin(client)
	return err
}

// Update PUT's' ssh.root_login's value to the gateway utilizing a sophos.ClientInterface
func (s *SshRootLogin) Update(client sophos.ClientInterface) (err error) {
	return UpdateSshRootLogin(client, s.Value)
}

// SshStatus represents the ssh.status node and implements sophos.Node
type SshStatus struct{ Value bool }

// Get retrieves node ssh.status's value from the gateway utilizing a sophos.ClientInterface
func (s *SshStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSshStatus(client)
	return err
}

// Update PUT's' ssh.status's value to the gateway utilizing a sophos.ClientInterface
func (s *SshStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSshStatus(client, s.Value)
}

// SslVpnAuthenticationAlgorithm represents the ssl_vpn.authentication_algorithm node and implements sophos.Node
type SslVpnAuthenticationAlgorithm struct{ Value string }

// Get retrieves node ssl_vpn.authentication_algorithm's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnAuthenticationAlgorithm) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnAuthenticationAlgorithm(client)
	return err
}

// Update PUT's' ssl_vpn.authentication_algorithm's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnAuthenticationAlgorithm) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnAuthenticationAlgorithm(client, s.Value)
}

// SslVpnCertificate represents the ssl_vpn.certificate node and implements sophos.Node
type SslVpnCertificate struct{ Value string }

// Get retrieves node ssl_vpn.certificate's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnCertificate) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnCertificate(client)
	return err
}

// Update PUT's' ssl_vpn.certificate's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnCertificate) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnCertificate(client, s.Value)
}

// SslVpnCompression represents the ssl_vpn.compression node and implements sophos.Node
type SslVpnCompression struct{ Value bool }

// Get retrieves node ssl_vpn.compression's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnCompression) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnCompression(client)
	return err
}

// Update PUT's' ssl_vpn.compression's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnCompression) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnCompression(client, s.Value)
}

// SslVpnDatachannelKeyLifetime represents the ssl_vpn.datachannel_key_lifetime node and implements sophos.Node
type SslVpnDatachannelKeyLifetime struct{ Value int64 }

// Get retrieves node ssl_vpn.datachannel_key_lifetime's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnDatachannelKeyLifetime) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnDatachannelKeyLifetime(client)
	return err
}

// Update PUT's' ssl_vpn.datachannel_key_lifetime's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnDatachannelKeyLifetime) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnDatachannelKeyLifetime(client, s.Value)
}

// SslVpnDebug represents the ssl_vpn.debug node and implements sophos.Node
type SslVpnDebug struct{ Value bool }

// Get retrieves node ssl_vpn.debug's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnDebug) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnDebug(client)
	return err
}

// Update PUT's' ssl_vpn.debug's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnDebug) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnDebug(client, s.Value)
}

// SslVpnDhKeySize represents the ssl_vpn.dh_key_size node and implements sophos.Node
type SslVpnDhKeySize struct{ Value string }

// Get retrieves node ssl_vpn.dh_key_size's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnDhKeySize) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnDhKeySize(client)
	return err
}

// Update PUT's' ssl_vpn.dh_key_size's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnDhKeySize) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnDhKeySize(client, s.Value)
}

// SslVpnDuplicateCn represents the ssl_vpn.duplicate_cn node and implements sophos.Node
type SslVpnDuplicateCn struct{ Value bool }

// Get retrieves node ssl_vpn.duplicate_cn's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnDuplicateCn) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnDuplicateCn(client)
	return err
}

// Update PUT's' ssl_vpn.duplicate_cn's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnDuplicateCn) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnDuplicateCn(client, s.Value)
}

// SslVpnEncryptionAlgorithm represents the ssl_vpn.encryption_algorithm node and implements sophos.Node
type SslVpnEncryptionAlgorithm struct{ Value string }

// Get retrieves node ssl_vpn.encryption_algorithm's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnEncryptionAlgorithm) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnEncryptionAlgorithm(client)
	return err
}

// Update PUT's' ssl_vpn.encryption_algorithm's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnEncryptionAlgorithm) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnEncryptionAlgorithm(client, s.Value)
}

// SslVpnHostname represents the ssl_vpn.hostname node and implements sophos.Node
type SslVpnHostname struct{ Value string }

// Get retrieves node ssl_vpn.hostname's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnHostname) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnHostname(client)
	return err
}

// Update PUT's' ssl_vpn.hostname's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnHostname) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnHostname(client, s.Value)
}

// SslVpnInterface represents the ssl_vpn.interface node and implements sophos.Node
type SslVpnInterface struct{ Value string }

// Get retrieves node ssl_vpn.interface's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnInterface) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnInterface(client)
	return err
}

// Update PUT's' ssl_vpn.interface's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnInterface) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnInterface(client, s.Value)
}

// SslVpnInterfaceAddress represents the ssl_vpn.interface_address node and implements sophos.Node
type SslVpnInterfaceAddress struct{ Value string }

// Get retrieves node ssl_vpn.interface_address's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnInterfaceAddress) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnInterfaceAddress(client)
	return err
}

// Update PUT's' ssl_vpn.interface_address's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnInterfaceAddress) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnInterfaceAddress(client, s.Value)
}

// SslVpnIpAssignmentPool represents the ssl_vpn.ip_assignment_pool node and implements sophos.Node
type SslVpnIpAssignmentPool struct{ Value string }

// Get retrieves node ssl_vpn.ip_assignment_pool's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnIpAssignmentPool) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnIpAssignmentPool(client)
	return err
}

// Update PUT's' ssl_vpn.ip_assignment_pool's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnIpAssignmentPool) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnIpAssignmentPool(client, s.Value)
}

// SslVpnPort represents the ssl_vpn.port node and implements sophos.Node
type SslVpnPort struct{ Value int64 }

// Get retrieves node ssl_vpn.port's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnPort) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnPort(client)
	return err
}

// Update PUT's' ssl_vpn.port's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnPort(client, s.Value)
}

// SslVpnProtocol represents the ssl_vpn.protocol node and implements sophos.Node
type SslVpnProtocol struct{ Value string }

// Get retrieves node ssl_vpn.protocol's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnProtocol) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnProtocol(client)
	return err
}

// Update PUT's' ssl_vpn.protocol's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnProtocol) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnProtocol(client, s.Value)
}

// SslVpnUserAuthOptional represents the ssl_vpn.user_auth_optional node and implements sophos.Node
type SslVpnUserAuthOptional struct{ Value bool }

// Get retrieves node ssl_vpn.user_auth_optional's value from the gateway utilizing a sophos.ClientInterface
func (s *SslVpnUserAuthOptional) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSslVpnUserAuthOptional(client)
	return err
}

// Update PUT's' ssl_vpn.user_auth_optional's value to the gateway utilizing a sophos.ClientInterface
func (s *SslVpnUserAuthOptional) Update(client sophos.ClientInterface) (err error) {
	return UpdateSslVpnUserAuthOptional(client, s.Value)
}

// SupportAccessAccessId represents the support_access.access_id node and implements sophos.Node
type SupportAccessAccessId struct{ Value string }

// Get retrieves node support_access.access_id's value from the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessAccessId) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSupportAccessAccessId(client)
	return err
}

// Update PUT's' support_access.access_id's value to the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessAccessId) Update(client sophos.ClientInterface) (err error) {
	return UpdateSupportAccessAccessId(client, s.Value)
}

// SupportAccessApuServer represents the support_access.apu_server node and implements sophos.Node
type SupportAccessApuServer struct{ Value string }

// Get retrieves node support_access.apu_server's value from the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessApuServer) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSupportAccessApuServer(client)
	return err
}

// Update PUT's' support_access.apu_server's value to the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessApuServer) Update(client sophos.ClientInterface) (err error) {
	return UpdateSupportAccessApuServer(client, s.Value)
}

// SupportAccessLifetimeDuration represents the support_access.lifetime_duration node and implements sophos.Node
type SupportAccessLifetimeDuration struct{ Value string }

// Get retrieves node support_access.lifetime_duration's value from the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessLifetimeDuration) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSupportAccessLifetimeDuration(client)
	return err
}

// Update PUT's' support_access.lifetime_duration's value to the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessLifetimeDuration) Update(client sophos.ClientInterface) (err error) {
	return UpdateSupportAccessLifetimeDuration(client, s.Value)
}

// SupportAccessLifetimeEnd represents the support_access.lifetime_end node and implements sophos.Node
type SupportAccessLifetimeEnd struct{ Value map[string]interface{} }

// Get retrieves node support_access.lifetime_end's value from the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessLifetimeEnd) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSupportAccessLifetimeEnd(client)
	return err
}

// Update PUT's' support_access.lifetime_end's value to the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessLifetimeEnd) Update(client sophos.ClientInterface) (err error) {
	return UpdateSupportAccessLifetimeEnd(client, s.Value)
}

// SupportAccessSshKeys represents the support_access.ssh_keys node and implements sophos.Node
type SupportAccessSshKeys struct{ Value []interface{} }

// Get retrieves node support_access.ssh_keys's value from the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessSshKeys) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSupportAccessSshKeys(client)
	return err
}

// Update PUT's' support_access.ssh_keys's value to the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessSshKeys) Update(client sophos.ClientInterface) (err error) {
	return UpdateSupportAccessSshKeys(client, s.Value)
}

// SupportAccessStatus represents the support_access.status node and implements sophos.Node
type SupportAccessStatus struct{ Value bool }

// Get retrieves node support_access.status's value from the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessStatus) Get(client sophos.ClientInterface) (err error) {
	s.Value, err = GetSupportAccessStatus(client)
	return err
}

// Update PUT's' support_access.status's value to the gateway utilizing a sophos.ClientInterface
func (s *SupportAccessStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateSupportAccessStatus(client, s.Value)
}

// U2DcacheAllowedNetworks represents the u2dcache.allowed_networks node and implements sophos.Node
type U2DcacheAllowedNetworks struct{ Value []interface{} }

// Get retrieves node u2dcache.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (u *U2DcacheAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetU2DcacheAllowedNetworks(client)
	return err
}

// Update PUT's' u2dcache.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (u *U2DcacheAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateU2DcacheAllowedNetworks(client, u.Value)
}

// U2DcachePort represents the u2dcache.port node and implements sophos.Node
type U2DcachePort struct{ Value int64 }

// Get retrieves node u2dcache.port's value from the gateway utilizing a sophos.ClientInterface
func (u *U2DcachePort) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetU2DcachePort(client)
	return err
}

// Update PUT's' u2dcache.port's value to the gateway utilizing a sophos.ClientInterface
func (u *U2DcachePort) Update(client sophos.ClientInterface) (err error) {
	return UpdateU2DcachePort(client, u.Value)
}

// U2DcacheStatus represents the u2dcache.status node and implements sophos.Node
type U2DcacheStatus struct{ Value bool }

// Get retrieves node u2dcache.status's value from the gateway utilizing a sophos.ClientInterface
func (u *U2DcacheStatus) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetU2DcacheStatus(client)
	return err
}

// Update PUT's' u2dcache.status's value to the gateway utilizing a sophos.ClientInterface
func (u *U2DcacheStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateU2DcacheStatus(client, u.Value)
}

// Up2DateCacheHost represents the up2date.cache_host node and implements sophos.Node
type Up2DateCacheHost struct{ Value string }

// Get retrieves node up2date.cache_host's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateCacheHost) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateCacheHost(client)
	return err
}

// Update PUT's' up2date.cache_host's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateCacheHost) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateCacheHost(client, u.Value)
}

// Up2DateCachePort represents the up2date.cache_port node and implements sophos.Node
type Up2DateCachePort struct{ Value int64 }

// Get retrieves node up2date.cache_port's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateCachePort) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateCachePort(client)
	return err
}

// Update PUT's' up2date.cache_port's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateCachePort) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateCachePort(client, u.Value)
}

// Up2DateCacheStatus represents the up2date.cache_status node and implements sophos.Node
type Up2DateCacheStatus struct{ Value bool }

// Get retrieves node up2date.cache_status's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateCacheStatus) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateCacheStatus(client)
	return err
}

// Update PUT's' up2date.cache_status's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateCacheStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateCacheStatus(client, u.Value)
}

// Up2DateCacheUseAcc represents the up2date.cache_use_acc node and implements sophos.Node
type Up2DateCacheUseAcc struct{ Value bool }

// Get retrieves node up2date.cache_use_acc's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateCacheUseAcc) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateCacheUseAcc(client)
	return err
}

// Update PUT's' up2date.cache_use_acc's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateCacheUseAcc) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateCacheUseAcc(client, u.Value)
}

// Up2DateParentProxyAuthPass represents the up2date.parent_proxy_auth_pass node and implements sophos.Node
type Up2DateParentProxyAuthPass struct{ Value string }

// Get retrieves node up2date.parent_proxy_auth_pass's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyAuthPass) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateParentProxyAuthPass(client)
	return err
}

// Update PUT's' up2date.parent_proxy_auth_pass's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyAuthPass) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateParentProxyAuthPass(client, u.Value)
}

// Up2DateParentProxyAuthStatus represents the up2date.parent_proxy_auth_status node and implements sophos.Node
type Up2DateParentProxyAuthStatus struct{ Value bool }

// Get retrieves node up2date.parent_proxy_auth_status's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyAuthStatus) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateParentProxyAuthStatus(client)
	return err
}

// Update PUT's' up2date.parent_proxy_auth_status's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyAuthStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateParentProxyAuthStatus(client, u.Value)
}

// Up2DateParentProxyAuthUser represents the up2date.parent_proxy_auth_user node and implements sophos.Node
type Up2DateParentProxyAuthUser struct{ Value string }

// Get retrieves node up2date.parent_proxy_auth_user's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyAuthUser) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateParentProxyAuthUser(client)
	return err
}

// Update PUT's' up2date.parent_proxy_auth_user's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyAuthUser) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateParentProxyAuthUser(client, u.Value)
}

// Up2DateParentProxyHost represents the up2date.parent_proxy_host node and implements sophos.Node
type Up2DateParentProxyHost struct{ Value string }

// Get retrieves node up2date.parent_proxy_host's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyHost) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateParentProxyHost(client)
	return err
}

// Update PUT's' up2date.parent_proxy_host's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyHost) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateParentProxyHost(client, u.Value)
}

// Up2DateParentProxyPort represents the up2date.parent_proxy_port node and implements sophos.Node
type Up2DateParentProxyPort struct{ Value int64 }

// Get retrieves node up2date.parent_proxy_port's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyPort) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateParentProxyPort(client)
	return err
}

// Update PUT's' up2date.parent_proxy_port's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateParentProxyPort(client, u.Value)
}

// Up2DateParentProxyStatus represents the up2date.parent_proxy_status node and implements sophos.Node
type Up2DateParentProxyStatus struct{ Value bool }

// Get retrieves node up2date.parent_proxy_status's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyStatus) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateParentProxyStatus(client)
	return err
}

// Update PUT's' up2date.parent_proxy_status's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateParentProxyStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateParentProxyStatus(client, u.Value)
}

// Up2DatePatternDownloadInterval represents the up2date.pattern_download_interval node and implements sophos.Node
type Up2DatePatternDownloadInterval struct{ Value map[string]interface{} }

// Get retrieves node up2date.pattern_download_interval's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DatePatternDownloadInterval) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DatePatternDownloadInterval(client)
	return err
}

// Update PUT's' up2date.pattern_download_interval's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DatePatternDownloadInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DatePatternDownloadInterval(client, u.Value)
}

// Up2DatePatternDownloadStatus represents the up2date.pattern_download_status node and implements sophos.Node
type Up2DatePatternDownloadStatus struct{ Value bool }

// Get retrieves node up2date.pattern_download_status's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DatePatternDownloadStatus) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DatePatternDownloadStatus(client)
	return err
}

// Update PUT's' up2date.pattern_download_status's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DatePatternDownloadStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DatePatternDownloadStatus(client, u.Value)
}

// Up2DateScheduledUp2Date represents the up2date.scheduled_up2date node and implements sophos.Node
type Up2DateScheduledUp2Date struct{ Value []interface{} }

// Get retrieves node up2date.scheduled_up2date's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateScheduledUp2Date) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateScheduledUp2Date(client)
	return err
}

// Update PUT's' up2date.scheduled_up2date's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateScheduledUp2Date) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateScheduledUp2Date(client, u.Value)
}

// Up2DateServers represents the up2date.servers node and implements sophos.Node
type Up2DateServers struct{ Value []string }

// Get retrieves node up2date.servers's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateServers) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateServers(client)
	return err
}

// Update PUT's' up2date.servers's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateServers) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateServers(client, u.Value)
}

// Up2DateStatus represents the up2date.status node and implements sophos.Node
type Up2DateStatus struct{ Value bool }

// Get retrieves node up2date.status's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateStatus) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateStatus(client)
	return err
}

// Update PUT's' up2date.status's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateStatus(client, u.Value)
}

// Up2DateSystemAutoinstallTime represents the up2date.system_autoinstall_time node and implements sophos.Node
type Up2DateSystemAutoinstallTime struct{ Value string }

// Get retrieves node up2date.system_autoinstall_time's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateSystemAutoinstallTime) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateSystemAutoinstallTime(client)
	return err
}

// Update PUT's' up2date.system_autoinstall_time's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateSystemAutoinstallTime) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateSystemAutoinstallTime(client, u.Value)
}

// Up2DateSystemDownloadInterval represents the up2date.system_download_interval node and implements sophos.Node
type Up2DateSystemDownloadInterval struct{ Value int64 }

// Get retrieves node up2date.system_download_interval's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateSystemDownloadInterval) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateSystemDownloadInterval(client)
	return err
}

// Update PUT's' up2date.system_download_interval's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateSystemDownloadInterval) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateSystemDownloadInterval(client, u.Value)
}

// Up2DateSystemDownloadStatus represents the up2date.system_download_status node and implements sophos.Node
type Up2DateSystemDownloadStatus struct{ Value bool }

// Get retrieves node up2date.system_download_status's value from the gateway utilizing a sophos.ClientInterface
func (u *Up2DateSystemDownloadStatus) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUp2DateSystemDownloadStatus(client)
	return err
}

// Update PUT's' up2date.system_download_status's value to the gateway utilizing a sophos.ClientInterface
func (u *Up2DateSystemDownloadStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateUp2DateSystemDownloadStatus(client, u.Value)
}

// UplinkActions represents the uplink.actions node and implements sophos.Node
type UplinkActions struct{ Value []interface{} }

// Get retrieves node uplink.actions's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkActions) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkActions(client)
	return err
}

// Update PUT's' uplink.actions's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkActions) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkActions(client, u.Value)
}

// UplinkActive represents the uplink.active node and implements sophos.Node
type UplinkActive struct{ Value string }

// Get retrieves node uplink.active's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkActive) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkActive(client)
	return err
}

// Update PUT's' uplink.active's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkActive) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkActive(client, u.Value)
}

// UplinkCondition represents the uplink.condition node and implements sophos.Node
type UplinkCondition struct{ Value string }

// Get retrieves node uplink.condition's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkCondition) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkCondition(client)
	return err
}

// Update PUT's' uplink.condition's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkCondition) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkCondition(client, u.Value)
}

// UplinkInterfaces represents the uplink.interfaces node and implements sophos.Node
type UplinkInterfaces struct{ Value string }

// Get retrieves node uplink.interfaces's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkInterfaces) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkInterfaces(client)
	return err
}

// Update PUT's' uplink.interfaces's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkInterfaces) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkInterfaces(client, u.Value)
}

// UplinkMonitoring represents the uplink.monitoring node and implements sophos.Node
type UplinkMonitoring struct{ Value bool }

// Get retrieves node uplink.monitoring's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkMonitoring) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkMonitoring(client)
	return err
}

// Update PUT's' uplink.monitoring's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkMonitoring) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkMonitoring(client, u.Value)
}

// UplinkPassive represents the uplink.passive node and implements sophos.Node
type UplinkPassive struct{ Value string }

// Get retrieves node uplink.passive's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkPassive) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkPassive(client)
	return err
}

// Update PUT's' uplink.passive's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkPassive) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkPassive(client, u.Value)
}

// UplinkPrimary represents the uplink.primary node and implements sophos.Node
type UplinkPrimary struct{ Value string }

// Get retrieves node uplink.primary's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkPrimary) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkPrimary(client)
	return err
}

// Update PUT's' uplink.primary's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkPrimary) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkPrimary(client, u.Value)
}

// UplinkRules represents the uplink.rules node and implements sophos.Node
type UplinkRules struct{ Value []string }

// Get retrieves node uplink.rules's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkRules) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkRules(client)
	return err
}

// Update PUT's' uplink.rules's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkRules) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkRules(client, u.Value)
}

// UplinkScheduler represents the uplink.scheduler node and implements sophos.Node
type UplinkScheduler struct{ Value string }

// Get retrieves node uplink.scheduler's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkScheduler) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkScheduler(client)
	return err
}

// Update PUT's' uplink.scheduler's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkScheduler) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkScheduler(client, u.Value)
}

// UplinkStatus represents the uplink.status node and implements sophos.Node
type UplinkStatus struct{ Value bool }

// Get retrieves node uplink.status's value from the gateway utilizing a sophos.ClientInterface
func (u *UplinkStatus) Get(client sophos.ClientInterface) (err error) {
	u.Value, err = GetUplinkStatus(client)
	return err
}

// Update PUT's' uplink.status's value to the gateway utilizing a sophos.ClientInterface
func (u *UplinkStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateUplinkStatus(client, u.Value)
}

// WebadminAllowedNetworks represents the webadmin.allowed_networks node and implements sophos.Node
type WebadminAllowedNetworks struct{ Value []string }

// Get retrieves node webadmin.allowed_networks's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminAllowedNetworks) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminAllowedNetworks(client)
	return err
}

// Update PUT's' webadmin.allowed_networks's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminAllowedNetworks) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminAllowedNetworks(client, w.Value)
}

// WebadminCa represents the webadmin.ca node and implements sophos.Node
type WebadminCa struct{ Value string }

// Get retrieves node webadmin.ca's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminCa) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminCa(client)
	return err
}

// Update PUT's' webadmin.ca's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminCa) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminCa(client, w.Value)
}

// WebadminCert represents the webadmin.cert node and implements sophos.Node
type WebadminCert struct{ Value string }

// Get retrieves node webadmin.cert's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminCert) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminCert(client)
	return err
}

// Update PUT's' webadmin.cert's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminCert) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminCert(client, w.Value)
}

// WebadminDashboardRefresh represents the webadmin.dashboard_refresh node and implements sophos.Node
type WebadminDashboardRefresh struct{ Value string }

// Get retrieves node webadmin.dashboard_refresh's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminDashboardRefresh) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminDashboardRefresh(client)
	return err
}

// Update PUT's' webadmin.dashboard_refresh's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminDashboardRefresh) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminDashboardRefresh(client, w.Value)
}

// WebadminLanguage represents the webadmin.language node and implements sophos.Node
type WebadminLanguage struct{ Value string }

// Get retrieves node webadmin.language's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminLanguage) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminLanguage(client)
	return err
}

// Update PUT's' webadmin.language's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminLanguage) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminLanguage(client, w.Value)
}

// WebadminLogAdminConnect represents the webadmin.log_admin_connect node and implements sophos.Node
type WebadminLogAdminConnect struct{ Value bool }

// Get retrieves node webadmin.log_admin_connect's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminLogAdminConnect) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminLogAdminConnect(client)
	return err
}

// Update PUT's' webadmin.log_admin_connect's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminLogAdminConnect) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminLogAdminConnect(client, w.Value)
}

// WebadminOfferWizard represents the webadmin.offer_wizard node and implements sophos.Node
type WebadminOfferWizard struct{ Value bool }

// Get retrieves node webadmin.offer_wizard's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminOfferWizard) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminOfferWizard(client)
	return err
}

// Update PUT's' webadmin.offer_wizard's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminOfferWizard) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminOfferWizard(client, w.Value)
}

// WebadminPort represents the webadmin.port node and implements sophos.Node
type WebadminPort struct{ Value int64 }

// Get retrieves node webadmin.port's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminPort) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminPort(client)
	return err
}

// Update PUT's' webadmin.port's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminPort) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminPort(client, w.Value)
}

// WebadminRestApi represents the webadmin.rest_api node and implements sophos.Node
type WebadminRestApi struct{ Value bool }

// Get retrieves node webadmin.rest_api's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminRestApi) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminRestApi(client)
	return err
}

// Update PUT's' webadmin.rest_api's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminRestApi) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminRestApi(client, w.Value)
}

// WebadminTermsOfUseStatus represents the webadmin.terms_of_use.status node and implements sophos.Node
type WebadminTermsOfUseStatus struct{ Value bool }

// Get retrieves node webadmin.terms_of_use.status's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminTermsOfUseStatus) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminTermsOfUseStatus(client)
	return err
}

// Update PUT's' webadmin.terms_of_use.status's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminTermsOfUseStatus) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminTermsOfUseStatus(client, w.Value)
}

// WebadminTermsOfUseText represents the webadmin.terms_of_use.text node and implements sophos.Node
type WebadminTermsOfUseText struct{ Value string }

// Get retrieves node webadmin.terms_of_use.text's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminTermsOfUseText) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminTermsOfUseText(client)
	return err
}

// Update PUT's' webadmin.terms_of_use.text's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminTermsOfUseText) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminTermsOfUseText(client, w.Value)
}

// WebadminTimeout represents the webadmin.timeout node and implements sophos.Node
type WebadminTimeout struct{ Value int64 }

// Get retrieves node webadmin.timeout's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminTimeout) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminTimeout(client)
	return err
}

// Update PUT's' webadmin.timeout's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminTimeout) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminTimeout(client, w.Value)
}

// WebadminTimeoutOnDashboard represents the webadmin.timeout_on_dashboard node and implements sophos.Node
type WebadminTimeoutOnDashboard struct{ Value bool }

// Get retrieves node webadmin.timeout_on_dashboard's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminTimeoutOnDashboard) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminTimeoutOnDashboard(client)
	return err
}

// Update PUT's' webadmin.timeout_on_dashboard's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminTimeoutOnDashboard) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminTimeoutOnDashboard(client, w.Value)
}

// WebadminTlsCiphers represents the webadmin.tls_ciphers node and implements sophos.Node
type WebadminTlsCiphers struct{ Value string }

// Get retrieves node webadmin.tls_ciphers's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminTlsCiphers) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminTlsCiphers(client)
	return err
}

// Update PUT's' webadmin.tls_ciphers's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminTlsCiphers) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminTlsCiphers(client, w.Value)
}

// WebadminTlsProtocols represents the webadmin.tls_protocols node and implements sophos.Node
type WebadminTlsProtocols struct{ Value string }

// Get retrieves node webadmin.tls_protocols's value from the gateway utilizing a sophos.ClientInterface
func (w *WebadminTlsProtocols) Get(client sophos.ClientInterface) (err error) {
	w.Value, err = GetWebadminTlsProtocols(client)
	return err
}

// Update PUT's' webadmin.tls_protocols's value to the gateway utilizing a sophos.ClientInterface
func (w *WebadminTlsProtocols) Update(client sophos.ClientInterface) (err error) {
	return UpdateWebadminTlsProtocols(client, w.Value)
}
